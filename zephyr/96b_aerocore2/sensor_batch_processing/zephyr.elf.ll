; ModuleID = 'build/96b_aerocore2/sensor_batch_processing/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.log_source_const_data = type { i8*, i8 }
%struct.rtio_executor_api = type { i32 (%struct.rtio*)*, void (%struct.rtio*, %struct.rtio_sqe*, i32)*, void (%struct.rtio*, %struct.rtio_sqe*, i32)* }
%struct.rtio = type { %struct.rtio_executor*, i32, %struct.rtio_sq*, %struct.rtio_cq* }
%struct.rtio_executor = type { %struct.rtio_executor_api* }
%struct.rtio_sq = type { %struct.rtio_spsc, [0 x %struct.rtio_sqe] }
%struct.rtio_spsc = type { i32, i32, i32, i32, i32 }
%struct.rtio_sqe = type { i8, i8, i16, %struct.rtio_iodev*, i8*, %union.anon.3 }
%struct.rtio_iodev = type { %struct.rtio_iodev_api*, %struct.rtio_iodev_sq*, i8* }
%struct.rtio_iodev_api = type { void (%struct.rtio_sqe*, %struct.rtio*)* }
%struct.rtio_iodev_sq = type { %struct.rtio_spsc, [0 x %struct.rtio_iodev_sqe] }
%struct.rtio_iodev_sqe = type { %struct.rtio_sqe*, %struct.rtio* }
%union.anon.3 = type { %struct.anon.4 }
%struct.anon.4 = type { i32, i8* }
%struct.rtio_cq = type { %struct.rtio_spsc, [0 x %struct.anon.4] }
%struct.rtio_simple_executor = type { %struct.rtio_executor }
%struct.rtio_spsc__sq_ez_io = type { %struct.rtio_spsc, [8 x %struct.rtio_sqe] }
%struct.rtio_spsc__cq_ez_io = type { %struct.rtio_spsc, [8 x %struct.anon.4] }
%struct.rtio_spsc_vnd_sensor_iodev_sq_0 = type { %struct.rtio_spsc, [8 x %struct.rtio_iodev_sqe] }
%struct.vnd_sensor_config = type { i32, i32 }
%struct.device_state = type { i8, i8 }
%struct.vnd_sensor_data = type { %struct.rtio_iodev, %struct.k_timer, %struct.device*, %struct.k_msgq, i32 }
%struct.k_timer = type { %struct._timeout, %struct._wait_q_t, void (%struct.k_timer*)*, void (%struct.k_timer*)*, %struct.k_timeout_t, i32, i8* }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct._wait_q_t = type { %struct._dnode }
%struct.k_timeout_t = type { i64 }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.k_msgq = type { %struct._wait_q_t, %struct.k_spinlock, i32, i32, i8*, i8*, i8*, i8*, i32, i8 }
%struct.k_spinlock = type {}
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.z_arm_mpu_partition = type { i32, i32, %union.anon }
%union.anon = type { i32 }
%struct.arm_mpu_region = type { i32, i8*, %union.anon }
%struct.arm_mpu_config = type { i32, %struct.arm_mpu_region* }
%struct.stm32_exti_data = type { [23 x %struct.__exti_cb] }
%struct.__exti_cb = type { void (i32, i8*)*, i8* }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.clock_control_driver_api = type { i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)*, i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, i8*)*, i32 (%struct.device*, i8*, i8*)* }
%struct.gpio_stm32_config = type { %union.anon, i32*, i32, %struct.vnd_sensor_config }
%struct.gpio_driver_api = type { i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i32*)*, i32 (%struct.device*, i32, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i8, i32, i32)*, i32 (%struct.device*, %struct.gpio_callback*, i1)*, i32 (%struct.device*)* }
%struct.gpio_callback = type { %struct._snode, void (%struct.device*, %struct.gpio_callback*, i32)*, i32 }
%struct._snode = type { %struct._snode* }
%struct.gpio_stm32_data = type { %union.anon, %struct.device*, %struct._slist }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct.uart_stm32_config = type { %struct.USART_TypeDef*, %struct.vnd_sensor_config*, i32, i8, i32, i8, i8, i8, i8, %struct.pinctrl_dev_config* }
%struct.USART_TypeDef = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { %struct.vnd_sensor_config*, i8, i8 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.uart_stm32_data = type { i32, %struct.device* }
%struct.z_thread_stack_element = type { i8 }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %struct._wait_q_t, i32, %struct._thread_stack_info, %struct.k_heap*, %struct.vnd_sensor_config }
%struct._thread_base = type { %struct._wait_q_t, %struct._wait_q_t*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%union.anon.2 = type { i16 }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct._thread_stack_info = type { i32, i32, i32 }
%struct.k_heap = type { %struct.sys_heap, %struct._wait_q_t, %struct.k_spinlock }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type opaque
%struct._static_thread_data = type { %struct.k_thread*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct.k_spinlock }
%struct._ready_q = type { %struct.k_thread*, %struct._dnode }
%struct.__va_list = type { i8* }
%struct.cbprintf_package_desc = type { i8, i8, i8, i8 }
%struct.str_context = type { i8*, i32, i32 }
%struct.anon = type { %struct.k_timeout_t, %struct.conversion }
%struct.conversion = type { [3 x i8], i8, %union.anon, %union.anon }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %union.anon, %union.anon, %union.anon, %union.anon, %union.anon, %union.anon, %union.anon, i32 }
%struct.rtio_concurrent_executor = type { %struct.rtio_executor, %struct.k_spinlock, i16, i16, i16, %struct.rtio_sqe*, %struct.rtio_sqe*, i8*, %struct.rtio_sqe** }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct.k_spinlock, %struct._wait_q_t }
%struct._sflist = type { %union.anon*, %union.anon* }
%struct.GPIO_TypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.RCC_OscInitTypeDef = type { i32, i32, i32, i32, i32, i32, %struct.RCC_PLLInitTypeDef }
%struct.RCC_PLLInitTypeDef = type { i32, i32, i32, i32, i32, i32 }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [91 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [91 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134233672 to i8*), void (i8*)* inttoptr (i32 134231833 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134233672 to i8*), void (i8*)* inttoptr (i32 134231813 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134233672 to i8*), void (i8*)* inttoptr (i32 134231803 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134233672 to i8*), void (i8*)* inttoptr (i32 134231903 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134233672 to i8*), void (i8*)* inttoptr (i32 134231893 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134233672 to i8*), void (i8*)* inttoptr (i32 134231883 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134233672 to i8*), void (i8*)* inttoptr (i32 134231873 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134233672 to i8*), void (i8*)* inttoptr (i32 134231863 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134233672 to i8*), void (i8*)* inttoptr (i32 134231853 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134233672 to i8*), void (i8*)* inttoptr (i32 134231843 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134233672 to i8*), void (i8*)* inttoptr (i32 134231823 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@llvm.compiler.used = appending global [62 x i8*] [i8* bitcast (%struct.rtio* @ez_io to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_main to i8*), i8* bitcast (%struct.device* @__device_dts_ord_19 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_19 to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_vnd_sensor to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_cbprintf_package to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32f4_init to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32_common_config to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_mpu to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_rtio_executor_simple to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_rtio_executor_concurrent to i8*), i8* bitcast (%struct.device* @__device_dts_ord_45 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_45 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_100 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_101 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_102 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_103 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_104 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_105 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_106 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_107 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_108 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_109 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_27 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_100 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_101 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_102 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_103 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_104 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_105 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_106 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_107 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_108 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_109 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_27 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_52 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_55 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_60 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_63 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_66 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_52 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_55 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_60 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_63 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_66 to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_uart_stm32 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_os to i8*)], section "llvm.metadata"
@.str = private unnamed_addr constant [5 x i8] c"main\00", align 1
@log_const_main = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0), i8 4 }, section ".log_const_main", align 4, !dbg !25
@z_rtio_simple_api = internal constant %struct.rtio_executor_api { i32 (%struct.rtio*)* @rtio_simple_submit, void (%struct.rtio*, %struct.rtio_sqe*, i32)* @rtio_simple_ok, void (%struct.rtio*, %struct.rtio_sqe*, i32)* @rtio_simple_err }, align 4, !dbg !235
@simple_exec = dso_local global %struct.rtio_simple_executor { %struct.rtio_executor { %struct.rtio_executor_api* @z_rtio_simple_api } }, align 4, !dbg !117
@_sq_ez_io = internal global %struct.rtio_spsc__sq_ez_io { %struct.rtio_spsc { i32 0, i32 0, i32 0, i32 0, i32 7 }, [8 x %struct.rtio_sqe] zeroinitializer }, align 4, !dbg !237
@_cq_ez_io = internal global %struct.rtio_spsc__cq_ez_io { %struct.rtio_spsc { i32 0, i32 0, i32 0, i32 0, i32 7 }, [8 x %struct.anon.4] zeroinitializer }, align 4, !dbg !245
@ez_io = dso_local global %struct.rtio { %struct.rtio_executor* getelementptr inbounds (%struct.rtio_simple_executor, %struct.rtio_simple_executor* @simple_exec, i32 0, i32 0), i32 0, %struct.rtio_sq* bitcast (%struct.rtio_spsc__sq_ez_io* @_sq_ez_io to %struct.rtio_sq*), %struct.rtio_cq* bitcast (%struct.rtio_spsc__cq_ez_io* @_cq_ez_io to %struct.rtio_cq*) }, section "._rtio.static.ez_io", align 4, !dbg !227
@bufs = internal global [8 x [16 x i8]] zeroinitializer, align 1, !dbg !229
@.str.1 = private unnamed_addr constant [33 x i8] c"%c: Submitting %d read requests\0A\00", align 1
@.str.2 = private unnamed_addr constant [36 x i8] c"%c: No completion events available\0A\00", align 1
@.str.3 = private unnamed_addr constant [34 x i8] c"%c: Consumed completion event %d\0A\00", align 1
@.str.4 = private unnamed_addr constant [22 x i8] c"%c: Operation failed\0A\00", align 1
@.str.5 = private unnamed_addr constant [33 x i8] c"%c: Start processing %d samples\0A\00", align 1
@.str.6 = private unnamed_addr constant [13 x i8] c"Sample data:\00", align 1
@.str.7 = private unnamed_addr constant [8 x i8] c"%c: %s\0A\00", align 1
@.str.8 = private unnamed_addr constant [36 x i8] c"%c: Finished processing %d samples\0A\00", align 1
@.str.9 = private unnamed_addr constant [11 x i8] c"vnd_sensor\00", align 1
@log_const_vnd_sensor = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.9, i32 0, i32 0), i8 4 }, section ".log_const_vnd_sensor", align 4, !dbg !258
@vnd_sensor_iodev_sq_0 = dso_local global %struct.rtio_spsc_vnd_sensor_iodev_sq_0 { %struct.rtio_spsc { i32 0, i32 0, i32 0, i32 0, i32 7 }, [8 x %struct.rtio_iodev_sqe] zeroinitializer }, align 4, !dbg !451
@__devicehdl_dts_ord_19 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !494
@.str.1.12 = private unnamed_addr constant [9 x i8] c"sensor@0\00", align 1
@vnd_sensor_config_0 = internal constant %struct.vnd_sensor_config { i32 100, i32 16 }, align 4, !dbg !478
@__devstate_dts_ord_19 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !476
@vnd_sensor_data_0 = internal global %struct.vnd_sensor_data { %struct.rtio_iodev { %struct.rtio_iodev_api* @vnd_sensor_iodev_api, %struct.rtio_iodev_sq* bitcast (%struct.rtio_spsc_vnd_sensor_iodev_sq_0* @vnd_sensor_iodev_sq_0 to %struct.rtio_iodev_sq*), i8* null }, %struct.k_timer zeroinitializer, %struct.device* null, %struct.k_msgq zeroinitializer, i32 0 }, align 8, !dbg !485
@__device_dts_ord_19 = dso_local constant %struct.device { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1.12, i32 0, i32 0), i8* bitcast (%struct.vnd_sensor_config* @vnd_sensor_config_0 to i8*), i8* null, %struct.device_state* @__devstate_dts_ord_19, i8* bitcast (%struct.vnd_sensor_data* @vnd_sensor_data_0 to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_19, i32 0, i32 0) }, section ".z_device_POST_KERNEL50_", align 4, !dbg !463
@__init___device_dts_ord_19 = internal constant %struct.init_entry { i32 (%struct.device*)* @vnd_sensor_init, %struct.device* @__device_dts_ord_19 }, section ".z_init_POST_KERNEL50_", align 4, !dbg !465
@vnd_sensor_iodev_api = internal constant %struct.rtio_iodev_api { void (%struct.rtio_sqe*, %struct.rtio*)* @vnd_sensor_iodev_submit }, align 4, !dbg !487
@.str.2.16 = private unnamed_addr constant [29 x i8] c"%c: %s: Could not put a msg\0A\00", align 1
@.str.3.19 = private unnamed_addr constant [29 x i8] c"%c: %s: Could not get a msg\0A\00", align 1
@.str.4.20 = private unnamed_addr constant [20 x i8] c"%c: %s: Invalid op\0A\00", align 1
@.str.5.21 = private unnamed_addr constant [32 x i8] c"%c: %s: buf_len = %d, buf = %p\0A\00", align 1
@.str.6.22 = private unnamed_addr constant [29 x i8] c"%c: %s: Buffer is too small\0A\00", align 1
@.str.23 = private unnamed_addr constant [17 x i8] c"cbprintf_package\00", align 1
@log_const_cbprintf_package = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.23, i32 0, i32 0), i8 3 }, section ".log_const_cbprintf_package", align 4, !dbg !542
@.str.1.25 = private unnamed_addr constant [168 x i8] c"%c: (unsigned) char * used for %%p argument. It's recommended to cast it to void * because it may cause misbehavior in certain configurations. String:\22%s\22 argument:%d\0A\00", align 1
@__rodata_region_start = external dso_local global [0 x i8], align 1
@__rodata_region_end = external dso_local global [0 x i8], align 1
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !563
@.str.28 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@__init_st_stm32f4_init = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32f4_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !573
@__init_st_stm32_common_config = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32_common_config, %struct.device* null }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !616
@.str.36 = private unnamed_addr constant [5 x i8] c"%c: \00", align 1
@.str.1.38 = private unnamed_addr constant [6 x i8] c"%02x \00", align 1
@.str.2.39 = private unnamed_addr constant [4 x i8] c"   \00", align 1
@.str.3.37 = private unnamed_addr constant [2 x i8] c"|\00", align 1
@.str.4.41 = private unnamed_addr constant [3 x i8] c"%c\00", align 1
@.str.5.42 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.6.40 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.43 = private unnamed_addr constant [52 x i8] c"%c: r0/a1:  0x%08x  r1/a2:  0x%08x  r2/a3:  0x%08x\0A\00", align 1
@.str.1.44 = private unnamed_addr constant [52 x i8] c"%c: r3/a4:  0x%08x r12/ip:  0x%08x r14/lr:  0x%08x\0A\00", align 1
@.str.2.45 = private unnamed_addr constant [20 x i8] c"%c:  xpsr:  0x%08x\0A\00", align 1
@.str.3.46 = private unnamed_addr constant [51 x i8] c"%c: Faulting instruction address (r15/pc): 0x%08x\0A\00", align 1
@_vector_start = external dso_local global [0 x i8], align 1
@.str.60 = private unnamed_addr constant [48 x i8] c"%c: SPSEL in thread mode does not indicate PSP\0A\00", align 1
@.str.1.55 = private unnamed_addr constant [28 x i8] c"%c: ***** HARD FAULT *****\0A\00", align 1
@.str.2.56 = private unnamed_addr constant [38 x i8] c"%c:   Bus fault on vector table read\0A\00", align 1
@.str.3.57 = private unnamed_addr constant [19 x i8] c"%c:   Debug event\0A\00", align 1
@.str.4.58 = private unnamed_addr constant [36 x i8] c"%c:   Fault escalation (see below)\0A\00", align 1
@.str.5.59 = private unnamed_addr constant [33 x i8] c"%c: ARCH_EXCEPT with reason %x\0A\0A\00", align 1
@.str.6.52 = private unnamed_addr constant [27 x i8] c"%c: ***** MPU FAULT *****\0A\00", align 1
@.str.7.53 = private unnamed_addr constant [56 x i8] c"%c:   Stacking error (context area might be not valid)\0A\00", align 1
@.str.8.51 = private unnamed_addr constant [24 x i8] c"%c:   Unstacking error\0A\00", align 1
@.str.9.54 = private unnamed_addr constant [29 x i8] c"%c:   Data Access Violation\0A\00", align 1
@.str.10 = private unnamed_addr constant [27 x i8] c"%c:   MMFAR Address: 0x%x\0A\00", align 1
@.str.11 = private unnamed_addr constant [36 x i8] c"%c:   Instruction Access Violation\0A\00", align 1
@.str.12 = private unnamed_addr constant [52 x i8] c"%c:   Floating-point lazy state preservation error\0A\00", align 1
@.str.13 = private unnamed_addr constant [27 x i8] c"%c: ***** BUS FAULT *****\0A\00", align 1
@.str.14 = private unnamed_addr constant [22 x i8] c"%c:   Stacking error\0A\00", align 1
@.str.15 = private unnamed_addr constant [30 x i8] c"%c:   Precise data bus error\0A\00", align 1
@.str.16 = private unnamed_addr constant [26 x i8] c"%c:   BFAR Address: 0x%x\0A\00", align 1
@.str.17 = private unnamed_addr constant [32 x i8] c"%c:   Imprecise data bus error\0A\00", align 1
@.str.18 = private unnamed_addr constant [29 x i8] c"%c:   Instruction bus error\0A\00", align 1
@.str.19 = private unnamed_addr constant [29 x i8] c"%c: ***** USAGE FAULT *****\0A\00", align 1
@.str.20 = private unnamed_addr constant [24 x i8] c"%c:   Division by zero\0A\00", align 1
@.str.21 = private unnamed_addr constant [31 x i8] c"%c:   Unaligned memory access\0A\00", align 1
@.str.22 = private unnamed_addr constant [35 x i8] c"%c:   No coprocessor instructions\0A\00", align 1
@.str.23.50 = private unnamed_addr constant [42 x i8] c"%c:   Illegal load of EXC_RETURN into PC\0A\00", align 1
@.str.24 = private unnamed_addr constant [31 x i8] c"%c:   Illegal use of the EPSR\0A\00", align 1
@.str.25 = private unnamed_addr constant [48 x i8] c"%c:   Attempt to execute undefined instruction\0A\00", align 1
@.str.26 = private unnamed_addr constant [41 x i8] c"%c: ***** Debug monitor exception *****\0A\00", align 1
@.str.27 = private unnamed_addr constant [24 x i8] c"%c: ***** %s %d) *****\0A\00", align 1
@.str.28.49 = private unnamed_addr constant [21 x i8] c"Reserved Exception (\00", align 1
@.str.29 = private unnamed_addr constant [25 x i8] c"Spurious interrupt (IRQ \00", align 1
@.str.66 = private unnamed_addr constant [4 x i8] c"mpu\00", align 1
@log_const_mpu = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.66, i32 0, i32 0), i8 3 }, section ".log_const_mpu", align 4, !dbg !645
@static_regions = internal constant [1 x %struct.z_arm_mpu_partition] [%struct.z_arm_mpu_partition { i32 ptrtoint ([0 x i8]* @__ramfunc_start to i32), i32 ptrtoint ([0 x i8]* @__ramfunc_size to i32), %union.anon { i32 101384192 } }], align 4, !dbg !786
@_image_ram_start = external dso_local global [0 x i8], align 1
@__kernel_ram_end = external dso_local global [0 x i8], align 1
@z_arm_configure_dynamic_mpu_regions.dynamic_regions = internal global [1 x %struct.z_arm_mpu_partition] zeroinitializer, align 4, !dbg !651
@static_regions_num = internal unnamed_addr global i8 0, align 1, !dbg !795
@.str.72 = private unnamed_addr constant [40 x i8] c"%c: Partition %u: sanity check failed.\0A\00", align 1
@.str.1.73 = private unnamed_addr constant [43 x i8] c"%c: Failed to allocate new MPU region %u\0A\0A\00", align 1
@_stdout_hook = internal unnamed_addr global i32 (i32)* @_stdout_hook_default, align 4, !dbg !831
@mpu_regions = internal constant [2 x %struct.arm_mpu_region] [%struct.arm_mpu_region { i32 134217728, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.84, i32 0, i32 0), %union.anon { i32 117571624 } }, %struct.arm_mpu_region { i32 536870912, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.85, i32 0, i32 0), %union.anon { i32 285933602 } }], align 4, !dbg !841
@mpu_config = dso_local local_unnamed_addr constant %struct.arm_mpu_config { i32 2, %struct.arm_mpu_region* getelementptr inbounds ([2 x %struct.arm_mpu_region], [2 x %struct.arm_mpu_region]* @mpu_regions, i32 0, i32 0) }, align 4, !dbg !846
@.str.84 = private unnamed_addr constant [8 x i8] c"FLASH_0\00", align 1
@.str.1.85 = private unnamed_addr constant [7 x i8] c"SRAM_0\00", align 1
@.str.86 = private unnamed_addr constant [21 x i8] c"rtio_executor_simple\00", align 1
@log_const_rtio_executor_simple = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.86, i32 0, i32 0), i8 3 }, section ".log_const_rtio_executor_simple", align 4, !dbg !866
@.str.96 = private unnamed_addr constant [25 x i8] c"rtio_executor_concurrent\00", align 1
@log_const_rtio_executor_concurrent = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.96, i32 0, i32 0), i8 3 }, section ".log_const_rtio_executor_concurrent", align 4, !dbg !877
@.str.1.98 = private unnamed_addr constant [12 x i8] c"%c: submit\0A\00", align 1
@.str.2.100 = private unnamed_addr constant [26 x i8] c"%c: head SQE in chain %p\0A\00", align 1
@.str.3.101 = private unnamed_addr constant [24 x i8] c"%c: setting up task %d\0A\00", align 1
@.str.4.102 = private unnamed_addr constant [22 x i8] c"%c: submitted sqe %p\0A\00", align 1
@.str.5.103 = private unnamed_addr constant [26 x i8] c"%c: tail SQE in chain %p\0A\00", align 1
@.str.6.104 = private unnamed_addr constant [32 x i8] c"%c: resuming suspended task %d\0A\00", align 1
@.str.7.107 = private unnamed_addr constant [29 x i8] c"%c: sweeping oldest task %d\0A\00", align 1
@exti_irq_table = internal unnamed_addr constant [23 x i32] [i32 6, i32 7, i32 8, i32 9, i32 10, i32 23, i32 23, i32 23, i32 23, i32 23, i32 40, i32 40, i32 40, i32 40, i32 40, i32 40, i32 1, i32 255, i32 42, i32 255, i32 255, i32 2, i32 3], align 4, !dbg !994
@__devicehdl_dts_ord_45 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !505
@.str.110 = private unnamed_addr constant [30 x i8] c"interrupt-controller@40013c00\00", align 1
@__devstate_dts_ord_45 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1156
@exti_data = internal global %struct.stm32_exti_data zeroinitializer, align 4, !dbg !1139
@__device_dts_ord_45 = dso_local constant %struct.device { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.110, i32 0, i32 0), i8* null, i8* null, %struct.device_state* @__devstate_dts_ord_45, i8* bitcast (%struct.stm32_exti_data* @exti_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_45, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1112
@__init___device_dts_ord_45 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_exti_init, %struct.device* @__device_dts_ord_45 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1128
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 = internal global %struct._isr_list { i32 6, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_0 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_45 to i8*) }, section ".intList", align 4, !dbg !1158
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 = internal global %struct._isr_list { i32 7, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_1 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_45 to i8*) }, section ".intList", align 4, !dbg !1171
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 = internal global %struct._isr_list { i32 8, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_2 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_45 to i8*) }, section ".intList", align 4, !dbg !1173
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 = internal global %struct._isr_list { i32 9, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_3 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_45 to i8*) }, section ".intList", align 4, !dbg !1175
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 = internal global %struct._isr_list { i32 10, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_4 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_45 to i8*) }, section ".intList", align 4, !dbg !1177
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 = internal global %struct._isr_list { i32 23, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_9_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_45 to i8*) }, section ".intList", align 4, !dbg !1179
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 = internal global %struct._isr_list { i32 40, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_15_10 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_45 to i8*) }, section ".intList", align 4, !dbg !1181
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 = internal global %struct._isr_list { i32 1, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_16 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_45 to i8*) }, section ".intList", align 4, !dbg !1183
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 = internal global %struct._isr_list { i32 42, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_18 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_45 to i8*) }, section ".intList", align 4, !dbg !1185
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 = internal global %struct._isr_list { i32 2, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_21 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_45 to i8*) }, section ".intList", align 4, !dbg !1187
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 = internal global %struct._isr_list { i32 3, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_22 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_45 to i8*) }, section ".intList", align 4, !dbg !1189
@__devicehdl_dts_ord_8 = dso_local constant [19 x i16] [i16 -32768, i16 -32768, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 11, i16 12, i16 13, i16 14, i16 15, i16 16, i16 17, i16 18, i16 32767], section ".__device_handles_pass2", align 2, !dbg !499
@.str.112 = private unnamed_addr constant [13 x i8] c"rcc@40023800\00", align 1
@stm32_clock_control_api = internal global %struct.clock_control_driver_api { i32 (%struct.device*, i8*)* @stm32_clock_control_on, i32 (%struct.device*, i8*)* @stm32_clock_control_off, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)* null, i32 (%struct.device*, i8*, i32*)* @stm32_clock_control_get_subsys_rate, i32 (%struct.device*, i8*)* null, i32 (%struct.device*, i8*, i8*)* null, i32 (%struct.device*, i8*, i8*)* @stm32_clock_control_configure }, align 4, !dbg !1194
@__devstate_dts_ord_8 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1290
@__init___device_dts_ord_8 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_clock_control_init, %struct.device* @__device_dts_ord_8 }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !1279
@switch.table.enabled_clock = private unnamed_addr constant [6 x i32] [i32 0, i32 0, i32 -134, i32 -134, i32 -134, i32 0], align 4
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_PRE_KERNEL_160_", align 4, !dbg !1331
@__devicehdl_dts_ord_100 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !530
@.str.121 = private unnamed_addr constant [14 x i8] c"gpio@40020000\00", align 1
@gpio_stm32_cfg_a = internal constant %struct.gpio_stm32_config { %union.anon { i32 65535 }, i32* inttoptr (i32 1073872896 to i32*), i32 0, %struct.vnd_sensor_config { i32 48, i32 1 } }, align 4, !dbg !1397
@gpio_stm32_driver = internal constant %struct.gpio_driver_api { i32 (%struct.device*, i8, i32)* @gpio_stm32_config, i32 (%struct.device*, i32*)* @gpio_stm32_port_get_raw, i32 (%struct.device*, i32, i32)* @gpio_stm32_port_set_masked_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_set_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_clear_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_toggle_bits, i32 (%struct.device*, i8, i32, i32)* @gpio_stm32_pin_interrupt_configure, i32 (%struct.device*, %struct.gpio_callback*, i1)* @gpio_stm32_manage_callback, i32 (%struct.device*)* null }, align 4, !dbg !1703
@__devstate_dts_ord_100 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1661
@gpio_stm32_data_a = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1647
@__init___device_dts_ord_100 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_100 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1574
@__devicehdl_dts_ord_101 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !528
@.str.1.122 = private unnamed_addr constant [14 x i8] c"gpio@40020400\00", align 1
@gpio_stm32_cfg_b = internal constant %struct.gpio_stm32_config { %union.anon { i32 65535 }, i32* inttoptr (i32 1073873920 to i32*), i32 1, %struct.vnd_sensor_config { i32 48, i32 2 } }, align 4, !dbg !1705
@__devstate_dts_ord_101 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1665
@gpio_stm32_data_b = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1663
@__init___device_dts_ord_101 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_101 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1588
@__devicehdl_dts_ord_102 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !526
@.str.2.123 = private unnamed_addr constant [14 x i8] c"gpio@40020800\00", align 1
@gpio_stm32_cfg_c = internal constant %struct.gpio_stm32_config { %union.anon { i32 65535 }, i32* inttoptr (i32 1073874944 to i32*), i32 2, %struct.vnd_sensor_config { i32 48, i32 4 } }, align 4, !dbg !1718
@__devstate_dts_ord_102 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1669
@gpio_stm32_data_c = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1667
@__init___device_dts_ord_102 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_102 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1594
@__devicehdl_dts_ord_103 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !524
@.str.3.124 = private unnamed_addr constant [14 x i8] c"gpio@40020c00\00", align 1
@gpio_stm32_cfg_d = internal constant %struct.gpio_stm32_config { %union.anon { i32 65535 }, i32* inttoptr (i32 1073875968 to i32*), i32 3, %struct.vnd_sensor_config { i32 48, i32 8 } }, align 4, !dbg !1720
@__devstate_dts_ord_103 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1673
@gpio_stm32_data_d = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1671
@__init___device_dts_ord_103 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_103 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1600
@__devicehdl_dts_ord_27 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !522
@.str.4.125 = private unnamed_addr constant [14 x i8] c"gpio@40021000\00", align 1
@gpio_stm32_cfg_e = internal constant %struct.gpio_stm32_config { %union.anon { i32 65535 }, i32* inttoptr (i32 1073876992 to i32*), i32 4, %struct.vnd_sensor_config { i32 48, i32 16 } }, align 4, !dbg !1722
@__devstate_dts_ord_27 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1677
@gpio_stm32_data_e = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1675
@__init___device_dts_ord_27 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_27 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1609
@__devicehdl_dts_ord_104 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !520
@.str.5.126 = private unnamed_addr constant [14 x i8] c"gpio@40021400\00", align 1
@gpio_stm32_cfg_f = internal constant %struct.gpio_stm32_config { %union.anon { i32 65535 }, i32* inttoptr (i32 1073878016 to i32*), i32 5, %struct.vnd_sensor_config { i32 48, i32 32 } }, align 4, !dbg !1724
@__devstate_dts_ord_104 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1681
@gpio_stm32_data_f = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1679
@__init___device_dts_ord_104 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_104 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1615
@__devicehdl_dts_ord_105 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !518
@.str.6.127 = private unnamed_addr constant [14 x i8] c"gpio@40021800\00", align 1
@gpio_stm32_cfg_g = internal constant %struct.gpio_stm32_config { %union.anon { i32 65535 }, i32* inttoptr (i32 1073879040 to i32*), i32 6, %struct.vnd_sensor_config { i32 48, i32 64 } }, align 4, !dbg !1726
@__devstate_dts_ord_105 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1685
@gpio_stm32_data_g = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1683
@__init___device_dts_ord_105 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_105 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1621
@__devicehdl_dts_ord_106 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !516
@.str.7.128 = private unnamed_addr constant [14 x i8] c"gpio@40021c00\00", align 1
@gpio_stm32_cfg_h = internal constant %struct.gpio_stm32_config { %union.anon { i32 65535 }, i32* inttoptr (i32 1073880064 to i32*), i32 7, %struct.vnd_sensor_config { i32 48, i32 128 } }, align 4, !dbg !1728
@__devstate_dts_ord_106 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1689
@gpio_stm32_data_h = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1687
@__init___device_dts_ord_106 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_106 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1627
@__devicehdl_dts_ord_107 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !514
@.str.8.129 = private unnamed_addr constant [14 x i8] c"gpio@40022000\00", align 1
@gpio_stm32_cfg_i = internal constant %struct.gpio_stm32_config { %union.anon { i32 65535 }, i32* inttoptr (i32 1073881088 to i32*), i32 8, %struct.vnd_sensor_config { i32 48, i32 256 } }, align 4, !dbg !1730
@__devstate_dts_ord_107 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1693
@gpio_stm32_data_i = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1691
@__init___device_dts_ord_107 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_107 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1633
@__devicehdl_dts_ord_108 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !512
@.str.9.130 = private unnamed_addr constant [14 x i8] c"gpio@40022400\00", align 1
@gpio_stm32_cfg_j = internal constant %struct.gpio_stm32_config { %union.anon { i32 65535 }, i32* inttoptr (i32 1073882112 to i32*), i32 9, %struct.vnd_sensor_config { i32 48, i32 512 } }, align 4, !dbg !1732
@__devstate_dts_ord_108 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1697
@gpio_stm32_data_j = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1695
@__init___device_dts_ord_108 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_108 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1639
@__devicehdl_dts_ord_109 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !510
@.str.10.131 = private unnamed_addr constant [14 x i8] c"gpio@40022800\00", align 1
@gpio_stm32_cfg_k = internal constant %struct.gpio_stm32_config { %union.anon { i32 65535 }, i32* inttoptr (i32 1073883136 to i32*), i32 10, %struct.vnd_sensor_config { i32 48, i32 1024 } }, align 4, !dbg !1734
@__devstate_dts_ord_109 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1701
@gpio_stm32_data_k = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1699
@__init___device_dts_ord_109 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_109 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1645
@.str.135 = private unnamed_addr constant [11 x i8] c"uart_stm32\00", align 1
@log_const_uart_stm32 = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.135, i32 0, i32 0), i8 3 }, section ".log_const_uart_stm32", align 4, !dbg !1736
@__devicehdl_dts_ord_66 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !540
@.str.1.136 = private unnamed_addr constant [16 x i8] c"serial@40011000\00", align 1
@uart_stm32_cfg_0 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073811456 to %struct.USART_TypeDef*), %struct.vnd_sensor_config* getelementptr inbounds ([1 x %struct.vnd_sensor_config], [1 x %struct.vnd_sensor_config]* @pclken_0, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_66 }, align 4, !dbg !1922
@uart_stm32_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_stm32_poll_in, void (%struct.device*, i8)* @uart_stm32_poll_out, i32 (%struct.device*)* @uart_stm32_err_check, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_configure, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_config_get }, align 4, !dbg !1977
@__devstate_dts_ord_66 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1912
@uart_stm32_data_0 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1979
@__device_dts_ord_66 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.136, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_0 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_66, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_0 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_66, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1879
@__init___device_dts_ord_66 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_66 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1881
@__devicehdl_dts_ord_52 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !538
@.str.2.139 = private unnamed_addr constant [16 x i8] c"serial@40004400\00", align 1
@uart_stm32_cfg_1 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073759232 to %struct.USART_TypeDef*), %struct.vnd_sensor_config* getelementptr inbounds ([1 x %struct.vnd_sensor_config], [1 x %struct.vnd_sensor_config]* @pclken_1, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_52 }, align 4, !dbg !1985
@__devstate_dts_ord_52 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1914
@uart_stm32_data_1 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1995
@__device_dts_ord_52 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2.139, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_1 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_52, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_1 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_52, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1890
@__init___device_dts_ord_52 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_52 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1892
@__devicehdl_dts_ord_55 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !536
@.str.3.140 = private unnamed_addr constant [16 x i8] c"serial@40004800\00", align 1
@uart_stm32_cfg_2 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073760256 to %struct.USART_TypeDef*), %struct.vnd_sensor_config* getelementptr inbounds ([1 x %struct.vnd_sensor_config], [1 x %struct.vnd_sensor_config]* @pclken_2, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_55 }, align 4, !dbg !1997
@__devstate_dts_ord_55 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1916
@uart_stm32_data_2 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !2007
@__device_dts_ord_55 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3.140, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_2 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_55, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_2 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_55, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1896
@__init___device_dts_ord_55 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_55 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1898
@__devicehdl_dts_ord_60 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !534
@.str.4.143 = private unnamed_addr constant [16 x i8] c"serial@40007800\00", align 1
@uart_stm32_cfg_3 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073772544 to %struct.USART_TypeDef*), %struct.vnd_sensor_config* getelementptr inbounds ([1 x %struct.vnd_sensor_config], [1 x %struct.vnd_sensor_config]* @pclken_3, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_60 }, align 4, !dbg !2009
@__devstate_dts_ord_60 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1918
@uart_stm32_data_3 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !2019
@__device_dts_ord_60 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.4.143, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_3 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_60, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_3 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_60, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1902
@__init___device_dts_ord_60 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_60 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1904
@__devicehdl_dts_ord_63 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !532
@.str.5.144 = private unnamed_addr constant [16 x i8] c"serial@40007c00\00", align 1
@uart_stm32_cfg_4 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073773568 to %struct.USART_TypeDef*), %struct.vnd_sensor_config* getelementptr inbounds ([1 x %struct.vnd_sensor_config], [1 x %struct.vnd_sensor_config]* @pclken_4, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_63 }, align 4, !dbg !2021
@__devstate_dts_ord_63 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1920
@uart_stm32_data_4 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !2031
@__device_dts_ord_63 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5.144, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_4 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_63, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_4 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_63, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1908
@__init___device_dts_ord_63 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_63 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1910
@pclken_0 = internal constant [1 x %struct.vnd_sensor_config] [%struct.vnd_sensor_config { i32 68, i32 16 }], align 4, !dbg !1966
@__pinctrl_dev_config__device_dts_ord_66 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_66, i32 0, i32 0), i8 1 }, align 4, !dbg !1969
@__pinctrl_states__device_dts_ord_66 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct.vnd_sensor_config* getelementptr inbounds ([2 x %struct.vnd_sensor_config], [2 x %struct.vnd_sensor_config]* @__pinctrl_state_pins_0__device_dts_ord_66, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1971
@__pinctrl_state_pins_0__device_dts_ord_66 = internal constant [2 x %struct.vnd_sensor_config] [%struct.vnd_sensor_config { i32 711, i32 512 }, %struct.vnd_sensor_config { i32 743, i32 0 }], align 4, !dbg !1974
@.str.6.138 = private unnamed_addr constant [51 x i8] c"%c: Failed call clock_control_get_rate(pclken[0])\0A\00", align 1
@.str.7.147 = private unnamed_addr constant [36 x i8] c"%c: clock control device not ready\0A\00", align 1
@.str.8.149 = private unnamed_addr constant [37 x i8] c"%c: Could not enable (LP)UART clock\0A\00", align 1
@.str.9.150 = private unnamed_addr constant [55 x i8] c"%c: Invalid parity setting '%d'.Defaulting to 'none'.\0A\00", align 1
@__device_dts_ord_8 = dso_local constant %struct.device { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.112, i32 0, i32 0), i8* null, i8* bitcast (%struct.clock_control_driver_api* @stm32_clock_control_api to i8*), %struct.device_state* @__devstate_dts_ord_8, i8* null, i16* getelementptr inbounds ([19 x i16], [19 x i16]* @__devicehdl_dts_ord_8, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_11_", align 4, !dbg !1263
@pclken_1 = internal constant [1 x %struct.vnd_sensor_config] [%struct.vnd_sensor_config { i32 64, i32 131072 }], align 4, !dbg !1987
@__pinctrl_dev_config__device_dts_ord_52 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_52, i32 0, i32 0), i8 1 }, align 4, !dbg !1989
@__pinctrl_states__device_dts_ord_52 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct.vnd_sensor_config* getelementptr inbounds ([2 x %struct.vnd_sensor_config], [2 x %struct.vnd_sensor_config]* @__pinctrl_state_pins_0__device_dts_ord_52, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1991
@__pinctrl_state_pins_0__device_dts_ord_52 = internal constant [2 x %struct.vnd_sensor_config] [%struct.vnd_sensor_config { i32 1703, i32 512 }, %struct.vnd_sensor_config { i32 1735, i32 0 }], align 4, !dbg !1993
@pclken_2 = internal constant [1 x %struct.vnd_sensor_config] [%struct.vnd_sensor_config { i32 64, i32 262144 }], align 4, !dbg !1999
@__pinctrl_dev_config__device_dts_ord_55 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_55, i32 0, i32 0), i8 1 }, align 4, !dbg !2001
@__pinctrl_states__device_dts_ord_55 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct.vnd_sensor_config* getelementptr inbounds ([2 x %struct.vnd_sensor_config], [2 x %struct.vnd_sensor_config]* @__pinctrl_state_pins_0__device_dts_ord_55, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !2003
@__pinctrl_state_pins_0__device_dts_ord_55 = internal constant [2 x %struct.vnd_sensor_config] [%struct.vnd_sensor_config { i32 1799, i32 512 }, %struct.vnd_sensor_config { i32 1831, i32 0 }], align 4, !dbg !2005
@pclken_3 = internal constant [1 x %struct.vnd_sensor_config] [%struct.vnd_sensor_config { i32 64, i32 1073741824 }], align 4, !dbg !2011
@__pinctrl_dev_config__device_dts_ord_60 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_60, i32 0, i32 0), i8 1 }, align 4, !dbg !2013
@__pinctrl_states__device_dts_ord_60 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct.vnd_sensor_config* getelementptr inbounds ([2 x %struct.vnd_sensor_config], [2 x %struct.vnd_sensor_config]* @__pinctrl_state_pins_0__device_dts_ord_60, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !2015
@__pinctrl_state_pins_0__device_dts_ord_60 = internal constant [2 x %struct.vnd_sensor_config] [%struct.vnd_sensor_config { i32 2312, i32 512 }, %struct.vnd_sensor_config { i32 2280, i32 0 }], align 4, !dbg !2017
@pclken_4 = internal constant [1 x %struct.vnd_sensor_config] [%struct.vnd_sensor_config { i32 64, i32 -2147483648 }], align 4, !dbg !2023
@__pinctrl_dev_config__device_dts_ord_63 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_63, i32 0, i32 0), i8 1 }, align 4, !dbg !2025
@__pinctrl_states__device_dts_ord_63 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct.vnd_sensor_config* getelementptr inbounds ([2 x %struct.vnd_sensor_config], [2 x %struct.vnd_sensor_config]* @__pinctrl_state_pins_0__device_dts_ord_63, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !2027
@__pinctrl_state_pins_0__device_dts_ord_63 = internal constant [2 x %struct.vnd_sensor_config] [%struct.vnd_sensor_config { i32 2088, i32 512 }, %struct.vnd_sensor_config { i32 2056, i32 0 }], align 4, !dbg !2029
@switch.table.uart_stm32_init = private unnamed_addr constant [3 x i32] [i32 0, i32 1536, i32 1024], align 4
@switch.table.uart_stm32_init.10 = private unnamed_addr constant [3 x i32] [i32 0, i32 4096, i32 4096], align 4
@switch.table.uart_stm32_cfg2ll_stopbits = private unnamed_addr constant [3 x i32] [i32 4096, i32 0, i32 12288], align 4
@switch.table.uart_stm32_ll2cfg_stopbits = private unnamed_addr constant [4 x i32] [i32 1, i32 0, i32 3, i32 2], align 4
@overflow_cyc = internal global i32 0, align 4, !dbg !2038
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !2147
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !2149
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !2145
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !2116
@gpio_ports = internal unnamed_addr constant [11 x %struct.device*] [%struct.device* @__device_dts_ord_100, %struct.device* @__device_dts_ord_101, %struct.device* @__device_dts_ord_102, %struct.device* @__device_dts_ord_103, %struct.device* @__device_dts_ord_27, %struct.device* @__device_dts_ord_104, %struct.device* @__device_dts_ord_105, %struct.device* @__device_dts_ord_106, %struct.device* @__device_dts_ord_107, %struct.device* @__device_dts_ord_108, %struct.device* @__device_dts_ord_109], align 4, !dbg !2151
@__device_dts_ord_100 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.121, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_a to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_100, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_a to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_100, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1572
@__device_dts_ord_101 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.122, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_b to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_101, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_b to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_101, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1586
@__device_dts_ord_102 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2.123, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_c to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_102, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_c to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_102, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1592
@__device_dts_ord_103 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.124, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_d to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_103, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_d to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_103, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1598
@__device_dts_ord_27 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.125, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_e to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_27, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_e to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_27, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1607
@__device_dts_ord_104 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.126, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_f to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_104, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_f to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_104, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1613
@__device_dts_ord_105 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6.127, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_g to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_105, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_g to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_105, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1619
@__device_dts_ord_106 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7.128, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_h to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_106, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_h to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_106, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1625
@__device_dts_ord_107 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8.129, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_i to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_107, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_i to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_107, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1631
@__device_dts_ord_108 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.9.130, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_j to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_108, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_j to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_108, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1637
@__device_dts_ord_109 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.10.131, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_k to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_109, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_k to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_109, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1643
@uwTickPrio = external dso_local local_unnamed_addr global i32, align 4
@APBPrescTable = dso_local local_unnamed_addr constant [8 x i8] c"\00\00\00\00\01\02\03\04", align 1, !dbg !2241
@SystemCoreClock = dso_local local_unnamed_addr global i32 16000000, align 4, !dbg !2283
@AHBPrescTable = dso_local local_unnamed_addr constant [16 x i8] c"\00\00\00\00\00\00\00\00\01\02\03\04\06\07\08\09", align 1, !dbg !2286
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !2292
@.str.185 = private unnamed_addr constant [20 x i8] c"%c: Halting system\0A\00", align 1
@.str.1.189 = private unnamed_addr constant [45 x i8] c"%c: >>> ZEPHYR FATAL ERROR %d: %s on CPU %d\0A\00", align 1
@.str.2.190 = private unnamed_addr constant [38 x i8] c"%c: Fault during interrupt handling\0A\0A\00", align 1
@.str.3.191 = private unnamed_addr constant [29 x i8] c"%c: Current thread: %p (%s)\0A\00", align 1
@.str.4.195 = private unnamed_addr constant [14 x i8] c"CPU exception\00", align 1
@.str.5.196 = private unnamed_addr constant [20 x i8] c"Unhandled interrupt\00", align 1
@.str.6.197 = private unnamed_addr constant [15 x i8] c"Stack overflow\00", align 1
@.str.7.198 = private unnamed_addr constant [12 x i8] c"Kernel oops\00", align 1
@.str.8.199 = private unnamed_addr constant [13 x i8] c"Kernel panic\00", align 1
@.str.9.194 = private unnamed_addr constant [14 x i8] c"Unknown error\00", align 1
@.str.10.193 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@switch.table.reason_to_str = private unnamed_addr constant [5 x i8*] [i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.195, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5.196, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.6.197, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.7.198, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8.199, i32 0, i32 0)], align 4
@.str.201 = private unnamed_addr constant [3 x i8] c"os\00", align 1
@log_const_os = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.201, i32 0, i32 0), i8 3 }, section ".log_const_os", align 4, !dbg !2299
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@__ccm_bss_start = external dso_local global [0 x i8], align 1
@__ccm_bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2112 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 64, !dbg !2522
@z_main_stack = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 64, !dbg !2508
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !2517
@z_idle_stacks = internal global [1 x [384 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 64, !dbg !2529
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !2534
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.1.210 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.215, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.216, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.217, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.218, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.219, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.220, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.214, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.221, i32 0, i32 0)], align 4, !dbg !2564
@.str.215 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.216 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.217 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3.218 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4.219 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.220 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6.214 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7.221 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !2676
@.str.8.213 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@sched_spinlock = dso_local local_unnamed_addr global %struct.k_spinlock zeroinitializer, align 1, !dbg !2689
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !2797
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !2800
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !2802
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !2527
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !2519
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@__ccm_data_start = external dso_local global [0 x i8], align 1
@__ccm_data_rom_start = external dso_local global [0 x i8], align 1
@__ccm_data_end = external dso_local global [0 x i8], align 1
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !2804
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !2840
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !2386
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !2838
@lock = internal global %struct.k_spinlock zeroinitializer, align 1, !dbg !2843
@.str.294 = private unnamed_addr constant [66 x i8] c"*** Booting Zephyr OS build zephyr-v3.2.0-2126-gffed8388e7cb ***\0A\00", align 1

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !3549 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #23, !dbg !3553, !srcloc !3554
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #23, !dbg !3555, !srcloc !3556
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #23, !dbg !3557, !srcloc !3558
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -22) #23, !dbg !3559, !srcloc !3560
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -25) #23, !dbg !3561, !srcloc !3562
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #23, !dbg !3563, !srcloc !3564
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -25) #23, !dbg !3565, !srcloc !3566
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #23, !dbg !3567, !srcloc !3568
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -37) #23, !dbg !3569, !srcloc !3570
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #23, !dbg !3571, !srcloc !3572
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #23, !dbg !3573, !srcloc !3574
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #23, !dbg !3575, !srcloc !3576
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #23, !dbg !3577, !srcloc !3578
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #23, !dbg !3579, !srcloc !3580
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #23, !dbg !3581, !srcloc !3582
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #23, !dbg !3583, !srcloc !3584
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #23, !dbg !3585, !srcloc !3586
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -117) #23, !dbg !3587, !srcloc !3588
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #23, !dbg !3589, !srcloc !3590
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_size_OFFSET\0A\09.equ\09___thread_stack_info_t_size_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_size_OFFSET,%object", "n"(i32 -5) #23, !dbg !3591, !srcloc !3592
  tail call void asm sideeffect ".globl\09___thread_t_stack_info_OFFSET\0A\09.equ\09___thread_t_stack_info_OFFSET,${0:B}\0A\09.type\09___thread_t_stack_info_OFFSET,%object", "n"(i32 -101) #23, !dbg !3593, !srcloc !3594
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -129) #23, !dbg !3595, !srcloc !3596
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2113) #23, !dbg !3597, !srcloc !3598
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #23, !dbg !3599, !srcloc !3600
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #23, !dbg !3601, !srcloc !3602
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #23, !dbg !3603, !srcloc !3604
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #23, !dbg !3605, !srcloc !3606
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #23, !dbg !3607, !srcloc !3610
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #23, !dbg !3611, !srcloc !3612
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #23, !dbg !3613, !srcloc !3614
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #23, !dbg !3615, !srcloc !3616
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #23, !dbg !3617, !srcloc !3618
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #23, !dbg !3619, !srcloc !3620
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #23, !dbg !3621, !srcloc !3622
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #23, !dbg !3623, !srcloc !3624
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #23, !dbg !3625, !srcloc !3626
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #23, !dbg !3627, !srcloc !3628
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #23, !dbg !3629, !srcloc !3630
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #23, !dbg !3631, !srcloc !3632
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #23, !dbg !3633, !srcloc !3634
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #23, !dbg !3635, !srcloc !3636
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #23, !dbg !3637, !srcloc !3638
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #23, !dbg !3639, !srcloc !3640
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #23, !dbg !3641, !srcloc !3642
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #23, !dbg !3643, !srcloc !3644
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #23, !dbg !3645, !srcloc !3646
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #23, !dbg !3647, !srcloc !3648
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #23, !dbg !3649, !srcloc !3650
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #23, !dbg !3651, !srcloc !3652
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #23, !dbg !3653, !srcloc !3654
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_SIZEOF\0A\09.equ\09___thread_stack_info_t_SIZEOF,${0:B}\0A\09.type\09___thread_stack_info_t_SIZEOF,%object", "n"(i32 -13) #23, !dbg !3655, !srcloc !3656
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -129) #23, !dbg !3657, !srcloc !3658
  ret void, !dbg !3659
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @main() local_unnamed_addr #2 !dbg !3662 {
  %1 = alloca [4 x i8*], align 4
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_19, metadata !3664, metadata !DIExpression()), !dbg !3716
  %2 = load %struct.rtio_iodev*, %struct.rtio_iodev** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_19, i32 0, i32 4) to %struct.rtio_iodev**), align 4, !dbg !3717
  call void @llvm.dbg.value(metadata %struct.rtio_iodev* %2, metadata !3681, metadata !DIExpression()), !dbg !3716
  call void @llvm.dbg.value(metadata i32 0, metadata !3683, metadata !DIExpression()), !dbg !3718
  %3 = load %struct.rtio_sq*, %struct.rtio_sq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 2), align 4, !dbg !3719
  br label %8, !dbg !3720

4:                                                ; preds = %46
  %5 = bitcast [4 x i8*]* %1 to i8*
  %6 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 3) #24, !dbg !3716
  %7 = zext i8 %6 to i32
  br label %50, !dbg !3721

8:                                                ; preds = %0, %46
  %9 = phi %struct.rtio_sq* [ %3, %0 ], [ %47, %46 ], !dbg !3719
  %10 = phi i32 [ 0, %0 ], [ %48, %46 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !3683, metadata !DIExpression()), !dbg !3718
  %11 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %9, i32 0, i32 0, i32 2, !dbg !3719
  %12 = tail call fastcc i32 @atomic_get(i32* noundef nonnull %11) #24, !dbg !3719
  %13 = load %struct.rtio_sq*, %struct.rtio_sq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 2), align 4, !dbg !3719
  %14 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %13, i32 0, i32 0, i32 0, !dbg !3719
  %15 = load i32, i32* %14, align 4, !dbg !3719
  %16 = add i32 %15, %12, !dbg !3719
  call void @llvm.dbg.value(metadata i32 %16, metadata !3689, metadata !DIExpression()), !dbg !3722
  %17 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %13, i32 0, i32 0, i32 3, !dbg !3719
  %18 = tail call fastcc i32 @atomic_get(i32* noundef nonnull %17) #24, !dbg !3719
  %19 = sub i32 %16, %18, !dbg !3719
  %20 = load %struct.rtio_sq*, %struct.rtio_sq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 2), align 4, !dbg !3719
  %21 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %20, i32 0, i32 0, i32 4, !dbg !3719
  %22 = load i32, i32* %21, align 4, !dbg !3719
  %23 = add i32 %22, 1, !dbg !3719
  %24 = icmp ult i32 %19, %23, !dbg !3719
  call void @llvm.dbg.value(metadata i1 %24, metadata !3691, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3722
  br i1 %24, label %25, label %34, !dbg !3719

25:                                               ; preds = %8
  %26 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %20, i32 0, i32 0, i32 0, !dbg !3723
  %27 = load i32, i32* %26, align 4, !dbg !3723
  %28 = add i32 %27, 1, !dbg !3723
  store i32 %28, i32* %26, align 4, !dbg !3723
  %29 = load %struct.rtio_sq*, %struct.rtio_sq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 2), align 4, !dbg !3719
  %30 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %29, i32 0, i32 0, i32 4, !dbg !3719
  %31 = load i32, i32* %30, align 4, !dbg !3719
  %32 = and i32 %31, %16, !dbg !3719
  %33 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %29, i32 0, i32 1, i32 %32, !dbg !3719
  br label %34, !dbg !3719

34:                                               ; preds = %8, %25
  %35 = phi %struct.rtio_sqe* [ %33, %25 ], [ null, %8 ], !dbg !3719
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %35, metadata !3685, metadata !DIExpression()), !dbg !3726
  %36 = getelementptr inbounds [8 x [16 x i8]], [8 x [16 x i8]]* @bufs, i32 0, i32 %10, i32 0, !dbg !3727
  tail call fastcc void @rtio_sqe_prep_read(%struct.rtio_sqe* noundef %35, %struct.rtio_iodev* noundef %2, i8* noundef nonnull %36, i8* noundef nonnull %36) #24, !dbg !3728
  %37 = load %struct.rtio_sq*, %struct.rtio_sq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 2), align 4, !dbg !3729
  %38 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %37, i32 0, i32 0, i32 0, !dbg !3729
  %39 = load i32, i32* %38, align 4, !dbg !3729
  %40 = icmp eq i32 %39, 0, !dbg !3729
  br i1 %40, label %46, label %41, !dbg !3732

41:                                               ; preds = %34
  %42 = add i32 %39, -1, !dbg !3733
  store i32 %42, i32* %38, align 4, !dbg !3733
  %43 = load %struct.rtio_sq*, %struct.rtio_sq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 2), align 4, !dbg !3733
  %44 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %43, i32 0, i32 0, i32 2, !dbg !3733
  tail call fastcc void @atomic_add(i32* noundef nonnull %44, i32 noundef 1) #24, !dbg !3733
  %45 = load %struct.rtio_sq*, %struct.rtio_sq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 2), align 4, !dbg !3719
  br label %46, !dbg !3733

46:                                               ; preds = %41, %34
  %47 = phi %struct.rtio_sq* [ %45, %41 ], [ %37, %34 ]
  %48 = add nuw nsw i32 %10, 1, !dbg !3735
  call void @llvm.dbg.value(metadata i32 %48, metadata !3683, metadata !DIExpression()), !dbg !3718
  %49 = icmp eq i32 %48, 8, !dbg !3736
  br i1 %49, label %4, label %8, !dbg !3720, !llvm.loop !3737

50:                                               ; preds = %4, %154
  call void @llvm.dbg.value(metadata i32 0, metadata !3692, metadata !DIExpression()), !dbg !3739
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #23, !dbg !3740
  call void @llvm.dbg.declare(metadata [4 x i8*]* %1, metadata !3694, metadata !DIExpression()), !dbg !3741
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.1, i32 0, i32 0), i32 noundef %7, i32 noundef 4) #25, !dbg !3742
  tail call fastcc void @rtio_submit() #24, !dbg !3747
  call void @llvm.dbg.value(metadata i32 0, metadata !3692, metadata !DIExpression()), !dbg !3739
  br label %51, !dbg !3748

51:                                               ; preds = %50, %97
  %52 = phi i32 [ 0, %50 ], [ %98, %97 ]
  call void @llvm.dbg.value(metadata i32 %52, metadata !3692, metadata !DIExpression()), !dbg !3739
  %53 = load %struct.rtio_cq*, %struct.rtio_cq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 3), align 4, !dbg !3749
  %54 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %53, i32 0, i32 0, i32 3, !dbg !3749
  %55 = tail call fastcc i32 @atomic_get(i32* noundef nonnull %54) #24, !dbg !3749
  %56 = load %struct.rtio_cq*, %struct.rtio_cq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 3), align 4, !dbg !3749
  %57 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %56, i32 0, i32 0, i32 1, !dbg !3749
  %58 = load i32, i32* %57, align 4, !dbg !3749
  %59 = add i32 %58, %55, !dbg !3749
  call void @llvm.dbg.value(metadata i32 %59, metadata !3699, metadata !DIExpression()), !dbg !3750
  %60 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %56, i32 0, i32 0, i32 2, !dbg !3749
  %61 = tail call fastcc i32 @atomic_get(i32* noundef nonnull %60) #24, !dbg !3749
  %62 = icmp eq i32 %59, %61, !dbg !3749
  call void @llvm.dbg.value(metadata i1 %62, metadata !3701, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3750
  br i1 %62, label %63, label %66, !dbg !3749

63:                                               ; preds = %51
  call void @llvm.dbg.value(metadata !DIArgList(%struct.rtio_cq* %71, i32 %74), metadata !3696, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 20, DW_OP_stack_value)), !dbg !3751
  %64 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 4) #24, !dbg !3752
  %65 = zext i8 %64 to i32, !dbg !3752
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.2, i32 0, i32 0), i32 noundef %65) #25, !dbg !3752
  tail call fastcc void @k_msleep(i32 noundef 100) #24, !dbg !3759
  br label %97, !dbg !3760, !llvm.loop !3761

66:                                               ; preds = %51
  %67 = load %struct.rtio_cq*, %struct.rtio_cq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 3), align 4, !dbg !3763
  %68 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %67, i32 0, i32 0, i32 1, !dbg !3763
  %69 = load i32, i32* %68, align 4, !dbg !3763
  %70 = add i32 %69, 1, !dbg !3763
  store i32 %70, i32* %68, align 4, !dbg !3763
  %71 = load %struct.rtio_cq*, %struct.rtio_cq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 3), align 4, !dbg !3749
  %72 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %71, i32 0, i32 0, i32 4, !dbg !3749
  %73 = load i32, i32* %72, align 4, !dbg !3749
  %74 = and i32 %73, %59, !dbg !3749
  call void @llvm.dbg.value(metadata !DIArgList(%struct.rtio_cq* %71, i32 %74), metadata !3696, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 20, DW_OP_stack_value)), !dbg !3751
  %75 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 4) #24, !dbg !3766
  %76 = zext i8 %75 to i32, !dbg !3766
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.3, i32 0, i32 0), i32 noundef %76, i32 noundef %52) #25, !dbg !3766
  %77 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %71, i32 0, i32 1, i32 %74, i32 0, !dbg !3771
  %78 = load i32, i32* %77, align 4, !dbg !3771
  %79 = icmp slt i32 %78, 0, !dbg !3773
  br i1 %79, label %80, label %83, !dbg !3774

80:                                               ; preds = %66
  %81 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #24, !dbg !3775
  %82 = zext i8 %81 to i32, !dbg !3775
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.4, i32 0, i32 0), i32 noundef %82) #25, !dbg !3775
  br label %83, !dbg !3781

83:                                               ; preds = %80, %66
  %84 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %71, i32 0, i32 1, i32 %74, i32 1, !dbg !3782
  %85 = load i8*, i8** %84, align 4, !dbg !3782
  %86 = getelementptr inbounds [4 x i8*], [4 x i8*]* %1, i32 0, i32 %52, !dbg !3783
  store i8* %85, i8** %86, align 4, !dbg !3784
  %87 = load %struct.rtio_cq*, %struct.rtio_cq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 3), align 4, !dbg !3785
  %88 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %87, i32 0, i32 0, i32 1, !dbg !3785
  %89 = load i32, i32* %88, align 4, !dbg !3785
  %90 = icmp eq i32 %89, 0, !dbg !3785
  br i1 %90, label %95, label %91, !dbg !3788

91:                                               ; preds = %83
  %92 = add i32 %89, -1, !dbg !3789
  store i32 %92, i32* %88, align 4, !dbg !3789
  %93 = load %struct.rtio_cq*, %struct.rtio_cq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 3), align 4, !dbg !3789
  %94 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %93, i32 0, i32 0, i32 3, !dbg !3789
  tail call fastcc void @atomic_add(i32* noundef nonnull %94, i32 noundef 1) #24, !dbg !3789
  br label %95, !dbg !3789

95:                                               ; preds = %91, %83
  %96 = add nsw i32 %52, 1, !dbg !3791
  call void @llvm.dbg.value(metadata i32 %96, metadata !3692, metadata !DIExpression()), !dbg !3739
  br label %97, !dbg !3762

97:                                               ; preds = %95, %63
  %98 = phi i32 [ %52, %63 ], [ %96, %95 ], !dbg !3739
  call void @llvm.dbg.value(metadata i32 %98, metadata !3692, metadata !DIExpression()), !dbg !3739
  %99 = icmp slt i32 %98, 4, !dbg !3792
  br i1 %99, label %51, label %100, !dbg !3748

100:                                              ; preds = %97
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.5, i32 0, i32 0), i32 noundef %7, i32 noundef 4) #25, !dbg !3793
  call void @llvm.dbg.value(metadata i32 0, metadata !3692, metadata !DIExpression()), !dbg !3739
  %101 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 4) #24, !dbg !3716
  %102 = zext i8 %101 to i32
  call void @llvm.dbg.value(metadata i32 0, metadata !3692, metadata !DIExpression()), !dbg !3739
  br label %103, !dbg !3798

103:                                              ; preds = %100, %103
  %104 = phi i32 [ 0, %100 ], [ %107, %103 ]
  call void @llvm.dbg.value(metadata i32 %104, metadata !3692, metadata !DIExpression()), !dbg !3739
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6, i32 0, i32 0), metadata !3702, metadata !DIExpression()), !dbg !3799
  call void @llvm.dbg.value(metadata i1 false, metadata !3707, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3799
  call void @llvm.dbg.value(metadata i32 0, metadata !3708, metadata !DIExpression()), !dbg !3799
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.7, i32 0, i32 0), i32 noundef %102, i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6, i32 0, i32 0)) #25, !dbg !3800
  %105 = getelementptr inbounds [4 x i8*], [4 x i8*]* %1, i32 0, i32 %104, !dbg !3804
  %106 = load i8*, i8** %105, align 4, !dbg !3804
  tail call void @z_log_minimal_hexdump_print(i32 noundef 4, i8* noundef %106, i32 noundef 16) #25, !dbg !3804
  %107 = add nuw nsw i32 %104, 1, !dbg !3805
  call void @llvm.dbg.value(metadata i32 %107, metadata !3692, metadata !DIExpression()), !dbg !3739
  %108 = icmp eq i32 %107, 4, !dbg !3806
  br i1 %108, label %109, label %103, !dbg !3798, !llvm.loop !3807

109:                                              ; preds = %103
  tail call fastcc void @k_msleep(i32 noundef 300) #24, !dbg !3809
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.8, i32 0, i32 0), i32 noundef %7, i32 noundef 4) #25, !dbg !3810
  call void @llvm.dbg.value(metadata i32 0, metadata !3692, metadata !DIExpression()), !dbg !3739
  %110 = load %struct.rtio_sq*, %struct.rtio_sq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 2), align 4, !dbg !3815
  br label %111, !dbg !3816

111:                                              ; preds = %109, %150
  %112 = phi %struct.rtio_sq* [ %110, %109 ], [ %151, %150 ], !dbg !3815
  %113 = phi i32 [ 0, %109 ], [ %152, %150 ]
  call void @llvm.dbg.value(metadata i32 %113, metadata !3692, metadata !DIExpression()), !dbg !3739
  %114 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %112, i32 0, i32 0, i32 2, !dbg !3815
  %115 = tail call fastcc i32 @atomic_get(i32* noundef nonnull %114) #24, !dbg !3815
  %116 = load %struct.rtio_sq*, %struct.rtio_sq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 2), align 4, !dbg !3815
  %117 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %116, i32 0, i32 0, i32 0, !dbg !3815
  %118 = load i32, i32* %117, align 4, !dbg !3815
  %119 = add i32 %118, %115, !dbg !3815
  call void @llvm.dbg.value(metadata i32 %119, metadata !3713, metadata !DIExpression()), !dbg !3817
  %120 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %116, i32 0, i32 0, i32 3, !dbg !3815
  %121 = tail call fastcc i32 @atomic_get(i32* noundef nonnull %120) #24, !dbg !3815
  %122 = sub i32 %119, %121, !dbg !3815
  %123 = load %struct.rtio_sq*, %struct.rtio_sq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 2), align 4, !dbg !3815
  %124 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %123, i32 0, i32 0, i32 4, !dbg !3815
  %125 = load i32, i32* %124, align 4, !dbg !3815
  %126 = add i32 %125, 1, !dbg !3815
  %127 = icmp ult i32 %122, %126, !dbg !3815
  call void @llvm.dbg.value(metadata i1 %127, metadata !3715, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3817
  br i1 %127, label %128, label %137, !dbg !3815

128:                                              ; preds = %111
  %129 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %123, i32 0, i32 0, i32 0, !dbg !3818
  %130 = load i32, i32* %129, align 4, !dbg !3818
  %131 = add i32 %130, 1, !dbg !3818
  store i32 %131, i32* %129, align 4, !dbg !3818
  %132 = load %struct.rtio_sq*, %struct.rtio_sq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 2), align 4, !dbg !3815
  %133 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %132, i32 0, i32 0, i32 4, !dbg !3815
  %134 = load i32, i32* %133, align 4, !dbg !3815
  %135 = and i32 %134, %119, !dbg !3815
  %136 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %132, i32 0, i32 1, i32 %135, !dbg !3815
  br label %137, !dbg !3815

137:                                              ; preds = %111, %128
  %138 = phi %struct.rtio_sqe* [ %136, %128 ], [ null, %111 ], !dbg !3815
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %138, metadata !3709, metadata !DIExpression()), !dbg !3821
  %139 = getelementptr inbounds [4 x i8*], [4 x i8*]* %1, i32 0, i32 %113, !dbg !3822
  %140 = load i8*, i8** %139, align 4, !dbg !3822
  tail call fastcc void @rtio_sqe_prep_read(%struct.rtio_sqe* noundef %138, %struct.rtio_iodev* noundef %2, i8* noundef %140, i8* noundef %140) #24, !dbg !3823
  %141 = load %struct.rtio_sq*, %struct.rtio_sq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 2), align 4, !dbg !3824
  %142 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %141, i32 0, i32 0, i32 0, !dbg !3824
  %143 = load i32, i32* %142, align 4, !dbg !3824
  %144 = icmp eq i32 %143, 0, !dbg !3824
  br i1 %144, label %150, label %145, !dbg !3827

145:                                              ; preds = %137
  %146 = add i32 %143, -1, !dbg !3828
  store i32 %146, i32* %142, align 4, !dbg !3828
  %147 = load %struct.rtio_sq*, %struct.rtio_sq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 2), align 4, !dbg !3828
  %148 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %147, i32 0, i32 0, i32 2, !dbg !3828
  tail call fastcc void @atomic_add(i32* noundef nonnull %148, i32 noundef 1) #24, !dbg !3828
  %149 = load %struct.rtio_sq*, %struct.rtio_sq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 2), align 4, !dbg !3815
  br label %150, !dbg !3828

150:                                              ; preds = %145, %137
  %151 = phi %struct.rtio_sq* [ %149, %145 ], [ %141, %137 ]
  %152 = add nuw nsw i32 %113, 1, !dbg !3830
  call void @llvm.dbg.value(metadata i32 %152, metadata !3692, metadata !DIExpression()), !dbg !3739
  %153 = icmp eq i32 %152, 4, !dbg !3831
  br i1 %153, label %154, label %111, !dbg !3816, !llvm.loop !3832

154:                                              ; preds = %150
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #23, !dbg !3834
  br label %50, !dbg !3721, !llvm.loop !3835
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef %0) unnamed_addr #4 !dbg !3836 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3841, metadata !DIExpression()), !dbg !3842
  %2 = add i32 %0, -1, !dbg !3843
  %3 = icmp ult i32 %2, 4, !dbg !3843
  %4 = shl i32 %2, 3, !dbg !3843
  %5 = lshr i32 1145657157, %4, !dbg !3843
  %6 = trunc i32 %5 to i8, !dbg !3843
  %7 = select i1 %3, i8 %6, i8 63, !dbg !3843
  ret i8 %7, !dbg !3844
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @atomic_get(i32* nocapture noundef readonly %0) unnamed_addr #5 !dbg !3845 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !3853, metadata !DIExpression()), !dbg !3854
  %2 = load atomic i32, i32* %0 seq_cst, align 4, !dbg !3855
  ret i32 %2, !dbg !3856
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @rtio_sqe_prep_read(%struct.rtio_sqe* nocapture noundef writeonly %0, %struct.rtio_iodev* noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #6 !dbg !3857 {
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %0, metadata !3861, metadata !DIExpression()), !dbg !3867
  call void @llvm.dbg.value(metadata %struct.rtio_iodev* %1, metadata !3862, metadata !DIExpression()), !dbg !3867
  call void @llvm.dbg.value(metadata i8 -1, metadata !3863, metadata !DIExpression()), !dbg !3867
  call void @llvm.dbg.value(metadata i8* %2, metadata !3864, metadata !DIExpression()), !dbg !3867
  call void @llvm.dbg.value(metadata i32 16, metadata !3865, metadata !DIExpression()), !dbg !3867
  call void @llvm.dbg.value(metadata i8* %3, metadata !3866, metadata !DIExpression()), !dbg !3867
  %5 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %0, i32 0, i32 0, !dbg !3868
  store i8 1, i8* %5, align 4, !dbg !3869
  %6 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %0, i32 0, i32 1, !dbg !3870
  store i8 -1, i8* %6, align 1, !dbg !3871
  %7 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %0, i32 0, i32 3, !dbg !3872
  store %struct.rtio_iodev* %1, %struct.rtio_iodev** %7, align 4, !dbg !3873
  %8 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %0, i32 0, i32 5, i32 0, i32 0, !dbg !3874
  store i32 16, i32* %8, align 4, !dbg !3875
  %9 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %0, i32 0, i32 5, i32 0, i32 1, !dbg !3876
  store i8* %2, i8** %9, align 4, !dbg !3877
  %10 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %0, i32 0, i32 4, !dbg !3878
  store i8* %3, i8** %10, align 4, !dbg !3879
  ret void, !dbg !3880
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc void @atomic_add(i32* nocapture noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3881 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !3886, metadata !DIExpression()), !dbg !3888
  call void @llvm.dbg.value(metadata i32 %1, metadata !3887, metadata !DIExpression()), !dbg !3888
  %3 = atomicrmw add i32* %0, i32 %1 seq_cst, align 4, !dbg !3889
  ret void, !dbg !3890
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #7

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #3

; Function Attrs: noinline nounwind optsize
define internal fastcc void @rtio_submit() unnamed_addr #1 !dbg !3891 {
  call void @llvm.dbg.value(metadata %struct.rtio* @ez_io, metadata !3896, metadata !DIExpression()), !dbg !3898
  call void @llvm.dbg.value(metadata i32 4, metadata !3897, metadata !DIExpression()), !dbg !3898
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3899, !srcloc !3901
  tail call fastcc void @z_impl_rtio_submit() #24, !dbg !3902
  ret void, !dbg !3903
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_msleep(i32 noundef %0) unnamed_addr #1 !dbg !3904 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3908, metadata !DIExpression()), !dbg !3909
  %2 = zext i32 %0 to i64
  %3 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %2) #24, !dbg !3910
  %4 = insertvalue [1 x i64] poison, i64 %3, 0, !dbg !3911
  tail call fastcc void @k_sleep([1 x i64] %4) #24, !dbg !3911
  ret void, !dbg !3912
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #7

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %0) unnamed_addr #4 !dbg !3913 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !3918, metadata !DIExpression()), !dbg !3919
  call void @llvm.dbg.value(metadata i64 %0, metadata !3920, metadata !DIExpression()), !dbg !3937
  call void @llvm.dbg.value(metadata i32 1000, metadata !3925, metadata !DIExpression()), !dbg !3937
  call void @llvm.dbg.value(metadata i32 10000, metadata !3926, metadata !DIExpression()), !dbg !3937
  call void @llvm.dbg.value(metadata i8 1, metadata !3927, metadata !DIExpression()), !dbg !3937
  call void @llvm.dbg.value(metadata i8 0, metadata !3928, metadata !DIExpression()), !dbg !3937
  call void @llvm.dbg.value(metadata i8 1, metadata !3929, metadata !DIExpression()), !dbg !3937
  call void @llvm.dbg.value(metadata i8 0, metadata !3930, metadata !DIExpression()), !dbg !3937
  call void @llvm.dbg.value(metadata i8 1, metadata !3931, metadata !DIExpression()), !dbg !3937
  call void @llvm.dbg.value(metadata i8 0, metadata !3932, metadata !DIExpression()), !dbg !3937
  call void @llvm.dbg.value(metadata i64 0, metadata !3933, metadata !DIExpression()), !dbg !3937
  call void @llvm.dbg.value(metadata i64 0, metadata !3933, metadata !DIExpression()), !dbg !3937
  %2 = mul i64 %0, 10, !dbg !3939
  ret i64 %2, !dbg !3945
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_sleep([1 x i64] %0) unnamed_addr #1 !dbg !3946 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3955, metadata !DIExpression()), !dbg !3956
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3957, !srcloc !3959
  %2 = tail call i32 @z_impl_k_sleep([1 x i64] %0) #25, !dbg !3960
  ret void, !dbg !3961
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_rtio_submit() unnamed_addr #1 !dbg !3962 {
  call void @llvm.dbg.value(metadata %struct.rtio* @ez_io, metadata !3964, metadata !DIExpression()), !dbg !3971
  call void @llvm.dbg.value(metadata i32 4, metadata !3965, metadata !DIExpression()), !dbg !3971
  %1 = load %struct.rtio_sq*, %struct.rtio_sq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 2), align 4, !dbg !3972
  %2 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %1, i32 0, i32 0, i32 0, !dbg !3972
  %3 = load i32, i32* %2, align 4, !dbg !3972
  %4 = icmp eq i32 %3, 0, !dbg !3972
  br i1 %4, label %8, label %5, !dbg !3973

5:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 %3, metadata !3967, metadata !DIExpression()), !dbg !3974
  store i32 0, i32* %2, align 4, !dbg !3975
  %6 = load %struct.rtio_sq*, %struct.rtio_sq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 2), align 4, !dbg !3975
  %7 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %6, i32 0, i32 0, i32 2, !dbg !3975
  tail call fastcc void @atomic_add(i32* noundef nonnull %7, i32 noundef %3) #24, !dbg !3975
  br label %8, !dbg !3975

8:                                                ; preds = %5, %0
  %9 = load %struct.rtio_executor*, %struct.rtio_executor** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 0), align 4, !dbg !3976
  %10 = getelementptr inbounds %struct.rtio_executor, %struct.rtio_executor* %9, i32 0, i32 0, !dbg !3977
  %11 = load %struct.rtio_executor_api*, %struct.rtio_executor_api** %10, align 4, !dbg !3977
  %12 = getelementptr inbounds %struct.rtio_executor_api, %struct.rtio_executor_api* %11, i32 0, i32 0, !dbg !3978
  %13 = load i32 (%struct.rtio*)*, i32 (%struct.rtio*)** %12, align 4, !dbg !3978
  %14 = tail call i32 %13(%struct.rtio* noundef nonnull @ez_io) #25, !dbg !3979
  call void @llvm.dbg.value(metadata i32 %14, metadata !3966, metadata !DIExpression()), !dbg !3971
  %15 = icmp eq i32 %14, 0, !dbg !3980
  br i1 %15, label %16, label %38, !dbg !3982

16:                                               ; preds = %8
  %17 = load %struct.rtio_cq*, %struct.rtio_cq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 3), align 4, !dbg !3983
  %18 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %17, i32 0, i32 0, i32 2, !dbg !3983
  %19 = load i32, i32* %18, align 4, !dbg !3983
  %20 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %17, i32 0, i32 0, i32 3, !dbg !3983
  %21 = load i32, i32* %20, align 4, !dbg !3983
  %22 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %17, i32 0, i32 0, i32 1, !dbg !3983
  %23 = load i32, i32* %22, align 4, !dbg !3983
  %24 = add i32 %21, %23, !dbg !3983
  %25 = sub i32 %19, %24, !dbg !3983
  %26 = icmp ult i32 %25, 4, !dbg !3985
  br i1 %26, label %27, label %38, !dbg !3986

27:                                               ; preds = %16, %27
  tail call fastcc void @k_yield() #24, !dbg !3987
  %28 = load %struct.rtio_cq*, %struct.rtio_cq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 3), align 4, !dbg !3983
  %29 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %28, i32 0, i32 0, i32 2, !dbg !3983
  %30 = load i32, i32* %29, align 4, !dbg !3983
  %31 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %28, i32 0, i32 0, i32 3, !dbg !3983
  %32 = load i32, i32* %31, align 4, !dbg !3983
  %33 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %28, i32 0, i32 0, i32 1, !dbg !3983
  %34 = load i32, i32* %33, align 4, !dbg !3983
  %35 = add i32 %32, %34, !dbg !3983
  %36 = sub i32 %30, %35, !dbg !3983
  %37 = icmp ult i32 %36, 4, !dbg !3985
  br i1 %37, label %27, label %38, !dbg !3986, !llvm.loop !3989

38:                                               ; preds = %27, %16, %8
  ret void, !dbg !3991
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !3992 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3993, !srcloc !3995
  tail call void @z_impl_k_yield() #25, !dbg !3996
  ret void, !dbg !3997
}

; Function Attrs: noinline nounwind optsize
define internal void @vnd_sensor_iodev_submit(%struct.rtio_sqe* noundef %0, %struct.rtio* noundef %1) #1 !dbg !3998 {
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %0, metadata !4000, metadata !DIExpression()), !dbg !4009
  call void @llvm.dbg.value(metadata %struct.rtio* %1, metadata !4001, metadata !DIExpression()), !dbg !4009
  %3 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %0, i32 0, i32 3, !dbg !4010
  %4 = bitcast %struct.rtio_iodev** %3 to %struct.vnd_sensor_data**, !dbg !4010
  %5 = load %struct.vnd_sensor_data*, %struct.vnd_sensor_data** %4, align 4, !dbg !4010
  call void @llvm.dbg.value(metadata %struct.vnd_sensor_data* %5, metadata !4002, metadata !DIExpression()), !dbg !4009
  %6 = getelementptr inbounds %struct.vnd_sensor_data, %struct.vnd_sensor_data* %5, i32 0, i32 2, !dbg !4011
  %7 = load %struct.device*, %struct.device** %6, align 8, !dbg !4011
  call void @llvm.dbg.value(metadata %struct.device* %7, metadata !4003, metadata !DIExpression()), !dbg !4009
  %8 = getelementptr inbounds %struct.vnd_sensor_data, %struct.vnd_sensor_data* %5, i32 0, i32 0, i32 1, !dbg !4012
  %9 = load %struct.rtio_iodev_sq*, %struct.rtio_iodev_sq** %8, align 4, !dbg !4012
  %10 = getelementptr inbounds %struct.rtio_iodev_sq, %struct.rtio_iodev_sq* %9, i32 0, i32 0, i32 2, !dbg !4012
  %11 = tail call fastcc i32 @atomic_get.13(i32* noundef nonnull %10) #24, !dbg !4012
  %12 = load %struct.rtio_iodev_sq*, %struct.rtio_iodev_sq** %8, align 4, !dbg !4012
  %13 = getelementptr inbounds %struct.rtio_iodev_sq, %struct.rtio_iodev_sq* %12, i32 0, i32 0, i32 0, !dbg !4012
  %14 = load i32, i32* %13, align 4, !dbg !4012
  %15 = add i32 %14, %11, !dbg !4012
  call void @llvm.dbg.value(metadata i32 %15, metadata !4006, metadata !DIExpression()), !dbg !4013
  %16 = getelementptr inbounds %struct.rtio_iodev_sq, %struct.rtio_iodev_sq* %12, i32 0, i32 0, i32 3, !dbg !4012
  %17 = tail call fastcc i32 @atomic_get.13(i32* noundef nonnull %16) #24, !dbg !4012
  %18 = sub i32 %15, %17, !dbg !4012
  %19 = load %struct.rtio_iodev_sq*, %struct.rtio_iodev_sq** %8, align 4, !dbg !4012
  %20 = getelementptr inbounds %struct.rtio_iodev_sq, %struct.rtio_iodev_sq* %19, i32 0, i32 0, i32 4, !dbg !4012
  %21 = load i32, i32* %20, align 4, !dbg !4012
  %22 = add i32 %21, 1, !dbg !4012
  %23 = icmp ult i32 %18, %22, !dbg !4012
  call void @llvm.dbg.value(metadata i1 %23, metadata !4008, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4013
  br i1 %23, label %24, label %42, !dbg !4012

24:                                               ; preds = %2
  %25 = getelementptr inbounds %struct.rtio_iodev_sq, %struct.rtio_iodev_sq* %19, i32 0, i32 0, i32 0, !dbg !4014
  %26 = load i32, i32* %25, align 4, !dbg !4014
  %27 = add i32 %26, 1, !dbg !4014
  store i32 %27, i32* %25, align 4, !dbg !4014
  %28 = load %struct.rtio_iodev_sq*, %struct.rtio_iodev_sq** %8, align 4, !dbg !4012
  %29 = getelementptr inbounds %struct.rtio_iodev_sq, %struct.rtio_iodev_sq* %28, i32 0, i32 0, i32 4, !dbg !4012
  %30 = load i32, i32* %29, align 4, !dbg !4012
  %31 = and i32 %30, %15, !dbg !4012
  call void @llvm.dbg.value(metadata !DIArgList(%struct.rtio_iodev_sq* %28, i32 %31), metadata !4004, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 20, DW_OP_stack_value)), !dbg !4009
  %32 = getelementptr inbounds %struct.rtio_iodev_sq, %struct.rtio_iodev_sq* %28, i32 0, i32 1, i32 %31, i32 0, !dbg !4017
  store %struct.rtio_sqe* %0, %struct.rtio_sqe** %32, align 4, !dbg !4020
  %33 = getelementptr inbounds %struct.rtio_iodev_sq, %struct.rtio_iodev_sq* %28, i32 0, i32 1, i32 %31, i32 1, !dbg !4021
  store %struct.rtio* %1, %struct.rtio** %33, align 4, !dbg !4022
  %34 = load %struct.rtio_iodev_sq*, %struct.rtio_iodev_sq** %8, align 4, !dbg !4023
  %35 = getelementptr inbounds %struct.rtio_iodev_sq, %struct.rtio_iodev_sq* %34, i32 0, i32 0, i32 0, !dbg !4023
  %36 = load i32, i32* %35, align 4, !dbg !4023
  %37 = icmp eq i32 %36, 0, !dbg !4023
  br i1 %37, label %47, label %38, !dbg !4026

38:                                               ; preds = %24
  %39 = add i32 %36, -1, !dbg !4027
  store i32 %39, i32* %35, align 4, !dbg !4027
  %40 = load %struct.rtio_iodev_sq*, %struct.rtio_iodev_sq** %8, align 4, !dbg !4027
  %41 = getelementptr inbounds %struct.rtio_iodev_sq, %struct.rtio_iodev_sq* %40, i32 0, i32 0, i32 2, !dbg !4027
  tail call fastcc void @atomic_add.14(i32* noundef nonnull %41) #24, !dbg !4027
  br label %47, !dbg !4027

42:                                               ; preds = %2
  call void @llvm.dbg.value(metadata !DIArgList(%struct.rtio_iodev_sq* %28, i32 %31), metadata !4004, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 20, DW_OP_stack_value)), !dbg !4009
  %43 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.15(i32 noundef 1) #24, !dbg !4029
  %44 = zext i8 %43 to i32, !dbg !4029
  %45 = getelementptr inbounds %struct.device, %struct.device* %7, i32 0, i32 0, !dbg !4029
  %46 = load i8*, i8** %45, align 4, !dbg !4029
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.16, i32 0, i32 0), i32 noundef %44, i8* noundef %46) #25, !dbg !4029
  tail call fastcc void @rtio_sqe_err(%struct.rtio* noundef %1, %struct.rtio_sqe* noundef nonnull %0, i32 noundef -11) #24, !dbg !4035
  br label %47

47:                                               ; preds = %24, %38, %42
  ret void, !dbg !4036
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @atomic_get.13(i32* nocapture noundef readonly %0) unnamed_addr #5 !dbg !4037 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !4039, metadata !DIExpression()), !dbg !4040
  %2 = load atomic i32, i32* %0 seq_cst, align 4, !dbg !4041
  ret i32 %2, !dbg !4042
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc void @atomic_add.14(i32* nocapture noundef %0) unnamed_addr #5 !dbg !4043 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !4045, metadata !DIExpression()), !dbg !4047
  call void @llvm.dbg.value(metadata i32 1, metadata !4046, metadata !DIExpression()), !dbg !4047
  %2 = atomicrmw add i32* %0, i32 1 seq_cst, align 4, !dbg !4048
  ret void, !dbg !4049
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char.15(i32 noundef %0) unnamed_addr #4 !dbg !4050 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4052, metadata !DIExpression()), !dbg !4053
  %2 = add i32 %0, -1, !dbg !4054
  %3 = icmp ult i32 %2, 4, !dbg !4054
  %4 = shl i32 %2, 3, !dbg !4054
  %5 = lshr i32 1145657157, %4, !dbg !4054
  %6 = trunc i32 %5 to i8, !dbg !4054
  %7 = select i1 %3, i8 %6, i8 63, !dbg !4054
  ret i8 %7, !dbg !4055
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @rtio_sqe_err(%struct.rtio* noundef %0, %struct.rtio_sqe* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !4056 {
  call void @llvm.dbg.value(metadata %struct.rtio* %0, metadata !4058, metadata !DIExpression()), !dbg !4061
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %1, metadata !4059, metadata !DIExpression()), !dbg !4061
  call void @llvm.dbg.value(metadata i32 %2, metadata !4060, metadata !DIExpression()), !dbg !4061
  %4 = getelementptr inbounds %struct.rtio, %struct.rtio* %0, i32 0, i32 0, !dbg !4062
  %5 = load %struct.rtio_executor*, %struct.rtio_executor** %4, align 4, !dbg !4062
  %6 = getelementptr inbounds %struct.rtio_executor, %struct.rtio_executor* %5, i32 0, i32 0, !dbg !4063
  %7 = load %struct.rtio_executor_api*, %struct.rtio_executor_api** %6, align 4, !dbg !4063
  %8 = getelementptr inbounds %struct.rtio_executor_api, %struct.rtio_executor_api* %7, i32 0, i32 2, !dbg !4064
  %9 = load void (%struct.rtio*, %struct.rtio_sqe*, i32)*, void (%struct.rtio*, %struct.rtio_sqe*, i32)** %8, align 4, !dbg !4064
  tail call void %9(%struct.rtio* noundef %0, %struct.rtio_sqe* noundef %1, i32 noundef %2) #25, !dbg !4065
  ret void, !dbg !4066
}

; Function Attrs: noinline nounwind optsize
define internal i32 @vnd_sensor_init(%struct.device* noundef %0) #1 !dbg !4067 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !4069, metadata !DIExpression()), !dbg !4074
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !4075
  %3 = bitcast i8** %2 to %struct.vnd_sensor_config**, !dbg !4075
  %4 = load %struct.vnd_sensor_config*, %struct.vnd_sensor_config** %3, align 4, !dbg !4075
  call void @llvm.dbg.value(metadata %struct.vnd_sensor_config* %4, metadata !4070, metadata !DIExpression()), !dbg !4074
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !4076
  %6 = bitcast i8** %5 to %struct.vnd_sensor_data**, !dbg !4076
  %7 = load %struct.vnd_sensor_data*, %struct.vnd_sensor_data** %6, align 4, !dbg !4076
  call void @llvm.dbg.value(metadata %struct.vnd_sensor_data* %7, metadata !4072, metadata !DIExpression()), !dbg !4074
  %8 = getelementptr inbounds %struct.vnd_sensor_config, %struct.vnd_sensor_config* %4, i32 0, i32 0, !dbg !4077
  %9 = load i32, i32* %8, align 4, !dbg !4077
  call void @llvm.dbg.value(metadata i32 %9, metadata !4073, metadata !DIExpression()), !dbg !4074
  %10 = getelementptr inbounds %struct.vnd_sensor_data, %struct.vnd_sensor_data* %7, i32 0, i32 2, !dbg !4078
  store %struct.device* %0, %struct.device** %10, align 8, !dbg !4079
  %11 = getelementptr inbounds %struct.vnd_sensor_data, %struct.vnd_sensor_data* %7, i32 0, i32 1, !dbg !4080
  tail call void @k_timer_init(%struct.k_timer* noundef nonnull %11, void (%struct.k_timer*)* noundef nonnull @vnd_sensor_timer_expiry, void (%struct.k_timer*)* noundef null) #25, !dbg !4081
  %12 = zext i32 %9 to i64, !dbg !4082
  %13 = tail call fastcc i64 @k_ms_to_ticks_ceil64.18(i64 noundef %12) #24, !dbg !4082
  %14 = insertvalue [1 x i64] poison, i64 %13, 0, !dbg !4083
  tail call fastcc void @k_timer_start(%struct.k_timer* noundef nonnull %11, [1 x i64] %14, [1 x i64] %14) #24, !dbg !4083
  ret i32 0, !dbg !4084
}

; Function Attrs: noinline nounwind optsize
define internal void @vnd_sensor_timer_expiry(%struct.k_timer* nocapture noundef readonly %0) #1 !dbg !4085 {
  call void @llvm.dbg.value(metadata %struct.k_timer* %0, metadata !4087, metadata !DIExpression()), !dbg !4089
  %2 = getelementptr inbounds %struct.k_timer, %struct.k_timer* %0, i32 -1, i32 4, !dbg !4090
  call void @llvm.dbg.value(metadata %struct.k_timeout_t* %2, metadata !4088, metadata !DIExpression()), !dbg !4089
  %3 = getelementptr inbounds %struct.k_timeout_t, %struct.k_timeout_t* %2, i32 9, !dbg !4091
  %4 = bitcast %struct.k_timeout_t* %3 to %struct.device**, !dbg !4091
  %5 = load %struct.device*, %struct.device** %4, align 8, !dbg !4091
  tail call fastcc void @vnd_sensor_handle_int(%struct.device* noundef %5) #24, !dbg !4092
  ret void, !dbg !4093
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64.18(i64 noundef %0) unnamed_addr #4 !dbg !4094 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !4096, metadata !DIExpression()), !dbg !4097
  call void @llvm.dbg.value(metadata i64 %0, metadata !4098, metadata !DIExpression()), !dbg !4113
  call void @llvm.dbg.value(metadata i32 1000, metadata !4101, metadata !DIExpression()), !dbg !4113
  call void @llvm.dbg.value(metadata i32 10000, metadata !4102, metadata !DIExpression()), !dbg !4113
  call void @llvm.dbg.value(metadata i8 1, metadata !4103, metadata !DIExpression()), !dbg !4113
  call void @llvm.dbg.value(metadata i8 0, metadata !4104, metadata !DIExpression()), !dbg !4113
  call void @llvm.dbg.value(metadata i8 1, metadata !4105, metadata !DIExpression()), !dbg !4113
  call void @llvm.dbg.value(metadata i8 0, metadata !4106, metadata !DIExpression()), !dbg !4113
  call void @llvm.dbg.value(metadata i8 1, metadata !4107, metadata !DIExpression()), !dbg !4113
  call void @llvm.dbg.value(metadata i8 0, metadata !4108, metadata !DIExpression()), !dbg !4113
  call void @llvm.dbg.value(metadata i64 0, metadata !4109, metadata !DIExpression()), !dbg !4113
  call void @llvm.dbg.value(metadata i64 0, metadata !4109, metadata !DIExpression()), !dbg !4113
  %2 = mul i64 %0, 10, !dbg !4115
  ret i64 %2, !dbg !4121
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_timer_start(%struct.k_timer* noundef %0, [1 x i64] %1, [1 x i64] %2) unnamed_addr #1 !dbg !4122 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !4127, metadata !DIExpression()), !dbg !4129
  call void @llvm.dbg.value(metadata i64 undef, metadata !4128, metadata !DIExpression()), !dbg !4129
  call void @llvm.dbg.value(metadata %struct.k_timer* %0, metadata !4126, metadata !DIExpression()), !dbg !4129
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !4130, !srcloc !4132
  tail call void @z_impl_k_timer_start(%struct.k_timer* noundef %0, [1 x i64] %1, [1 x i64] %2) #25, !dbg !4133
  ret void, !dbg !4134
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @vnd_sensor_handle_int(%struct.device* nocapture noundef readonly %0) unnamed_addr #1 !dbg !4135 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !4139, metadata !DIExpression()), !dbg !4145
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !4146
  %3 = bitcast i8** %2 to %struct.vnd_sensor_data**, !dbg !4146
  %4 = load %struct.vnd_sensor_data*, %struct.vnd_sensor_data** %3, align 4, !dbg !4146
  call void @llvm.dbg.value(metadata %struct.vnd_sensor_data* %4, metadata !4140, metadata !DIExpression()), !dbg !4145
  %5 = getelementptr inbounds %struct.vnd_sensor_data, %struct.vnd_sensor_data* %4, i32 0, i32 0, i32 1, !dbg !4147
  %6 = load %struct.rtio_iodev_sq*, %struct.rtio_iodev_sq** %5, align 4, !dbg !4147
  %7 = getelementptr inbounds %struct.rtio_iodev_sq, %struct.rtio_iodev_sq* %6, i32 0, i32 0, i32 3, !dbg !4147
  %8 = tail call fastcc i32 @atomic_get.13(i32* noundef nonnull %7) #24, !dbg !4147
  %9 = load %struct.rtio_iodev_sq*, %struct.rtio_iodev_sq** %5, align 4, !dbg !4147
  %10 = getelementptr inbounds %struct.rtio_iodev_sq, %struct.rtio_iodev_sq* %9, i32 0, i32 0, i32 1, !dbg !4147
  %11 = load i32, i32* %10, align 4, !dbg !4147
  %12 = add i32 %11, %8, !dbg !4147
  call void @llvm.dbg.value(metadata i32 %12, metadata !4142, metadata !DIExpression()), !dbg !4148
  %13 = getelementptr inbounds %struct.rtio_iodev_sq, %struct.rtio_iodev_sq* %9, i32 0, i32 0, i32 2, !dbg !4147
  %14 = tail call fastcc i32 @atomic_get.13(i32* noundef nonnull %13) #24, !dbg !4147
  %15 = icmp eq i32 %12, %14, !dbg !4147
  call void @llvm.dbg.value(metadata i1 %15, metadata !4144, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4148
  br i1 %15, label %37, label %16, !dbg !4147

16:                                               ; preds = %1
  %17 = load %struct.rtio_iodev_sq*, %struct.rtio_iodev_sq** %5, align 4, !dbg !4149
  %18 = getelementptr inbounds %struct.rtio_iodev_sq, %struct.rtio_iodev_sq* %17, i32 0, i32 0, i32 1, !dbg !4149
  %19 = load i32, i32* %18, align 4, !dbg !4149
  %20 = add i32 %19, 1, !dbg !4149
  store i32 %20, i32* %18, align 4, !dbg !4149
  %21 = load %struct.rtio_iodev_sq*, %struct.rtio_iodev_sq** %5, align 4, !dbg !4147
  %22 = getelementptr inbounds %struct.rtio_iodev_sq, %struct.rtio_iodev_sq* %21, i32 0, i32 0, i32 4, !dbg !4147
  %23 = load i32, i32* %22, align 4, !dbg !4147
  %24 = and i32 %23, %12, !dbg !4147
  call void @llvm.dbg.value(metadata !DIArgList(%struct.rtio_iodev_sq* %21, i32 %24), metadata !4141, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 20, DW_OP_stack_value)), !dbg !4145
  %25 = getelementptr inbounds %struct.rtio_iodev_sq, %struct.rtio_iodev_sq* %21, i32 0, i32 1, i32 %24, i32 0, !dbg !4152
  %26 = load %struct.rtio_sqe*, %struct.rtio_sqe** %25, align 4, !dbg !4152
  %27 = getelementptr inbounds %struct.rtio_iodev_sq, %struct.rtio_iodev_sq* %21, i32 0, i32 1, i32 %24, i32 1, !dbg !4155
  %28 = load %struct.rtio*, %struct.rtio** %27, align 4, !dbg !4155
  tail call fastcc void @vnd_sensor_iodev_execute(%struct.device* noundef nonnull %0, %struct.rtio_sqe* noundef %26, %struct.rtio* noundef %28) #24, !dbg !4156
  %29 = load %struct.rtio_iodev_sq*, %struct.rtio_iodev_sq** %5, align 4, !dbg !4157
  %30 = getelementptr inbounds %struct.rtio_iodev_sq, %struct.rtio_iodev_sq* %29, i32 0, i32 0, i32 1, !dbg !4157
  %31 = load i32, i32* %30, align 4, !dbg !4157
  %32 = icmp eq i32 %31, 0, !dbg !4157
  br i1 %32, label %42, label %33, !dbg !4160

33:                                               ; preds = %16
  %34 = add i32 %31, -1, !dbg !4161
  store i32 %34, i32* %30, align 4, !dbg !4161
  %35 = load %struct.rtio_iodev_sq*, %struct.rtio_iodev_sq** %5, align 4, !dbg !4161
  %36 = getelementptr inbounds %struct.rtio_iodev_sq, %struct.rtio_iodev_sq* %35, i32 0, i32 0, i32 3, !dbg !4161
  tail call fastcc void @atomic_add.14(i32* noundef nonnull %36) #24, !dbg !4161
  br label %42, !dbg !4161

37:                                               ; preds = %1
  call void @llvm.dbg.value(metadata !DIArgList(%struct.rtio_iodev_sq* %21, i32 %24), metadata !4141, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 20, DW_OP_stack_value)), !dbg !4145
  %38 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.15(i32 noundef 1) #24, !dbg !4163
  %39 = zext i8 %38 to i32, !dbg !4163
  %40 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 0, !dbg !4163
  %41 = load i8*, i8** %40, align 4, !dbg !4163
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.19, i32 0, i32 0), i32 noundef %39, i8* noundef %41) #25, !dbg !4163
  br label %42

42:                                               ; preds = %16, %33, %37
  ret void, !dbg !4169
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @vnd_sensor_iodev_execute(%struct.device* nocapture noundef readonly %0, %struct.rtio_sqe* noundef %1, %struct.rtio* noundef %2) unnamed_addr #1 !dbg !4170 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !4174, metadata !DIExpression()), !dbg !4178
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %1, metadata !4175, metadata !DIExpression()), !dbg !4178
  call void @llvm.dbg.value(metadata %struct.rtio* %2, metadata !4176, metadata !DIExpression()), !dbg !4178
  %4 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %1, i32 0, i32 0, !dbg !4179
  %5 = load i8, i8* %4, align 4, !dbg !4179
  %6 = icmp eq i8 %5, 1, !dbg !4181
  br i1 %6, label %12, label %7, !dbg !4182

7:                                                ; preds = %3
  %8 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.15(i32 noundef 1) #24, !dbg !4183
  %9 = zext i8 %8 to i32, !dbg !4183
  %10 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 0, !dbg !4183
  %11 = load i8*, i8** %10, align 4, !dbg !4183
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.4.20, i32 0, i32 0), i32 noundef %9, i8* noundef %11) #25, !dbg !4183
  call void @llvm.dbg.value(metadata i32 %17, metadata !4177, metadata !DIExpression()), !dbg !4178
  br label %19, !dbg !4189

12:                                               ; preds = %3
  %13 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %1, i32 0, i32 5, i32 0, i32 1, !dbg !4190
  %14 = load i8*, i8** %13, align 4, !dbg !4190
  %15 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %1, i32 0, i32 5, i32 0, i32 0, !dbg !4192
  %16 = load i32, i32* %15, align 4, !dbg !4192
  %17 = tail call fastcc i32 @vnd_sensor_iodev_read(%struct.device* noundef %0, i8* noundef %14, i32 noundef %16) #24, !dbg !4193
  call void @llvm.dbg.value(metadata i32 %17, metadata !4177, metadata !DIExpression()), !dbg !4178
  %18 = icmp slt i32 %17, 0, !dbg !4194
  br i1 %18, label %19, label %21, !dbg !4189

19:                                               ; preds = %7, %12
  %20 = phi i32 [ -22, %7 ], [ %17, %12 ]
  tail call fastcc void @rtio_sqe_err(%struct.rtio* noundef %2, %struct.rtio_sqe* noundef nonnull %1, i32 noundef %20) #24, !dbg !4196
  br label %22, !dbg !4198

21:                                               ; preds = %12
  tail call fastcc void @rtio_sqe_ok(%struct.rtio* noundef %2, %struct.rtio_sqe* noundef nonnull %1) #24, !dbg !4199
  br label %22

22:                                               ; preds = %21, %19
  ret void, !dbg !4201
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @vnd_sensor_iodev_read(%struct.device* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !4202 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !4206, metadata !DIExpression()), !dbg !4215
  call void @llvm.dbg.value(metadata i8* %1, metadata !4207, metadata !DIExpression()), !dbg !4215
  call void @llvm.dbg.value(metadata i32 %2, metadata !4208, metadata !DIExpression()), !dbg !4215
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !4216
  %5 = bitcast i8** %4 to %struct.vnd_sensor_config**, !dbg !4216
  %6 = load %struct.vnd_sensor_config*, %struct.vnd_sensor_config** %5, align 4, !dbg !4216
  call void @llvm.dbg.value(metadata %struct.vnd_sensor_config* %6, metadata !4209, metadata !DIExpression()), !dbg !4215
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !4217
  %8 = bitcast i8** %7 to %struct.vnd_sensor_data**, !dbg !4217
  %9 = load %struct.vnd_sensor_data*, %struct.vnd_sensor_data** %8, align 4, !dbg !4217
  call void @llvm.dbg.value(metadata %struct.vnd_sensor_data* %9, metadata !4210, metadata !DIExpression()), !dbg !4215
  %10 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.15(i32 noundef 4) #24, !dbg !4218
  %11 = zext i8 %10 to i32, !dbg !4218
  %12 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 0, !dbg !4218
  %13 = load i8*, i8** %12, align 4, !dbg !4218
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.5.21, i32 0, i32 0), i32 noundef %11, i8* noundef %13, i32 noundef %2, i8* noundef %1) #25, !dbg !4218
  %14 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !4223, !srcloc !4232
  %15 = extractvalue { i32, i32 } %14, 0, !dbg !4223
  call void @llvm.dbg.value(metadata i32 %15, metadata !4229, metadata !DIExpression()) #23, !dbg !4233
  call void @llvm.dbg.value(metadata i32 undef, metadata !4230, metadata !DIExpression()) #23, !dbg !4233
  call void @llvm.dbg.value(metadata i32 %15, metadata !4212, metadata !DIExpression()), !dbg !4215
  %16 = getelementptr inbounds %struct.vnd_sensor_data, %struct.vnd_sensor_data* %9, i32 0, i32 4, !dbg !4234
  %17 = load i32, i32* %16, align 4, !dbg !4235
  %18 = add i32 %17, 1, !dbg !4235
  store i32 %18, i32* %16, align 4, !dbg !4235
  call void @llvm.dbg.value(metadata i32 %17, metadata !4211, metadata !DIExpression()), !dbg !4215
  call void @llvm.dbg.value(metadata i32 %15, metadata !4236, metadata !DIExpression()) #23, !dbg !4241
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #23, !dbg !4243, !srcloc !4244
  %19 = getelementptr inbounds %struct.vnd_sensor_config, %struct.vnd_sensor_config* %6, i32 0, i32 1, !dbg !4245
  %20 = load i32, i32* %19, align 4, !dbg !4245
  %21 = icmp ugt i32 %20, %2, !dbg !4247
  br i1 %21, label %26, label %22, !dbg !4248

22:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !4213, metadata !DIExpression()), !dbg !4249
  %23 = icmp ult i32 %20, %2, !dbg !4250
  %24 = select i1 %23, i32 %20, i32 %2, !dbg !4250
  %25 = icmp eq i32 %24, 0, !dbg !4252
  br i1 %25, label %42, label %30, !dbg !4253

26:                                               ; preds = %3
  %27 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.15(i32 noundef 1) #24, !dbg !4254
  %28 = zext i8 %27 to i32, !dbg !4254
  %29 = load i8*, i8** %12, align 4, !dbg !4254
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.6.22, i32 0, i32 0), i32 noundef %28, i8* noundef %29) #25, !dbg !4254
  br label %42, !dbg !4260

30:                                               ; preds = %22, %30
  %31 = phi i32 [ %38, %30 ], [ %20, %22 ]
  %32 = phi i32 [ %37, %30 ], [ 0, %22 ]
  call void @llvm.dbg.value(metadata i32 %32, metadata !4213, metadata !DIExpression()), !dbg !4249
  %33 = mul i32 %31, %17, !dbg !4261
  %34 = add i32 %33, %32, !dbg !4263
  %35 = trunc i32 %34 to i8, !dbg !4264
  %36 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !4265
  store i8 %35, i8* %36, align 1, !dbg !4266
  %37 = add nuw nsw i32 %32, 1, !dbg !4267
  call void @llvm.dbg.value(metadata i32 %37, metadata !4213, metadata !DIExpression()), !dbg !4249
  %38 = load i32, i32* %19, align 4, !dbg !4250
  %39 = icmp ult i32 %38, %2, !dbg !4250
  %40 = select i1 %39, i32 %38, i32 %2, !dbg !4250
  %41 = icmp ult i32 %37, %40, !dbg !4252
  br i1 %41, label %30, label %42, !dbg !4253, !llvm.loop !4268

42:                                               ; preds = %30, %22, %26
  %43 = phi i32 [ -12, %26 ], [ 0, %22 ], [ 0, %30 ], !dbg !4215
  ret i32 %43, !dbg !4270
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @rtio_sqe_ok(%struct.rtio* noundef %0, %struct.rtio_sqe* noundef %1) unnamed_addr #1 !dbg !4271 {
  call void @llvm.dbg.value(metadata %struct.rtio* %0, metadata !4273, metadata !DIExpression()), !dbg !4276
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %1, metadata !4274, metadata !DIExpression()), !dbg !4276
  call void @llvm.dbg.value(metadata i32 0, metadata !4275, metadata !DIExpression()), !dbg !4276
  %3 = getelementptr inbounds %struct.rtio, %struct.rtio* %0, i32 0, i32 0, !dbg !4277
  %4 = load %struct.rtio_executor*, %struct.rtio_executor** %3, align 4, !dbg !4277
  %5 = getelementptr inbounds %struct.rtio_executor, %struct.rtio_executor* %4, i32 0, i32 0, !dbg !4278
  %6 = load %struct.rtio_executor_api*, %struct.rtio_executor_api** %5, align 4, !dbg !4278
  %7 = getelementptr inbounds %struct.rtio_executor_api, %struct.rtio_executor_api* %6, i32 0, i32 1, !dbg !4279
  %8 = load void (%struct.rtio*, %struct.rtio_sqe*, i32)*, void (%struct.rtio*, %struct.rtio_sqe*, i32)** %7, align 4, !dbg !4279
  tail call void %8(%struct.rtio* noundef %0, %struct.rtio_sqe* noundef %1, i32 noundef 0) #25, !dbg !4280
  ret void, !dbg !4281
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %4) local_unnamed_addr #1 !dbg !4282 {
  %6 = alloca [16 x i8], align 1
  %7 = alloca [16 x i8], align 1
  %8 = extractvalue [1 x i32] %4, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !4297, metadata !DIExpression()), !dbg !4360
  call void @llvm.dbg.value(metadata i8* %0, metadata !4293, metadata !DIExpression()), !dbg !4360
  call void @llvm.dbg.value(metadata i32 %1, metadata !4294, metadata !DIExpression()), !dbg !4360
  call void @llvm.dbg.value(metadata i32 %2, metadata !4295, metadata !DIExpression()), !dbg !4360
  call void @llvm.dbg.value(metadata i8* %3, metadata !4296, metadata !DIExpression()), !dbg !4360
  call void @llvm.dbg.value(metadata i8* %0, metadata !4298, metadata !DIExpression()), !dbg !4360
  call void @llvm.dbg.value(metadata i8* %0, metadata !4299, metadata !DIExpression()), !dbg !4360
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 0, !dbg !4361
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #23, !dbg !4361
  call void @llvm.dbg.declare(metadata [16 x i8]* %6, metadata !4302, metadata !DIExpression()), !dbg !4362
  %11 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 0, !dbg !4363
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #23, !dbg !4363
  call void @llvm.dbg.declare(metadata [16 x i8]* %7, metadata !4304, metadata !DIExpression()), !dbg !4364
  call void @llvm.dbg.value(metadata i32 0, metadata !4305, metadata !DIExpression()), !dbg !4360
  call void @llvm.dbg.value(metadata i32 0, metadata !4306, metadata !DIExpression()), !dbg !4360
  call void @llvm.dbg.value(metadata i32 0, metadata !4307, metadata !DIExpression()), !dbg !4360
  call void @llvm.dbg.value(metadata i32 -1, metadata !4308, metadata !DIExpression()), !dbg !4360
  call void @llvm.dbg.value(metadata i8 0, metadata !4311, metadata !DIExpression()), !dbg !4360
  %12 = and i32 %2, 4, !dbg !4365
  %13 = icmp eq i32 %12, 0, !dbg !4366
  call void @llvm.dbg.value(metadata i1 %13, metadata !4312, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4360
  %14 = lshr i32 %2, 3, !dbg !4367
  %15 = and i32 %14, 7, !dbg !4367
  %16 = add nuw nsw i32 %15, 1, !dbg !4368
  call void @llvm.dbg.value(metadata i32 %16, metadata !4313, metadata !DIExpression()), !dbg !4360
  call void @llvm.dbg.value(metadata i8 0, metadata !4314, metadata !DIExpression()), !dbg !4360
  call void @llvm.dbg.value(metadata i8* %0, metadata !4315, metadata !DIExpression()), !dbg !4360
  %17 = ptrtoint i8* %0 to i32, !dbg !4369
  %18 = and i32 %17, 3, !dbg !4371
  %19 = icmp eq i32 %18, 0, !dbg !4371
  br i1 %19, label %20, label %316, !dbg !4372

20:                                               ; preds = %5
  %21 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !4373
  call void @llvm.dbg.value(metadata i8* %21, metadata !4299, metadata !DIExpression()), !dbg !4360
  %22 = icmp eq i8* %0, null, !dbg !4374
  %23 = and i32 %1, 7, !dbg !4376
  %24 = sub nuw nsw i32 8, %23, !dbg !4376
  %25 = select i1 %22, i32 %23, i32 0, !dbg !4376
  %26 = getelementptr i8, i8* %21, i32 %25, !dbg !4376
  %27 = select i1 %22, i32 %24, i32 %1, !dbg !4376
  call void @llvm.dbg.value(metadata i32 %27, metadata !4294, metadata !DIExpression()), !dbg !4360
  call void @llvm.dbg.value(metadata i8* %26, metadata !4299, metadata !DIExpression()), !dbg !4360
  br i1 %22, label %33, label %28, !dbg !4377

28:                                               ; preds = %20
  %29 = ptrtoint i8* %26 to i32, !dbg !4379
  %30 = sub i32 4, %17, !dbg !4379
  %31 = add i32 %30, %29, !dbg !4380
  %32 = icmp ugt i32 %31, %27, !dbg !4381
  br i1 %32, label %316, label %33, !dbg !4382

33:                                               ; preds = %28, %20
  %34 = getelementptr inbounds i8, i8* %3, i32 -1, !dbg !4383
  call void @llvm.dbg.value(metadata i8* %34, metadata !4296, metadata !DIExpression()), !dbg !4360
  call void @llvm.dbg.value(metadata i8* %3, metadata !4310, metadata !DIExpression()), !dbg !4360
  call void @llvm.dbg.value(metadata i32 4, metadata !4301, metadata !DIExpression()), !dbg !4360
  call void @llvm.dbg.value(metadata i32 4, metadata !4300, metadata !DIExpression()), !dbg !4360
  %35 = and i32 %2, 2
  %36 = icmp ne i32 %35, 0
  %37 = sub i32 8, %17
  br label %130, !dbg !4384

38:                                               ; preds = %63, %216
  %39 = phi i8 [ %221, %216 ], [ %64, %63 ]
  %40 = phi i8* [ %220, %216 ], [ %65, %63 ]
  %41 = phi i8* [ %218, %216 ], [ %66, %63 ]
  %42 = phi i8* [ %40, %216 ], [ %67, %63 ]
  %43 = phi i8* [ %219, %216 ], [ %68, %63 ]
  %44 = phi i32 [ %113, %216 ], [ %69, %63 ]
  %45 = phi i32 [ %112, %216 ], [ %70, %63 ]
  %46 = phi i1 [ %110, %216 ], [ %71, %63 ]
  call void @llvm.dbg.value(metadata i8* %41, metadata !4297, metadata !DIExpression()), !dbg !4360
  call void @llvm.dbg.value(metadata i8* %42, metadata !4296, metadata !DIExpression()), !dbg !4360
  call void @llvm.dbg.value(metadata i8* %43, metadata !4299, metadata !DIExpression()), !dbg !4360
  call void @llvm.dbg.value(metadata i32 %44, metadata !4300, metadata !DIExpression()), !dbg !4360
  call void @llvm.dbg.value(metadata i32 %45, metadata !4301, metadata !DIExpression()), !dbg !4360
  call void @llvm.dbg.value(metadata i32 %72, metadata !4308, metadata !DIExpression()), !dbg !4360
  br i1 %46, label %73, label %47, !dbg !4385

47:                                               ; preds = %38
  %48 = icmp eq i8 %39, 37, !dbg !4386
  %49 = zext i1 %48 to i32, !dbg !4390
  %50 = add nsw i32 %72, %49, !dbg !4390
  %51 = select i1 %48, i32 4, i32 %45, !dbg !4390
  %52 = select i1 %48, i32 4, i32 %44, !dbg !4390
  call void @llvm.dbg.value(metadata i32 %52, metadata !4300, metadata !DIExpression()), !dbg !4360
  call void @llvm.dbg.value(metadata i32 %51, metadata !4301, metadata !DIExpression()), !dbg !4360
  call void @llvm.dbg.value(metadata i8 poison, metadata !4311, metadata !DIExpression()), !dbg !4360
  call void @llvm.dbg.value(metadata i32 %50, metadata !4308, metadata !DIExpression()), !dbg !4360
  br label %53, !dbg !4391

53:                                               ; preds = %73, %47, %74, %76, %77, %78, %106, %104
  %54 = phi i32 [ %72, %106 ], [ %72, %104 ], [ %72, %78 ], [ %72, %77 ], [ %72, %76 ], [ %75, %74 ], [ %50, %47 ], [ %72, %73 ]
  %55 = phi i1 [ false, %106 ], [ false, %104 ], [ true, %78 ], [ true, %77 ], [ true, %76 ], [ false, %74 ], [ %48, %47 ], [ true, %73 ]
  %56 = phi i32 [ %45, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %45, %76 ], [ %45, %74 ], [ %51, %47 ], [ 8, %73 ]
  %57 = phi i32 [ %44, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %44, %76 ], [ %44, %74 ], [ %52, %47 ], [ 8, %73 ]
  %58 = phi i8* [ %43, %106 ], [ %105, %104 ], [ %43, %78 ], [ %43, %77 ], [ %43, %76 ], [ %43, %74 ], [ %43, %47 ], [ %43, %73 ]
  %59 = phi i8* [ %41, %106 ], [ %93, %104 ], [ %41, %78 ], [ %41, %77 ], [ %41, %76 ], [ %41, %74 ], [ %41, %47 ], [ %41, %73 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !4297, metadata !DIExpression()), !dbg !4360
  call void @llvm.dbg.value(metadata i8* %40, metadata !4296, metadata !DIExpression()), !dbg !4360
  call void @llvm.dbg.value(metadata i8* %58, metadata !4299, metadata !DIExpression()), !dbg !4360
  call void @llvm.dbg.value(metadata i32 %57, metadata !4300, metadata !DIExpression()), !dbg !4360
  call void @llvm.dbg.value(metadata i32 %56, metadata !4301, metadata !DIExpression()), !dbg !4360
  call void @llvm.dbg.value(metadata i8 poison, metadata !4311, metadata !DIExpression()), !dbg !4360
  call void @llvm.dbg.value(metadata i32 %54, metadata !4308, metadata !DIExpression()), !dbg !4360
  %60 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !4392
  call void @llvm.dbg.value(metadata i8* %60, metadata !4296, metadata !DIExpression()), !dbg !4360
  %61 = load i8, i8* %60, align 1, !dbg !4394
  %62 = icmp eq i8 %61, 0, !dbg !4395
  br i1 %62, label %223, label %63, !dbg !4396, !llvm.loop !4397

63:                                               ; preds = %190, %53
  %64 = phi i8 [ %61, %53 ], [ %197, %190 ]
  %65 = phi i8* [ %60, %53 ], [ %196, %190 ]
  %66 = phi i8* [ %59, %53 ], [ %143, %190 ]
  %67 = phi i8* [ %40, %53 ], [ %141, %190 ]
  %68 = phi i8* [ %58, %53 ], [ %195, %190 ]
  %69 = phi i32 [ %57, %53 ], [ %139, %190 ]
  %70 = phi i32 [ %56, %53 ], [ %138, %190 ]
  %71 = phi i1 [ %55, %53 ], [ %134, %190 ]
  %72 = phi i32 [ %54, %53 ], [ %132, %190 ]
  br label %38, !dbg !4385

73:                                               ; preds = %38
  switch i8 %39, label %106 [
    i8 37, label %74
    i8 35, label %76
    i8 45, label %76
    i8 43, label %76
    i8 32, label %76
    i8 48, label %76
    i8 49, label %76
    i8 50, label %76
    i8 51, label %76
    i8 52, label %76
    i8 53, label %76
    i8 54, label %76
    i8 55, label %76
    i8 56, label %76
    i8 57, label %76
    i8 46, label %76
    i8 104, label %76
    i8 108, label %76
    i8 76, label %76
    i8 42, label %108
    i8 106, label %53
    i8 122, label %77
    i8 116, label %78
    i8 99, label %79
    i8 100, label %79
    i8 105, label %79
    i8 111, label %79
    i8 117, label %79
    i8 120, label %79
    i8 88, label %79
    i8 115, label %109
    i8 112, label %107
    i8 110, label %107
    i8 97, label %87
    i8 65, label %87
    i8 101, label %87
    i8 69, label %87
    i8 102, label %87
    i8 70, label %87
    i8 103, label %87
    i8 71, label %87
  ], !dbg !4400

74:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !4311, metadata !DIExpression()), !dbg !4360
  %75 = add nsw i32 %72, -1, !dbg !4401
  call void @llvm.dbg.value(metadata i32 %75, metadata !4308, metadata !DIExpression()), !dbg !4360
  br label %53, !dbg !4402

76:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73
  br label %53, !dbg !4403

77:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !4301, metadata !DIExpression()), !dbg !4360
  call void @llvm.dbg.value(metadata i32 4, metadata !4300, metadata !DIExpression()), !dbg !4360
  br label %53, !dbg !4404

78:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !4301, metadata !DIExpression()), !dbg !4360
  call void @llvm.dbg.value(metadata i32 4, metadata !4300, metadata !DIExpression()), !dbg !4360
  br label %53, !dbg !4405

79:                                               ; preds = %73, %73, %73, %73, %73, %73, %73
  %80 = load i8, i8* %42, align 1, !dbg !4406
  %81 = icmp eq i8 %80, 108, !dbg !4408
  br i1 %81, label %82, label %109, !dbg !4409

82:                                               ; preds = %79
  %83 = getelementptr inbounds i8, i8* %42, i32 -1, !dbg !4410
  %84 = load i8, i8* %83, align 1, !dbg !4410
  %85 = icmp eq i8 %84, 108, !dbg !4413
  %86 = select i1 %85, i32 8, i32 4
  br label %109

87:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73
  %88 = ptrtoint i8* %41 to i32, !dbg !4414
  %89 = add i32 %88, 7, !dbg !4414
  %90 = and i32 %89, -8, !dbg !4414
  %91 = inttoptr i32 %90 to i8*, !dbg !4414
  %92 = inttoptr i32 %90 to double*, !dbg !4414
  %93 = getelementptr inbounds i8, i8* %91, i32 8, !dbg !4414
  %94 = load double, double* %92, align 8, !dbg !4414
  call void @llvm.dbg.value(metadata i8* %93, metadata !4297, metadata !DIExpression()), !dbg !4360
  call void @llvm.dbg.value(metadata i32 8, metadata !4300, metadata !DIExpression()), !dbg !4360
  call void @llvm.dbg.value(metadata i32 8, metadata !4301, metadata !DIExpression()), !dbg !4360
  call void @llvm.dbg.value(metadata double %94, metadata !4328, metadata !DIExpression()), !dbg !4416
  %95 = ptrtoint i8* %43 to i32, !dbg !4417
  %96 = add i32 %95, 7, !dbg !4417
  %97 = and i32 %96, -8, !dbg !4417
  %98 = inttoptr i32 %97 to i8*, !dbg !4418
  call void @llvm.dbg.value(metadata i8* %98, metadata !4299, metadata !DIExpression()), !dbg !4360
  br i1 %22, label %104, label %99, !dbg !4419

99:                                               ; preds = %87
  %100 = add i32 %37, %97, !dbg !4420
  %101 = icmp ugt i32 %100, %194, !dbg !4424
  br i1 %101, label %316, label %102, !dbg !4425

102:                                              ; preds = %99
  %103 = inttoptr i32 %97 to double*, !dbg !4426
  store double %94, double* %103, align 8, !dbg !4426
  br label %104

104:                                              ; preds = %102, %87
  %105 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !4429
  call void @llvm.dbg.value(metadata i8* %105, metadata !4299, metadata !DIExpression()), !dbg !4360
  call void @llvm.dbg.value(metadata i8 poison, metadata !4311, metadata !DIExpression()), !dbg !4360
  br label %53

106:                                              ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !4311, metadata !DIExpression()), !dbg !4360
  br label %53, !dbg !4430

107:                                              ; preds = %73, %73
  br label %109, !dbg !4431

108:                                              ; preds = %73
  br label %109, !dbg !4431

109:                                              ; preds = %73, %108, %107, %79, %82
  %110 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ true, %108 ], [ false, %73 ]
  %111 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ false, %108 ], [ true, %73 ]
  %112 = phi i32 [ %86, %82 ], [ %45, %79 ], [ 4, %107 ], [ %45, %108 ], [ 4, %73 ], !dbg !4360
  %113 = phi i32 [ %86, %82 ], [ %44, %79 ], [ 4, %107 ], [ %44, %108 ], [ 4, %73 ], !dbg !4360
  call void @llvm.dbg.value(metadata i32 %113, metadata !4300, metadata !DIExpression()), !dbg !4360
  call void @llvm.dbg.value(metadata i32 %112, metadata !4301, metadata !DIExpression()), !dbg !4360
  call void @llvm.dbg.value(metadata i8 poison, metadata !4314, metadata !DIExpression()), !dbg !4360
  call void @llvm.dbg.value(metadata i8 poison, metadata !4311, metadata !DIExpression()), !dbg !4360
  %114 = ptrtoint i8* %43 to i32, !dbg !4431
  %115 = add i32 %114, -1, !dbg !4431
  %116 = add i32 %115, %112, !dbg !4431
  %117 = sub i32 0, %112, !dbg !4431
  %118 = and i32 %116, %117, !dbg !4431
  %119 = inttoptr i32 %118 to i8*, !dbg !4432
  call void @llvm.dbg.value(metadata i8* %119, metadata !4299, metadata !DIExpression()), !dbg !4360
  br i1 %22, label %124, label %120, !dbg !4433

120:                                              ; preds = %109
  %121 = sub i32 %113, %17, !dbg !4435
  %122 = add i32 %121, %118, !dbg !4436
  %123 = icmp ugt i32 %122, %194, !dbg !4437
  br i1 %123, label %316, label %124, !dbg !4438

124:                                              ; preds = %120, %109
  br i1 %111, label %125, label %199, !dbg !4439

125:                                              ; preds = %124
  %126 = inttoptr i32 %118 to i8*, !dbg !4432
  %127 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !4440
  call void @llvm.dbg.value(metadata i8* %127, metadata !4297, metadata !DIExpression()), !dbg !4360
  %128 = bitcast i8* %41 to i8**, !dbg !4440
  %129 = load i8*, i8** %128, align 4, !dbg !4440
  call void @llvm.dbg.value(metadata i8* %129, metadata !4310, metadata !DIExpression()), !dbg !4360
  br label %130, !dbg !4441

130:                                              ; preds = %125, %33
  %131 = phi i32 [ 0, %33 ], [ %191, %125 ], !dbg !4442
  %132 = phi i32 [ -1, %33 ], [ %72, %125 ], !dbg !4443
  %133 = phi i8* [ %3, %33 ], [ %129, %125 ], !dbg !4360
  %134 = phi i1 [ false, %33 ], [ %110, %125 ]
  %135 = phi i32 [ 0, %33 ], [ %192, %125 ], !dbg !4444
  %136 = phi i32 [ %16, %33 ], [ %147, %125 ], !dbg !4360
  %137 = phi i32 [ 0, %33 ], [ %193, %125 ], !dbg !4445
  %138 = phi i32 [ 4, %33 ], [ %112, %125 ], !dbg !4360
  %139 = phi i32 [ 4, %33 ], [ %113, %125 ], !dbg !4360
  %140 = phi i8* [ %26, %33 ], [ %126, %125 ], !dbg !4360
  %141 = phi i8* [ %34, %33 ], [ %40, %125 ], !dbg !4360
  %142 = phi i32 [ %27, %33 ], [ %194, %125 ], !dbg !4446
  %143 = phi i8* [ %9, %33 ], [ %127, %125 ]
  call void @llvm.dbg.value(metadata i8* %143, metadata !4297, metadata !DIExpression()), !dbg !4360
  call void @llvm.dbg.value(metadata i32 %142, metadata !4294, metadata !DIExpression()), !dbg !4360
  call void @llvm.dbg.value(metadata i8* %141, metadata !4296, metadata !DIExpression()), !dbg !4360
  call void @llvm.dbg.value(metadata i8* %140, metadata !4299, metadata !DIExpression()), !dbg !4360
  call void @llvm.dbg.value(metadata i32 %139, metadata !4300, metadata !DIExpression()), !dbg !4360
  call void @llvm.dbg.value(metadata i32 %138, metadata !4301, metadata !DIExpression()), !dbg !4360
  call void @llvm.dbg.value(metadata i32 %137, metadata !4305, metadata !DIExpression()), !dbg !4360
  call void @llvm.dbg.value(metadata i32 %136, metadata !4313, metadata !DIExpression()), !dbg !4360
  call void @llvm.dbg.value(metadata i32 %135, metadata !4306, metadata !DIExpression()), !dbg !4360
  call void @llvm.dbg.value(metadata i8 poison, metadata !4311, metadata !DIExpression()), !dbg !4360
  call void @llvm.dbg.value(metadata i8* %133, metadata !4310, metadata !DIExpression()), !dbg !4360
  call void @llvm.dbg.value(metadata i32 %132, metadata !4308, metadata !DIExpression()), !dbg !4360
  call void @llvm.dbg.value(metadata i32 %131, metadata !4307, metadata !DIExpression()), !dbg !4360
  call void @llvm.dbg.label(metadata !4359), !dbg !4448
  br i1 %22, label %146, label %144, !dbg !4449

144:                                              ; preds = %130
  %145 = bitcast i8* %140 to i8**, !dbg !4450
  store i8* %133, i8** %145, align 4, !dbg !4453
  br label %146, !dbg !4454

146:                                              ; preds = %144, %130
  %147 = add nsw i32 %136, -1, !dbg !4455
  call void @llvm.dbg.value(metadata i32 %147, metadata !4313, metadata !DIExpression()), !dbg !4360
  %148 = icmp sgt i32 %136, 0, !dbg !4456
  br i1 %148, label %152, label %149, !dbg !4457

149:                                              ; preds = %146
  %150 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %133) #24, !dbg !4458
  %151 = zext i1 %150 to i32, !dbg !4458
  br label %152, !dbg !4457

152:                                              ; preds = %146, %149
  %153 = phi i32 [ %151, %149 ], [ 1, %146 ], !dbg !4457
  %154 = icmp eq i32 %153, 0, !dbg !4457
  call void @llvm.dbg.value(metadata i1 %154, metadata !4337, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4459
  call void @llvm.dbg.value(metadata i1 %36, metadata !4340, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4459
  %155 = or i1 %36, %154, !dbg !4460
  br i1 %155, label %156, label %190, !dbg !4460

156:                                              ; preds = %152
  %157 = ptrtoint i8* %140 to i32, !dbg !4461
  %158 = sub i32 %157, %17, !dbg !4461
  %159 = lshr i32 %158, 2, !dbg !4462
  call void @llvm.dbg.value(metadata i32 %159, metadata !4341, metadata !DIExpression()), !dbg !4463
  %160 = icmp ugt i32 %158, 511
  %161 = select i1 %36, i1 %160, i1 false, !dbg !4464
  %162 = icmp ugt i32 %137, 15
  %163 = select i1 %161, i1 true, i1 %162, !dbg !4464
  br i1 %163, label %316, label %164, !dbg !4464

164:                                              ; preds = %156
  br i1 %22, label %175, label %165, !dbg !4466

165:                                              ; preds = %164
  %166 = trunc i32 %159 to i8, !dbg !4467
  %167 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %137, !dbg !4470
  store i8 %166, i8* %167, align 1, !dbg !4471
  %168 = trunc i32 %132 to i8, !dbg !4472
  %169 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %137, !dbg !4473
  store i8 %168, i8* %169, align 1, !dbg !4474
  br i1 %154, label %173, label %170, !dbg !4475

170:                                              ; preds = %165
  %171 = or i8 %166, -128, !dbg !4476
  store i8 %171, i8* %167, align 1, !dbg !4476
  %172 = add i32 %131, 1, !dbg !4479
  call void @llvm.dbg.value(metadata i32 %172, metadata !4307, metadata !DIExpression()), !dbg !4360
  br label %185, !dbg !4480

173:                                              ; preds = %165
  %174 = add i32 %135, 1, !dbg !4481
  call void @llvm.dbg.value(metadata i32 %174, metadata !4306, metadata !DIExpression()), !dbg !4360
  br label %185

175:                                              ; preds = %164
  br i1 %154, label %178, label %176, !dbg !4483

176:                                              ; preds = %175
  %177 = add i32 %142, 1, !dbg !4484
  call void @llvm.dbg.value(metadata i32 %177, metadata !4294, metadata !DIExpression()), !dbg !4360
  br label %185, !dbg !4487

178:                                              ; preds = %175
  br i1 %13, label %181, label %179, !dbg !4488

179:                                              ; preds = %178
  %180 = add i32 %142, 2, !dbg !4489
  call void @llvm.dbg.value(metadata i32 %180, metadata !4294, metadata !DIExpression()), !dbg !4360
  br label %185, !dbg !4492

181:                                              ; preds = %178
  %182 = tail call i32 @strlen(i8* noundef %133) #25, !dbg !4493
  %183 = add i32 %142, 2, !dbg !4495
  %184 = add i32 %183, %182, !dbg !4496
  call void @llvm.dbg.value(metadata i32 %184, metadata !4294, metadata !DIExpression()), !dbg !4360
  br label %185

185:                                              ; preds = %173, %170, %179, %181, %176
  %186 = phi i32 [ %172, %170 ], [ %131, %173 ], [ %131, %176 ], [ %131, %179 ], [ %131, %181 ], !dbg !4360
  %187 = phi i32 [ %135, %170 ], [ %174, %173 ], [ %135, %176 ], [ %135, %179 ], [ %135, %181 ], !dbg !4360
  %188 = phi i32 [ %142, %170 ], [ %142, %173 ], [ %177, %176 ], [ %180, %179 ], [ %184, %181 ], !dbg !4360
  call void @llvm.dbg.value(metadata i32 %188, metadata !4294, metadata !DIExpression()), !dbg !4360
  call void @llvm.dbg.value(metadata i32 %187, metadata !4306, metadata !DIExpression()), !dbg !4360
  call void @llvm.dbg.value(metadata i32 %186, metadata !4307, metadata !DIExpression()), !dbg !4360
  %189 = add nuw nsw i32 %137, 1, !dbg !4497
  call void @llvm.dbg.value(metadata i32 undef, metadata !4294, metadata !DIExpression()), !dbg !4360
  call void @llvm.dbg.value(metadata i32 undef, metadata !4305, metadata !DIExpression()), !dbg !4360
  call void @llvm.dbg.value(metadata i32 undef, metadata !4306, metadata !DIExpression()), !dbg !4360
  call void @llvm.dbg.value(metadata i32 undef, metadata !4307, metadata !DIExpression()), !dbg !4360
  br label %190

190:                                              ; preds = %185, %152
  %191 = phi i32 [ %131, %152 ], [ %186, %185 ], !dbg !4442
  %192 = phi i32 [ %135, %152 ], [ %187, %185 ], !dbg !4444
  %193 = phi i32 [ %137, %152 ], [ %189, %185 ], !dbg !4445
  %194 = phi i32 [ %142, %152 ], [ %188, %185 ], !dbg !4446
  call void @llvm.dbg.value(metadata i32 %194, metadata !4294, metadata !DIExpression()), !dbg !4360
  call void @llvm.dbg.value(metadata i32 %193, metadata !4305, metadata !DIExpression()), !dbg !4360
  call void @llvm.dbg.value(metadata i32 %192, metadata !4306, metadata !DIExpression()), !dbg !4360
  call void @llvm.dbg.value(metadata i32 %191, metadata !4307, metadata !DIExpression()), !dbg !4360
  %195 = getelementptr inbounds i8, i8* %140, i32 4, !dbg !4498
  call void @llvm.dbg.value(metadata i8* %195, metadata !4299, metadata !DIExpression()), !dbg !4360
  call void @llvm.dbg.value(metadata i8* %143, metadata !4297, metadata !DIExpression()), !dbg !4360
  call void @llvm.dbg.value(metadata i8* %141, metadata !4296, metadata !DIExpression()), !dbg !4360
  call void @llvm.dbg.value(metadata i32 %139, metadata !4300, metadata !DIExpression()), !dbg !4360
  call void @llvm.dbg.value(metadata i32 %138, metadata !4301, metadata !DIExpression()), !dbg !4360
  call void @llvm.dbg.value(metadata i8 poison, metadata !4314, metadata !DIExpression()), !dbg !4360
  call void @llvm.dbg.value(metadata i8 poison, metadata !4311, metadata !DIExpression()), !dbg !4360
  call void @llvm.dbg.value(metadata i32 %132, metadata !4308, metadata !DIExpression()), !dbg !4360
  %196 = getelementptr inbounds i8, i8* %141, i32 1, !dbg !4392
  call void @llvm.dbg.value(metadata i8* %196, metadata !4296, metadata !DIExpression()), !dbg !4360
  %197 = load i8, i8* %196, align 1, !dbg !4394
  %198 = icmp eq i8 %197, 0, !dbg !4395
  br i1 %198, label %223, label %63, !dbg !4396

199:                                              ; preds = %124
  switch i32 %113, label %316 [
    i32 4, label %200
    i32 8, label %206
  ], !dbg !4499

200:                                              ; preds = %199
  %201 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !4500
  call void @llvm.dbg.value(metadata i8* %201, metadata !4297, metadata !DIExpression()), !dbg !4360
  call void @llvm.dbg.value(metadata i32 undef, metadata !4344, metadata !DIExpression()), !dbg !4501
  br i1 %22, label %216, label %202, !dbg !4502

202:                                              ; preds = %200
  %203 = bitcast i8* %41 to i32*, !dbg !4500
  %204 = load i32, i32* %203, align 4, !dbg !4500
  call void @llvm.dbg.value(metadata i32 %204, metadata !4344, metadata !DIExpression()), !dbg !4501
  %205 = inttoptr i32 %118 to i32*, !dbg !4503
  store i32 %204, i32* %205, align 4, !dbg !4506
  br label %216, !dbg !4507

206:                                              ; preds = %199
  %207 = ptrtoint i8* %41 to i32, !dbg !4508
  %208 = add i32 %207, 7, !dbg !4508
  %209 = and i32 %208, -8, !dbg !4508
  %210 = inttoptr i32 %209 to i8*, !dbg !4508
  %211 = getelementptr inbounds i8, i8* %210, i32 8, !dbg !4508
  call void @llvm.dbg.value(metadata i8* %211, metadata !4297, metadata !DIExpression()), !dbg !4360
  call void @llvm.dbg.value(metadata i64 undef, metadata !4350, metadata !DIExpression()), !dbg !4509
  br i1 %22, label %216, label %212, !dbg !4510

212:                                              ; preds = %206
  %213 = inttoptr i32 %209 to i64*, !dbg !4508
  %214 = load i64, i64* %213, align 8, !dbg !4508
  call void @llvm.dbg.value(metadata i64 %214, metadata !4350, metadata !DIExpression()), !dbg !4509
  %215 = inttoptr i32 %118 to i64*, !dbg !4511
  store i64 %214, i64* %215, align 8, !dbg !4516
  br label %216, !dbg !4517

216:                                              ; preds = %206, %212, %200, %202
  %217 = phi i32 [ 4, %202 ], [ 4, %200 ], [ 8, %212 ], [ 8, %206 ]
  %218 = phi i8* [ %201, %202 ], [ %201, %200 ], [ %211, %212 ], [ %211, %206 ], !dbg !4518
  %219 = getelementptr inbounds i8, i8* %119, i32 %217, !dbg !4518
  call void @llvm.dbg.value(metadata i8* %218, metadata !4297, metadata !DIExpression()), !dbg !4360
  call void @llvm.dbg.value(metadata i8* %40, metadata !4296, metadata !DIExpression()), !dbg !4360
  call void @llvm.dbg.value(metadata i8* %219, metadata !4299, metadata !DIExpression()), !dbg !4360
  call void @llvm.dbg.value(metadata i32 %113, metadata !4300, metadata !DIExpression()), !dbg !4360
  call void @llvm.dbg.value(metadata i32 %112, metadata !4301, metadata !DIExpression()), !dbg !4360
  call void @llvm.dbg.value(metadata i8 poison, metadata !4314, metadata !DIExpression()), !dbg !4360
  call void @llvm.dbg.value(metadata i8 poison, metadata !4311, metadata !DIExpression()), !dbg !4360
  call void @llvm.dbg.value(metadata i32 %72, metadata !4308, metadata !DIExpression()), !dbg !4360
  %220 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !4392
  call void @llvm.dbg.value(metadata i8* %220, metadata !4296, metadata !DIExpression()), !dbg !4360
  %221 = load i8, i8* %220, align 1, !dbg !4394
  %222 = icmp eq i8 %221, 0, !dbg !4395
  br i1 %222, label %223, label %38, !dbg !4396

223:                                              ; preds = %190, %216, %53
  %224 = phi i8* [ %219, %216 ], [ %58, %53 ], [ %195, %190 ], !dbg !4519
  %225 = ptrtoint i8* %224 to i32, !dbg !4520
  %226 = sub i32 %225, %17, !dbg !4520
  %227 = lshr i32 %226, 2, !dbg !4522
  %228 = icmp ugt i32 %226, 1023, !dbg !4523
  br i1 %228, label %316, label %229, !dbg !4524

229:                                              ; preds = %223
  br i1 %22, label %230, label %233, !dbg !4525

230:                                              ; preds = %229
  %231 = add i32 %194, -8, !dbg !4526
  %232 = add i32 %231, %226, !dbg !4529
  br label %316, !dbg !4530

233:                                              ; preds = %229
  %234 = trunc i32 %227 to i8, !dbg !4531
  store i8 %234, i8* %0, align 1, !dbg !4532
  %235 = trunc i32 %192 to i8, !dbg !4533
  %236 = select i1 %13, i8 %235, i8 0
  %237 = select i1 %13, i8 0, i8 %235
  %238 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4535
  store i8 %236, i8* %238, align 1, !dbg !4537
  %239 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !4538
  store i8 %237, i8* %239, align 1, !dbg !4539
  %240 = trunc i32 %191 to i8, !dbg !4540
  %241 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4541
  store i8 %240, i8* %241, align 1, !dbg !4542
  %242 = icmp eq i32 %191, 0, !dbg !4543
  %243 = xor i1 %242, true, !dbg !4544
  %244 = icmp ne i32 %193, 0
  %245 = select i1 %243, i1 %244, i1 false, !dbg !4544
  call void @llvm.dbg.value(metadata i8* %224, metadata !4299, metadata !DIExpression()), !dbg !4360
  call void @llvm.dbg.value(metadata i32 0, metadata !4309, metadata !DIExpression()), !dbg !4360
  br i1 %245, label %246, label %265, !dbg !4544

246:                                              ; preds = %233
  %247 = sub i32 1, %17
  br label %248, !dbg !4545

248:                                              ; preds = %246, %261
  %249 = phi i8* [ %224, %246 ], [ %262, %261 ]
  %250 = phi i32 [ 0, %246 ], [ %263, %261 ]
  call void @llvm.dbg.value(metadata i8* %249, metadata !4299, metadata !DIExpression()), !dbg !4360
  call void @llvm.dbg.value(metadata i32 %250, metadata !4309, metadata !DIExpression()), !dbg !4360
  %251 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %250, !dbg !4546
  %252 = load i8, i8* %251, align 1, !dbg !4546
  %253 = icmp sgt i8 %252, -1, !dbg !4548
  br i1 %253, label %261, label %254, !dbg !4549

254:                                              ; preds = %248
  call void @llvm.dbg.value(metadata i8 %252, metadata !4353, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 127, DW_OP_and, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4550
  %255 = ptrtoint i8* %249 to i32, !dbg !4551
  %256 = add i32 %247, %255, !dbg !4553
  %257 = icmp ugt i32 %256, %194, !dbg !4554
  br i1 %257, label %316, label %258, !dbg !4555

258:                                              ; preds = %254
  %259 = and i8 %252, 127, !dbg !4556
  call void @llvm.dbg.value(metadata i8 %259, metadata !4353, metadata !DIExpression()), !dbg !4550
  %260 = getelementptr inbounds i8, i8* %249, i32 1, !dbg !4557
  call void @llvm.dbg.value(metadata i8* %260, metadata !4299, metadata !DIExpression()), !dbg !4360
  store i8 %259, i8* %249, align 1, !dbg !4558
  br label %261

261:                                              ; preds = %258, %248
  %262 = phi i8* [ %260, %258 ], [ %249, %248 ], !dbg !4498
  call void @llvm.dbg.value(metadata i8* %262, metadata !4299, metadata !DIExpression()), !dbg !4360
  %263 = add nuw i32 %250, 1, !dbg !4559
  call void @llvm.dbg.value(metadata i32 %263, metadata !4309, metadata !DIExpression()), !dbg !4360
  %264 = icmp eq i32 %263, %193, !dbg !4560
  br i1 %264, label %265, label %248, !dbg !4545, !llvm.loop !4561

265:                                              ; preds = %261, %233
  %266 = phi i8* [ %224, %233 ], [ %262, %261 ], !dbg !4498
  call void @llvm.dbg.value(metadata i8* %266, metadata !4299, metadata !DIExpression()), !dbg !4360
  call void @llvm.dbg.value(metadata i32 0, metadata !4309, metadata !DIExpression()), !dbg !4360
  call void @llvm.dbg.value(metadata i8* %133, metadata !4310, metadata !DIExpression()), !dbg !4360
  %267 = icmp eq i32 %193, 0, !dbg !4563
  br i1 %267, label %312, label %268, !dbg !4566

268:                                              ; preds = %265
  %269 = sub i32 1, %17
  br label %270, !dbg !4566

270:                                              ; preds = %268, %307
  %271 = phi i8* [ %266, %268 ], [ %309, %307 ]
  %272 = phi i8* [ %133, %268 ], [ %308, %307 ]
  %273 = phi i32 [ 0, %268 ], [ %310, %307 ]
  call void @llvm.dbg.value(metadata i8* %271, metadata !4299, metadata !DIExpression()), !dbg !4360
  call void @llvm.dbg.value(metadata i8* %272, metadata !4310, metadata !DIExpression()), !dbg !4360
  call void @llvm.dbg.value(metadata i32 %273, metadata !4309, metadata !DIExpression()), !dbg !4360
  br i1 %242, label %278, label %274, !dbg !4567

274:                                              ; preds = %270
  %275 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %273, !dbg !4570
  %276 = load i8, i8* %275, align 1, !dbg !4570
  %277 = icmp sgt i8 %276, -1, !dbg !4571
  br i1 %277, label %278, label %307, !dbg !4572

278:                                              ; preds = %274, %270
  br i1 %13, label %283, label %279, !dbg !4573

279:                                              ; preds = %278
  call void @llvm.dbg.value(metadata i32 0, metadata !4300, metadata !DIExpression()), !dbg !4360
  %280 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %273, !dbg !4574
  %281 = load i8, i8* %280, align 1, !dbg !4574
  %282 = getelementptr inbounds i8, i8* %271, i32 1, !dbg !4577
  call void @llvm.dbg.value(metadata i8* %282, metadata !4299, metadata !DIExpression()), !dbg !4360
  store i8 %281, i8* %271, align 1, !dbg !4578
  br label %293, !dbg !4579

283:                                              ; preds = %278
  %284 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %273, !dbg !4580
  %285 = load i8, i8* %284, align 1, !dbg !4580
  %286 = zext i8 %285 to i32, !dbg !4580
  %287 = shl nuw nsw i32 %286, 2, !dbg !4582
  %288 = getelementptr inbounds i8, i8* %0, i32 %287, !dbg !4583
  %289 = bitcast i8* %288 to i8**, !dbg !4584
  %290 = load i8*, i8** %289, align 4, !dbg !4584
  call void @llvm.dbg.value(metadata i8* %290, metadata !4310, metadata !DIExpression()), !dbg !4360
  store i8* null, i8** %289, align 4, !dbg !4585
  %291 = tail call i32 @strlen(i8* noundef %290) #25, !dbg !4586
  %292 = add i32 %291, 1, !dbg !4587
  call void @llvm.dbg.value(metadata i32 %292, metadata !4300, metadata !DIExpression()), !dbg !4360
  br label %293

293:                                              ; preds = %283, %279
  %294 = phi i8* [ %272, %279 ], [ %290, %283 ], !dbg !4360
  %295 = phi i32 [ 0, %279 ], [ %292, %283 ], !dbg !4588
  %296 = phi i8* [ %282, %279 ], [ %271, %283 ], !dbg !4360
  call void @llvm.dbg.value(metadata i8* %296, metadata !4299, metadata !DIExpression()), !dbg !4360
  call void @llvm.dbg.value(metadata i32 %295, metadata !4300, metadata !DIExpression()), !dbg !4360
  call void @llvm.dbg.value(metadata i8* %294, metadata !4310, metadata !DIExpression()), !dbg !4360
  %297 = ptrtoint i8* %296 to i32, !dbg !4589
  %298 = add i32 %269, %295, !dbg !4591
  %299 = add i32 %298, %297, !dbg !4592
  %300 = icmp ugt i32 %299, %194, !dbg !4593
  br i1 %300, label %316, label %301, !dbg !4594

301:                                              ; preds = %293
  %302 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %273, !dbg !4595
  %303 = load i8, i8* %302, align 1, !dbg !4595
  %304 = getelementptr inbounds i8, i8* %296, i32 1, !dbg !4596
  call void @llvm.dbg.value(metadata i8* %304, metadata !4299, metadata !DIExpression()), !dbg !4360
  store i8 %303, i8* %296, align 1, !dbg !4597
  %305 = tail call i8* @memcpy(i8* noundef nonnull %304, i8* noundef %294, i32 noundef %295) #25, !dbg !4598
  %306 = getelementptr inbounds i8, i8* %304, i32 %295, !dbg !4599
  call void @llvm.dbg.value(metadata i8* %306, metadata !4299, metadata !DIExpression()), !dbg !4360
  br label %307, !dbg !4600

307:                                              ; preds = %274, %301
  %308 = phi i8* [ %272, %274 ], [ %294, %301 ], !dbg !4601
  %309 = phi i8* [ %271, %274 ], [ %306, %301 ], !dbg !4360
  call void @llvm.dbg.value(metadata i8* %309, metadata !4299, metadata !DIExpression()), !dbg !4360
  call void @llvm.dbg.value(metadata i8* %308, metadata !4310, metadata !DIExpression()), !dbg !4360
  %310 = add nuw i32 %273, 1, !dbg !4602
  call void @llvm.dbg.value(metadata i32 %310, metadata !4309, metadata !DIExpression()), !dbg !4360
  %311 = icmp eq i32 %310, %193, !dbg !4563
  br i1 %311, label %312, label %270, !dbg !4566, !llvm.loop !4603

312:                                              ; preds = %307, %265
  %313 = phi i8* [ %266, %265 ], [ %309, %307 ], !dbg !4498
  %314 = ptrtoint i8* %313 to i32, !dbg !4605
  %315 = sub i32 %314, %17, !dbg !4605
  br label %316, !dbg !4606

316:                                              ; preds = %156, %199, %120, %99, %254, %293, %223, %28, %5, %312, %230
  %317 = phi i32 [ %232, %230 ], [ %315, %312 ], [ -14, %5 ], [ -28, %28 ], [ -22, %223 ], [ -28, %293 ], [ -28, %254 ], [ -28, %120 ], [ -22, %199 ], [ -28, %99 ], [ -22, %156 ], !dbg !4360
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #23, !dbg !4607
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #23, !dbg !4607
  ret i32 %317, !dbg !4607
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @ptr_in_rodata(i8* noundef readnone %0) unnamed_addr #4 !dbg !4608 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4612, metadata !DIExpression()), !dbg !4613
  %2 = tail call fastcc zeroext i1 @linker_is_in_rodata(i8* noundef %0) #24, !dbg !4614
  ret i1 %2, !dbg !4615
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @linker_is_in_rodata(i8* noundef readnone %0) unnamed_addr #4 !dbg !4616 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4621, metadata !DIExpression()), !dbg !4622
  %2 = icmp uge i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_start, i32 0, i32 0), !dbg !4623
  %3 = icmp ult i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_end, i32 0, i32 0), !dbg !4624
  %4 = and i1 %2, %3, !dbg !4624
  ret i1 %4, !dbg !4625
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, ...) local_unnamed_addr #1 !dbg !4626 {
  %5 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4630, metadata !DIExpression()), !dbg !4636
  call void @llvm.dbg.value(metadata i32 %1, metadata !4631, metadata !DIExpression()), !dbg !4636
  call void @llvm.dbg.value(metadata i32 %2, metadata !4632, metadata !DIExpression()), !dbg !4636
  call void @llvm.dbg.value(metadata i8* %3, metadata !4633, metadata !DIExpression()), !dbg !4636
  %6 = bitcast %struct.__va_list* %5 to i8*, !dbg !4637
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #23, !dbg !4637
  call void @llvm.dbg.declare(metadata %struct.__va_list* %5, metadata !4634, metadata !DIExpression()), !dbg !4638
  call void @llvm.va_start(i8* nonnull %6), !dbg !4639
  %7 = bitcast %struct.__va_list* %5 to i32*, !dbg !4640
  %8 = load i32, i32* %7, align 4, !dbg !4640
  %9 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !4640
  %10 = call i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %9) #24, !dbg !4640
  call void @llvm.dbg.value(metadata i32 %10, metadata !4635, metadata !DIExpression()), !dbg !4636
  call void @llvm.va_end(i8* nonnull %6), !dbg !4641
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #23, !dbg !4642
  ret i32 %10, !dbg !4643
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #8

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #8

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbpprintf_external(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #1 !dbg !4644 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4656, metadata !DIExpression()), !dbg !4675
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !4657, metadata !DIExpression()), !dbg !4675
  call void @llvm.dbg.value(metadata i8* %2, metadata !4658, metadata !DIExpression()), !dbg !4675
  call void @llvm.dbg.value(metadata i8* %3, metadata !4659, metadata !DIExpression()), !dbg !4675
  call void @llvm.dbg.value(metadata i8* %3, metadata !4660, metadata !DIExpression()), !dbg !4675
  call void @llvm.dbg.value(metadata i8* %3, metadata !4661, metadata !DIExpression()), !dbg !4675
  %5 = icmp eq i8* %3, null, !dbg !4676
  br i1 %5, label %45, label %6, !dbg !4678

6:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i8 undef, metadata !4670, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !4675
  %7 = getelementptr inbounds i8, i8* %3, i32 1, !dbg !4679
  %8 = load i8, i8* %7, align 1, !dbg !4679
  %9 = zext i8 %8 to i32, !dbg !4680
  call void @llvm.dbg.value(metadata i32 %9, metadata !4671, metadata !DIExpression()), !dbg !4675
  call void @llvm.dbg.value(metadata i8 undef, metadata !4672, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4675
  call void @llvm.dbg.value(metadata i8 undef, metadata !4673, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4675
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 undef), metadata !4667, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4675
  call void @llvm.dbg.value(metadata i32 0, metadata !4669, metadata !DIExpression()), !dbg !4675
  %10 = icmp eq i8 %8, 0, !dbg !4681
  br i1 %10, label %39, label %11, !dbg !4684

11:                                               ; preds = %6
  %12 = load i8, i8* %3, align 1, !dbg !4685
  call void @llvm.dbg.value(metadata i8 %12, metadata !4670, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !4675
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 %12), metadata !4667, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4675
  %13 = zext i8 %12 to i32, !dbg !4686
  call void @llvm.dbg.value(metadata i32 %13, metadata !4670, metadata !DIExpression(DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !4675
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %13), metadata !4667, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4675
  %14 = shl nuw nsw i32 %13, 2, !dbg !4687
  call void @llvm.dbg.value(metadata i32 %14, metadata !4670, metadata !DIExpression()), !dbg !4675
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %14), metadata !4667, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4675
  %15 = getelementptr inbounds i8, i8* %3, i32 %14, !dbg !4688
  call void @llvm.dbg.value(metadata !DIArgList(i8* %15, i8 undef, i8 undef), metadata !4667, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4675
  %16 = getelementptr inbounds i8, i8* %3, i32 2, !dbg !4689
  %17 = load i8, i8* %16, align 1, !dbg !4689
  call void @llvm.dbg.value(metadata i8 %17, metadata !4672, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4675
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 %17, i8 undef), metadata !4667, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4675
  %18 = zext i8 %17 to i32, !dbg !4690
  call void @llvm.dbg.value(metadata i32 %18, metadata !4672, metadata !DIExpression()), !dbg !4675
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i32 %18, i8 undef), metadata !4667, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4675
  %19 = getelementptr inbounds i8, i8* %15, i32 %18, !dbg !4691
  call void @llvm.dbg.value(metadata !DIArgList(i8* %19, i8 undef), metadata !4667, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4675
  %20 = getelementptr inbounds i8, i8* %3, i32 3, !dbg !4692
  %21 = load i8, i8* %20, align 1, !dbg !4692
  call void @llvm.dbg.value(metadata i8 %21, metadata !4673, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4675
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 %21, i8 undef, i8 undef), metadata !4667, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4675
  %22 = zext i8 %21 to i32, !dbg !4693
  call void @llvm.dbg.value(metadata i32 %22, metadata !4673, metadata !DIExpression()), !dbg !4675
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %22, i8 undef, i8 undef), metadata !4667, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4675
  %23 = shl nuw nsw i32 %22, 1, !dbg !4694
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %23, i8 undef, i8 undef), metadata !4667, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4675
  %24 = getelementptr inbounds i8, i8* %19, i32 %23, !dbg !4695
  call void @llvm.dbg.value(metadata i8* %24, metadata !4667, metadata !DIExpression()), !dbg !4675
  br label %25, !dbg !4684

25:                                               ; preds = %11, %25
  %26 = phi i8* [ %36, %25 ], [ %24, %11 ]
  %27 = phi i32 [ %37, %25 ], [ 0, %11 ]
  call void @llvm.dbg.value(metadata i8* %26, metadata !4667, metadata !DIExpression()), !dbg !4675
  call void @llvm.dbg.value(metadata i32 %27, metadata !4669, metadata !DIExpression()), !dbg !4675
  %28 = getelementptr inbounds i8, i8* %26, i32 1, !dbg !4696
  call void @llvm.dbg.value(metadata i8* %28, metadata !4667, metadata !DIExpression()), !dbg !4675
  %29 = load i8, i8* %26, align 1, !dbg !4698
  %30 = zext i8 %29 to i32, !dbg !4698
  call void @llvm.dbg.value(metadata i32 %30, metadata !4674, metadata !DIExpression()), !dbg !4675
  %31 = shl nuw nsw i32 %30, 2, !dbg !4699
  %32 = getelementptr inbounds i8, i8* %3, i32 %31, !dbg !4700
  %33 = bitcast i8* %32 to i8**, !dbg !4701
  call void @llvm.dbg.value(metadata i8** %33, metadata !4668, metadata !DIExpression()), !dbg !4675
  store i8* %28, i8** %33, align 4, !dbg !4702
  %34 = tail call i32 @strlen(i8* noundef nonnull %28) #25, !dbg !4703
  %35 = add i32 %34, 1, !dbg !4704
  %36 = getelementptr inbounds i8, i8* %28, i32 %35, !dbg !4705
  call void @llvm.dbg.value(metadata i8* %36, metadata !4667, metadata !DIExpression()), !dbg !4675
  %37 = add nuw nsw i32 %27, 1, !dbg !4706
  call void @llvm.dbg.value(metadata i32 %37, metadata !4669, metadata !DIExpression()), !dbg !4675
  %38 = icmp eq i32 %37, %9, !dbg !4681
  br i1 %38, label %39, label %25, !dbg !4684, !llvm.loop !4707

39:                                               ; preds = %25, %6
  %40 = getelementptr inbounds i8, i8* %3, i32 8, !dbg !4709
  call void @llvm.dbg.value(metadata i8* %40, metadata !4660, metadata !DIExpression()), !dbg !4675
  %41 = getelementptr inbounds i8, i8* %3, i32 4, !dbg !4710
  %42 = bitcast i8* %41 to i8**, !dbg !4710
  %43 = load i8*, i8** %42, align 1, !dbg !4710
  %44 = tail call fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* noundef %1, i8* noundef %2, i8* noundef %43, i8* noundef nonnull %40) #24, !dbg !4711
  br label %45, !dbg !4712

45:                                               ; preds = %4, %39
  %46 = phi i32 [ %44, %39 ], [ -22, %4 ], !dbg !4675
  ret i32 %46, !dbg !4713
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3, i8* noundef %4) unnamed_addr #1 !dbg !4714 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4718, metadata !DIExpression()), !dbg !4728
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !4719, metadata !DIExpression()), !dbg !4728
  call void @llvm.dbg.value(metadata i8* %2, metadata !4720, metadata !DIExpression()), !dbg !4728
  call void @llvm.dbg.value(metadata i8* %3, metadata !4721, metadata !DIExpression()), !dbg !4728
  call void @llvm.dbg.value(metadata i8* %4, metadata !4722, metadata !DIExpression()), !dbg !4728
  call void @llvm.dbg.value(metadata i8* %4, metadata !4723, metadata !DIExpression()), !dbg !4728
  %6 = ptrtoint i8* %4 to i32, !dbg !4729
  %7 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !4729
  %8 = tail call i32 %1(i32 (...)* noundef %0, i8* noundef %2, i8* noundef %3, [1 x i32] %7) #25, !dbg !4729
  ret i32 %8, !dbg !4730
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local zeroext i1 @is_ptr(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #9 !dbg !4731 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4735, metadata !DIExpression()), !dbg !4740
  call void @llvm.dbg.value(metadata i32 %1, metadata !4736, metadata !DIExpression()), !dbg !4740
  call void @llvm.dbg.value(metadata i8 0, metadata !4738, metadata !DIExpression()), !dbg !4740
  call void @llvm.dbg.value(metadata i32 0, metadata !4739, metadata !DIExpression()), !dbg !4740
  call void @llvm.dbg.value(metadata i8 poison, metadata !4738, metadata !DIExpression()), !dbg !4740
  call void @llvm.dbg.value(metadata i8* %0, metadata !4735, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4740
  %3 = load i8, i8* %0, align 1, !dbg !4741
  call void @llvm.dbg.value(metadata i8 %3, metadata !4737, metadata !DIExpression()), !dbg !4740
  %4 = icmp eq i8 %3, 0, !dbg !4742
  br i1 %4, label %29, label %5, !dbg !4743

5:                                                ; preds = %2, %22
  %6 = phi i8 [ %27, %22 ], [ %3, %2 ]
  %7 = phi i8* [ %10, %22 ], [ %0, %2 ]
  %8 = phi i32 [ %24, %22 ], [ 0, %2 ]
  %9 = phi i1 [ %26, %22 ], [ false, %2 ]
  %10 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !4744
  call void @llvm.dbg.value(metadata i32 %8, metadata !4739, metadata !DIExpression()), !dbg !4740
  br i1 %9, label %11, label %22, !dbg !4745

11:                                               ; preds = %5
  %12 = icmp eq i32 %8, %1, !dbg !4747
  br i1 %12, label %13, label %17, !dbg !4751

13:                                               ; preds = %11
  %14 = icmp eq i8 %6, 112, !dbg !4752
  br i1 %14, label %29, label %15, !dbg !4755

15:                                               ; preds = %13
  %16 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #24, !dbg !4756
  br i1 %16, label %29, label %22, !dbg !4758

17:                                               ; preds = %11
  %18 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #24, !dbg !4759
  %19 = xor i1 %18, true, !dbg !4761
  %20 = zext i1 %18 to i32, !dbg !4761
  %21 = add nsw i32 %8, %20, !dbg !4761
  br label %22, !dbg !4761

22:                                               ; preds = %17, %15, %5
  %23 = phi i1 [ true, %15 ], [ false, %5 ], [ %19, %17 ]
  %24 = phi i32 [ %1, %15 ], [ %8, %5 ], [ %21, %17 ], !dbg !4740
  call void @llvm.dbg.value(metadata i32 %24, metadata !4739, metadata !DIExpression()), !dbg !4740
  call void @llvm.dbg.value(metadata i8 poison, metadata !4738, metadata !DIExpression()), !dbg !4740
  %25 = icmp eq i8 %6, 37, !dbg !4762
  %26 = xor i1 %25, %23, !dbg !4764
  call void @llvm.dbg.value(metadata i8* %10, metadata !4735, metadata !DIExpression()), !dbg !4740
  call void @llvm.dbg.value(metadata i8* %10, metadata !4735, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4740
  %27 = load i8, i8* %10, align 1, !dbg !4741
  call void @llvm.dbg.value(metadata i8 %27, metadata !4737, metadata !DIExpression()), !dbg !4740
  %28 = icmp eq i8 %27, 0, !dbg !4742
  br i1 %28, label %29, label %5, !dbg !4743, !llvm.loop !4765

29:                                               ; preds = %13, %15, %22, %2
  %30 = phi i1 [ false, %2 ], [ false, %22 ], [ false, %15 ], [ true, %13 ], !dbg !4740
  ret i1 %30, !dbg !4767
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %0) unnamed_addr #4 !dbg !4768 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !4772, metadata !DIExpression()), !dbg !4773
  %2 = add i8 %0, -64, !dbg !4774
  %3 = icmp ult i8 %2, 59, !dbg !4774
  ret i1 %3, !dbg !4775
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package_convert(i8* noundef %0, i32 noundef %1, i32 (i8*, i32, i8*)* noundef %2, i8* noundef %3, i32 noundef %4, i16* noundef %5, i32 noundef %6) local_unnamed_addr #1 !dbg !4776 {
  %8 = alloca [16 x i8], align 1
  %9 = alloca [16 x i8], align 1
  %10 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !4784, metadata !DIExpression()), !dbg !4853
  call void @llvm.dbg.value(metadata i32 %1, metadata !4785, metadata !DIExpression()), !dbg !4853
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %2, metadata !4786, metadata !DIExpression()), !dbg !4853
  call void @llvm.dbg.value(metadata i8* %3, metadata !4787, metadata !DIExpression()), !dbg !4853
  call void @llvm.dbg.value(metadata i32 %4, metadata !4788, metadata !DIExpression()), !dbg !4853
  call void @llvm.dbg.value(metadata i16* %5, metadata !4789, metadata !DIExpression()), !dbg !4853
  call void @llvm.dbg.value(metadata i32 %6, metadata !4790, metadata !DIExpression()), !dbg !4853
  call void @llvm.dbg.value(metadata i8* %0, metadata !4791, metadata !DIExpression()), !dbg !4853
  %11 = bitcast i8* %0 to i32*, !dbg !4854
  call void @llvm.dbg.value(metadata i32* %11, metadata !4792, metadata !DIExpression()), !dbg !4853
  %12 = and i32 %4, 8, !dbg !4855
  %13 = icmp eq i32 %12, 0, !dbg !4856
  call void @llvm.dbg.value(metadata i1 %13, metadata !4796, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4853
  call void @llvm.dbg.value(metadata i8* %0, metadata !4799, metadata !DIExpression()), !dbg !4853
  %14 = icmp eq i32 %1, 0, !dbg !4857
  br i1 %14, label %15, label %17, !dbg !4858

15:                                               ; preds = %7
  %16 = tail call fastcc i32 @get_package_len(i8* noundef %0) #24, !dbg !4859
  br label %17, !dbg !4858

17:                                               ; preds = %7, %15
  %18 = phi i32 [ %16, %15 ], [ %1, %7 ], !dbg !4858
  call void @llvm.dbg.value(metadata i32 %18, metadata !4785, metadata !DIExpression()), !dbg !4853
  %19 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4860
  %20 = load i8, i8* %19, align 1, !dbg !4860
  %21 = zext i8 %20 to i32, !dbg !4861
  call void @llvm.dbg.value(metadata i32 %21, metadata !4794, metadata !DIExpression()), !dbg !4853
  %22 = icmp ne i8 %20, 0, !dbg !4862
  %23 = and i32 %4, 1, !dbg !4863
  %24 = icmp ne i32 %23, 0, !dbg !4863
  %25 = and i1 %24, %22, !dbg !4863
  call void @llvm.dbg.value(metadata i1 %25, metadata !4798, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4853
  %26 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !4864
  %27 = load i8, i8* %26, align 1, !dbg !4864
  %28 = zext i8 %27 to i32, !dbg !4865
  call void @llvm.dbg.value(metadata i32 %28, metadata !4795, metadata !DIExpression()), !dbg !4853
  %29 = icmp ne i8 %27, 0, !dbg !4866
  %30 = and i32 %4, 2, !dbg !4867
  %31 = icmp ne i32 %30, 0, !dbg !4867
  %32 = and i1 %31, %29, !dbg !4867
  call void @llvm.dbg.value(metadata i1 %32, metadata !4797, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4853
  %33 = select i1 %32, i1 true, i1 %25, !dbg !4868
  br i1 %33, label %38, label %34, !dbg !4868

34:                                               ; preds = %17
  %35 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !4870
  br i1 %35, label %267, label %36, !dbg !4873

36:                                               ; preds = %34
  %37 = tail call i32 %2(i8* noundef nonnull %0, i32 noundef %18, i8* noundef %3) #25, !dbg !4874
  br label %267, !dbg !4876

38:                                               ; preds = %17
  %39 = load i8, i8* %0, align 1, !dbg !4877
  %40 = zext i8 %39 to i32, !dbg !4878
  %41 = shl nuw nsw i32 %40, 2, !dbg !4879
  call void @llvm.dbg.value(metadata i32 %41, metadata !4793, metadata !DIExpression()), !dbg !4853
  %42 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !4880
  %43 = bitcast i8* %42 to i8**, !dbg !4881
  %44 = load i8*, i8** %43, align 4, !dbg !4881
  call void @llvm.dbg.value(metadata i8* %44, metadata !4802, metadata !DIExpression()), !dbg !4853
  %45 = getelementptr inbounds i8, i8* %0, i32 %41, !dbg !4882
  call void @llvm.dbg.value(metadata i8* %45, metadata !4803, metadata !DIExpression()), !dbg !4853
  call void @llvm.dbg.value(metadata i32 0, metadata !4804, metadata !DIExpression()), !dbg !4853
  %46 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !4883
  br i1 %46, label %47, label %132, !dbg !4884

47:                                               ; preds = %38
  call void @llvm.dbg.value(metadata i32 %18, metadata !4801, metadata !DIExpression()), !dbg !4853
  br i1 %25, label %48, label %73, !dbg !4885

48:                                               ; preds = %47
  call void @llvm.dbg.value(metadata i32 %18, metadata !4801, metadata !DIExpression()), !dbg !4853
  call void @llvm.dbg.value(metadata i8* %45, metadata !4803, metadata !DIExpression()), !dbg !4853
  call void @llvm.dbg.value(metadata i32 0, metadata !4804, metadata !DIExpression()), !dbg !4853
  call void @llvm.dbg.value(metadata i32 0, metadata !4805, metadata !DIExpression()), !dbg !4886
  %49 = icmp ne i16* %5, null
  br label %50, !dbg !4887

50:                                               ; preds = %48, %67
  %51 = phi i32 [ %18, %48 ], [ %69, %67 ]
  %52 = phi i8* [ %45, %48 ], [ %70, %67 ]
  %53 = phi i32 [ 0, %48 ], [ %68, %67 ]
  %54 = phi i32 [ 0, %48 ], [ %71, %67 ]
  call void @llvm.dbg.value(metadata i32 %51, metadata !4801, metadata !DIExpression()), !dbg !4853
  call void @llvm.dbg.value(metadata i8* %52, metadata !4803, metadata !DIExpression()), !dbg !4853
  call void @llvm.dbg.value(metadata i32 %53, metadata !4804, metadata !DIExpression()), !dbg !4853
  call void @llvm.dbg.value(metadata i32 %54, metadata !4805, metadata !DIExpression()), !dbg !4886
  %55 = load i8, i8* %52, align 1, !dbg !4888
  %56 = zext i8 %55 to i32, !dbg !4889
  %57 = getelementptr inbounds i32, i32* %11, i32 %56, !dbg !4889
  %58 = bitcast i32* %57 to i8**, !dbg !4890
  %59 = load i8*, i8** %58, align 4, !dbg !4890
  call void @llvm.dbg.value(metadata i8* %59, metadata !4811, metadata !DIExpression()), !dbg !4891
  %60 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %59, i16 noundef zeroext 0) #24, !dbg !4892
  call void @llvm.dbg.value(metadata i32 %60, metadata !4814, metadata !DIExpression()), !dbg !4891
  %61 = icmp ult i32 %53, %6
  %62 = select i1 %49, i1 %61, i1 false, !dbg !4893
  br i1 %62, label %63, label %67, !dbg !4893

63:                                               ; preds = %50
  %64 = trunc i32 %60 to i16, !dbg !4895
  %65 = add nuw i32 %53, 1, !dbg !4897
  call void @llvm.dbg.value(metadata i32 %65, metadata !4804, metadata !DIExpression()), !dbg !4853
  %66 = getelementptr inbounds i16, i16* %5, i32 %53, !dbg !4898
  store i16 %64, i16* %66, align 2, !dbg !4899
  br label %67, !dbg !4900

67:                                               ; preds = %63, %50
  %68 = phi i32 [ %65, %63 ], [ %53, %50 ], !dbg !4853
  call void @llvm.dbg.value(metadata i32 %68, metadata !4804, metadata !DIExpression()), !dbg !4853
  %69 = add nsw i32 %60, %51, !dbg !4901
  call void @llvm.dbg.value(metadata i32 %69, metadata !4801, metadata !DIExpression()), !dbg !4853
  %70 = getelementptr inbounds i8, i8* %52, i32 1, !dbg !4902
  call void @llvm.dbg.value(metadata i8* %70, metadata !4803, metadata !DIExpression()), !dbg !4853
  %71 = add nuw nsw i32 %54, 1, !dbg !4903
  call void @llvm.dbg.value(metadata i32 %71, metadata !4805, metadata !DIExpression()), !dbg !4886
  %72 = icmp eq i32 %71, %21, !dbg !4904
  br i1 %72, label %79, label %50, !dbg !4887, !llvm.loop !4905

73:                                               ; preds = %47
  %74 = and i32 %4, 4
  %75 = icmp ne i32 %74, 0
  %76 = and i1 %75, %22, !dbg !4907
  %77 = select i1 %76, i32 %21, i32 0, !dbg !4907
  %78 = getelementptr i8, i8* %45, i32 %77, !dbg !4907
  br label %79, !dbg !4907

79:                                               ; preds = %67, %73
  %80 = phi i32 [ 0, %73 ], [ %68, %67 ], !dbg !4910
  %81 = phi i8* [ %78, %73 ], [ %70, %67 ], !dbg !4853
  %82 = phi i32 [ %18, %73 ], [ %69, %67 ], !dbg !4911
  call void @llvm.dbg.value(metadata i1 undef, metadata !4815, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4912
  call void @llvm.dbg.value(metadata i32 0, metadata !4816, metadata !DIExpression()), !dbg !4913
  call void @llvm.dbg.value(metadata i32 %82, metadata !4801, metadata !DIExpression()), !dbg !4853
  call void @llvm.dbg.value(metadata i8* %81, metadata !4803, metadata !DIExpression()), !dbg !4853
  call void @llvm.dbg.value(metadata i32 %80, metadata !4804, metadata !DIExpression()), !dbg !4853
  %83 = icmp eq i8 %27, 0, !dbg !4914
  br i1 %83, label %267, label %84, !dbg !4915

84:                                               ; preds = %79
  %85 = and i32 %4, 5, !dbg !4916
  %86 = icmp eq i32 %85, 0, !dbg !4917
  call void @llvm.dbg.value(metadata i1 %86, metadata !4815, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4912
  %87 = icmp eq i32 %30, 0
  %88 = icmp eq i32 %23, 0
  %89 = icmp ne i16* %5, null
  %90 = select i1 %86, i32 -2, i32 -1
  br label %91, !dbg !4915

91:                                               ; preds = %84, %127
  %92 = phi i32 [ %82, %84 ], [ %129, %127 ]
  %93 = phi i8* [ %81, %84 ], [ %97, %127 ]
  %94 = phi i32 [ %80, %84 ], [ %128, %127 ]
  %95 = phi i32 [ 0, %84 ], [ %130, %127 ]
  call void @llvm.dbg.value(metadata i32 %92, metadata !4801, metadata !DIExpression()), !dbg !4853
  call void @llvm.dbg.value(metadata i8* %93, metadata !4803, metadata !DIExpression()), !dbg !4853
  call void @llvm.dbg.value(metadata i32 %94, metadata !4804, metadata !DIExpression()), !dbg !4853
  call void @llvm.dbg.value(metadata i32 %95, metadata !4816, metadata !DIExpression()), !dbg !4913
  %96 = getelementptr inbounds i8, i8* %93, i32 1, !dbg !4918
  call void @llvm.dbg.value(metadata i8* %96, metadata !4803, metadata !DIExpression()), !dbg !4853
  call void @llvm.dbg.value(metadata i8 undef, metadata !4818, metadata !DIExpression()), !dbg !4919
  %97 = getelementptr inbounds i8, i8* %93, i32 2, !dbg !4920
  call void @llvm.dbg.value(metadata i8* %97, metadata !4803, metadata !DIExpression()), !dbg !4853
  %98 = load i8, i8* %96, align 1, !dbg !4921
  call void @llvm.dbg.value(metadata i8 %98, metadata !4821, metadata !DIExpression()), !dbg !4919
  %99 = zext i8 %98 to i32, !dbg !4922
  %100 = getelementptr inbounds i32, i32* %11, i32 %99, !dbg !4922
  %101 = bitcast i32* %100 to i8**, !dbg !4923
  %102 = load i8*, i8** %101, align 4, !dbg !4923
  call void @llvm.dbg.value(metadata i8* %102, metadata !4822, metadata !DIExpression()), !dbg !4919
  %103 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %102) #24, !dbg !4924
  call void @llvm.dbg.value(metadata i1 %103, metadata !4823, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4919
  br i1 %13, label %110, label %104, !dbg !4925

104:                                              ; preds = %91
  %105 = load i8, i8* %93, align 1, !dbg !4927
  call void @llvm.dbg.value(metadata i8 %105, metadata !4818, metadata !DIExpression()), !dbg !4919
  %106 = zext i8 %105 to i32, !dbg !4928
  %107 = tail call zeroext i1 @is_ptr(i8* noundef %44, i32 noundef %106) #24, !dbg !4929
  br i1 %107, label %108, label %110, !dbg !4930

108:                                              ; preds = %104
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([168 x i8], [168 x i8]* @.str.1.25, i32 0, i32 0), i32 noundef 87, i8* noundef %44, i32 noundef %106) #25, !dbg !4931
  %109 = add nsw i32 %92, -2, !dbg !4937
  call void @llvm.dbg.value(metadata i32 %109, metadata !4801, metadata !DIExpression()), !dbg !4853
  br label %127, !dbg !4938

110:                                              ; preds = %104, %91
  br i1 %103, label %111, label %114, !dbg !4939

111:                                              ; preds = %110
  br i1 %88, label %112, label %115, !dbg !4940

112:                                              ; preds = %111
  %113 = add i32 %92, %90, !dbg !4942
  call void @llvm.dbg.value(metadata i32 %113, metadata !4801, metadata !DIExpression()), !dbg !4853
  br label %127, !dbg !4945

114:                                              ; preds = %110
  br i1 %87, label %127, label %115, !dbg !4946

115:                                              ; preds = %114, %111
  call void @llvm.dbg.label(metadata !4849), !dbg !4947
  %116 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %102, i16 noundef zeroext 0) #24, !dbg !4948
  call void @llvm.dbg.value(metadata i32 %116, metadata !4824, metadata !DIExpression()), !dbg !4919
  %117 = icmp ult i32 %94, %6
  %118 = select i1 %89, i1 %117, i1 false, !dbg !4949
  br i1 %118, label %119, label %123, !dbg !4949

119:                                              ; preds = %115
  %120 = trunc i32 %116 to i16, !dbg !4951
  %121 = add nuw i32 %94, 1, !dbg !4953
  call void @llvm.dbg.value(metadata i32 %121, metadata !4804, metadata !DIExpression()), !dbg !4853
  %122 = getelementptr inbounds i16, i16* %5, i32 %94, !dbg !4954
  store i16 %120, i16* %122, align 2, !dbg !4955
  br label %123, !dbg !4956

123:                                              ; preds = %119, %115
  %124 = phi i32 [ %121, %119 ], [ %94, %115 ], !dbg !4853
  call void @llvm.dbg.value(metadata i32 %124, metadata !4804, metadata !DIExpression()), !dbg !4853
  %125 = add i32 %92, -1, !dbg !4957
  %126 = add i32 %125, %116, !dbg !4958
  call void @llvm.dbg.value(metadata i32 %126, metadata !4801, metadata !DIExpression()), !dbg !4853
  br label %127, !dbg !4959

127:                                              ; preds = %112, %123, %114, %108
  %128 = phi i32 [ %94, %108 ], [ %124, %123 ], [ %94, %112 ], [ %94, %114 ], !dbg !4853
  %129 = phi i32 [ %109, %108 ], [ %126, %123 ], [ %113, %112 ], [ %92, %114 ], !dbg !4919
  call void @llvm.dbg.value(metadata i32 %129, metadata !4801, metadata !DIExpression()), !dbg !4853
  call void @llvm.dbg.value(metadata i32 %128, metadata !4804, metadata !DIExpression()), !dbg !4853
  %130 = add nuw nsw i32 %95, 1, !dbg !4960
  call void @llvm.dbg.value(metadata i8* %97, metadata !4803, metadata !DIExpression()), !dbg !4853
  call void @llvm.dbg.value(metadata i32 %130, metadata !4816, metadata !DIExpression()), !dbg !4913
  %131 = icmp eq i32 %130, %28, !dbg !4914
  br i1 %131, label %267, label %91, !dbg !4915, !llvm.loop !4961

132:                                              ; preds = %38
  call void @llvm.dbg.declare(metadata [16 x i8]* %8, metadata !4826, metadata !DIExpression()), !dbg !4963
  call void @llvm.dbg.declare(metadata [16 x i8]* %9, metadata !4827, metadata !DIExpression()), !dbg !4964
  br i1 %25, label %133, label %135, !dbg !4965

133:                                              ; preds = %132
  call void @llvm.dbg.value(metadata i8 %20, metadata !4828, metadata !DIExpression()), !dbg !4853
  call void @llvm.dbg.value(metadata i8 0, metadata !4829, metadata !DIExpression()), !dbg !4853
  %134 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 0, !dbg !4966
  call void @llvm.dbg.value(metadata i8* %134, metadata !4830, metadata !DIExpression()), !dbg !4853
  br label %140, !dbg !4969

135:                                              ; preds = %132
  %136 = and i32 %4, 4
  %137 = icmp ne i32 %136, 0
  %138 = and i1 %137, %22, !dbg !4970
  %139 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0
  br i1 %138, label %140, label %145, !dbg !4970

140:                                              ; preds = %133, %135
  %141 = phi i8 [ 0, %135 ], [ %20, %133 ]
  %142 = phi i8 [ %20, %135 ], [ 0, %133 ]
  %143 = phi i8* [ %139, %135 ], [ %134, %133 ]
  call void @llvm.dbg.value(metadata i8* null, metadata !4830, metadata !DIExpression()), !dbg !4853
  call void @llvm.dbg.value(metadata i8 undef, metadata !4829, metadata !DIExpression()), !dbg !4853
  call void @llvm.dbg.value(metadata i8 0, metadata !4828, metadata !DIExpression()), !dbg !4853
  %144 = call i8* @memcpy(i8* noundef nonnull %143, i8* noundef nonnull %45, i32 noundef %21) #25, !dbg !4972
  br label %145, !dbg !4975

145:                                              ; preds = %135, %140
  %146 = phi i8 [ %142, %140 ], [ 0, %135 ]
  %147 = phi i8 [ %141, %140 ], [ 0, %135 ]
  %148 = getelementptr inbounds i8, i8* %45, i32 %21, !dbg !4976
  call void @llvm.dbg.value(metadata i8* %148, metadata !4803, metadata !DIExpression()), !dbg !4853
  call void @llvm.dbg.value(metadata i32 0, metadata !4832, metadata !DIExpression()), !dbg !4977
  call void @llvm.dbg.value(metadata i8 %146, metadata !4829, metadata !DIExpression()), !dbg !4853
  call void @llvm.dbg.value(metadata i8 %147, metadata !4828, metadata !DIExpression()), !dbg !4853
  %149 = icmp eq i8 %27, 0, !dbg !4978
  br i1 %149, label %150, label %152, !dbg !4979

150:                                              ; preds = %145
  %151 = and i32 %4, 4, !dbg !4980
  br label %157, !dbg !4979

152:                                              ; preds = %145
  %153 = icmp eq i32 %30, 0
  %154 = icmp eq i32 %23, 0
  %155 = and i32 %4, 4
  %156 = icmp eq i32 %155, 0
  br label %176, !dbg !4979

157:                                              ; preds = %215, %150
  %158 = phi i32 [ %151, %150 ], [ %155, %215 ], !dbg !4980
  %159 = phi i8 [ %147, %150 ], [ %216, %215 ], !dbg !4981
  %160 = phi i8 [ %146, %150 ], [ %217, %215 ], !dbg !4982
  %161 = phi i8* [ %148, %150 ], [ %183, %215 ], !dbg !4853
  call void @llvm.dbg.value(metadata i8 undef, metadata !4825, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 8)), !dbg !4853
  %162 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4983
  %163 = load i8, i8* %162, align 1, !dbg !4983
  %164 = zext i8 %159 to i32, !dbg !4984
  %165 = add i8 %163, %159, !dbg !4985
  call void @llvm.dbg.value(metadata i8 %165, metadata !4825, metadata !DIExpression(DW_OP_LLVM_fragment, 8, 8)), !dbg !4853
  %166 = icmp eq i32 %30, 0, !dbg !4986
  %167 = lshr i8 %160, 1, !dbg !4987
  %168 = select i1 %166, i8 %167, i8 0, !dbg !4987
  call void @llvm.dbg.value(metadata i8 %168, metadata !4825, metadata !DIExpression(DW_OP_LLVM_fragment, 24, 8)), !dbg !4853
  %169 = icmp eq i32 %23, 0, !dbg !4988
  %170 = icmp eq i32 %158, 0, !dbg !4980
  %171 = select i1 %170, i8 0, i8 %160, !dbg !4980
  %172 = select i1 %169, i8 %171, i8 0, !dbg !4980
  call void @llvm.dbg.value(metadata i8 %172, metadata !4825, metadata !DIExpression(DW_OP_LLVM_fragment, 16, 8)), !dbg !4853
  call void @llvm.dbg.declare(metadata %struct.cbprintf_package_desc* undef, metadata !4840, metadata !DIExpression()), !dbg !4989
  %173 = load i32, i32* %11, align 1, !dbg !4990
  store i8 %165, i8* %162, align 1, !dbg !4991
  store i8 %172, i8* %19, align 1, !dbg !4991
  store i8 %168, i8* %26, align 1, !dbg !4991
  %174 = call i32 %2(i8* noundef nonnull %0, i32 noundef %41, i8* noundef %3) #25, !dbg !4992
  call void @llvm.dbg.value(metadata i32 %174, metadata !4831, metadata !DIExpression()), !dbg !4853
  %175 = icmp slt i32 %174, 0, !dbg !4993
  br i1 %175, label %267, label %220, !dbg !4995

176:                                              ; preds = %152, %215
  %177 = phi i8* [ %148, %152 ], [ %183, %215 ]
  %178 = phi i32 [ 0, %152 ], [ %218, %215 ]
  %179 = phi i8 [ %146, %152 ], [ %217, %215 ]
  %180 = phi i8 [ %147, %152 ], [ %216, %215 ]
  call void @llvm.dbg.value(metadata i8* %177, metadata !4803, metadata !DIExpression()), !dbg !4853
  call void @llvm.dbg.value(metadata i32 %178, metadata !4832, metadata !DIExpression()), !dbg !4977
  call void @llvm.dbg.value(metadata i8 %179, metadata !4829, metadata !DIExpression()), !dbg !4853
  call void @llvm.dbg.value(metadata i8 %180, metadata !4828, metadata !DIExpression()), !dbg !4853
  %181 = getelementptr inbounds i8, i8* %177, i32 1, !dbg !4996
  call void @llvm.dbg.value(metadata i8* %181, metadata !4803, metadata !DIExpression()), !dbg !4853
  %182 = load i8, i8* %177, align 1, !dbg !4997
  call void @llvm.dbg.value(metadata i8 %182, metadata !4834, metadata !DIExpression()), !dbg !4998
  %183 = getelementptr inbounds i8, i8* %177, i32 2, !dbg !4999
  call void @llvm.dbg.value(metadata i8* %183, metadata !4803, metadata !DIExpression()), !dbg !4853
  %184 = load i8, i8* %181, align 1, !dbg !5000
  call void @llvm.dbg.value(metadata i8 %184, metadata !4837, metadata !DIExpression()), !dbg !4998
  %185 = zext i8 %184 to i32, !dbg !5001
  %186 = getelementptr inbounds i32, i32* %11, i32 %185, !dbg !5001
  %187 = bitcast i32* %186 to i8**, !dbg !5002
  %188 = load i8*, i8** %187, align 4, !dbg !5002
  call void @llvm.dbg.value(metadata i8* %188, metadata !4838, metadata !DIExpression()), !dbg !4998
  %189 = call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %188) #24, !dbg !5003
  call void @llvm.dbg.value(metadata i1 %189, metadata !4839, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4998
  br i1 %13, label %193, label %190, !dbg !5004

190:                                              ; preds = %176
  %191 = zext i8 %182 to i32, !dbg !5006
  %192 = call zeroext i1 @is_ptr(i8* noundef %44, i32 noundef %191) #24, !dbg !5007
  br i1 %192, label %215, label %193, !dbg !5008

193:                                              ; preds = %190, %176
  br i1 %189, label %194, label %200, !dbg !5009

194:                                              ; preds = %193
  br i1 %154, label %197, label %195, !dbg !5010

195:                                              ; preds = %194
  %196 = add i8 %180, 1, !dbg !5013
  call void @llvm.dbg.value(metadata i8 %196, metadata !4828, metadata !DIExpression()), !dbg !4853
  br label %208, !dbg !5016

197:                                              ; preds = %194
  br i1 %156, label %215, label %198, !dbg !5017

198:                                              ; preds = %197
  %199 = add i8 %179, 1, !dbg !5018
  call void @llvm.dbg.value(metadata i8 %199, metadata !4829, metadata !DIExpression()), !dbg !4853
  br label %208, !dbg !5021

200:                                              ; preds = %193
  br i1 %153, label %203, label %201, !dbg !5022

201:                                              ; preds = %200
  %202 = add i8 %180, 1, !dbg !5024
  call void @llvm.dbg.value(metadata i8 %202, metadata !4828, metadata !DIExpression()), !dbg !4853
  br label %208, !dbg !5027

203:                                              ; preds = %200
  %204 = add i8 %179, 1, !dbg !5028
  call void @llvm.dbg.value(metadata i8 %204, metadata !4829, metadata !DIExpression()), !dbg !4853
  %205 = zext i8 %179 to i32, !dbg !5030
  %206 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %205, !dbg !5030
  store i8 %182, i8* %206, align 1, !dbg !5031
  %207 = add i8 %179, 2, !dbg !5032
  call void @llvm.dbg.value(metadata i8 %207, metadata !4829, metadata !DIExpression()), !dbg !4853
  br label %208

208:                                              ; preds = %201, %203, %195, %198
  %209 = phi i8 [ %179, %198 ], [ %180, %195 ], [ %204, %203 ], [ %180, %201 ]
  %210 = phi [16 x i8]* [ %9, %198 ], [ %8, %195 ], [ %9, %203 ], [ %8, %201 ]
  %211 = phi i8 [ %180, %198 ], [ %196, %195 ], [ %180, %203 ], [ %202, %201 ]
  %212 = phi i8 [ %199, %198 ], [ %179, %195 ], [ %207, %203 ], [ %179, %201 ]
  %213 = zext i8 %209 to i32, !dbg !5033
  %214 = getelementptr inbounds [16 x i8], [16 x i8]* %210, i32 0, i32 %213, !dbg !5033
  store i8 %184, i8* %214, align 1, !dbg !5033
  br label %215, !dbg !5034

215:                                              ; preds = %208, %197, %190
  %216 = phi i8 [ %180, %190 ], [ %180, %197 ], [ %211, %208 ], !dbg !4853
  %217 = phi i8 [ %179, %190 ], [ %179, %197 ], [ %212, %208 ], !dbg !4982
  call void @llvm.dbg.value(metadata i8 %217, metadata !4829, metadata !DIExpression()), !dbg !4853
  call void @llvm.dbg.value(metadata i8 %216, metadata !4828, metadata !DIExpression()), !dbg !4853
  %218 = add nuw nsw i32 %178, 1, !dbg !5034
  call void @llvm.dbg.value(metadata i8* %183, metadata !4803, metadata !DIExpression()), !dbg !4853
  call void @llvm.dbg.value(metadata i32 %218, metadata !4832, metadata !DIExpression()), !dbg !4977
  %219 = icmp eq i32 %218, %28, !dbg !4978
  br i1 %219, label %157, label %176, !dbg !4979, !llvm.loop !5035

220:                                              ; preds = %157
  %221 = zext i8 %160 to i32, !dbg !4987
  call void @llvm.dbg.value(metadata i32 %174, metadata !4801, metadata !DIExpression()), !dbg !4853
  store i32 %173, i32* %11, align 1, !dbg !5037
  %222 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0, !dbg !5038
  %223 = call i32 %2(i8* noundef nonnull %222, i32 noundef %221, i8* noundef %3) #25, !dbg !5039
  call void @llvm.dbg.value(metadata i32 %223, metadata !4831, metadata !DIExpression()), !dbg !4853
  %224 = icmp slt i32 %223, 0, !dbg !5040
  br i1 %224, label %267, label %225, !dbg !5042

225:                                              ; preds = %220
  call void @llvm.dbg.value(metadata !DIArgList(i32 %174, i32 %223), metadata !4801, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4853
  %226 = mul nsw i32 %28, -2
  %227 = add i32 %18, %226, !dbg !5043
  %228 = add nuw nsw i32 %41, %21, !dbg !5043
  %229 = sub i32 %227, %228, !dbg !5043
  call void @llvm.dbg.value(metadata i32 %229, metadata !4841, metadata !DIExpression()), !dbg !4853
  %230 = call i32 %2(i8* noundef %161, i32 noundef %229, i8* noundef %3) #25, !dbg !5044
  call void @llvm.dbg.value(metadata i32 %230, metadata !4831, metadata !DIExpression()), !dbg !4853
  %231 = icmp slt i32 %230, 0, !dbg !5045
  br i1 %231, label %267, label %232, !dbg !5047

232:                                              ; preds = %225
  %233 = add nuw nsw i32 %223, %174, !dbg !5048
  call void @llvm.dbg.value(metadata i32 %233, metadata !4801, metadata !DIExpression()), !dbg !4853
  %234 = add nuw nsw i32 %233, %230, !dbg !5049
  call void @llvm.dbg.value(metadata i32 %234, metadata !4801, metadata !DIExpression()), !dbg !4853
  call void @llvm.dbg.value(metadata i32 0, metadata !4842, metadata !DIExpression()), !dbg !5050
  %235 = icmp eq i8 %159, 0, !dbg !5051
  br i1 %235, label %264, label %236, !dbg !5052

236:                                              ; preds = %232
  %237 = icmp eq i16* %5, null
  br label %238, !dbg !5052

238:                                              ; preds = %236, %259
  %239 = phi i32 [ 0, %236 ], [ %262, %259 ]
  %240 = phi i32 [ %234, %236 ], [ %261, %259 ]
  call void @llvm.dbg.value(metadata i32 %239, metadata !4842, metadata !DIExpression()), !dbg !5050
  call void @llvm.dbg.value(metadata i32 %240, metadata !4801, metadata !DIExpression()), !dbg !4853
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #23, !dbg !5053
  %241 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %239, !dbg !5054
  %242 = load i8, i8* %241, align 1, !dbg !5054
  call void @llvm.dbg.value(metadata i8 %242, metadata !4844, metadata !DIExpression()), !dbg !5055
  store i8 %242, i8* %10, align 1, !dbg !5056
  %243 = zext i8 %242 to i32, !dbg !5057
  %244 = getelementptr inbounds i32, i32* %11, i32 %243, !dbg !5057
  %245 = bitcast i32* %244 to i8**, !dbg !5058
  %246 = load i8*, i8** %245, align 4, !dbg !5058
  call void @llvm.dbg.value(metadata i8* %246, metadata !4847, metadata !DIExpression()), !dbg !5055
  br i1 %237, label %250, label %247, !dbg !5059

247:                                              ; preds = %238
  %248 = getelementptr inbounds i16, i16* %5, i32 %239, !dbg !5060
  %249 = load i16, i16* %248, align 2, !dbg !5060
  br label %250, !dbg !5059

250:                                              ; preds = %238, %247
  %251 = phi i16 [ %249, %247 ], [ 0, %238 ], !dbg !5059
  call void @llvm.dbg.value(metadata i32 undef, metadata !4848, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5055
  call void @llvm.dbg.value(metadata i8* %10, metadata !4844, metadata !DIExpression(DW_OP_deref)), !dbg !5055
  %252 = call i32 %2(i8* noundef nonnull %10, i32 noundef 1, i8* noundef %3) #25, !dbg !5061
  call void @llvm.dbg.value(metadata i32 %252, metadata !4831, metadata !DIExpression()), !dbg !4853
  %253 = icmp slt i32 %252, 0, !dbg !5062
  br i1 %253, label %257, label %254, !dbg !5064

254:                                              ; preds = %250
  call void @llvm.dbg.value(metadata i16 %251, metadata !4848, metadata !DIExpression()), !dbg !5055
  call void @llvm.dbg.value(metadata !DIArgList(i32 %240, i32 %252), metadata !4801, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4853
  %255 = call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef nonnull %2, i8* noundef %3, i8* noundef %246, i16 noundef zeroext %251) #24, !dbg !5065
  call void @llvm.dbg.value(metadata i32 %255, metadata !4831, metadata !DIExpression()), !dbg !4853
  %256 = icmp slt i32 %255, 0, !dbg !5066
  br i1 %256, label %257, label %259, !dbg !5068

257:                                              ; preds = %254, %250
  %258 = phi i32 [ %255, %254 ], [ %252, %250 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !4801, metadata !DIExpression()), !dbg !4853
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #23, !dbg !5069
  call void @llvm.dbg.value(metadata i32 undef, metadata !4801, metadata !DIExpression()), !dbg !4853
  br label %267

259:                                              ; preds = %254
  %260 = add nsw i32 %252, %240, !dbg !5070
  call void @llvm.dbg.value(metadata i32 %260, metadata !4801, metadata !DIExpression()), !dbg !4853
  %261 = add nsw i32 %260, %255, !dbg !5071
  call void @llvm.dbg.value(metadata i32 %261, metadata !4801, metadata !DIExpression()), !dbg !4853
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #23, !dbg !5069
  %262 = add nuw nsw i32 %239, 1, !dbg !5072
  call void @llvm.dbg.value(metadata i32 %262, metadata !4842, metadata !DIExpression()), !dbg !5050
  %263 = icmp eq i32 %262, %164, !dbg !5051
  br i1 %263, label %264, label %238, !dbg !5052, !llvm.loop !5073

264:                                              ; preds = %259, %232
  %265 = phi i32 [ %234, %232 ], [ %261, %259 ], !dbg !5049
  call void @llvm.dbg.value(metadata i32 %265, metadata !4801, metadata !DIExpression()), !dbg !4853
  %266 = call i32 %2(i8* noundef null, i32 noundef 0, i8* noundef %3) #25, !dbg !5075
  br label %267, !dbg !5076

267:                                              ; preds = %127, %79, %257, %264, %157, %220, %225, %34, %36
  %268 = phi i32 [ %18, %36 ], [ %18, %34 ], [ %265, %264 ], [ %174, %157 ], [ %223, %220 ], [ %230, %225 ], [ %258, %257 ], [ %82, %79 ], [ %129, %127 ], !dbg !4853
  ret i32 %268, !dbg !5077
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @get_package_len(i8* noundef %0) unnamed_addr #1 !dbg !5078 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5082, metadata !DIExpression()), !dbg !5090
  call void @llvm.dbg.value(metadata i8* %0, metadata !5083, metadata !DIExpression()), !dbg !5090
  call void @llvm.dbg.value(metadata i8* %0, metadata !5084, metadata !DIExpression()), !dbg !5090
  %2 = load i8, i8* %0, align 1, !dbg !5091
  %3 = zext i8 %2 to i32, !dbg !5091
  %4 = shl nuw nsw i32 %3, 2, !dbg !5092
  call void @llvm.dbg.value(metadata i32 %4, metadata !5085, metadata !DIExpression()), !dbg !5090
  %5 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !5093
  %6 = load i8, i8* %5, align 1, !dbg !5093
  %7 = zext i8 %6 to i32, !dbg !5093
  call void @llvm.dbg.value(metadata i32 %7, metadata !5086, metadata !DIExpression()), !dbg !5090
  %8 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !5094
  %9 = load i8, i8* %8, align 1, !dbg !5094
  %10 = zext i8 %9 to i32, !dbg !5094
  call void @llvm.dbg.value(metadata i32 %10, metadata !5087, metadata !DIExpression()), !dbg !5090
  %11 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !5095
  call void @llvm.dbg.value(metadata i8* %11, metadata !5083, metadata !DIExpression()), !dbg !5090
  %12 = getelementptr inbounds i8, i8* %11, i32 %10, !dbg !5096
  call void @llvm.dbg.value(metadata i8* %12, metadata !5083, metadata !DIExpression()), !dbg !5090
  call void @llvm.dbg.value(metadata i32 0, metadata !5088, metadata !DIExpression()), !dbg !5097
  %13 = icmp eq i8 %6, 0, !dbg !5098
  br i1 %13, label %14, label %19, !dbg !5100

14:                                               ; preds = %19, %1
  %15 = phi i8* [ %12, %1 ], [ %25, %19 ], !dbg !5090
  %16 = ptrtoint i8* %15 to i32, !dbg !5101
  %17 = ptrtoint i8* %0 to i32, !dbg !5101
  %18 = sub i32 %16, %17, !dbg !5101
  ret i32 %18, !dbg !5102

19:                                               ; preds = %1, %19
  %20 = phi i32 [ %26, %19 ], [ 0, %1 ]
  %21 = phi i8* [ %25, %19 ], [ %12, %1 ]
  call void @llvm.dbg.value(metadata i32 %20, metadata !5088, metadata !DIExpression()), !dbg !5097
  call void @llvm.dbg.value(metadata i8* %21, metadata !5083, metadata !DIExpression()), !dbg !5090
  %22 = getelementptr inbounds i8, i8* %21, i32 1, !dbg !5103
  call void @llvm.dbg.value(metadata i8* %22, metadata !5083, metadata !DIExpression()), !dbg !5090
  %23 = tail call i32 @strlen(i8* noundef nonnull %22) #25, !dbg !5105
  %24 = add i32 %23, 1, !dbg !5106
  %25 = getelementptr inbounds i8, i8* %22, i32 %24, !dbg !5107
  call void @llvm.dbg.value(metadata i8* %25, metadata !5083, metadata !DIExpression()), !dbg !5090
  %26 = add nuw nsw i32 %20, 1, !dbg !5108
  call void @llvm.dbg.value(metadata i32 %26, metadata !5088, metadata !DIExpression()), !dbg !5097
  %27 = icmp eq i32 %26, %7, !dbg !5098
  br i1 %27, label %14, label %19, !dbg !5100, !llvm.loop !5109
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef readonly %0, i8* noundef %1, i8* noundef %2, i16 noundef zeroext %3) unnamed_addr #1 !dbg !5111 {
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %0, metadata !5115, metadata !DIExpression()), !dbg !5119
  call void @llvm.dbg.value(metadata i8* %1, metadata !5116, metadata !DIExpression()), !dbg !5119
  call void @llvm.dbg.value(metadata i8* %2, metadata !5117, metadata !DIExpression()), !dbg !5119
  call void @llvm.dbg.value(metadata i16 %3, metadata !5118, metadata !DIExpression()), !dbg !5119
  %5 = icmp eq i32 (i8*, i32, i8*)* %0, null, !dbg !5120
  br i1 %5, label %6, label %9, !dbg !5122

6:                                                ; preds = %4
  %7 = tail call i32 @strlen(i8* noundef %2) #25, !dbg !5123
  %8 = add i32 %7, 1, !dbg !5125
  br label %20, !dbg !5126

9:                                                ; preds = %4
  %10 = icmp eq i16 %3, 0, !dbg !5127
  br i1 %10, label %13, label %11, !dbg !5128

11:                                               ; preds = %9
  %12 = zext i16 %3 to i32, !dbg !5128
  br label %16, !dbg !5128

13:                                               ; preds = %9
  %14 = tail call i32 @strlen(i8* noundef %2) #25, !dbg !5129
  %15 = add i32 %14, 1, !dbg !5130
  br label %16, !dbg !5128

16:                                               ; preds = %13, %11
  %17 = phi i32 [ %12, %11 ], [ %15, %13 ], !dbg !5128
  %18 = and i32 %17, 65535, !dbg !5131
  call void @llvm.dbg.value(metadata i32 %17, metadata !5118, metadata !DIExpression()), !dbg !5119
  %19 = tail call i32 %0(i8* noundef %2, i32 noundef %18, i8* noundef %1) #25, !dbg !5132
  br label %20, !dbg !5133

20:                                               ; preds = %16, %6
  %21 = phi i32 [ %8, %6 ], [ %19, %16 ], !dbg !5119
  ret i32 %21, !dbg !5134
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !5135 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5137, metadata !DIExpression()), !dbg !5138
  ret i32 0, !dbg !5139
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #6 !dbg !5140 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !5144, metadata !DIExpression()), !dbg !5145
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !5146
  ret void, !dbg !5147
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #10 !dbg !5148 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !5151
  ret i8* %1, !dbg !5152
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !5153 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !5164, metadata !DIExpression()), !dbg !5175
  call void @llvm.dbg.value(metadata i8* %0, metadata !5163, metadata !DIExpression()), !dbg !5175
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #24, !dbg !5176
  ret void, !dbg !5178
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !5179 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5183, metadata !DIExpression()), !dbg !5185
  call void @llvm.dbg.value(metadata i8* %1, metadata !5184, metadata !DIExpression()), !dbg !5185
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !5186
  %4 = tail call i32 %3(i32 noundef %0) #25, !dbg !5186
  ret i32 %4, !dbg !5187
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !5188 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !5195, metadata !DIExpression()), !dbg !5196
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !5192, metadata !DIExpression()), !dbg !5196
  call void @llvm.dbg.value(metadata i8* %1, metadata !5193, metadata !DIExpression()), !dbg !5196
  call void @llvm.dbg.value(metadata i8* %2, metadata !5194, metadata !DIExpression()), !dbg !5196
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #25, !dbg !5197
  ret void, !dbg !5198
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !5199 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5203, metadata !DIExpression()), !dbg !5206
  call void @llvm.dbg.value(metadata i32 %1, metadata !5204, metadata !DIExpression()), !dbg !5206
  call void @llvm.dbg.value(metadata i32 0, metadata !5205, metadata !DIExpression()), !dbg !5206
  %3 = icmp eq i32 %1, 0, !dbg !5207
  br i1 %3, label %13, label %4, !dbg !5210

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !5205, metadata !DIExpression()), !dbg !5206
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !5211
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !5213
  %8 = load i8, i8* %7, align 1, !dbg !5213
  %9 = zext i8 %8 to i32, !dbg !5213
  %10 = tail call i32 %6(i32 noundef %9) #25, !dbg !5211
  %11 = add nuw i32 %5, 1, !dbg !5214
  call void @llvm.dbg.value(metadata i32 %11, metadata !5205, metadata !DIExpression()), !dbg !5206
  %12 = icmp eq i32 %11, %1, !dbg !5207
  br i1 %12, label %13, label %4, !dbg !5210, !llvm.loop !5215

13:                                               ; preds = %4, %2
  ret void, !dbg !5217
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !5218 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5222, metadata !DIExpression()), !dbg !5224
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !5225
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !5225
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !5223, metadata !DIExpression()), !dbg !5226
  call void @llvm.va_start(i8* nonnull %3), !dbg !5227
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !5228
  %5 = load i32, i32* %4, align 4, !dbg !5228
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !5228
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #24, !dbg !5228
  call void @llvm.va_end(i8* nonnull %3), !dbg !5229
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !5230
  ret void, !dbg !5230
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !5231 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5235, metadata !DIExpression()), !dbg !5240
  call void @llvm.dbg.value(metadata i32 %1, metadata !5236, metadata !DIExpression()), !dbg !5240
  call void @llvm.dbg.value(metadata i8* %2, metadata !5237, metadata !DIExpression()), !dbg !5240
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !5241
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !5241
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !5238, metadata !DIExpression()), !dbg !5242
  call void @llvm.va_start(i8* nonnull %5), !dbg !5243
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !5244
  %7 = load i32, i32* %6, align 4, !dbg !5244
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !5244
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #24, !dbg !5244
  call void @llvm.dbg.value(metadata i32 %9, metadata !5239, metadata !DIExpression()), !dbg !5240
  call void @llvm.va_end(i8* nonnull %5), !dbg !5245
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !5246
  ret i32 %9, !dbg !5247
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !5248 {
  %5 = alloca %struct.str_context, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !5255, metadata !DIExpression()), !dbg !5262
  call void @llvm.dbg.value(metadata i8* %0, metadata !5252, metadata !DIExpression()), !dbg !5262
  call void @llvm.dbg.value(metadata i32 %1, metadata !5253, metadata !DIExpression()), !dbg !5262
  call void @llvm.dbg.value(metadata i8* %2, metadata !5254, metadata !DIExpression()), !dbg !5262
  %6 = bitcast %struct.str_context* %5 to i8*, !dbg !5263
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #23, !dbg !5263
  call void @llvm.dbg.declare(metadata %struct.str_context* %5, metadata !5256, metadata !DIExpression()), !dbg !5264
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 0, !dbg !5265
  store i8* %0, i8** %7, align 4, !dbg !5265
  %8 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 1, !dbg !5265
  store i32 %1, i32* %8, align 4, !dbg !5265
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 2, !dbg !5265
  store i32 0, i32* %9, align 4, !dbg !5265
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #24, !dbg !5266
  %10 = load i32, i32* %9, align 4, !dbg !5267
  %11 = load i32, i32* %8, align 4, !dbg !5269
  %12 = icmp slt i32 %10, %11, !dbg !5270
  br i1 %12, label %13, label %15, !dbg !5271

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !5272
  store i8 0, i8* %14, align 1, !dbg !5274
  br label %15, !dbg !5275

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #23, !dbg !5276
  ret i32 %10, !dbg !5277
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.str_context* nocapture noundef %1) #11 !dbg !5278 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5283, metadata !DIExpression()), !dbg !5285
  call void @llvm.dbg.value(metadata %struct.str_context* %1, metadata !5284, metadata !DIExpression()), !dbg !5285
  %3 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 0, !dbg !5286
  %4 = load i8*, i8** %3, align 4, !dbg !5286
  %5 = icmp eq i8* %4, null, !dbg !5288
  %6 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !5289
  br i1 %5, label %12, label %8, !dbg !5290

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 1, !dbg !5291
  %10 = load i32, i32* %9, align 4, !dbg !5291
  %11 = icmp slt i32 %7, %10, !dbg !5292
  br i1 %11, label %15, label %12, !dbg !5293

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2, !dbg !5294
  %14 = add nsw i32 %7, 1, !dbg !5296
  store i32 %14, i32* %13, align 4, !dbg !5296
  br label %25, !dbg !5297

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !5298
  %17 = icmp eq i32 %7, %16, !dbg !5300
  br i1 %17, label %18, label %21, !dbg !5301

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !5302
  store i32 %19, i32* %6, align 4, !dbg !5302
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !5304
  store i8 0, i8* %20, align 1, !dbg !5305
  br label %25, !dbg !5306

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !5307
  %23 = add nsw i32 %7, 1, !dbg !5309
  store i32 %23, i32* %6, align 4, !dbg !5309
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !5310
  store i8 %22, i8* %24, align 1, !dbg !5311
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !5312
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #2 !dbg !5313 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !5323, metadata !DIExpression()), !dbg !5327
  call void @llvm.dbg.value(metadata i8* %1, metadata !5324, metadata !DIExpression()), !dbg !5327
  call void @llvm.dbg.value(metadata i8* %2, metadata !5325, metadata !DIExpression()), !dbg !5327
  call void @llvm.dbg.value(metadata i8* %3, metadata !5326, metadata !DIExpression()), !dbg !5327
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #25, !dbg !5328
  %5 = tail call fastcc %struct.k_thread* @k_current_get() #26, !dbg !5329
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #24, !dbg !5330
  unreachable, !dbg !5331
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #12 !dbg !5332 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #26, !dbg !5436
  ret %struct.k_thread* %1, !dbg !5437
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !5438 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !5442, metadata !DIExpression()), !dbg !5443
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !5444, !srcloc !5446
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !5447
  ret void, !dbg !5448
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #12 !dbg !5449 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !5450, !srcloc !5452
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #25, !dbg !5453
  ret %struct.k_thread* %1, !dbg !5454
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !5455 {
  %6 = alloca [22 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = extractvalue [1 x i32] %3, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !5468, metadata !DIExpression()), !dbg !5594
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !5465, metadata !DIExpression()), !dbg !5594
  call void @llvm.dbg.value(metadata i8* %1, metadata !5466, metadata !DIExpression()), !dbg !5594
  call void @llvm.dbg.value(metadata i8* %2, metadata !5467, metadata !DIExpression()), !dbg !5594
  call void @llvm.dbg.value(metadata i32 %4, metadata !5469, metadata !DIExpression()), !dbg !5594
  %10 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 0, !dbg !5595
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10) #23, !dbg !5595
  call void @llvm.dbg.declare(metadata [22 x i8]* %6, metadata !5470, metadata !DIExpression()), !dbg !5596
  call void @llvm.dbg.value(metadata i32 0, metadata !5474, metadata !DIExpression()), !dbg !5594
  call void @llvm.dbg.value(metadata i1 undef, metadata !5476, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5594
  %11 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %12 = bitcast %struct.anon* %7 to i8*
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 22
  %15 = bitcast %struct.conversion* %13 to i24*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %18 = bitcast %struct.anon* %7 to i8**
  %19 = bitcast %struct.anon* %7 to double*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %22 = ptrtoint i8* %14 to i32
  %23 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 1
  br label %24, !dbg !5597

24:                                               ; preds = %363, %5
  %25 = phi i32 [ %364, %363 ], [ 0, %5 ]
  %26 = phi i8* [ %39, %363 ], [ %2, %5 ]
  %27 = phi i8* [ %178, %363 ], [ %9, %5 ]
  br label %28, !dbg !5597

28:                                               ; preds = %24, %32
  %29 = phi i32 [ %37, %32 ], [ %25, %24 ], !dbg !5598
  %30 = phi i8* [ %34, %32 ], [ %26, %24 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !5468, metadata !DIExpression()), !dbg !5594
  call void @llvm.dbg.value(metadata i8* %30, metadata !5467, metadata !DIExpression()), !dbg !5594
  call void @llvm.dbg.value(metadata i32 %29, metadata !5474, metadata !DIExpression()), !dbg !5594
  %31 = load i8, i8* %30, align 1, !dbg !5599
  switch i8 %31, label %32 [
    i8 0, label %365
    i8 37, label %38
  ], !dbg !5597

32:                                               ; preds = %28
  %33 = zext i8 %31 to i32, !dbg !5599
  %34 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !5600
  call void @llvm.dbg.value(metadata i8* %34, metadata !5467, metadata !DIExpression()), !dbg !5594
  %35 = call i32 %11(i32 noundef %33, i8* noundef %1) #25, !dbg !5600
  call void @llvm.dbg.value(metadata i32 %35, metadata !5478, metadata !DIExpression()), !dbg !5601
  %36 = icmp slt i32 %35, 0, !dbg !5602
  %37 = add i32 %29, 1, !dbg !5600
  call void @llvm.dbg.value(metadata i32 undef, metadata !5474, metadata !DIExpression()), !dbg !5594
  br i1 %36, label %365, label %28, !llvm.loop !5604

38:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #23, !dbg !5606
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !5483, metadata !DIExpression()), !dbg !5607
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %12, i8 0, i32 24, i1 false), !dbg !5607
  call void @llvm.dbg.value(metadata %struct.conversion* %13, metadata !5526, metadata !DIExpression()), !dbg !5608
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !5529, metadata !DIExpression()), !dbg !5608
  call void @llvm.dbg.value(metadata i8* %30, metadata !5532, metadata !DIExpression()), !dbg !5608
  call void @llvm.dbg.value(metadata i32 -1, metadata !5533, metadata !DIExpression()), !dbg !5608
  call void @llvm.dbg.value(metadata i32 -1, metadata !5534, metadata !DIExpression()), !dbg !5608
  call void @llvm.dbg.value(metadata i8* null, metadata !5535, metadata !DIExpression()), !dbg !5608
  call void @llvm.dbg.value(metadata i8* %14, metadata !5536, metadata !DIExpression()), !dbg !5608
  call void @llvm.dbg.value(metadata i8 0, metadata !5537, metadata !DIExpression()), !dbg !5608
  %39 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %13, i8* noundef nonnull %30) #24, !dbg !5609
  call void @llvm.dbg.value(metadata i8* %39, metadata !5467, metadata !DIExpression()), !dbg !5594
  %40 = load i24, i24* %15, align 8, !dbg !5610
  %41 = and i24 %40, 256, !dbg !5610
  %42 = icmp eq i24 %41, 0, !dbg !5610
  br i1 %42, label %51, label %43, !dbg !5612

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !5613
  call void @llvm.dbg.value(metadata i8* %44, metadata !5468, metadata !DIExpression()), !dbg !5594
  %45 = bitcast i8* %27 to i32*, !dbg !5613
  %46 = load i32, i32* %45, align 4, !dbg !5613
  call void @llvm.dbg.value(metadata i32 %46, metadata !5533, metadata !DIExpression()), !dbg !5608
  %47 = icmp slt i32 %46, 0, !dbg !5615
  br i1 %47, label %48, label %56, !dbg !5617

48:                                               ; preds = %43
  %49 = or i24 %40, 4, !dbg !5618
  store i24 %49, i24* %15, align 8, !dbg !5618
  %50 = sub nsw i32 0, %46, !dbg !5620
  call void @llvm.dbg.value(metadata i32 %50, metadata !5533, metadata !DIExpression()), !dbg !5608
  br label %56, !dbg !5621

51:                                               ; preds = %38
  %52 = and i24 %40, 128, !dbg !5622
  %53 = icmp eq i24 %52, 0, !dbg !5622
  %54 = load i32, i32* %16, align 4
  %55 = select i1 %53, i32 -1, i32 %54, !dbg !5624
  br label %56, !dbg !5624

56:                                               ; preds = %51, %43, %48
  %57 = phi i24 [ %49, %48 ], [ %40, %43 ], [ %40, %51 ], !dbg !5625
  %58 = phi i32 [ %50, %48 ], [ %46, %43 ], [ %55, %51 ], !dbg !5608
  %59 = phi i8* [ %44, %48 ], [ %44, %43 ], [ %27, %51 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !5468, metadata !DIExpression()), !dbg !5594
  call void @llvm.dbg.value(metadata i32 %58, metadata !5533, metadata !DIExpression()), !dbg !5608
  %60 = and i24 %57, 1024, !dbg !5625
  %61 = icmp eq i24 %60, 0, !dbg !5625
  br i1 %61, label %69, label %62, !dbg !5626

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %59, i32 4, !dbg !5627
  call void @llvm.dbg.value(metadata i8* %63, metadata !5468, metadata !DIExpression()), !dbg !5594
  %64 = bitcast i8* %59 to i32*, !dbg !5627
  %65 = load i32, i32* %64, align 4, !dbg !5627
  call void @llvm.dbg.value(metadata i32 %65, metadata !5538, metadata !DIExpression()), !dbg !5628
  %66 = icmp slt i32 %65, 0, !dbg !5629
  br i1 %66, label %67, label %74, !dbg !5631

67:                                               ; preds = %62
  %68 = and i24 %57, -513, !dbg !5632
  store i24 %68, i24* %15, align 8, !dbg !5632
  br label %74, !dbg !5634

69:                                               ; preds = %56
  %70 = and i24 %57, 512, !dbg !5635
  %71 = icmp eq i24 %70, 0, !dbg !5635
  %72 = load i32, i32* %17, align 8
  %73 = select i1 %71, i32 -1, i32 %72, !dbg !5637
  br label %74, !dbg !5637

74:                                               ; preds = %69, %67, %62
  %75 = phi i24 [ %68, %67 ], [ %57, %62 ], [ %57, %69 ], !dbg !5638
  %76 = phi i32 [ -1, %67 ], [ %65, %62 ], [ %73, %69 ], !dbg !5608
  %77 = phi i8* [ %63, %67 ], [ %63, %62 ], [ %59, %69 ], !dbg !5608
  call void @llvm.dbg.value(metadata i8* %77, metadata !5468, metadata !DIExpression()), !dbg !5594
  call void @llvm.dbg.value(metadata i32 %76, metadata !5534, metadata !DIExpression()), !dbg !5608
  store i32 0, i32* %16, align 4, !dbg !5639
  store i32 0, i32* %17, align 8, !dbg !5640
  %78 = lshr i24 %75, 16, !dbg !5638
  call void @llvm.dbg.value(metadata i24 %78, metadata !5541, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5608
  %79 = lshr i24 %75, 11, !dbg !5641
  %80 = and i24 %79, 15, !dbg !5641
  %81 = zext i24 %80 to i32, !dbg !5641
  call void @llvm.dbg.value(metadata i32 %81, metadata !5542, metadata !DIExpression()), !dbg !5608
  %82 = trunc i24 %78 to i3, !dbg !5642
  switch i3 %82, label %177 [
    i3 1, label %83
    i3 2, label %125
    i3 -4, label %165
    i3 3, label %173
  ], !dbg !5642

83:                                               ; preds = %74
  switch i32 %81, label %84 [
    i32 7, label %110
    i32 6, label %110
    i32 5, label %102
    i32 3, label %89
    i32 4, label %94
  ], !dbg !5643

84:                                               ; preds = %83
  %85 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5646
  call void @llvm.dbg.value(metadata i8* %85, metadata !5468, metadata !DIExpression()), !dbg !5594
  %86 = bitcast i8* %77 to i32*, !dbg !5646
  %87 = load i32, i32* %86, align 4, !dbg !5646
  %88 = sext i32 %87 to i64, !dbg !5646
  store i64 %88, i64* %20, align 8, !dbg !5648
  br label %115, !dbg !5649

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5650
  call void @llvm.dbg.value(metadata i8* %90, metadata !5468, metadata !DIExpression()), !dbg !5594
  %91 = bitcast i8* %77 to i32*, !dbg !5650
  %92 = load i32, i32* %91, align 4, !dbg !5650
  %93 = sext i32 %92 to i64, !dbg !5650
  store i64 %93, i64* %20, align 8, !dbg !5653
  br label %115, !dbg !5654

94:                                               ; preds = %83
  %95 = ptrtoint i8* %77 to i32, !dbg !5655
  %96 = add i32 %95, 7, !dbg !5655
  %97 = and i32 %96, -8, !dbg !5655
  %98 = inttoptr i32 %97 to i8*, !dbg !5655
  %99 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !5655
  call void @llvm.dbg.value(metadata i8* %99, metadata !5468, metadata !DIExpression()), !dbg !5594
  %100 = inttoptr i32 %97 to i64*, !dbg !5655
  %101 = load i64, i64* %100, align 8, !dbg !5655
  store i64 %101, i64* %20, align 8, !dbg !5656
  br label %115, !dbg !5657

102:                                              ; preds = %83
  %103 = ptrtoint i8* %77 to i32, !dbg !5658
  %104 = add i32 %103, 7, !dbg !5658
  %105 = and i32 %104, -8, !dbg !5658
  %106 = inttoptr i32 %105 to i8*, !dbg !5658
  %107 = getelementptr inbounds i8, i8* %106, i32 8, !dbg !5658
  call void @llvm.dbg.value(metadata i8* %107, metadata !5468, metadata !DIExpression()), !dbg !5594
  %108 = inttoptr i32 %105 to i64*, !dbg !5658
  %109 = load i64, i64* %108, align 8, !dbg !5658
  store i64 %109, i64* %20, align 8, !dbg !5659
  br label %115, !dbg !5660

110:                                              ; preds = %83, %83
  %111 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5661
  call void @llvm.dbg.value(metadata i8* %111, metadata !5468, metadata !DIExpression()), !dbg !5594
  %112 = bitcast i8* %77 to i32*, !dbg !5661
  %113 = load i32, i32* %112, align 4, !dbg !5661
  %114 = sext i32 %113 to i64, !dbg !5662
  store i64 %114, i64* %20, align 8, !dbg !5663
  br label %115, !dbg !5664

115:                                              ; preds = %110, %102, %94, %89, %84
  %116 = phi i64 [ %88, %84 ], [ %101, %94 ], [ %93, %89 ], [ %109, %102 ], [ %114, %110 ]
  %117 = phi i8* [ %85, %84 ], [ %99, %94 ], [ %90, %89 ], [ %107, %102 ], [ %111, %110 ], !dbg !5665
  call void @llvm.dbg.value(metadata i8* %117, metadata !5468, metadata !DIExpression()), !dbg !5594
  %118 = trunc i24 %79 to i4, !dbg !5666
  switch i4 %118, label %177 [
    i4 1, label %119
    i4 2, label %122
  ], !dbg !5666

119:                                              ; preds = %115
  %120 = shl i64 %116, 56, !dbg !5667
  %121 = ashr exact i64 %120, 56, !dbg !5667
  store i64 %121, i64* %20, align 8, !dbg !5670
  br label %177, !dbg !5671

122:                                              ; preds = %115
  %123 = shl i64 %116, 48, !dbg !5672
  %124 = ashr exact i64 %123, 48, !dbg !5672
  store i64 %124, i64* %20, align 8, !dbg !5675
  br label %177, !dbg !5676

125:                                              ; preds = %74
  switch i32 %81, label %126 [
    i32 7, label %152
    i32 6, label %152
    i32 5, label %144
    i32 3, label %131
    i32 4, label %136
  ], !dbg !5677

126:                                              ; preds = %125
  %127 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5680
  call void @llvm.dbg.value(metadata i8* %127, metadata !5468, metadata !DIExpression()), !dbg !5594
  %128 = bitcast i8* %77 to i32*, !dbg !5680
  %129 = load i32, i32* %128, align 4, !dbg !5680
  %130 = zext i32 %129 to i64, !dbg !5680
  store i64 %130, i64* %20, align 8, !dbg !5682
  br label %157, !dbg !5683

131:                                              ; preds = %125
  %132 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5684
  call void @llvm.dbg.value(metadata i8* %132, metadata !5468, metadata !DIExpression()), !dbg !5594
  call void @llvm.dbg.value(metadata i8* %132, metadata !5468, metadata !DIExpression()), !dbg !5594
  %133 = bitcast i8* %77 to i32*, !dbg !5684
  %134 = load i32, i32* %133, align 4, !dbg !5684
  %135 = zext i32 %134 to i64, !dbg !5684
  store i64 %135, i64* %20, align 8, !dbg !5684
  br label %157

136:                                              ; preds = %125
  %137 = ptrtoint i8* %77 to i32, !dbg !5686
  %138 = add i32 %137, 7, !dbg !5686
  %139 = and i32 %138, -8, !dbg !5686
  %140 = inttoptr i32 %139 to i8*, !dbg !5686
  %141 = getelementptr inbounds i8, i8* %140, i32 8, !dbg !5686
  call void @llvm.dbg.value(metadata i8* %141, metadata !5468, metadata !DIExpression()), !dbg !5594
  %142 = inttoptr i32 %139 to i64*, !dbg !5686
  %143 = load i64, i64* %142, align 8, !dbg !5686
  store i64 %143, i64* %20, align 8, !dbg !5687
  br label %157, !dbg !5688

144:                                              ; preds = %125
  %145 = ptrtoint i8* %77 to i32, !dbg !5689
  %146 = add i32 %145, 7, !dbg !5689
  %147 = and i32 %146, -8, !dbg !5689
  %148 = inttoptr i32 %147 to i8*, !dbg !5689
  %149 = getelementptr inbounds i8, i8* %148, i32 8, !dbg !5689
  call void @llvm.dbg.value(metadata i8* %149, metadata !5468, metadata !DIExpression()), !dbg !5594
  %150 = inttoptr i32 %147 to i64*, !dbg !5689
  %151 = load i64, i64* %150, align 8, !dbg !5689
  store i64 %151, i64* %20, align 8, !dbg !5690
  br label %157, !dbg !5691

152:                                              ; preds = %125, %125
  %153 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5692
  call void @llvm.dbg.value(metadata i8* %153, metadata !5468, metadata !DIExpression()), !dbg !5594
  %154 = bitcast i8* %77 to i32*, !dbg !5692
  %155 = load i32, i32* %154, align 4, !dbg !5692
  %156 = zext i32 %155 to i64, !dbg !5693
  store i64 %156, i64* %20, align 8, !dbg !5694
  br label %157, !dbg !5695

157:                                              ; preds = %131, %152, %144, %136, %126
  %158 = phi i64 [ %130, %126 ], [ %143, %136 ], [ %151, %144 ], [ %156, %152 ], [ %135, %131 ]
  %159 = phi i8* [ %127, %126 ], [ %141, %136 ], [ %149, %144 ], [ %153, %152 ], [ %132, %131 ], !dbg !5696
  call void @llvm.dbg.value(metadata i8* %159, metadata !5468, metadata !DIExpression()), !dbg !5594
  %160 = trunc i24 %79 to i4, !dbg !5697
  switch i4 %160, label %177 [
    i4 1, label %161
    i4 2, label %163
  ], !dbg !5697

161:                                              ; preds = %157
  %162 = and i64 %158, 255, !dbg !5698
  store i64 %162, i64* %20, align 8, !dbg !5701
  br label %177, !dbg !5702

163:                                              ; preds = %157
  %164 = and i64 %158, 65535, !dbg !5703
  store i64 %164, i64* %20, align 8, !dbg !5706
  br label %177, !dbg !5707

165:                                              ; preds = %74
  %166 = ptrtoint i8* %77 to i32, !dbg !5708
  %167 = add i32 %166, 7, !dbg !5708
  %168 = and i32 %167, -8, !dbg !5708
  %169 = inttoptr i32 %168 to i8*, !dbg !5708
  %170 = getelementptr inbounds i8, i8* %169, i32 8, !dbg !5708
  call void @llvm.dbg.value(metadata i8* %170, metadata !5468, metadata !DIExpression()), !dbg !5594
  call void @llvm.dbg.value(metadata i8* %170, metadata !5468, metadata !DIExpression()), !dbg !5594
  %171 = inttoptr i32 %168 to double*, !dbg !5708
  %172 = load double, double* %171, align 8, !dbg !5708
  store double %172, double* %19, align 8, !dbg !5708
  br label %177

173:                                              ; preds = %74
  %174 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5712
  call void @llvm.dbg.value(metadata i8* %174, metadata !5468, metadata !DIExpression()), !dbg !5594
  %175 = bitcast i8* %77 to i8**, !dbg !5712
  %176 = load i8*, i8** %175, align 4, !dbg !5712
  store i8* %176, i8** %18, align 8, !dbg !5715
  br label %177, !dbg !5716

177:                                              ; preds = %165, %74, %157, %115, %163, %161, %173, %119, %122
  %178 = phi i8* [ %117, %119 ], [ %117, %122 ], [ %159, %161 ], [ %159, %163 ], [ %174, %173 ], [ %117, %115 ], [ %159, %157 ], [ %77, %74 ], [ %170, %165 ], !dbg !5608
  call void @llvm.dbg.value(metadata i8* %178, metadata !5468, metadata !DIExpression()), !dbg !5594
  %179 = and i24 %75, 3, !dbg !5717
  %180 = icmp eq i24 %179, 0, !dbg !5717
  br i1 %180, label %185, label %181, !dbg !5717

181:                                              ; preds = %177
  %182 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %30, i8* noundef nonnull %39) #24, !dbg !5718
  call void @llvm.dbg.value(metadata i32 %182, metadata !5543, metadata !DIExpression()), !dbg !5719
  %183 = icmp slt i32 %182, 0, !dbg !5720
  %184 = add i32 %182, %29, !dbg !5718
  call void @llvm.dbg.value(metadata i32 undef, metadata !5474, metadata !DIExpression()), !dbg !5594
  br i1 %183, label %361, label %363

185:                                              ; preds = %177
  %186 = load i8, i8* %21, align 1, !dbg !5722
  switch i8 %186, label %363 [
    i8 37, label %187
    i8 115, label %191
    i8 99, label %198
    i8 100, label %201
    i8 105, label %201
    i8 111, label %212
    i8 117, label %212
    i8 120, label %212
    i8 88, label %212
    i8 112, label %230
    i8 110, label %239
  ], !dbg !5723

187:                                              ; preds = %185
  %188 = call i32 %11(i32 noundef 37, i8* noundef %1) #25, !dbg !5724
  call void @llvm.dbg.value(metadata i32 %188, metadata !5547, metadata !DIExpression()), !dbg !5725
  %189 = icmp slt i32 %188, 0, !dbg !5726
  %190 = add i32 %29, 1, !dbg !5724
  call void @llvm.dbg.value(metadata i32 undef, metadata !5474, metadata !DIExpression()), !dbg !5594
  br i1 %189, label %361, label %363

191:                                              ; preds = %185
  %192 = load i8*, i8** %18, align 8, !dbg !5728
  call void @llvm.dbg.value(metadata i8* %192, metadata !5535, metadata !DIExpression()), !dbg !5608
  %193 = icmp sgt i32 %76, -1, !dbg !5729
  br i1 %193, label %194, label %196, !dbg !5731

194:                                              ; preds = %191
  %195 = call i32 @strnlen(i8* noundef %192, i32 noundef %76) #25, !dbg !5732
  call void @llvm.dbg.value(metadata i32 %195, metadata !5550, metadata !DIExpression()), !dbg !5734
  br label %241, !dbg !5735

196:                                              ; preds = %191
  %197 = call i32 @strlen(i8* noundef %192) #25, !dbg !5736
  call void @llvm.dbg.value(metadata i32 %197, metadata !5550, metadata !DIExpression()), !dbg !5734
  br label %241

198:                                              ; preds = %185
  call void @llvm.dbg.value(metadata i8* %10, metadata !5535, metadata !DIExpression()), !dbg !5608
  %199 = load i64, i64* %20, align 8, !dbg !5738
  %200 = trunc i64 %199 to i8, !dbg !5739
  store i8 %200, i8* %10, align 1, !dbg !5740
  call void @llvm.dbg.value(metadata i8* %23, metadata !5536, metadata !DIExpression()), !dbg !5608
  br label %245, !dbg !5741

201:                                              ; preds = %185, %185
  %202 = and i24 %75, 8, !dbg !5742
  %203 = icmp eq i24 %202, 0, !dbg !5742
  %204 = trunc i24 %75 to i8, !dbg !5744
  %205 = shl i8 %204, 1, !dbg !5744
  %206 = and i8 %205, 32, !dbg !5744
  %207 = select i1 %203, i8 %206, i8 43, !dbg !5744
  call void @llvm.dbg.value(metadata i8 %207, metadata !5537, metadata !DIExpression()), !dbg !5608
  %208 = load i64, i64* %20, align 8, !dbg !5745
  call void @llvm.dbg.value(metadata i64 %208, metadata !5475, metadata !DIExpression()), !dbg !5594
  %209 = icmp slt i64 %208, 0, !dbg !5746
  br i1 %209, label %210, label %212, !dbg !5748

210:                                              ; preds = %201
  call void @llvm.dbg.value(metadata i8 45, metadata !5537, metadata !DIExpression()), !dbg !5608
  %211 = sub nsw i64 0, %208, !dbg !5749
  store i64 %211, i64* %20, align 8, !dbg !5751
  br label %212, !dbg !5752

212:                                              ; preds = %201, %210, %185, %185, %185, %185
  %213 = phi i8 [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 45, %210 ], [ %207, %201 ], !dbg !5608
  call void @llvm.dbg.value(metadata i8 %213, metadata !5537, metadata !DIExpression()), !dbg !5608
  %214 = load i64, i64* %20, align 8, !dbg !5753
  %215 = call fastcc i8* @encode_uint(i64 noundef %214, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #24, !dbg !5754
  call void @llvm.dbg.value(metadata i8* %215, metadata !5535, metadata !DIExpression()), !dbg !5608
  br label %216, !dbg !5755

216:                                              ; preds = %233, %212
  %217 = phi i8 [ 0, %233 ], [ %213, %212 ], !dbg !5756
  %218 = phi i8* [ %236, %233 ], [ %215, %212 ], !dbg !5757
  call void @llvm.dbg.value(metadata i8* %218, metadata !5535, metadata !DIExpression()), !dbg !5608
  call void @llvm.dbg.value(metadata i8 %217, metadata !5537, metadata !DIExpression()), !dbg !5608
  call void @llvm.dbg.label(metadata !5593), !dbg !5758
  %219 = icmp sgt i32 %76, -1, !dbg !5759
  br i1 %219, label %222, label %220, !dbg !5760

220:                                              ; preds = %216
  %221 = load i24, i24* %15, align 8, !dbg !5761
  br label %245, !dbg !5760

222:                                              ; preds = %216
  %223 = ptrtoint i8* %218 to i32, !dbg !5763
  %224 = sub i32 %22, %223, !dbg !5763
  call void @llvm.dbg.value(metadata i32 %224, metadata !5552, metadata !DIExpression()), !dbg !5764
  %225 = load i24, i24* %15, align 8, !dbg !5765
  %226 = and i24 %225, -65, !dbg !5765
  store i24 %226, i24* %15, align 8, !dbg !5765
  %227 = icmp ugt i32 %76, %224, !dbg !5766
  br i1 %227, label %228, label %245, !dbg !5768

228:                                              ; preds = %222
  %229 = sub nsw i32 %76, %224, !dbg !5769
  store i32 %229, i32* %16, align 4, !dbg !5771
  br label %245, !dbg !5772

230:                                              ; preds = %185
  %231 = load i8*, i8** %18, align 8, !dbg !5773
  %232 = icmp eq i8* %231, null, !dbg !5775
  br i1 %232, label %245, label %233, !dbg !5776

233:                                              ; preds = %230
  %234 = ptrtoint i8* %231 to i32, !dbg !5777
  %235 = zext i32 %234 to i64, !dbg !5777
  %236 = call fastcc i8* @encode_uint(i64 noundef %235, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #24, !dbg !5779
  call void @llvm.dbg.value(metadata i8* %236, metadata !5535, metadata !DIExpression()), !dbg !5608
  %237 = load i24, i24* %15, align 8, !dbg !5780
  %238 = or i24 %237, 1048576, !dbg !5780
  store i24 %238, i24* %15, align 8, !dbg !5780
  store i8 120, i8* %21, align 1, !dbg !5781
  br label %216, !dbg !5782

239:                                              ; preds = %185
  %240 = load i8*, i8** %18, align 8, !dbg !5783
  call fastcc void @store_count(%struct.conversion* noundef nonnull %13, i8* noundef %240, i32 noundef %29) #24, !dbg !5786
  br label %363, !dbg !5787

241:                                              ; preds = %194, %196
  %242 = phi i32 [ %195, %194 ], [ %197, %196 ], !dbg !5788
  call void @llvm.dbg.value(metadata i32 %242, metadata !5550, metadata !DIExpression()), !dbg !5734
  %243 = getelementptr inbounds i8, i8* %192, i32 %242, !dbg !5789
  call void @llvm.dbg.value(metadata i32 -1, metadata !5534, metadata !DIExpression()), !dbg !5608
  call void @llvm.dbg.value(metadata i32 %29, metadata !5474, metadata !DIExpression()), !dbg !5594
  call void @llvm.dbg.value(metadata i8* %192, metadata !5535, metadata !DIExpression()), !dbg !5608
  call void @llvm.dbg.value(metadata i8* %243, metadata !5536, metadata !DIExpression()), !dbg !5608
  call void @llvm.dbg.value(metadata i8 0, metadata !5537, metadata !DIExpression()), !dbg !5608
  %244 = icmp eq i8* %192, null, !dbg !5790
  br i1 %244, label %363, label %245, !dbg !5792, !llvm.loop !5604

245:                                              ; preds = %220, %230, %222, %228, %198, %241
  %246 = phi i24 [ %75, %241 ], [ %75, %230 ], [ %226, %222 ], [ %226, %228 ], [ %75, %198 ], [ %221, %220 ], !dbg !5761
  %247 = phi i8* [ %192, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.28, i32 0, i32 0), %230 ], [ %218, %222 ], [ %218, %228 ], [ %10, %198 ], [ %218, %220 ]
  %248 = phi i8* [ %243, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.28, i32 0, i32 5), %230 ], [ %14, %222 ], [ %14, %228 ], [ %23, %198 ], [ %14, %220 ]
  %249 = phi i8 [ 0, %241 ], [ 0, %230 ], [ %217, %222 ], [ %217, %228 ], [ 0, %198 ], [ %217, %220 ]
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i8* %247), metadata !5555, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5608
  call void @llvm.dbg.value(metadata i32 0, metadata !5556, metadata !DIExpression()), !dbg !5608
  %250 = zext i8 %249 to i32, !dbg !5793
  %251 = icmp eq i8 %249, 0, !dbg !5795
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i8* %247), metadata !5555, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5608
  call void @llvm.dbg.value(metadata i32 undef, metadata !5555, metadata !DIExpression()), !dbg !5608
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !5555, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !5608
  call void @llvm.dbg.value(metadata i32 undef, metadata !5555, metadata !DIExpression()), !dbg !5608
  %252 = icmp sgt i32 %58, 0, !dbg !5796
  br i1 %252, label %253, label %302, !dbg !5797

253:                                              ; preds = %245
  %254 = and i24 %246, 1048576, !dbg !5761
  %255 = icmp eq i24 %254, 0, !dbg !5761
  %256 = ptrtoint i8* %248 to i32, !dbg !5798
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i8* %247), metadata !5555, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5608
  %257 = ptrtoint i8* %247 to i32, !dbg !5798
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i32 %257), metadata !5555, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5608
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i32 %257), metadata !5555, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5608
  %258 = xor i1 %251, true, !dbg !5799
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !5555, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5608
  %259 = sext i1 %258 to i32, !dbg !5799
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !5555, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5608
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %258, i32 %257), metadata !5555, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5608
  %260 = lshr i24 %246, 19, !dbg !5800
  %261 = and i24 %260, 1, !dbg !5800
  %262 = select i1 %255, i24 %261, i24 2, !dbg !5800
  %263 = zext i24 %262 to i32, !dbg !5800
  %264 = add i32 %257, %259, !dbg !5800
  %265 = add i32 %256, %263, !dbg !5800
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i32 undef, i32 %263, i1 %258, i32 %257), metadata !5555, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !5608
  %266 = and i24 %246, 4194304, !dbg !5801
  %267 = icmp eq i24 %266, 0, !dbg !5801
  %268 = load i32, i32* %16, align 4, !dbg !5803
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %268), metadata !5555, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !5608
  call void @llvm.dbg.value(metadata i32 undef, metadata !5555, metadata !DIExpression()), !dbg !5608
  %269 = load i32, i32* %17, align 8, !dbg !5804
  %270 = select i1 %267, i32 0, i32 %269, !dbg !5804
  call void @llvm.dbg.value(metadata i32 undef, metadata !5555, metadata !DIExpression()), !dbg !5608
  %271 = add i32 %264, %58, !dbg !5804
  %272 = add i32 %265, %268, !dbg !5804
  %273 = add i32 %272, %270, !dbg !5805
  %274 = sub i32 %271, %273, !dbg !5805
  call void @llvm.dbg.value(metadata i32 %274, metadata !5533, metadata !DIExpression()), !dbg !5608
  %275 = and i24 %246, 4, !dbg !5806
  %276 = icmp eq i24 %275, 0, !dbg !5806
  br i1 %276, label %277, label %302, !dbg !5807

277:                                              ; preds = %253
  call void @llvm.dbg.value(metadata i8 32, metadata !5557, metadata !DIExpression()), !dbg !5808
  %278 = and i24 %246, 64, !dbg !5809
  %279 = icmp eq i24 %278, 0, !dbg !5809
  %280 = select i1 %279, i1 true, i1 %251, !dbg !5810
  %281 = select i1 %279, i8 %249, i8 0, !dbg !5810
  %282 = select i1 %279, i32 32, i32 48, !dbg !5810
  br i1 %280, label %287, label %283, !dbg !5810

283:                                              ; preds = %277
  %284 = call i32 %11(i32 noundef %250, i8* noundef %1) #25, !dbg !5811
  call void @llvm.dbg.value(metadata i32 %284, metadata !5562, metadata !DIExpression()), !dbg !5812
  %285 = icmp slt i32 %284, 0, !dbg !5813
  %286 = add i32 %29, 1, !dbg !5811
  call void @llvm.dbg.value(metadata i32 undef, metadata !5474, metadata !DIExpression()), !dbg !5594
  br i1 %285, label %361, label %287

287:                                              ; preds = %277, %283
  %288 = phi i8 [ %281, %277 ], [ 0, %283 ], !dbg !5608
  %289 = phi i32 [ %282, %277 ], [ 48, %283 ]
  %290 = phi i32 [ %29, %277 ], [ %286, %283 ], !dbg !5598
  call void @llvm.dbg.value(metadata i32 %290, metadata !5474, metadata !DIExpression()), !dbg !5594
  call void @llvm.dbg.value(metadata i8 undef, metadata !5557, metadata !DIExpression()), !dbg !5808
  call void @llvm.dbg.value(metadata i8 %288, metadata !5537, metadata !DIExpression()), !dbg !5608
  %291 = call i32 @llvm.smin.i32(i32 %274, i32 0), !dbg !5815
  %292 = add i32 %291, -1, !dbg !5815
  br label %293, !dbg !5815

293:                                              ; preds = %297, %287
  %294 = phi i32 [ %274, %287 ], [ %298, %297 ], !dbg !5816
  %295 = phi i32 [ %290, %287 ], [ %301, %297 ], !dbg !5598
  call void @llvm.dbg.value(metadata i32 %295, metadata !5474, metadata !DIExpression()), !dbg !5594
  call void @llvm.dbg.value(metadata i32 %294, metadata !5533, metadata !DIExpression()), !dbg !5608
  call void @llvm.dbg.value(metadata i32 %294, metadata !5533, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5608
  %296 = icmp sgt i32 %294, 0, !dbg !5817
  br i1 %296, label %297, label %302, !dbg !5815

297:                                              ; preds = %293
  %298 = add nsw i32 %294, -1, !dbg !5818
  call void @llvm.dbg.value(metadata i32 %298, metadata !5533, metadata !DIExpression()), !dbg !5608
  %299 = call i32 %11(i32 noundef %289, i8* noundef %1) #25, !dbg !5819
  call void @llvm.dbg.value(metadata i32 %299, metadata !5568, metadata !DIExpression()), !dbg !5820
  %300 = icmp slt i32 %299, 0, !dbg !5821
  %301 = add i32 %295, 1, !dbg !5819
  call void @llvm.dbg.value(metadata i32 undef, metadata !5474, metadata !DIExpression()), !dbg !5594
  br i1 %300, label %361, label %293, !llvm.loop !5823

302:                                              ; preds = %293, %253, %245
  %303 = phi i8 [ %249, %253 ], [ %249, %245 ], [ %288, %293 ], !dbg !5608
  %304 = phi i32 [ %274, %253 ], [ %58, %245 ], [ %292, %293 ], !dbg !5608
  %305 = phi i32 [ %29, %253 ], [ %29, %245 ], [ %295, %293 ], !dbg !5598
  call void @llvm.dbg.value(metadata i32 %305, metadata !5474, metadata !DIExpression()), !dbg !5594
  call void @llvm.dbg.value(metadata i32 %304, metadata !5533, metadata !DIExpression()), !dbg !5608
  call void @llvm.dbg.value(metadata i8 %303, metadata !5537, metadata !DIExpression()), !dbg !5608
  %306 = icmp eq i8 %303, 0, !dbg !5825
  br i1 %306, label %312, label %307, !dbg !5826

307:                                              ; preds = %302
  %308 = zext i8 %303 to i32, !dbg !5827
  %309 = call i32 %11(i32 noundef %308, i8* noundef %1) #25, !dbg !5828
  call void @llvm.dbg.value(metadata i32 %309, metadata !5571, metadata !DIExpression()), !dbg !5829
  %310 = icmp slt i32 %309, 0, !dbg !5830
  %311 = add i32 %305, 1, !dbg !5828
  call void @llvm.dbg.value(metadata i32 undef, metadata !5474, metadata !DIExpression()), !dbg !5594
  br i1 %310, label %361, label %312

312:                                              ; preds = %307, %302
  %313 = phi i32 [ %311, %307 ], [ %305, %302 ], !dbg !5598
  call void @llvm.dbg.value(metadata i32 %313, metadata !5474, metadata !DIExpression()), !dbg !5594
  %314 = lshr i24 %246, 20, !dbg !5832
  %315 = lshr i24 %246, 19, !dbg !5833
  %316 = or i24 %314, %315, !dbg !5834
  %317 = and i24 %316, 1, !dbg !5834
  %318 = icmp eq i24 %317, 0, !dbg !5834
  br i1 %318, label %323, label %319, !dbg !5835

319:                                              ; preds = %312
  %320 = call i32 %11(i32 noundef 48, i8* noundef %1) #25, !dbg !5836
  call void @llvm.dbg.value(metadata i32 %320, metadata !5575, metadata !DIExpression()), !dbg !5837
  %321 = icmp slt i32 %320, 0, !dbg !5838
  %322 = add i32 %313, 1, !dbg !5836
  call void @llvm.dbg.value(metadata i32 undef, metadata !5474, metadata !DIExpression()), !dbg !5594
  br i1 %321, label %361, label %323

323:                                              ; preds = %319, %312
  %324 = phi i32 [ %322, %319 ], [ %313, %312 ], !dbg !5598
  call void @llvm.dbg.value(metadata i32 %324, metadata !5474, metadata !DIExpression()), !dbg !5594
  %325 = and i24 %246, 1048576, !dbg !5840
  %326 = icmp eq i24 %325, 0, !dbg !5840
  br i1 %326, label %333, label %327, !dbg !5841

327:                                              ; preds = %323
  %328 = load i8, i8* %21, align 1, !dbg !5842
  %329 = zext i8 %328 to i32, !dbg !5842
  %330 = call i32 %11(i32 noundef %329, i8* noundef %1) #25, !dbg !5842
  call void @llvm.dbg.value(metadata i32 %330, metadata !5581, metadata !DIExpression()), !dbg !5843
  %331 = icmp slt i32 %330, 0, !dbg !5844
  %332 = add i32 %324, 1, !dbg !5842
  call void @llvm.dbg.value(metadata i32 undef, metadata !5474, metadata !DIExpression()), !dbg !5594
  br i1 %331, label %361, label %333

333:                                              ; preds = %327, %323
  %334 = phi i32 [ %332, %327 ], [ %324, %323 ], !dbg !5598
  call void @llvm.dbg.value(metadata i32 %334, metadata !5474, metadata !DIExpression()), !dbg !5594
  %335 = load i32, i32* %16, align 4, !dbg !5846
  call void @llvm.dbg.value(metadata i32 %335, metadata !5556, metadata !DIExpression()), !dbg !5608
  br label %336, !dbg !5847

336:                                              ; preds = %340, %333
  %337 = phi i32 [ %335, %333 ], [ %341, %340 ], !dbg !5848
  %338 = phi i32 [ %334, %333 ], [ %344, %340 ], !dbg !5598
  call void @llvm.dbg.value(metadata i32 %338, metadata !5474, metadata !DIExpression()), !dbg !5594
  call void @llvm.dbg.value(metadata i32 %337, metadata !5556, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5608
  %339 = icmp sgt i32 %337, 0, !dbg !5849
  br i1 %339, label %340, label %345, !dbg !5847

340:                                              ; preds = %336
  %341 = add nsw i32 %337, -1, !dbg !5850
  call void @llvm.dbg.value(metadata i32 %341, metadata !5556, metadata !DIExpression()), !dbg !5608
  %342 = call i32 %11(i32 noundef 48, i8* noundef %1) #25, !dbg !5851
  call void @llvm.dbg.value(metadata i32 %342, metadata !5585, metadata !DIExpression()), !dbg !5852
  %343 = icmp slt i32 %342, 0, !dbg !5853
  %344 = add i32 %338, 1, !dbg !5851
  call void @llvm.dbg.value(metadata i32 undef, metadata !5474, metadata !DIExpression()), !dbg !5594
  br i1 %343, label %361, label %336, !llvm.loop !5855

345:                                              ; preds = %336
  %346 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %247, i8* noundef %248) #24, !dbg !5857
  call void @llvm.dbg.value(metadata i32 %346, metadata !5588, metadata !DIExpression()), !dbg !5858
  %347 = icmp slt i32 %346, 0, !dbg !5859
  call void @llvm.dbg.value(metadata i32 undef, metadata !5474, metadata !DIExpression()), !dbg !5594
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = add i32 %346, %338, !dbg !5857
  call void @llvm.dbg.value(metadata i32 %349, metadata !5474, metadata !DIExpression()), !dbg !5594
  call void @llvm.dbg.value(metadata i32 %304, metadata !5533, metadata !DIExpression()), !dbg !5608
  %350 = icmp sgt i32 %304, 0, !dbg !5861
  br i1 %350, label %351, label %363, !dbg !5862

351:                                              ; preds = %348
  %352 = add nuw i32 %346, %304, !dbg !5862
  %353 = add i32 %352, %338, !dbg !5862
  br label %354, !dbg !5862

354:                                              ; preds = %351, %358
  %355 = phi i32 [ %359, %358 ], [ %304, %351 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !5474, metadata !DIExpression()), !dbg !5594
  call void @llvm.dbg.value(metadata i32 %355, metadata !5533, metadata !DIExpression()), !dbg !5608
  %356 = call i32 %11(i32 noundef 32, i8* noundef %1) #25, !dbg !5863
  call void @llvm.dbg.value(metadata i32 %356, metadata !5590, metadata !DIExpression()), !dbg !5864
  %357 = icmp slt i32 %356, 0, !dbg !5865
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = add nsw i32 %355, -1, !dbg !5867
  call void @llvm.dbg.value(metadata i32 undef, metadata !5474, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5594
  call void @llvm.dbg.value(metadata i32 %359, metadata !5533, metadata !DIExpression()), !dbg !5608
  %360 = icmp sgt i32 %355, 1, !dbg !5861
  br i1 %360, label %354, label %363, !dbg !5862, !llvm.loop !5868

361:                                              ; preds = %345, %327, %319, %307, %187, %283, %181, %297, %340, %354
  %362 = phi i32 [ %356, %354 ], [ %342, %340 ], [ %299, %297 ], [ %188, %187 ], [ %309, %307 ], [ %320, %319 ], [ %330, %327 ], [ %346, %345 ], [ %284, %283 ], [ %182, %181 ]
  call void @llvm.dbg.value(metadata i32 %364, metadata !5474, metadata !DIExpression()), !dbg !5594
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #23, !dbg !5605
  br label %365

363:                                              ; preds = %358, %348, %187, %239, %185, %181, %241
  %364 = phi i32 [ %29, %241 ], [ %184, %181 ], [ %190, %187 ], [ %29, %239 ], [ %29, %185 ], [ %349, %348 ], [ %353, %358 ], !dbg !5598
  call void @llvm.dbg.value(metadata i32 %364, metadata !5474, metadata !DIExpression()), !dbg !5594
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #23, !dbg !5605
  br label %24

365:                                              ; preds = %28, %32, %361
  %366 = phi i32 [ %362, %361 ], [ %29, %28 ], [ %35, %32 ], !dbg !5594
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10) #23, !dbg !5870
  ret i32 %366, !dbg !5870
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #13

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !5871 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5875, metadata !DIExpression()), !dbg !5877
  call void @llvm.dbg.value(metadata i8* %1, metadata !5876, metadata !DIExpression()), !dbg !5877
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !5878
  store i24 0, i24* %3, align 4, !dbg !5878
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !5878
  store i8 0, i8* %4, align 1, !dbg !5878
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !5878
  store i32 0, i32* %5, align 4, !dbg !5878
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !5878
  store i32 0, i32* %6, align 4, !dbg !5878
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5879
  call void @llvm.dbg.value(metadata i8* %7, metadata !5876, metadata !DIExpression()), !dbg !5877
  %8 = load i8, i8* %7, align 1, !dbg !5880
  %9 = icmp eq i8 %8, 37, !dbg !5882
  br i1 %9, label %10, label %12, !dbg !5883

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5884
  call void @llvm.dbg.value(metadata i8* %11, metadata !5876, metadata !DIExpression()), !dbg !5877
  store i8 37, i8* %4, align 1, !dbg !5886
  br label %18, !dbg !5887

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #24, !dbg !5888
  call void @llvm.dbg.value(metadata i8* %13, metadata !5876, metadata !DIExpression()), !dbg !5877
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #24, !dbg !5889
  call void @llvm.dbg.value(metadata i8* %14, metadata !5876, metadata !DIExpression()), !dbg !5877
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #24, !dbg !5890
  call void @llvm.dbg.value(metadata i8* %15, metadata !5876, metadata !DIExpression()), !dbg !5877
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #24, !dbg !5891
  call void @llvm.dbg.value(metadata i8* %16, metadata !5876, metadata !DIExpression()), !dbg !5877
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #24, !dbg !5892
  call void @llvm.dbg.value(metadata i8* %17, metadata !5876, metadata !DIExpression()), !dbg !5877
  br label %18, !dbg !5893

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !5877
  ret i8* %19, !dbg !5894
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !5895 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !5899, metadata !DIExpression()), !dbg !5906
  call void @llvm.dbg.value(metadata i8* %1, metadata !5900, metadata !DIExpression()), !dbg !5906
  call void @llvm.dbg.value(metadata i8* %2, metadata !5901, metadata !DIExpression()), !dbg !5906
  call void @llvm.dbg.value(metadata i8* %3, metadata !5902, metadata !DIExpression()), !dbg !5906
  call void @llvm.dbg.value(metadata i32 0, metadata !5903, metadata !DIExpression()), !dbg !5906
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !5907

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !5908
  call void @llvm.dbg.value(metadata i32 %9, metadata !5903, metadata !DIExpression()), !dbg !5906
  call void @llvm.dbg.value(metadata i8* %8, metadata !5901, metadata !DIExpression()), !dbg !5906
  %10 = icmp ult i8* %8, %3, !dbg !5909
  br i1 %10, label %11, label %13, !dbg !5910

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !5911
  br label %17, !dbg !5910

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !5912

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !5913
  %16 = icmp eq i8 %15, 0, !dbg !5912
  br i1 %16, label %24, label %17, !dbg !5907

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !5911
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !5914
  call void @llvm.dbg.value(metadata i8* %19, metadata !5901, metadata !DIExpression()), !dbg !5906
  %20 = zext i8 %18 to i32, !dbg !5915
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #25, !dbg !5916
  call void @llvm.dbg.value(metadata i32 %21, metadata !5904, metadata !DIExpression()), !dbg !5917
  %22 = icmp slt i32 %21, 0, !dbg !5918
  %23 = add i32 %9, 1, !dbg !5920
  call void @llvm.dbg.value(metadata i32 undef, metadata !5903, metadata !DIExpression()), !dbg !5906
  br i1 %22, label %24, label %7, !llvm.loop !5921

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !5906
  ret i32 %25, !dbg !5923
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #14 !dbg !5924 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !5928, metadata !DIExpression()), !dbg !5938
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !5929, metadata !DIExpression()), !dbg !5938
  call void @llvm.dbg.value(metadata i8* %2, metadata !5930, metadata !DIExpression()), !dbg !5938
  call void @llvm.dbg.value(metadata i8* %3, metadata !5931, metadata !DIExpression()), !dbg !5938
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !5939
  %6 = load i8, i8* %5, align 1, !dbg !5939
  %7 = zext i8 %6 to i32, !dbg !5940
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #24, !dbg !5941
  %9 = icmp eq i32 %8, 0, !dbg !5941
  call void @llvm.dbg.value(metadata i1 %9, metadata !5932, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5938
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #24, !dbg !5942
  call void @llvm.dbg.value(metadata i32 %10, metadata !5933, metadata !DIExpression()), !dbg !5938
  %11 = ptrtoint i8* %3 to i32, !dbg !5943
  %12 = ptrtoint i8* %2 to i32, !dbg !5943
  %13 = sub i32 %11, %12, !dbg !5943
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !5944
  call void @llvm.dbg.value(metadata i8* %14, metadata !5935, metadata !DIExpression()), !dbg !5938
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !5945

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !5938
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !5928, metadata !DIExpression()), !dbg !5938
  call void @llvm.dbg.value(metadata i8* %18, metadata !5935, metadata !DIExpression()), !dbg !5938
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !5946
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !5947
  call void @llvm.dbg.value(metadata i32 %25, metadata !5936, metadata !DIExpression()), !dbg !5948
  %26 = icmp ult i32 %25, 10, !dbg !5949
  %27 = select i1 %26, i32 48, i32 %16, !dbg !5950
  %28 = add i32 %27, %25, !dbg !5948
  %29 = trunc i32 %28 to i8, !dbg !5950
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !5951
  call void @llvm.dbg.value(metadata i8* %30, metadata !5935, metadata !DIExpression()), !dbg !5938
  store i8 %29, i8* %30, align 1, !dbg !5952
  call void @llvm.dbg.value(metadata i64 %22, metadata !5928, metadata !DIExpression()), !dbg !5938
  %31 = icmp uge i64 %19, %15, !dbg !5953
  %32 = icmp ugt i8* %30, %2, !dbg !5954
  %33 = and i1 %31, %32, !dbg !5954
  br i1 %33, label %17, label %34, !dbg !5955, !llvm.loop !5956

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !5958
  %36 = load i24, i24* %35, align 4, !dbg !5958
  %37 = and i24 %36, 32, !dbg !5958
  %38 = icmp eq i24 %37, 0, !dbg !5958
  br i1 %38, label %44, label %39, !dbg !5960

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !5961

40:                                               ; preds = %39
  br label %41, !dbg !5963

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !5967
  store i24 %43, i24* %35, align 4, !dbg !5967
  br label %44, !dbg !5968

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !5968
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #11 !dbg !5969 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5975, metadata !DIExpression()), !dbg !5978
  call void @llvm.dbg.value(metadata i8* %1, metadata !5976, metadata !DIExpression()), !dbg !5978
  call void @llvm.dbg.value(metadata i32 %2, metadata !5977, metadata !DIExpression()), !dbg !5978
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5979
  %5 = load i24, i24* %4, align 4, !dbg !5979
  %6 = lshr i24 %5, 11, !dbg !5979
  %7 = and i24 %6, 15, !dbg !5979
  %8 = zext i24 %7 to i32, !dbg !5979
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !5980

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !5981
  store i32 %2, i32* %10, align 4, !dbg !5983
  br label %28, !dbg !5984

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !5985
  store i8 %12, i8* %1, align 1, !dbg !5986
  br label %28, !dbg !5987

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !5988
  %15 = bitcast i8* %1 to i16*, !dbg !5989
  store i16 %14, i16* %15, align 2, !dbg !5990
  br label %28, !dbg !5991

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !5992
  store i32 %2, i32* %17, align 4, !dbg !5993
  br label %28, !dbg !5994

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !5995
  %20 = bitcast i8* %1 to i64*, !dbg !5996
  store i64 %19, i64* %20, align 8, !dbg !5997
  br label %28, !dbg !5998

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !5999
  %23 = bitcast i8* %1 to i64*, !dbg !6000
  store i64 %22, i64* %23, align 8, !dbg !6001
  br label %28, !dbg !6002

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !6003
  store i32 %2, i32* %25, align 4, !dbg !6004
  br label %28, !dbg !6005

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !6006
  store i32 %2, i32* %27, align 4, !dbg !6007
  br label %28, !dbg !6008

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !6009
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #4 !dbg !6010 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6013, metadata !DIExpression()), !dbg !6014
  %2 = add i32 %0, -65, !dbg !6015
  %3 = icmp ult i32 %2, 26, !dbg !6016
  %4 = zext i1 %3 to i32, !dbg !6016
  ret i32 %4, !dbg !6017
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #4 !dbg !6018 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !6022, metadata !DIExpression()), !dbg !6023
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !6024

2:                                                ; preds = %1
  br label %4, !dbg !6025

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !6027

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !6028
  ret i32 %5, !dbg !6029
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #14 !dbg !6030 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6032, metadata !DIExpression()), !dbg !6035
  call void @llvm.dbg.value(metadata i8* %1, metadata !6033, metadata !DIExpression()), !dbg !6035
  call void @llvm.dbg.value(metadata i8 1, metadata !6034, metadata !DIExpression()), !dbg !6035
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !6036

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !6034, metadata !DIExpression()), !dbg !6035
  call void @llvm.dbg.value(metadata i8* %5, metadata !6033, metadata !DIExpression()), !dbg !6035
  %6 = load i8, i8* %5, align 1, !dbg !6037
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !6039

7:                                                ; preds = %4
  br label %11, !dbg !6040

8:                                                ; preds = %4
  br label %11, !dbg !6042

9:                                                ; preds = %4
  br label %11, !dbg !6043

10:                                               ; preds = %4
  br label %11, !dbg !6044

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !6045
  %14 = or i24 %13, %12, !dbg !6045
  store i24 %14, i24* %3, align 4, !dbg !6045
  call void @llvm.dbg.value(metadata i8 poison, metadata !6034, metadata !DIExpression()), !dbg !6035
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !6033, metadata !DIExpression()), !dbg !6035
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !6034, metadata !DIExpression()), !dbg !6035
  call void @llvm.dbg.value(metadata i8* %15, metadata !6033, metadata !DIExpression()), !dbg !6035
  %17 = load i24, i24* %3, align 4, !dbg !6046
  %18 = and i24 %17, 68, !dbg !6048
  %19 = icmp eq i24 %18, 68, !dbg !6048
  br i1 %19, label %20, label %22, !dbg !6048

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !6049
  store i24 %21, i24* %3, align 4, !dbg !6049
  br label %22, !dbg !6051

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !6052
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !6053 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6055, metadata !DIExpression()), !dbg !6059
  call void @llvm.dbg.value(metadata i8* %1, metadata !6056, metadata !DIExpression()), !dbg !6059
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !6060
  %5 = load i24, i24* %4, align 4, !dbg !6061
  %6 = or i24 %5, 128, !dbg !6061
  store i24 %6, i24* %4, align 4, !dbg !6061
  call void @llvm.dbg.value(metadata i8* %1, metadata !6056, metadata !DIExpression()), !dbg !6059
  %7 = load i8, i8* %1, align 1, !dbg !6062
  %8 = icmp eq i8 %7, 42, !dbg !6064
  br i1 %8, label %9, label %12, !dbg !6065

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !6066
  store i24 %10, i24* %4, align 4, !dbg !6066
  call void @llvm.dbg.value(metadata i8* %1, metadata !6056, metadata !DIExpression()), !dbg !6059
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6068
  call void @llvm.dbg.value(metadata i8* %11, metadata !6056, metadata !DIExpression()), !dbg !6059
  store i8* %11, i8** %3, align 4, !dbg !6068
  br label %29, !dbg !6069

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !6057, metadata !DIExpression()), !dbg !6059
  call void @llvm.dbg.value(metadata i8** %3, metadata !6056, metadata !DIExpression(DW_OP_deref)), !dbg !6059
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #24, !dbg !6070
  call void @llvm.dbg.value(metadata i32 %13, metadata !6058, metadata !DIExpression()), !dbg !6059
  %14 = load i8*, i8** %3, align 4, !dbg !6071
  call void @llvm.dbg.value(metadata i8* %14, metadata !6056, metadata !DIExpression()), !dbg !6059
  %15 = icmp eq i8* %14, %1, !dbg !6073
  br i1 %15, label %29, label %16, !dbg !6074

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !6075
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !6077
  store i32 %13, i32* %18, align 4, !dbg !6078
  %19 = lshr i32 %13, 31, !dbg !6079
  %20 = lshr i24 %17, 1, !dbg !6080
  %21 = and i24 %20, 1, !dbg !6080
  %22 = zext i24 %21 to i32, !dbg !6080
  %23 = or i32 %19, %22, !dbg !6080
  %24 = trunc i32 %23 to i24, !dbg !6080
  %25 = shl nuw nsw i24 %24, 1, !dbg !6080
  %26 = and i24 %17, -131, !dbg !6080
  %27 = or i24 %26, 128, !dbg !6080
  %28 = or i24 %25, %27, !dbg !6080
  store i24 %28, i24* %4, align 4, !dbg !6080
  br label %29, !dbg !6081

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !6059
  ret i8* %30, !dbg !6082
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !6083 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6085, metadata !DIExpression()), !dbg !6088
  call void @llvm.dbg.value(metadata i8* %1, metadata !6086, metadata !DIExpression()), !dbg !6088
  %4 = load i8, i8* %1, align 1, !dbg !6089
  %5 = icmp eq i8 %4, 46, !dbg !6090
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !6091
  %7 = load i24, i24* %6, align 4, !dbg !6092
  %8 = select i1 %5, i24 512, i24 0, !dbg !6092
  %9 = and i24 %7, -513, !dbg !6092
  %10 = or i24 %9, %8, !dbg !6092
  store i24 %10, i24* %6, align 4, !dbg !6092
  br i1 %5, label %11, label %32, !dbg !6093

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !6086, metadata !DIExpression()), !dbg !6088
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6094
  call void @llvm.dbg.value(metadata i8* %12, metadata !6086, metadata !DIExpression()), !dbg !6088
  store i8* %12, i8** %3, align 4, !dbg !6094
  %13 = load i8, i8* %12, align 1, !dbg !6095
  %14 = icmp eq i8 %13, 42, !dbg !6097
  br i1 %14, label %15, label %18, !dbg !6098

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !6099
  store i24 %16, i24* %6, align 4, !dbg !6099
  call void @llvm.dbg.value(metadata i8* %12, metadata !6086, metadata !DIExpression()), !dbg !6088
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !6101
  call void @llvm.dbg.value(metadata i8* %17, metadata !6086, metadata !DIExpression()), !dbg !6088
  store i8* %17, i8** %3, align 4, !dbg !6101
  br label %32, !dbg !6102

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !6086, metadata !DIExpression(DW_OP_deref)), !dbg !6088
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #24, !dbg !6103
  call void @llvm.dbg.value(metadata i32 %19, metadata !6087, metadata !DIExpression()), !dbg !6088
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !6104
  store i32 %19, i32* %20, align 4, !dbg !6105
  %21 = lshr i32 %19, 31, !dbg !6106
  %22 = load i24, i24* %6, align 4, !dbg !6107
  %23 = lshr i24 %22, 1, !dbg !6107
  %24 = and i24 %23, 1, !dbg !6107
  %25 = zext i24 %24 to i32, !dbg !6107
  %26 = or i32 %21, %25, !dbg !6107
  %27 = trunc i32 %26 to i24, !dbg !6107
  %28 = shl nuw nsw i24 %27, 1, !dbg !6107
  %29 = and i24 %22, -3, !dbg !6107
  %30 = or i24 %28, %29, !dbg !6107
  store i24 %30, i24* %6, align 4, !dbg !6107
  %31 = load i8*, i8** %3, align 4, !dbg !6108
  call void @llvm.dbg.value(metadata i8* %31, metadata !6086, metadata !DIExpression()), !dbg !6088
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !6088
  ret i8* %33, !dbg !6109
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #11 !dbg !6110 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6112, metadata !DIExpression()), !dbg !6114
  call void @llvm.dbg.value(metadata i8* %1, metadata !6113, metadata !DIExpression()), !dbg !6114
  %3 = load i8, i8* %1, align 1, !dbg !6115
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !6116

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6117
  call void @llvm.dbg.value(metadata i8* %5, metadata !6113, metadata !DIExpression()), !dbg !6114
  %6 = load i8, i8* %5, align 1, !dbg !6120
  %7 = icmp eq i8 %6, 104, !dbg !6121
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !6122
  %9 = load i24, i24* %8, align 4, !dbg !6122
  %10 = and i24 %9, -30721, !dbg !6122
  br i1 %7, label %11, label %14, !dbg !6123

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !6124
  store i24 %12, i24* %8, align 4, !dbg !6124
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !6126
  call void @llvm.dbg.value(metadata i8* %13, metadata !6113, metadata !DIExpression()), !dbg !6114
  br label %56, !dbg !6127

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !6128
  store i24 %15, i24* %8, align 4, !dbg !6128
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6130
  call void @llvm.dbg.value(metadata i8* %17, metadata !6113, metadata !DIExpression()), !dbg !6114
  %18 = load i8, i8* %17, align 1, !dbg !6132
  %19 = icmp eq i8 %18, 108, !dbg !6133
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !6134
  %21 = load i24, i24* %20, align 4, !dbg !6134
  %22 = and i24 %21, -30721, !dbg !6134
  br i1 %19, label %23, label %26, !dbg !6135

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !6136
  store i24 %24, i24* %20, align 4, !dbg !6136
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !6138
  call void @llvm.dbg.value(metadata i8* %25, metadata !6113, metadata !DIExpression()), !dbg !6114
  br label %56, !dbg !6139

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !6140
  store i24 %27, i24* %20, align 4, !dbg !6140
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !6142
  %30 = load i24, i24* %29, align 4, !dbg !6143
  %31 = and i24 %30, -30721, !dbg !6143
  %32 = or i24 %31, 10240, !dbg !6143
  store i24 %32, i24* %29, align 4, !dbg !6143
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6144
  call void @llvm.dbg.value(metadata i8* %33, metadata !6113, metadata !DIExpression()), !dbg !6114
  br label %56, !dbg !6145

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !6146
  %36 = load i24, i24* %35, align 4, !dbg !6147
  %37 = and i24 %36, -30721, !dbg !6147
  %38 = or i24 %37, 12288, !dbg !6147
  store i24 %38, i24* %35, align 4, !dbg !6147
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6148
  call void @llvm.dbg.value(metadata i8* %39, metadata !6113, metadata !DIExpression()), !dbg !6114
  br label %56, !dbg !6149

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !6150
  %42 = load i24, i24* %41, align 4, !dbg !6151
  %43 = and i24 %42, -30721, !dbg !6151
  %44 = or i24 %43, 14336, !dbg !6151
  store i24 %44, i24* %41, align 4, !dbg !6151
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6152
  call void @llvm.dbg.value(metadata i8* %45, metadata !6113, metadata !DIExpression()), !dbg !6114
  br label %56, !dbg !6153

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !6154
  %48 = load i24, i24* %47, align 4, !dbg !6155
  %49 = and i24 %48, -30723, !dbg !6155
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6156
  call void @llvm.dbg.value(metadata i8* %50, metadata !6113, metadata !DIExpression()), !dbg !6114
  %51 = or i24 %49, 16386, !dbg !6157
  store i24 %51, i24* %47, align 4, !dbg !6157
  br label %56, !dbg !6158

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !6159
  %54 = load i24, i24* %53, align 4, !dbg !6160
  %55 = and i24 %54, -30721, !dbg !6160
  store i24 %55, i24* %53, align 4, !dbg !6160
  br label %56, !dbg !6161

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !6113, metadata !DIExpression()), !dbg !6114
  ret i8* %57, !dbg !6162
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #11 !dbg !6163 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6165, metadata !DIExpression()), !dbg !6170
  call void @llvm.dbg.value(metadata i8* %1, metadata !6166, metadata !DIExpression()), !dbg !6170
  call void @llvm.dbg.value(metadata i8 0, metadata !6167, metadata !DIExpression()), !dbg !6170
  call void @llvm.dbg.value(metadata i8* %1, metadata !6166, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6170
  %3 = load i8, i8* %1, align 1, !dbg !6171
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !6172
  store i8 %3, i8* %4, align 1, !dbg !6173
  switch i8 %3, label %39 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %25
    i8 115, label %32
    i8 112, label %32
  ], !dbg !6174

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !6175

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !6176
  %9 = load i24, i24* %8, align 4, !dbg !6176
  %10 = and i24 %9, -458753, !dbg !6176
  %11 = or i24 %10, %7, !dbg !6176
  call void @llvm.dbg.label(metadata !6168), !dbg !6177
  %12 = and i24 %9, 30720, !dbg !6178
  %13 = icmp eq i24 %12, 16384, !dbg !6178
  %14 = zext i1 %13 to i24, !dbg !6180
  %15 = or i24 %11, %14, !dbg !6180
  %16 = icmp eq i8 %3, 99, !dbg !6181
  br i1 %16, label %17, label %43, !dbg !6183

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !6184
  %19 = icmp ne i24 %18, 0, !dbg !6184
  call void @llvm.dbg.value(metadata i1 %19, metadata !6167, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6170
  br label %43, !dbg !6186

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !6187
  %22 = load i24, i24* %21, align 4, !dbg !6188
  %23 = and i24 %22, -458753, !dbg !6188
  %24 = or i24 %23, 262144, !dbg !6188
  call void @llvm.dbg.value(metadata i8 1, metadata !6167, metadata !DIExpression()), !dbg !6170
  br label %43, !dbg !6189

25:                                               ; preds = %2
  %26 = bitcast %struct.conversion* %0 to i24*, !dbg !6192
  %27 = load i24, i24* %26, align 4, !dbg !6193
  %28 = and i24 %27, -458753, !dbg !6193
  %29 = or i24 %28, 196608, !dbg !6193
  %30 = and i24 %27, 30720, !dbg !6194
  %31 = icmp eq i24 %30, 16384, !dbg !6194
  br label %43, !dbg !6196

32:                                               ; preds = %2, %2
  %33 = bitcast %struct.conversion* %0 to i24*, !dbg !6197
  %34 = load i24, i24* %33, align 4, !dbg !6198
  %35 = and i24 %34, -458753, !dbg !6198
  %36 = or i24 %35, 196608, !dbg !6198
  %37 = and i24 %34, 30720, !dbg !6199
  %38 = icmp ne i24 %37, 0, !dbg !6199
  br label %43, !dbg !6201

39:                                               ; preds = %2
  %40 = bitcast %struct.conversion* %0 to i24*, !dbg !6202
  %41 = load i24, i24* %40, align 4, !dbg !6203
  %42 = or i24 %41, 1, !dbg !6203
  br label %43, !dbg !6204

43:                                               ; preds = %32, %25, %17, %6, %39, %20
  %44 = phi i24 [ %36, %32 ], [ %29, %25 ], [ %15, %17 ], [ %15, %6 ], [ %42, %39 ], [ %24, %20 ], !dbg !6205
  %45 = phi i1 [ %38, %32 ], [ %31, %25 ], [ %19, %17 ], [ false, %6 ], [ false, %39 ], [ true, %20 ]
  %46 = bitcast %struct.conversion* %0 to i24*, !dbg !6206
  %47 = zext i1 %45 to i32
  %48 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6207
  call void @llvm.dbg.value(metadata i8* %48, metadata !6166, metadata !DIExpression()), !dbg !6170
  call void @llvm.dbg.value(metadata i8 poison, metadata !6167, metadata !DIExpression()), !dbg !6170
  %49 = lshr i24 %44, 1, !dbg !6205
  %50 = and i24 %49, 1, !dbg !6205
  %51 = zext i24 %50 to i32, !dbg !6205
  %52 = or i32 %51, %47, !dbg !6205
  %53 = trunc i32 %52 to i24, !dbg !6205
  %54 = shl nuw nsw i24 %53, 1, !dbg !6205
  %55 = and i24 %44, -3, !dbg !6205
  %56 = or i24 %54, %55, !dbg !6205
  store i24 %56, i24* %46, align 4, !dbg !6205
  ret i8* %48, !dbg !6208
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #14 !dbg !6209 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !6213, metadata !DIExpression()), !dbg !6216
  %2 = load i8*, i8** %0, align 4, !dbg !6217
  call void @llvm.dbg.value(metadata i8* %2, metadata !6214, metadata !DIExpression()), !dbg !6216
  call void @llvm.dbg.value(metadata i32 0, metadata !6215, metadata !DIExpression()), !dbg !6216
  %3 = load i8, i8* %2, align 1, !dbg !6218
  %4 = zext i8 %3 to i32, !dbg !6219
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #24, !dbg !6220
  %6 = icmp eq i32 %5, 0, !dbg !6221
  br i1 %6, label %19, label %7, !dbg !6221

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !6215, metadata !DIExpression()), !dbg !6216
  call void @llvm.dbg.value(metadata i8* %10, metadata !6214, metadata !DIExpression()), !dbg !6216
  %11 = mul i32 %9, 10, !dbg !6222
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !6224
  call void @llvm.dbg.value(metadata i8* %12, metadata !6214, metadata !DIExpression()), !dbg !6216
  %13 = add i32 %11, -48, !dbg !6225
  %14 = add i32 %13, %8, !dbg !6226
  call void @llvm.dbg.value(metadata i32 %14, metadata !6215, metadata !DIExpression()), !dbg !6216
  %15 = load i8, i8* %12, align 1, !dbg !6218
  %16 = zext i8 %15 to i32, !dbg !6219
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #24, !dbg !6220
  %18 = icmp eq i32 %17, 0, !dbg !6221
  br i1 %18, label %19, label %7, !dbg !6221, !llvm.loop !6227

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !6216
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !6216
  store i8* %20, i8** %0, align 4, !dbg !6229
  ret i32 %21, !dbg !6230
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #4 !dbg !6231 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6233, metadata !DIExpression()), !dbg !6234
  %2 = add i32 %0, -48, !dbg !6235
  %3 = icmp ult i32 %2, 10, !dbg !6236
  %4 = zext i1 %3 to i32, !dbg !6236
  ret i32 %4, !dbg !6237
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !6238 {
  tail call void asm sideeffect ".globl\09CONFIG_GPIO\0A\09.equ\09CONFIG_GPIO,1\0A\09.type\09CONFIG_GPIO,%object", ""() #23, !dbg !6240, !srcloc !6241
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_INIT_PRIORITY\0A\09.equ\09CONFIG_GPIO_INIT_PRIORITY,40\0A\09.type\09CONFIG_GPIO_INIT_PRIORITY,%object", ""() #23, !dbg !6242, !srcloc !6243
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #23, !dbg !6244, !srcloc !6245
  tail call void asm sideeffect ".globl\09CONFIG_SOC\0A\09.equ\09CONFIG_SOC,1\0A\09.type\09CONFIG_SOC,%object", ""() #23, !dbg !6246, !srcloc !6247
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #23, !dbg !6248, !srcloc !6249
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,91\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #23, !dbg !6250, !srcloc !6251
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,168000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #23, !dbg !6252, !srcloc !6253
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY\0A\09.equ\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,1\0A\09.type\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,%object", ""() #23, !dbg !6254, !srcloc !6255
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,2048\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #23, !dbg !6256, !srcloc !6257
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x8000000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #23, !dbg !6258, !srcloc !6259
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #23, !dbg !6260, !srcloc !6261
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #23, !dbg !6262, !srcloc !6263
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #23, !dbg !6264, !srcloc !6265
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,0\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #23, !dbg !6266, !srcloc !6267
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #23, !dbg !6268, !srcloc !6269
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL\0A\09.equ\09CONFIG_CLOCK_CONTROL,1\0A\09.type\09CONFIG_CLOCK_CONTROL,%object", ""() #23, !dbg !6270, !srcloc !6271
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #23, !dbg !6272, !srcloc !6273
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DOMAIN_NAME\0A\09.equ\09CONFIG_LOG_DOMAIN_NAME,1\0A\09.type\09CONFIG_LOG_DOMAIN_NAME,%object", ""() #23, !dbg !6274, !srcloc !6275
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #23, !dbg !6276, !srcloc !6277
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_HEX\0A\09.equ\09CONFIG_BUILD_OUTPUT_HEX,1\0A\09.type\09CONFIG_BUILD_OUTPUT_HEX,%object", ""() #23, !dbg !6278, !srcloc !6279
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #23, !dbg !6280, !srcloc !6281
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #23, !dbg !6282, !srcloc !6283
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #23, !dbg !6284, !srcloc !6285
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_STM32_CUBE\0A\09.equ\09CONFIG_CLOCK_CONTROL_STM32_CUBE,1\0A\09.type\09CONFIG_CLOCK_CONTROL_STM32_CUBE,%object", ""() #23, !dbg !6286, !srcloc !6287
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #23, !dbg !6288, !srcloc !6289
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #23, !dbg !6290, !srcloc !6291
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #23, !dbg !6292, !srcloc !6293
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,%object", ""() #23, !dbg !6294, !srcloc !6295
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #23, !dbg !6296, !srcloc !6297
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #23, !dbg !6298, !srcloc !6299
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,%object", ""() #23, !dbg !6300, !srcloc !6301
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,%object", ""() #23, !dbg !6302, !srcloc !6303
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_ADC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_ADC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_ADC_ENABLED,%object", ""() #23, !dbg !6304, !srcloc !6305
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_CCM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_CCM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_CCM_ENABLED,%object", ""() #23, !dbg !6306, !srcloc !6307
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,%object", ""() #23, !dbg !6308, !srcloc !6309
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,%object", ""() #23, !dbg !6310, !srcloc !6311
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,%object", ""() #23, !dbg !6312, !srcloc !6313
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,%object", ""() #23, !dbg !6314, !srcloc !6315
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,%object", ""() #23, !dbg !6316, !srcloc !6317
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,%object", ""() #23, !dbg !6318, !srcloc !6319
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_OTGFS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_OTGFS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_OTGFS_ENABLED,%object", ""() #23, !dbg !6320, !srcloc !6321
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,%object", ""() #23, !dbg !6322, !srcloc !6323
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PWM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PWM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PWM_ENABLED,%object", ""() #23, !dbg !6324, !srcloc !6325
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,%object", ""() #23, !dbg !6326, !srcloc !6327
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RNG_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RNG_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RNG_ENABLED,%object", ""() #23, !dbg !6328, !srcloc !6329
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,%object", ""() #23, !dbg !6330, !srcloc !6331
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_TIMERS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_TIMERS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_TIMERS_ENABLED,%object", ""() #23, !dbg !6332, !srcloc !6333
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,%object", ""() #23, !dbg !6334, !srcloc !6335
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,%object", ""() #23, !dbg !6336, !srcloc !6337
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,%object", ""() #23, !dbg !6338, !srcloc !6339
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,%object", ""() #23, !dbg !6340, !srcloc !6341
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED\0A\09.equ\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,%object", ""() #23, !dbg !6342, !srcloc !6343
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_VND_SENSOR_ENABLED\0A\09.equ\09CONFIG_DT_HAS_VND_SENSOR_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_VND_SENSOR_ENABLED,%object", ""() #23, !dbg !6344, !srcloc !6345
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ZEPHYR_MEMORY_REGION_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ZEPHYR_MEMORY_REGION_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ZEPHYR_MEMORY_REGION_ENABLED,%object", ""() #23, !dbg !6346, !srcloc !6347
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #23, !dbg !6348, !srcloc !6349
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #23, !dbg !6350, !srcloc !6351
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #23, !dbg !6352, !srcloc !6353
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #23, !dbg !6354, !srcloc !6355
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,%object", ""() #23, !dbg !6356, !srcloc !6357
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,3\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,%object", ""() #23, !dbg !6358, !srcloc !6359
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #23, !dbg !6360, !srcloc !6361
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #23, !dbg !6362, !srcloc !6363
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #23, !dbg !6364, !srcloc !6365
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #23, !dbg !6366, !srcloc !6367
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #23, !dbg !6368, !srcloc !6369
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #23, !dbg !6370, !srcloc !6371
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #23, !dbg !6372, !srcloc !6373
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #23, !dbg !6374, !srcloc !6375
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #23, !dbg !6376, !srcloc !6377
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #23, !dbg !6378, !srcloc !6379
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #23, !dbg !6380, !srcloc !6381
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #23, !dbg !6382, !srcloc !6383
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #23, !dbg !6384, !srcloc !6385
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #23, !dbg !6386, !srcloc !6387
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #23, !dbg !6388, !srcloc !6389
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #23, !dbg !6390, !srcloc !6391
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #23, !dbg !6392, !srcloc !6393
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #23, !dbg !6394, !srcloc !6395
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #23, !dbg !6396, !srcloc !6397
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #23, !dbg !6398, !srcloc !6399
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #23, !dbg !6400, !srcloc !6401
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #23, !dbg !6402, !srcloc !6403
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #23, !dbg !6404, !srcloc !6405
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #23, !dbg !6406, !srcloc !6407
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #23, !dbg !6408, !srcloc !6409
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #23, !dbg !6410, !srcloc !6411
  tail call void asm sideeffect ".globl\09CONFIG_HAS_STM32CUBE\0A\09.equ\09CONFIG_HAS_STM32CUBE,1\0A\09.type\09CONFIG_HAS_STM32CUBE,%object", ""() #23, !dbg !6412, !srcloc !6413
  tail call void asm sideeffect ".globl\09CONFIG_USE_STM32_LL_UTILS\0A\09.equ\09CONFIG_USE_STM32_LL_UTILS,1\0A\09.type\09CONFIG_USE_STM32_LL_UTILS,%object", ""() #23, !dbg !6414, !srcloc !6415
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #23, !dbg !6416, !srcloc !6417
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_96B_AEROCORE2\0A\09.equ\09CONFIG_BOARD_96B_AEROCORE2,1\0A\09.type\09CONFIG_BOARD_96B_AEROCORE2,%object", ""() #23, !dbg !6418, !srcloc !6419
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_STM32F4X\0A\09.equ\09CONFIG_SOC_SERIES_STM32F4X,1\0A\09.type\09CONFIG_SOC_SERIES_STM32F4X,%object", ""() #23, !dbg !6420, !srcloc !6421
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_ARM_MPU\0A\09.equ\09CONFIG_CPU_HAS_ARM_MPU,1\0A\09.type\09CONFIG_CPU_HAS_ARM_MPU,%object", ""() #23, !dbg !6422, !srcloc !6423
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SWO\0A\09.equ\09CONFIG_HAS_SWO,1\0A\09.type\09CONFIG_HAS_SWO,%object", ""() #23, !dbg !6424, !srcloc !6425
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #23, !dbg !6426, !srcloc !6427
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_STM32\0A\09.equ\09CONFIG_SOC_FAMILY_STM32,1\0A\09.type\09CONFIG_SOC_FAMILY_STM32,%object", ""() #23, !dbg !6428, !srcloc !6429
  tail call void asm sideeffect ".globl\09CONFIG_STM32_CCM\0A\09.equ\09CONFIG_STM32_CCM,1\0A\09.type\09CONFIG_STM32_CCM,%object", ""() #23, !dbg !6430, !srcloc !6431
  tail call void asm sideeffect ".globl\09CONFIG_SOC_STM32F427XX\0A\09.equ\09CONFIG_SOC_STM32F427XX,1\0A\09.type\09CONFIG_SOC_STM32F427XX,%object", ""() #23, !dbg !6432, !srcloc !6433
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_SOC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_SOC_LOG_LEVEL_INF,%object", ""() #23, !dbg !6434, !srcloc !6435
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL\0A\09.equ\09CONFIG_SOC_LOG_LEVEL,3\0A\09.type\09CONFIG_SOC_LOG_LEVEL,%object", ""() #23, !dbg !6436, !srcloc !6437
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #23, !dbg !6438, !srcloc !6439
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #23, !dbg !6440, !srcloc !6441
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #23, !dbg !6442, !srcloc !6443
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #23, !dbg !6444, !srcloc !6445
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #23, !dbg !6446, !srcloc !6447
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #23, !dbg !6448, !srcloc !6449
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #23, !dbg !6450, !srcloc !6451
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #23, !dbg !6452, !srcloc !6453
  tail call void asm sideeffect ".globl\09CONFIG_ARM_STACK_PROTECTION\0A\09.equ\09CONFIG_ARM_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARM_STACK_PROTECTION,%object", ""() #23, !dbg !6454, !srcloc !6455
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #23, !dbg !6456, !srcloc !6457
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #23, !dbg !6458, !srcloc !6459
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M4\0A\09.equ\09CONFIG_CPU_CORTEX_M4,1\0A\09.type\09CONFIG_CPU_CORTEX_M4,%object", ""() #23, !dbg !6460, !srcloc !6461
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #23, !dbg !6462, !srcloc !6463
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #23, !dbg !6464, !srcloc !6465
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #23, !dbg !6466, !srcloc !6467
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #23, !dbg !6468, !srcloc !6469
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #23, !dbg !6470, !srcloc !6471
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #23, !dbg !6472, !srcloc !6473
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_FP\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_FP,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_FP,%object", ""() #23, !dbg !6474, !srcloc !6475
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #23, !dbg !6476, !srcloc !6477
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #23, !dbg !6478, !srcloc !6479
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #23, !dbg !6480, !srcloc !6481
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU\0A\09.equ\09CONFIG_ARM_MPU,1\0A\09.type\09CONFIG_ARM_MPU,%object", ""() #23, !dbg !6482, !srcloc !6483
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE\0A\09.equ\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,32\0A\09.type\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,%object", ""() #23, !dbg !6484, !srcloc !6485
  tail call void asm sideeffect ".globl\09CONFIG_MPU_STACK_GUARD\0A\09.equ\09CONFIG_MPU_STACK_GUARD,1\0A\09.type\09CONFIG_MPU_STACK_GUARD,%object", ""() #23, !dbg !6486, !srcloc !6487
  tail call void asm sideeffect ".globl\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE\0A\09.equ\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,32\0A\09.type\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,%object", ""() #23, !dbg !6488, !srcloc !6489
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #23, !dbg !6490, !srcloc !6491
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #23, !dbg !6492, !srcloc !6493
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARCH_LOG_LEVEL_INF,%object", ""() #23, !dbg !6494, !srcloc !6495
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL,3\0A\09.type\09CONFIG_ARCH_LOG_LEVEL,%object", ""() #23, !dbg !6496, !srcloc !6497
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #23, !dbg !6498, !srcloc !6499
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,192\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #23, !dbg !6500, !srcloc !6501
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #23, !dbg !6502, !srcloc !6503
  tail call void asm sideeffect ".globl\09CONFIG_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_HW_STACK_PROTECTION,%object", ""() #23, !dbg !6504, !srcloc !6505
  tail call void asm sideeffect ".globl\09CONFIG_PRIVILEGED_STACK_SIZE\0A\09.equ\09CONFIG_PRIVILEGED_STACK_SIZE,1024\0A\09.type\09CONFIG_PRIVILEGED_STACK_SIZE,%object", ""() #23, !dbg !6506, !srcloc !6507
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_TEXT_AREA\0A\09.equ\09CONFIG_KOBJECT_TEXT_AREA,256\0A\09.type\09CONFIG_KOBJECT_TEXT_AREA,%object", ""() #23, !dbg !6508, !srcloc !6509
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT\0A\09.equ\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,100\0A\09.type\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,%object", ""() #23, !dbg !6510, !srcloc !6511
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES\0A\09.equ\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,16\0A\09.type\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,%object", ""() #23, !dbg !6512, !srcloc !6513
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #23, !dbg !6514, !srcloc !6515
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #23, !dbg !6516, !srcloc !6517
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #23, !dbg !6518, !srcloc !6519
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #23, !dbg !6520, !srcloc !6521
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #23, !dbg !6522, !srcloc !6523
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #23, !dbg !6524, !srcloc !6525
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #23, !dbg !6526, !srcloc !6527
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #23, !dbg !6528, !srcloc !6529
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_STACK_PROTECTION\0A\09.equ\09CONFIG_ARCH_HAS_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARCH_HAS_STACK_PROTECTION,%object", ""() #23, !dbg !6530, !srcloc !6531
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_USERSPACE\0A\09.equ\09CONFIG_ARCH_HAS_USERSPACE,1\0A\09.type\09CONFIG_ARCH_HAS_USERSPACE,%object", ""() #23, !dbg !6532, !srcloc !6533
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT\0A\09.equ\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,1\0A\09.type\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,%object", ""() #23, !dbg !6534, !srcloc !6535
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #23, !dbg !6536, !srcloc !6537
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #23, !dbg !6538, !srcloc !6539
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #23, !dbg !6540, !srcloc !6541
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #23, !dbg !6542, !srcloc !6543
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #23, !dbg !6544, !srcloc !6545
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !6546, !srcloc !6547
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #23, !dbg !6548, !srcloc !6549
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #23, !dbg !6550, !srcloc !6551
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #23, !dbg !6552, !srcloc !6553
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_FPU\0A\09.equ\09CONFIG_CPU_HAS_FPU,1\0A\09.type\09CONFIG_CPU_HAS_FPU,%object", ""() #23, !dbg !6554, !srcloc !6555
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_MPU\0A\09.equ\09CONFIG_CPU_HAS_MPU,1\0A\09.type\09CONFIG_CPU_HAS_MPU,%object", ""() #23, !dbg !6556, !srcloc !6557
  tail call void asm sideeffect ".globl\09CONFIG_MPU\0A\09.equ\09CONFIG_MPU,1\0A\09.type\09CONFIG_MPU,%object", ""() #23, !dbg !6558, !srcloc !6559
  tail call void asm sideeffect ".globl\09CONFIG_MPU_LOG_LEVEL_INF\0A\09.equ\09CONFIG_MPU_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_MPU_LOG_LEVEL_INF,%object", ""() #23, !dbg !6560, !srcloc !6561
  tail call void asm sideeffect ".globl\09CONFIG_MPU_LOG_LEVEL\0A\09.equ\09CONFIG_MPU_LOG_LEVEL,3\0A\09.type\09CONFIG_MPU_LOG_LEVEL,%object", ""() #23, !dbg !6562, !srcloc !6563
  tail call void asm sideeffect ".globl\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT\0A\09.equ\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,1\0A\09.type\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,%object", ""() #23, !dbg !6564, !srcloc !6565
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_REGION_PERMISSIONS\0A\09.equ\09CONFIG_SRAM_REGION_PERMISSIONS,1\0A\09.type\09CONFIG_SRAM_REGION_PERMISSIONS,%object", ""() #23, !dbg !6566, !srcloc !6567
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #23, !dbg !6568, !srcloc !6569
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL_INF,%object", ""() #23, !dbg !6570, !srcloc !6571
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL,3\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL,%object", ""() #23, !dbg !6572, !srcloc !6573
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #23, !dbg !6574, !srcloc !6575
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #23, !dbg !6576, !srcloc !6577
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #23, !dbg !6578, !srcloc !6579
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,0\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #23, !dbg !6580, !srcloc !6581
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #23, !dbg !6582, !srcloc !6583
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #23, !dbg !6584, !srcloc !6585
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #23, !dbg !6586, !srcloc !6587
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,0\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #23, !dbg !6588, !srcloc !6589
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,320\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #23, !dbg !6590, !srcloc !6591
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #23, !dbg !6592, !srcloc !6593
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_STACK_INFO\0A\09.equ\09CONFIG_THREAD_STACK_INFO,1\0A\09.type\09CONFIG_THREAD_STACK_INFO,%object", ""() #23, !dbg !6594, !srcloc !6595
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #23, !dbg !6596, !srcloc !6597
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #23, !dbg !6598, !srcloc !6599
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #23, !dbg !6600, !srcloc !6601
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_BANNER\0A\09.equ\09CONFIG_BOOT_BANNER,1\0A\09.type\09CONFIG_BOOT_BANNER,%object", ""() #23, !dbg !6602, !srcloc !6603
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #23, !dbg !6604, !srcloc !6605
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #23, !dbg !6606, !srcloc !6607
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #23, !dbg !6608, !srcloc !6609
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #23, !dbg !6610, !srcloc !6611
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #23, !dbg !6612, !srcloc !6613
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #23, !dbg !6614, !srcloc !6615
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #23, !dbg !6616, !srcloc !6617
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #23, !dbg !6618, !srcloc !6619
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #23, !dbg !6620, !srcloc !6621
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #23, !dbg !6622, !srcloc !6623
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #23, !dbg !6624, !srcloc !6625
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #23, !dbg !6626, !srcloc !6627
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #23, !dbg !6628, !srcloc !6629
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #23, !dbg !6630, !srcloc !6631
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #23, !dbg !6632, !srcloc !6633
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #23, !dbg !6634, !srcloc !6635
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #23, !dbg !6636, !srcloc !6637
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #23, !dbg !6638, !srcloc !6639
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #23, !dbg !6640, !srcloc !6641
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #23, !dbg !6642, !srcloc !6643
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #23, !dbg !6644, !srcloc !6645
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !6646, !srcloc !6647
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #23, !dbg !6648, !srcloc !6649
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #23, !dbg !6650, !srcloc !6651
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #23, !dbg !6652, !srcloc !6653
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #23, !dbg !6654, !srcloc !6655
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #23, !dbg !6656, !srcloc !6657
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,%object", ""() #23, !dbg !6658, !srcloc !6659
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL,%object", ""() #23, !dbg !6660, !srcloc !6661
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #23, !dbg !6662, !srcloc !6663
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #23, !dbg !6664, !srcloc !6665
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #23, !dbg !6666, !srcloc !6667
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #23, !dbg !6668, !srcloc !6669
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_LOG_LEVEL_INF,%object", ""() #23, !dbg !6670, !srcloc !6671
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL\0A\09.equ\09CONFIG_UART_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_LOG_LEVEL,%object", ""() #23, !dbg !6672, !srcloc !6673
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #23, !dbg !6674, !srcloc !6675
  tail call void asm sideeffect ".globl\09CONFIG_UART_STM32\0A\09.equ\09CONFIG_UART_STM32,1\0A\09.type\09CONFIG_UART_STM32,%object", ""() #23, !dbg !6676, !srcloc !6677
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #23, !dbg !6678, !srcloc !6679
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_INTC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_INTC_LOG_LEVEL_INF,%object", ""() #23, !dbg !6680, !srcloc !6681
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL\0A\09.equ\09CONFIG_INTC_LOG_LEVEL,3\0A\09.type\09CONFIG_INTC_LOG_LEVEL,%object", ""() #23, !dbg !6682, !srcloc !6683
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32\0A\09.equ\09CONFIG_EXTI_STM32,1\0A\09.type\09CONFIG_EXTI_STM32,%object", ""() #23, !dbg !6684, !srcloc !6685
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,%object", ""() #23, !dbg !6686, !srcloc !6687
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,%object", ""() #23, !dbg !6688, !srcloc !6689
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,%object", ""() #23, !dbg !6690, !srcloc !6691
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,%object", ""() #23, !dbg !6692, !srcloc !6693
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,%object", ""() #23, !dbg !6694, !srcloc !6695
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,%object", ""() #23, !dbg !6696, !srcloc !6697
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,%object", ""() #23, !dbg !6698, !srcloc !6699
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_PVD_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,%object", ""() #23, !dbg !6700, !srcloc !6701
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,%object", ""() #23, !dbg !6702, !srcloc !6703
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,%object", ""() #23, !dbg !6704, !srcloc !6705
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,%object", ""() #23, !dbg !6706, !srcloc !6707
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #23, !dbg !6708, !srcloc !6709
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #23, !dbg !6710, !srcloc !6711
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #23, !dbg !6712, !srcloc !6713
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #23, !dbg !6714, !srcloc !6715
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL_INF\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_GPIO_LOG_LEVEL_INF,%object", ""() #23, !dbg !6716, !srcloc !6717
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL,3\0A\09.type\09CONFIG_GPIO_LOG_LEVEL,%object", ""() #23, !dbg !6718, !srcloc !6719
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_STM32\0A\09.equ\09CONFIG_GPIO_STM32,1\0A\09.type\09CONFIG_GPIO_STM32,%object", ""() #23, !dbg !6720, !srcloc !6721
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL_INF\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL_INF,%object", ""() #23, !dbg !6722, !srcloc !6723
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL,3\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL,%object", ""() #23, !dbg !6724, !srcloc !6725
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,%object", ""() #23, !dbg !6726, !srcloc !6727
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,3\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,%object", ""() #23, !dbg !6728, !srcloc !6729
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_HSE_CLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_HSE_CLOCK,24000000\0A\09.type\09CONFIG_CLOCK_STM32_HSE_CLOCK,%object", ""() #23, !dbg !6730, !srcloc !6731
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,%object", ""() #23, !dbg !6732, !srcloc !6733
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,%object", ""() #23, !dbg !6734, !srcloc !6735
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL_INF,%object", ""() #23, !dbg !6736, !srcloc !6737
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL,3\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL,%object", ""() #23, !dbg !6738, !srcloc !6739
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32\0A\09.equ\09CONFIG_PINCTRL_STM32,1\0A\09.type\09CONFIG_PINCTRL_STM32,%object", ""() #23, !dbg !6740, !srcloc !6741
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY\0A\09.equ\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,2\0A\09.type\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,%object", ""() #23, !dbg !6742, !srcloc !6743
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_USBC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_USBC_LOG_LEVEL_INF,%object", ""() #23, !dbg !6744, !srcloc !6745
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL\0A\09.equ\09CONFIG_USBC_LOG_LEVEL,3\0A\09.type\09CONFIG_USBC_LOG_LEVEL,%object", ""() #23, !dbg !6746, !srcloc !6747
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #23, !dbg !6748, !srcloc !6749
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #23, !dbg !6750, !srcloc !6751
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #23, !dbg !6752, !srcloc !6753
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #23, !dbg !6754, !srcloc !6755
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #23, !dbg !6756, !srcloc !6757
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #23, !dbg !6758, !srcloc !6759
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #23, !dbg !6760, !srcloc !6761
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #23, !dbg !6762, !srcloc !6763
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #23, !dbg !6764, !srcloc !6765
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #23, !dbg !6766, !srcloc !6767
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #23, !dbg !6768, !srcloc !6769
  tail call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #23, !dbg !6770, !srcloc !6771
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #23, !dbg !6772, !srcloc !6773
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #23, !dbg !6774, !srcloc !6775
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #23, !dbg !6776, !srcloc !6777
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #23, !dbg !6778, !srcloc !6779
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #23, !dbg !6780, !srcloc !6781
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,%object", ""() #23, !dbg !6782, !srcloc !6783
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,3\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,%object", ""() #23, !dbg !6784, !srcloc !6785
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #23, !dbg !6786, !srcloc !6787
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #23, !dbg !6788, !srcloc !6789
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #23, !dbg !6790, !srcloc !6791
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #23, !dbg !6792, !srcloc !6793
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #23, !dbg !6794, !srcloc !6795
  tail call void asm sideeffect ".globl\09CONFIG_EARLY_CONSOLE\0A\09.equ\09CONFIG_EARLY_CONSOLE,1\0A\09.type\09CONFIG_EARLY_CONSOLE,%object", ""() #23, !dbg !6796, !srcloc !6797
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #23, !dbg !6798, !srcloc !6799
  tail call void asm sideeffect ".globl\09CONFIG_LOG\0A\09.equ\09CONFIG_LOG,1\0A\09.type\09CONFIG_LOG,%object", ""() #23, !dbg !6800, !srcloc !6801
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MODE_MINIMAL\0A\09.equ\09CONFIG_LOG_MODE_MINIMAL,1\0A\09.type\09CONFIG_LOG_MODE_MINIMAL,%object", ""() #23, !dbg !6802, !srcloc !6803
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DEFAULT_LEVEL\0A\09.equ\09CONFIG_LOG_DEFAULT_LEVEL,4\0A\09.type\09CONFIG_LOG_DEFAULT_LEVEL,%object", ""() #23, !dbg !6804, !srcloc !6805
  tail call void asm sideeffect ".globl\09CONFIG_LOG_OVERRIDE_LEVEL\0A\09.equ\09CONFIG_LOG_OVERRIDE_LEVEL,0\0A\09.type\09CONFIG_LOG_OVERRIDE_LEVEL,%object", ""() #23, !dbg !6806, !srcloc !6807
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MAX_LEVEL\0A\09.equ\09CONFIG_LOG_MAX_LEVEL,4\0A\09.type\09CONFIG_LOG_MAX_LEVEL,%object", ""() #23, !dbg !6808, !srcloc !6809
  tail call void asm sideeffect ".globl\09CONFIG_LOG_USE_VLA\0A\09.equ\09CONFIG_LOG_USE_VLA,1\0A\09.type\09CONFIG_LOG_USE_VLA,%object", ""() #23, !dbg !6810, !srcloc !6811
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #23, !dbg !6812, !srcloc !6813
  tail call void asm sideeffect ".globl\09CONFIG_RTIO\0A\09.equ\09CONFIG_RTIO,1\0A\09.type\09CONFIG_RTIO,%object", ""() #23, !dbg !6814, !srcloc !6815
  tail call void asm sideeffect ".globl\09CONFIG_RTIO_EXECUTOR_SIMPLE\0A\09.equ\09CONFIG_RTIO_EXECUTOR_SIMPLE,1\0A\09.type\09CONFIG_RTIO_EXECUTOR_SIMPLE,%object", ""() #23, !dbg !6816, !srcloc !6817
  tail call void asm sideeffect ".globl\09CONFIG_RTIO_EXECUTOR_CONCURRENT\0A\09.equ\09CONFIG_RTIO_EXECUTOR_CONCURRENT,1\0A\09.type\09CONFIG_RTIO_EXECUTOR_CONCURRENT,%object", ""() #23, !dbg !6818, !srcloc !6819
  tail call void asm sideeffect ".globl\09CONFIG_RTIO_LOG_LEVEL_INF\0A\09.equ\09CONFIG_RTIO_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_RTIO_LOG_LEVEL_INF,%object", ""() #23, !dbg !6820, !srcloc !6821
  tail call void asm sideeffect ".globl\09CONFIG_RTIO_LOG_LEVEL\0A\09.equ\09CONFIG_RTIO_LOG_LEVEL,3\0A\09.type\09CONFIG_RTIO_LOG_LEVEL,%object", ""() #23, !dbg !6822, !srcloc !6823
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #23, !dbg !6824, !srcloc !6825
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !6826, !srcloc !6827
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #23, !dbg !6828, !srcloc !6829
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #23, !dbg !6830, !srcloc !6831
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #23, !dbg !6832, !srcloc !6833
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #23, !dbg !6834, !srcloc !6835
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #23, !dbg !6836, !srcloc !6837
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #23, !dbg !6838, !srcloc !6839
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #23, !dbg !6840, !srcloc !6841
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #23, !dbg !6842, !srcloc !6843
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #23, !dbg !6844, !srcloc !6845
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #23, !dbg !6846, !srcloc !6847
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #23, !dbg !6848, !srcloc !6849
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #23, !dbg !6850, !srcloc !6851
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #23, !dbg !6852, !srcloc !6853
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #23, !dbg !6854, !srcloc !6855
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #23, !dbg !6856, !srcloc !6857
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #23, !dbg !6858, !srcloc !6859
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #23, !dbg !6860, !srcloc !6861
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #23, !dbg !6862, !srcloc !6863
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #23, !dbg !6864, !srcloc !6865
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #23, !dbg !6866, !srcloc !6867
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #23, !dbg !6868, !srcloc !6869
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #23, !dbg !6870, !srcloc !6871
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #23, !dbg !6872, !srcloc !6873
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #23, !dbg !6874, !srcloc !6875
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #23, !dbg !6876, !srcloc !6877
  ret void, !dbg !6878
}

; Function Attrs: noinline nounwind optsize
define internal i32 @st_stm32f4_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !6879 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6881, metadata !DIExpression()), !dbg !6883
  tail call fastcc void @LL_FLASH_EnableInstCache() #24, !dbg !6884
  tail call fastcc void @LL_FLASH_EnableDataCache() #24, !dbg !6885
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !6886, !srcloc !6892
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !6886
  call void @llvm.dbg.value(metadata i32 %3, metadata !6889, metadata !DIExpression()) #23, !dbg !6893
  call void @llvm.dbg.value(metadata i32 undef, metadata !6890, metadata !DIExpression()) #23, !dbg !6893
  call void @llvm.dbg.value(metadata i32 %3, metadata !6882, metadata !DIExpression()), !dbg !6883
  call void @llvm.dbg.value(metadata i32 %3, metadata !6894, metadata !DIExpression()) #23, !dbg !6897
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !6899, !srcloc !6900
  store i32 16000000, i32* @SystemCoreClock, align 4, !dbg !6901
  ret i32 0, !dbg !6902
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableInstCache() unnamed_addr #15 !dbg !6903 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6905
  %2 = or i32 %1, 512, !dbg !6905
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6905
  ret void, !dbg !6906
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableDataCache() unnamed_addr #15 !dbg !6907 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6908
  %2 = or i32 %1, 1024, !dbg !6908
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6908
  ret void, !dbg !6909
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @st_stm32_common_config(%struct.device* nocapture noundef readnone %0) #4 !dbg !6910 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6912, metadata !DIExpression()), !dbg !6913
  ret i32 0, !dbg !6914
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !6915 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !6918, metadata !DIExpression()), !dbg !6926
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !6927
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !6927
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !6919, metadata !DIExpression()), !dbg !6928
  call void @llvm.va_start(i8* nonnull %3), !dbg !6929
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !6930
  %5 = load i32, i32* %4, align 4, !dbg !6930
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !6930
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #25, !dbg !6930
  call void @llvm.va_end(i8* nonnull %3), !dbg !6931
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !6932
  ret void, !dbg !6932
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !6933 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !6938, metadata !DIExpression()), !dbg !6939
  call void @llvm.dbg.value(metadata i8* %0, metadata !6937, metadata !DIExpression()), !dbg !6939
  tail call void @vprintk(i8* noundef %0, [1 x i32] %1) #25, !dbg !6940
  ret void, !dbg !6941
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_hexdump_print(i32 noundef %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6942 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6946, metadata !DIExpression()), !dbg !6950
  call void @llvm.dbg.value(metadata i8* %1, metadata !6947, metadata !DIExpression()), !dbg !6950
  call void @llvm.dbg.value(metadata i32 %2, metadata !6948, metadata !DIExpression()), !dbg !6950
  call void @llvm.dbg.value(metadata i8* %1, metadata !6949, metadata !DIExpression()), !dbg !6950
  %4 = icmp eq i32 %2, 0, !dbg !6951
  br i1 %4, label %14, label %5, !dbg !6952

5:                                                ; preds = %3
  %6 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.35(i32 noundef %0) #24, !dbg !6950
  %7 = zext i8 %6 to i32
  br label %8, !dbg !6952

8:                                                ; preds = %8, %5
  %9 = phi i8* [ %1, %5 ], [ %12, %8 ]
  %10 = phi i32 [ %2, %5 ], [ %11, %8 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !6949, metadata !DIExpression()), !dbg !6950
  call void @llvm.dbg.value(metadata i32 %10, metadata !6948, metadata !DIExpression()), !dbg !6950
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.36, i32 0, i32 0), i32 noundef %7) #25, !dbg !6953
  tail call fastcc void @minimal_hexdump_line_print(i8* noundef %9, i32 noundef %10) #24, !dbg !6955
  %11 = add i32 %10, -8
  %12 = getelementptr inbounds i8, i8* %9, i32 8
  %13 = icmp ult i32 %10, 9, !dbg !6956
  call void @llvm.dbg.value(metadata i32 %11, metadata !6948, metadata !DIExpression()), !dbg !6950
  call void @llvm.dbg.value(metadata i8* %12, metadata !6949, metadata !DIExpression()), !dbg !6950
  br i1 %13, label %14, label %8, !dbg !6956, !llvm.loop !6957

14:                                               ; preds = %8, %3
  ret void, !dbg !6959
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char.35(i32 noundef %0) unnamed_addr #4 !dbg !6960 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6962, metadata !DIExpression()), !dbg !6963
  %2 = add i32 %0, -1, !dbg !6964
  %3 = icmp ult i32 %2, 4, !dbg !6964
  %4 = shl i32 %2, 3, !dbg !6964
  %5 = lshr i32 1145657157, %4, !dbg !6964
  %6 = trunc i32 %5 to i8, !dbg !6964
  %7 = select i1 %3, i8 %6, i8 63, !dbg !6964
  ret i8 %7, !dbg !6965
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @minimal_hexdump_line_print(i8* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !6966 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6970, metadata !DIExpression()), !dbg !6981
  call void @llvm.dbg.value(metadata i32 %1, metadata !6971, metadata !DIExpression()), !dbg !6981
  call void @llvm.dbg.value(metadata i32 0, metadata !6972, metadata !DIExpression()), !dbg !6982
  br label %4, !dbg !6983

3:                                                ; preds = %12
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.37, i32 0, i32 0)) #25, !dbg !6984
  call void @llvm.dbg.value(metadata i32 0, metadata !6974, metadata !DIExpression()), !dbg !6985
  br label %16, !dbg !6986

4:                                                ; preds = %2, %12
  %5 = phi i32 [ 0, %2 ], [ %13, %12 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !6972, metadata !DIExpression()), !dbg !6982
  %6 = icmp ult i32 %5, %1, !dbg !6987
  br i1 %6, label %7, label %11, !dbg !6991

7:                                                ; preds = %4
  %8 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !6992
  %9 = load i8, i8* %8, align 1, !dbg !6992
  %10 = zext i8 %9 to i32, !dbg !6994
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.38, i32 0, i32 0), i32 noundef %10) #25, !dbg !6995
  br label %12, !dbg !6996

11:                                               ; preds = %4
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.39, i32 0, i32 0)) #25, !dbg !6997
  br label %12

12:                                               ; preds = %7, %11
  %13 = add nuw nsw i32 %5, 1, !dbg !6999
  call void @llvm.dbg.value(metadata i32 %13, metadata !6972, metadata !DIExpression()), !dbg !6982
  %14 = icmp eq i32 %13, 8, !dbg !7000
  br i1 %14, label %3, label %4, !dbg !6983, !llvm.loop !7001

15:                                               ; preds = %27
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6.40, i32 0, i32 0)) #25, !dbg !7003
  ret void, !dbg !7004

16:                                               ; preds = %3, %27
  %17 = phi i32 [ 0, %3 ], [ %28, %27 ]
  call void @llvm.dbg.value(metadata i32 %17, metadata !6974, metadata !DIExpression()), !dbg !6985
  %18 = icmp ult i32 %17, %1, !dbg !7005
  br i1 %18, label %19, label %26, !dbg !7006

19:                                               ; preds = %16
  %20 = getelementptr inbounds i8, i8* %0, i32 %17, !dbg !7007
  %21 = load i8, i8* %20, align 1, !dbg !7007
  call void @llvm.dbg.value(metadata i8 %21, metadata !6976, metadata !DIExpression()), !dbg !7008
  %22 = zext i8 %21 to i32, !dbg !7009
  %23 = tail call fastcc i32 @isprint(i32 noundef %22) #24, !dbg !7010
  %24 = icmp eq i32 %23, 0, !dbg !7011
  %25 = select i1 %24, i32 46, i32 %22, !dbg !7010
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4.41, i32 0, i32 0), i32 noundef %25) #25, !dbg !7012
  br label %27, !dbg !7013

26:                                               ; preds = %16
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5.42, i32 0, i32 0)) #25, !dbg !7014
  br label %27

27:                                               ; preds = %19, %26
  %28 = add nuw nsw i32 %17, 1, !dbg !7016
  call void @llvm.dbg.value(metadata i32 %28, metadata !6974, metadata !DIExpression()), !dbg !6985
  %29 = icmp eq i32 %28, 8, !dbg !7017
  br i1 %29, label %15, label %16, !dbg !6986, !llvm.loop !7018
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isprint(i32 noundef %0) unnamed_addr #4 !dbg !7020 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7022, metadata !DIExpression()), !dbg !7023
  %2 = add i32 %0, -32, !dbg !7024
  %3 = icmp ult i32 %2, 95, !dbg !7024
  %4 = zext i1 %3 to i32, !dbg !7024
  ret i32 %4, !dbg !7025
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !7026 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7075, metadata !DIExpression()), !dbg !7077
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !7076, metadata !DIExpression()), !dbg !7077
  %3 = icmp eq %struct.__esf* %1, null, !dbg !7078
  br i1 %3, label %5, label %4, !dbg !7080

4:                                                ; preds = %2
  tail call fastcc void @esf_dump(%struct.__esf* noundef nonnull %1) #24, !dbg !7081
  br label %5, !dbg !7083

5:                                                ; preds = %4, %2
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #25, !dbg !7084
  ret void, !dbg !7085
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @esf_dump(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !7086 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7090, metadata !DIExpression()), !dbg !7091
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !7092
  %3 = load i32, i32* %2, align 4, !dbg !7092
  %4 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 1, i32 0, !dbg !7092
  %5 = load i32, i32* %4, align 4, !dbg !7092
  %6 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 2, i32 0, !dbg !7092
  %7 = load i32, i32* %6, align 4, !dbg !7092
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.43, i32 0, i32 0), i32 noundef 69, i32 noundef %3, i32 noundef %5, i32 noundef %7) #25, !dbg !7092
  %8 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 3, i32 0, !dbg !7097
  %9 = load i32, i32* %8, align 4, !dbg !7097
  %10 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 4, i32 0, !dbg !7097
  %11 = load i32, i32* %10, align 4, !dbg !7097
  %12 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 5, i32 0, !dbg !7097
  %13 = load i32, i32* %12, align 4, !dbg !7097
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.44, i32 0, i32 0), i32 noundef 69, i32 noundef %9, i32 noundef %11, i32 noundef %13) #25, !dbg !7097
  %14 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 7, !dbg !7102
  %15 = load i32, i32* %14, align 4, !dbg !7102
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 69, i32 noundef %15) #25, !dbg !7102
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !7107
  %17 = load i32, i32* %16, align 4, !dbg !7107
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.3.46, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #25, !dbg !7107
  ret void, !dbg !7112
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !7113 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7130, metadata !DIExpression()), !dbg !7133
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !7131, metadata !DIExpression()), !dbg !7133
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !7134
  %4 = load i32, i32* %3, align 4, !dbg !7134
  call void @llvm.dbg.value(metadata i32 %4, metadata !7132, metadata !DIExpression()), !dbg !7133
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #24, !dbg !7135
  ret void, !dbg !7136
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #2 !dbg !7137 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !7141, metadata !DIExpression()), !dbg !7144
  call void @llvm.dbg.value(metadata i8* %0, metadata !7142, metadata !DIExpression()), !dbg !7144
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !7145
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #23, !dbg !7145
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !7143, metadata !DIExpression()), !dbg !7146
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !7146
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !7147
  %5 = bitcast i8* %4 to i32*, !dbg !7147
  %6 = load i32, i32* %5, align 4, !dbg !7147
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !7148
  store i32 %6, i32* %7, align 4, !dbg !7149
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #24, !dbg !7150
  unreachable, !dbg !7151
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !7152 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7155, metadata !DIExpression()), !dbg !7156
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #24, !dbg !7157
  ret void, !dbg !7158
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !7159 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7163, metadata !DIExpression()), !dbg !7164
  %2 = icmp sgt i32 %0, -1, !dbg !7165
  br i1 %2, label %3, label %8, !dbg !7167

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !7168, !srcloc !7170
  %4 = and i32 %0, 31, !dbg !7171
  %5 = shl nuw i32 1, %4, !dbg !7172
  %6 = lshr i32 %0, 5, !dbg !7173
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !7174
  store volatile i32 %5, i32* %7, align 4, !dbg !7175
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !7176, !srcloc !7177
  br label %8, !dbg !7178

8:                                                ; preds = %3, %1
  ret void, !dbg !7179
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !7180 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7182, metadata !DIExpression()), !dbg !7183
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #24, !dbg !7184
  ret void, !dbg !7185
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !7186 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7188, metadata !DIExpression()), !dbg !7189
  %2 = icmp sgt i32 %0, -1, !dbg !7190
  br i1 %2, label %3, label %8, !dbg !7192

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !7193
  %5 = shl nuw i32 1, %4, !dbg !7195
  %6 = lshr i32 %0, 5, !dbg !7196
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !7197
  store volatile i32 %5, i32* %7, align 4, !dbg !7198
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !7199, !srcloc !7203
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7204, !srcloc !7207
  br label %8, !dbg !7208

8:                                                ; preds = %3, %1
  ret void, !dbg !7209
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #5 !dbg !7210 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7214, metadata !DIExpression()), !dbg !7215
  %2 = lshr i32 %0, 5, !dbg !7216
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !7217
  %4 = load volatile i32, i32* %3, align 4, !dbg !7217
  %5 = and i32 %0, 31, !dbg !7218
  %6 = shl nuw i32 1, %5, !dbg !7218
  %7 = and i32 %4, %6, !dbg !7219
  ret i32 %7, !dbg !7220
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #15 !dbg !7221 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7225, metadata !DIExpression()), !dbg !7228
  call void @llvm.dbg.value(metadata i32 %1, metadata !7226, metadata !DIExpression()), !dbg !7228
  call void @llvm.dbg.value(metadata i32 %2, metadata !7227, metadata !DIExpression()), !dbg !7228
  %4 = add i32 %1, 1, !dbg !7229
  call void @llvm.dbg.value(metadata i32 %4, metadata !7226, metadata !DIExpression()), !dbg !7228
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #24, !dbg !7232
  ret void, !dbg !7233
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !7234 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7238, metadata !DIExpression()), !dbg !7240
  call void @llvm.dbg.value(metadata i32 %1, metadata !7239, metadata !DIExpression()), !dbg !7240
  %3 = trunc i32 %1 to i8, !dbg !7241
  %4 = shl i8 %3, 4, !dbg !7241
  %5 = and i32 %0, 15, !dbg !7243
  %6 = add nsw i32 %5, -4, !dbg !7243
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !7243
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !7243
  %9 = icmp slt i32 %0, 0, !dbg !7243
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !7243
  store volatile i8 %4, i8* %10, align 1, !dbg !7241
  ret void, !dbg !7244
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !7245 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7247, metadata !DIExpression()), !dbg !7248
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #25, !dbg !7249
  ret void, !dbg !7250
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !7251 {
  tail call void @z_SysNmiOnReset() #25, !dbg !7253
  tail call void @z_arm_int_exit() #25, !dbg !7254
  ret void, !dbg !7255
}

; Function Attrs: optsize
declare !dbg !7256 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !7257 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #2 !dbg !7259 {
  tail call fastcc void @relocate_vector_table() #24, !dbg !7261
  tail call fastcc void @z_arm_floating_point_init() #24, !dbg !7262
  tail call void @z_bss_zero() #25, !dbg !7263
  tail call void @z_data_copy() #25, !dbg !7264
  tail call void @z_arm_interrupt_init() #25, !dbg !7265
  tail call void @z_cstart() #27, !dbg !7266
  unreachable, !dbg !7266
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !7267 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 -128), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !7268
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !7269, !srcloc !7272
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7273, !srcloc !7276
  ret void, !dbg !7277
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_arm_floating_point_init() unnamed_addr #1 !dbg !7278 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !7279
  %2 = and i32 %1, -15728641, !dbg !7279
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !7279
  %3 = tail call i32 asm sideeffect "MRS $0, control", "=r"() #23, !dbg !7280, !srcloc !7287
  call void @llvm.dbg.value(metadata i32 %3, metadata !7285, metadata !DIExpression()) #23, !dbg !7288
  %4 = and i32 %3, -5, !dbg !7289
  call void @llvm.dbg.value(metadata i32 %4, metadata !7290, metadata !DIExpression()) #23, !dbg !7295
  tail call void asm sideeffect "MSR control, $0", "r,~{memory}"(i32 %4) #23, !dbg !7297, !srcloc !7298
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7299, !srcloc !7276
  ret void, !dbg !7301
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !7302 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7305, metadata !DIExpression()), !dbg !7306
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7307
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 0, !dbg !7308
  store i32 %0, i32* %3, align 4, !dbg !7309
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !7310
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 1, !dbg !7311
  store i32 %4, i32* %5, align 4, !dbg !7312
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7313
  %7 = or i32 %6, 268435456, !dbg !7313
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7313
  call void @llvm.dbg.value(metadata i32 0, metadata !7314, metadata !DIExpression()) #23, !dbg !7317
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #23, !dbg !7319, !srcloc !7320
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7321
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 7, i32 1, !dbg !7322
  %10 = load i32, i32* %9, align 4, !dbg !7322
  ret i32 %10, !dbg !7323
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #6 !dbg !7324 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !7434, metadata !DIExpression()), !dbg !7442
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !7435, metadata !DIExpression()), !dbg !7442
  call void @llvm.dbg.value(metadata i8* %2, metadata !7436, metadata !DIExpression()), !dbg !7442
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !7437, metadata !DIExpression()), !dbg !7442
  call void @llvm.dbg.value(metadata i8* %4, metadata !7438, metadata !DIExpression()), !dbg !7442
  call void @llvm.dbg.value(metadata i8* %5, metadata !7439, metadata !DIExpression()), !dbg !7442
  call void @llvm.dbg.value(metadata i8* %6, metadata !7440, metadata !DIExpression()), !dbg !7442
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !7443
  call void @llvm.dbg.value(metadata i8* %8, metadata !7441, metadata !DIExpression()), !dbg !7442
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !7444
  %10 = bitcast i8* %9 to i32*, !dbg !7444
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !7445
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !7446
  %12 = bitcast i8* %8 to i32*, !dbg !7447
  store i32 %11, i32* %12, align 4, !dbg !7448
  %13 = ptrtoint i8* %4 to i32, !dbg !7449
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !7450
  %15 = bitcast i8* %14 to i32*, !dbg !7450
  store i32 %13, i32* %15, align 4, !dbg !7451
  %16 = ptrtoint i8* %5 to i32, !dbg !7452
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !7453
  %18 = bitcast i8* %17 to i32*, !dbg !7453
  store i32 %16, i32* %18, align 4, !dbg !7454
  %19 = ptrtoint i8* %6 to i32, !dbg !7455
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !7456
  %21 = bitcast i8* %20 to i32*, !dbg !7456
  store i32 %19, i32* %21, align 4, !dbg !7457
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !7458
  %23 = bitcast i8* %22 to i32*, !dbg !7458
  store i32 16777216, i32* %23, align 4, !dbg !7459
  %24 = ptrtoint i8* %8 to i32, !dbg !7460
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !7461
  store i32 %24, i32* %25, align 8, !dbg !7462
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, i32 0, !dbg !7463
  store i32 0, i32* %26, align 4, !dbg !7464
  ret void, !dbg !7465
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_check_thread_stack_fail(i32 noundef %0, i32 noundef %1) local_unnamed_addr #10 !dbg !7466 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7471, metadata !DIExpression()), !dbg !7477
  call void @llvm.dbg.value(metadata i32 %1, metadata !7472, metadata !DIExpression()), !dbg !7477
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7478
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !7473, metadata !DIExpression()), !dbg !7477
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !7479
  br i1 %4, label %19, label %5, !dbg !7481

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 64, metadata !7476, metadata !DIExpression()), !dbg !7477
  %6 = icmp eq i32 %0, -22, !dbg !7482
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 5, i32 0, !dbg !7482
  %8 = load i32, i32* %7, align 4, !dbg !7482
  br i1 %6, label %16, label %9, !dbg !7484

9:                                                ; preds = %5
  %10 = add i32 %8, -64, !dbg !7482
  %11 = icmp ule i32 %10, %0, !dbg !7482
  %12 = icmp ugt i32 %8, %0, !dbg !7482
  %13 = and i1 %12, %11, !dbg !7482
  %14 = icmp ugt i32 %8, %1, !dbg !7482
  %15 = and i1 %14, %13, !dbg !7482
  br i1 %15, label %18, label %19, !dbg !7482

16:                                               ; preds = %5
  %17 = icmp ugt i32 %8, %1, !dbg !7482
  br i1 %17, label %18, label %19, !dbg !7484

18:                                               ; preds = %9, %16
  br label %19, !dbg !7485

19:                                               ; preds = %18, %16, %9, %2
  %20 = phi i32 [ 0, %2 ], [ %8, %18 ], [ 0, %16 ], [ 0, %9 ], !dbg !7477
  ret i32 %20, !dbg !7487
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #2 !dbg !7488 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !7492, metadata !DIExpression()), !dbg !7495
  call void @llvm.dbg.value(metadata i8* %1, metadata !7493, metadata !DIExpression()), !dbg !7495
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !7494, metadata !DIExpression()), !dbg !7495
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7496
  tail call void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* noundef %0) #25, !dbg !7497
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #23, !dbg !7498, !srcloc !7499
  unreachable, !dbg !7500
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !7501 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !7519, metadata !DIExpression()), !dbg !7529
  call void @llvm.dbg.value(metadata i32 %1, metadata !7520, metadata !DIExpression()), !dbg !7529
  call void @llvm.dbg.value(metadata i32 %2, metadata !7521, metadata !DIExpression()), !dbg !7529
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !7522, metadata !DIExpression()), !dbg !7529
  call void @llvm.dbg.value(metadata i32 0, metadata !7523, metadata !DIExpression()), !dbg !7529
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7530
  %9 = and i32 %8, 511, !dbg !7531
  call void @llvm.dbg.value(metadata i32 %9, metadata !7524, metadata !DIExpression()), !dbg !7529
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #23, !dbg !7532
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #23, !dbg !7532
  %10 = bitcast %struct.__esf* %7 to i8*, !dbg !7533
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #23, !dbg !7533
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !7528, metadata !DIExpression()), !dbg !7534
  call void @llvm.dbg.value(metadata i32 0, metadata !7535, metadata !DIExpression()) #23, !dbg !7538
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #23, !dbg !7540, !srcloc !7541
  call void @llvm.dbg.value(metadata i8* %6, metadata !7526, metadata !DIExpression(DW_OP_deref)), !dbg !7529
  %11 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #24, !dbg !7542
  call void @llvm.dbg.value(metadata %struct.__esf* %11, metadata !7527, metadata !DIExpression()), !dbg !7529
  call void @llvm.dbg.value(metadata i8* %5, metadata !7525, metadata !DIExpression(DW_OP_deref)), !dbg !7529
  %12 = call fastcc i32 @fault_handle(%struct.__esf* noundef %11, i32 noundef %9, i8* noundef nonnull %5) #24, !dbg !7543
  call void @llvm.dbg.value(metadata i32 %12, metadata !7523, metadata !DIExpression()), !dbg !7529
  %13 = load i8, i8* %5, align 1, !dbg !7544, !range !7546
  call void @llvm.dbg.value(metadata i8 %13, metadata !7525, metadata !DIExpression()), !dbg !7529
  %14 = icmp eq i8 %13, 0, !dbg !7544
  br i1 %14, label %15, label %32, !dbg !7547

15:                                               ; preds = %4
  %16 = bitcast %struct.__esf* %11 to i8*, !dbg !7548
  %17 = call i8* @memcpy(i8* noundef nonnull %10, i8* noundef %16, i32 noundef 32) #25, !dbg !7549
  %18 = load i8, i8* %6, align 1, !dbg !7550, !range !7546
  call void @llvm.dbg.value(metadata i8 %18, metadata !7526, metadata !DIExpression()), !dbg !7529
  %19 = icmp eq i8 %18, 0, !dbg !7550
  %20 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !7552
  %21 = load i32, i32* %20, align 4, !dbg !7552
  br i1 %19, label %27, label %22, !dbg !7553

22:                                               ; preds = %15
  %23 = and i32 %21, 511, !dbg !7554
  %24 = icmp eq i32 %23, 0, !dbg !7557
  br i1 %24, label %25, label %31, !dbg !7558

25:                                               ; preds = %22
  %26 = or i32 %21, 511, !dbg !7559
  br label %29, !dbg !7561

27:                                               ; preds = %15
  %28 = and i32 %21, -512, !dbg !7562
  br label %29

29:                                               ; preds = %27, %25
  %30 = phi i32 [ %26, %25 ], [ %28, %27 ]
  store i32 %30, i32* %20, align 4, !dbg !7552
  br label %31, !dbg !7564

31:                                               ; preds = %29, %22
  call void @z_arm_fatal_error(i32 noundef %12, %struct.__esf* noundef nonnull %7) #25, !dbg !7564
  br label %32, !dbg !7565

32:                                               ; preds = %4, %31
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #23, !dbg !7565
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #23, !dbg !7565
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #23, !dbg !7565
  ret void, !dbg !7565
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #1 !dbg !7566 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7571, metadata !DIExpression()), !dbg !7577
  call void @llvm.dbg.value(metadata i32 %1, metadata !7572, metadata !DIExpression()), !dbg !7577
  call void @llvm.dbg.value(metadata i32 %2, metadata !7573, metadata !DIExpression()), !dbg !7577
  call void @llvm.dbg.value(metadata i8* %3, metadata !7574, metadata !DIExpression()), !dbg !7577
  call void @llvm.dbg.value(metadata i8 0, metadata !7575, metadata !DIExpression()), !dbg !7577
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !7576, metadata !DIExpression()), !dbg !7577
  store i8 0, i8* %3, align 1, !dbg !7578
  %5 = icmp ugt i32 %2, -16777217, !dbg !7579
  br i1 %5, label %6, label %17, !dbg !7581

6:                                                ; preds = %4
  %7 = and i32 %2, 12, !dbg !7582
  %8 = icmp eq i32 %7, 8, !dbg !7582
  br i1 %8, label %9, label %10, !dbg !7582

9:                                                ; preds = %6
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.60, i32 0, i32 0), i32 noundef 69) #25, !dbg !7584
  br label %17, !dbg !7590

10:                                               ; preds = %6
  %11 = and i32 %2, 8, !dbg !7591
  %12 = icmp eq i32 %11, 0, !dbg !7591
  br i1 %12, label %13, label %14, !dbg !7592

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %0, metadata !7576, metadata !DIExpression()), !dbg !7577
  store i8 1, i8* %3, align 1, !dbg !7595
  br label %14

14:                                               ; preds = %10, %13
  %15 = phi i32 [ %0, %13 ], [ %1, %10 ]
  %16 = inttoptr i32 %15 to %struct.__esf*, !dbg !7577
  call void @llvm.dbg.value(metadata %struct.__esf* %16, metadata !7576, metadata !DIExpression()), !dbg !7577
  br label %17, !dbg !7598

17:                                               ; preds = %4, %14, %9
  %18 = phi %struct.__esf* [ %16, %14 ], [ null, %9 ], [ null, %4 ], !dbg !7577
  ret %struct.__esf* %18, !dbg !7599
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !7600 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7604, metadata !DIExpression()), !dbg !7608
  call void @llvm.dbg.value(metadata i32 %1, metadata !7605, metadata !DIExpression()), !dbg !7608
  call void @llvm.dbg.value(metadata i8* %2, metadata !7606, metadata !DIExpression()), !dbg !7608
  call void @llvm.dbg.value(metadata i32 0, metadata !7607, metadata !DIExpression()), !dbg !7608
  store i8 0, i8* %2, align 1, !dbg !7609
  switch i32 %1, label %11 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %8
    i32 6, label %9
    i32 12, label %10
  ], !dbg !7610

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #24, !dbg !7611
  call void @llvm.dbg.value(metadata i32 %5, metadata !7607, metadata !DIExpression()), !dbg !7608
  br label %12, !dbg !7613

6:                                                ; preds = %3
  %7 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 0, i8* noundef nonnull %2) #24, !dbg !7614
  call void @llvm.dbg.value(metadata i32 %7, metadata !7607, metadata !DIExpression()), !dbg !7608
  br label %12, !dbg !7615

8:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #24, !dbg !7616
  call void @llvm.dbg.value(metadata i32 0, metadata !7607, metadata !DIExpression()), !dbg !7608
  br label %12, !dbg !7617

9:                                                ; preds = %3
  tail call fastcc void @usage_fault() #24, !dbg !7618
  call void @llvm.dbg.value(metadata i32 0, metadata !7607, metadata !DIExpression()), !dbg !7608
  br label %12, !dbg !7619

10:                                               ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #24, !dbg !7620
  br label %12, !dbg !7621

11:                                               ; preds = %3
  tail call fastcc void @reserved_exception(i32 noundef %1) #24, !dbg !7622
  br label %12, !dbg !7623

12:                                               ; preds = %4, %6, %8, %9, %10, %11
  %13 = phi i32 [ 0, %11 ], [ 0, %10 ], [ 0, %9 ], [ 0, %8 ], [ %7, %6 ], [ %5, %4 ], !dbg !7608
  call void @llvm.dbg.value(metadata i32 %13, metadata !7607, metadata !DIExpression()), !dbg !7608
  ret i32 %13, !dbg !7624
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !7625 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7629, metadata !DIExpression()), !dbg !7632
  call void @llvm.dbg.value(metadata i8* %1, metadata !7630, metadata !DIExpression()), !dbg !7632
  call void @llvm.dbg.value(metadata i32 0, metadata !7631, metadata !DIExpression()), !dbg !7632
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.1.55, i32 0, i32 0), i32 noundef 69) #25, !dbg !7633
  store i8 0, i8* %1, align 1, !dbg !7638
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !7639
  %4 = and i32 %3, 2, !dbg !7641
  %5 = icmp eq i32 %4, 0, !dbg !7642
  br i1 %5, label %7, label %6, !dbg !7643

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.56, i32 0, i32 0), i32 noundef 69) #25, !dbg !7644
  br label %36, !dbg !7650

7:                                                ; preds = %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !7651
  %9 = icmp sgt i32 %8, -1, !dbg !7653
  br i1 %9, label %11, label %10, !dbg !7654

10:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3.57, i32 0, i32 0), i32 noundef 69) #25, !dbg !7655
  br label %36, !dbg !7661

11:                                               ; preds = %7
  %12 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !7662
  %13 = and i32 %12, 1073741824, !dbg !7664
  %14 = icmp eq i32 %13, 0, !dbg !7665
  br i1 %14, label %36, label %15, !dbg !7666

15:                                               ; preds = %11
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.4.58, i32 0, i32 0), i32 noundef 69) #25, !dbg !7667
  %16 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #24, !dbg !7673
  br i1 %16, label %17, label %21, !dbg !7675

17:                                               ; preds = %15
  %18 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !7676
  %19 = load i32, i32* %18, align 4, !dbg !7676
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.5.59, i32 0, i32 0), i32 noundef 69, i32 noundef %19) #25, !dbg !7676
  %20 = load i32, i32* %18, align 4, !dbg !7682
  call void @llvm.dbg.value(metadata i32 %20, metadata !7631, metadata !DIExpression()), !dbg !7632
  br label %36, !dbg !7683

21:                                               ; preds = %15
  %22 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7684
  %23 = and i32 %22, 255, !dbg !7686
  %24 = icmp eq i32 %23, 0, !dbg !7687
  br i1 %24, label %27, label %25, !dbg !7688

25:                                               ; preds = %21
  %26 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 1, i8* noundef nonnull %1) #24, !dbg !7689
  call void @llvm.dbg.value(metadata i32 %26, metadata !7631, metadata !DIExpression()), !dbg !7632
  br label %36, !dbg !7691

27:                                               ; preds = %21
  %28 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7692
  %29 = and i32 %28, 65280, !dbg !7694
  %30 = icmp eq i32 %29, 0, !dbg !7695
  br i1 %30, label %32, label %31, !dbg !7696

31:                                               ; preds = %27
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #24, !dbg !7697
  call void @llvm.dbg.value(metadata i32 0, metadata !7631, metadata !DIExpression()), !dbg !7632
  br label %36, !dbg !7699

32:                                               ; preds = %27
  %33 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7700
  %34 = icmp ult i32 %33, 65536, !dbg !7702
  br i1 %34, label %36, label %35, !dbg !7703

35:                                               ; preds = %32
  tail call fastcc void @usage_fault() #24, !dbg !7704
  call void @llvm.dbg.value(metadata i32 0, metadata !7631, metadata !DIExpression()), !dbg !7632
  br label %36, !dbg !7706

36:                                               ; preds = %10, %11, %17, %31, %32, %35, %25, %6
  %37 = phi i32 [ 0, %6 ], [ 0, %10 ], [ %20, %17 ], [ %26, %25 ], [ 0, %31 ], [ 0, %35 ], [ 0, %32 ], [ 0, %11 ], !dbg !7632
  call void @llvm.dbg.value(metadata i32 %37, metadata !7631, metadata !DIExpression()), !dbg !7632
  ret i32 %37, !dbg !7707
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef writeonly %2) unnamed_addr #1 !dbg !7708 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7710, metadata !DIExpression()), !dbg !7723
  call void @llvm.dbg.value(metadata i32 %1, metadata !7711, metadata !DIExpression()), !dbg !7723
  call void @llvm.dbg.value(metadata i8* %2, metadata !7712, metadata !DIExpression()), !dbg !7723
  call void @llvm.dbg.value(metadata i32 0, metadata !7713, metadata !DIExpression()), !dbg !7723
  call void @llvm.dbg.value(metadata i32 -22, metadata !7714, metadata !DIExpression()), !dbg !7723
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6.52, i32 0, i32 0), i32 noundef 69) #25, !dbg !7724
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7729
  %5 = and i32 %4, 16, !dbg !7731
  %6 = icmp eq i32 %5, 0, !dbg !7732
  br i1 %6, label %8, label %7, !dbg !7733

7:                                                ; preds = %3
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.7.53, i32 0, i32 0), i32 noundef 69) #25, !dbg !7734
  br label %8, !dbg !7740

8:                                                ; preds = %7, %3
  %9 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7741
  %10 = and i32 %9, 8, !dbg !7743
  %11 = icmp eq i32 %10, 0, !dbg !7744
  br i1 %11, label %13, label %12, !dbg !7745

12:                                               ; preds = %8
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8.51, i32 0, i32 0), i32 noundef 69) #25, !dbg !7746
  br label %13, !dbg !7752

13:                                               ; preds = %12, %8
  %14 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7753
  %15 = and i32 %14, 2, !dbg !7754
  %16 = icmp eq i32 %15, 0, !dbg !7755
  br i1 %16, label %27, label %17, !dbg !7756

17:                                               ; preds = %13
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.54, i32 0, i32 0), i32 noundef 69) #25, !dbg !7757
  %18 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !7762
  call void @llvm.dbg.value(metadata i32 %18, metadata !7715, metadata !DIExpression()), !dbg !7763
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7764
  %20 = and i32 %19, 128, !dbg !7766
  %21 = icmp eq i32 %20, 0, !dbg !7767
  br i1 %21, label %27, label %22, !dbg !7768

22:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 %18, metadata !7714, metadata !DIExpression()), !dbg !7723
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.10, i32 0, i32 0), i32 noundef 69, i32 noundef %18) #25, !dbg !7769
  %23 = icmp eq i32 %1, 0, !dbg !7775
  br i1 %23, label %27, label %24, !dbg !7777

24:                                               ; preds = %22
  %25 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7778
  %26 = and i32 %25, -129, !dbg !7778
  store volatile i32 %26, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7778
  br label %27, !dbg !7780

27:                                               ; preds = %17, %24, %22, %13
  %28 = phi i32 [ -22, %13 ], [ %18, %24 ], [ %18, %22 ], [ -22, %17 ], !dbg !7723
  call void @llvm.dbg.value(metadata i32 %28, metadata !7714, metadata !DIExpression()), !dbg !7723
  %29 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7781
  %30 = and i32 %29, 1, !dbg !7783
  %31 = icmp eq i32 %30, 0, !dbg !7784
  br i1 %31, label %33, label %32, !dbg !7785

32:                                               ; preds = %27
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.11, i32 0, i32 0), i32 noundef 69) #25, !dbg !7786
  br label %33, !dbg !7792

33:                                               ; preds = %32, %27
  %34 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7793
  %35 = and i32 %34, 32, !dbg !7795
  %36 = icmp eq i32 %35, 0, !dbg !7796
  br i1 %36, label %38, label %37, !dbg !7797

37:                                               ; preds = %33
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.12, i32 0, i32 0), i32 noundef 69) #25, !dbg !7798
  br label %38, !dbg !7804

38:                                               ; preds = %37, %33
  %39 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7805
  %40 = and i32 %39, 16, !dbg !7806
  %41 = icmp eq i32 %40, 0, !dbg !7806
  br i1 %41, label %42, label %46, !dbg !7807

42:                                               ; preds = %38
  %43 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7808
  %44 = and i32 %43, 2, !dbg !7809
  %45 = icmp eq i32 %44, 0, !dbg !7809
  br i1 %45, label %55, label %46, !dbg !7810

46:                                               ; preds = %42, %38
  %47 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7811
  %48 = and i32 %47, 2048, !dbg !7812
  %49 = icmp eq i32 %48, 0, !dbg !7812
  br i1 %49, label %55, label %50, !dbg !7813

50:                                               ; preds = %46
  %51 = ptrtoint %struct.__esf* %0 to i32, !dbg !7814
  %52 = tail call i32 @z_check_thread_stack_fail(i32 noundef %28, i32 noundef %51) #25, !dbg !7815
  call void @llvm.dbg.value(metadata i32 %52, metadata !7718, metadata !DIExpression()), !dbg !7816
  %53 = icmp eq i32 %52, 0, !dbg !7817
  br i1 %53, label %55, label %54, !dbg !7819

54:                                               ; preds = %50
  call void @llvm.dbg.value(metadata i32 %52, metadata !7820, metadata !DIExpression()) #23, !dbg !7823
  tail call void asm sideeffect "MSR psp, $0", "r"(i32 %52) #23, !dbg !7826, !srcloc !7827
  call void @llvm.dbg.value(metadata i32 2, metadata !7713, metadata !DIExpression()), !dbg !7723
  br label %55, !dbg !7828

55:                                               ; preds = %54, %50, %46, %42
  %56 = phi i32 [ 0, %46 ], [ 0, %42 ], [ 2, %54 ], [ 0, %50 ], !dbg !7723
  call void @llvm.dbg.value(metadata i32 %56, metadata !7713, metadata !DIExpression()), !dbg !7723
  %57 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7829
  %58 = and i32 %57, 32, !dbg !7831
  %59 = icmp eq i32 %58, 0, !dbg !7832
  br i1 %59, label %63, label %60, !dbg !7833

60:                                               ; preds = %55
  %61 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7834
  %62 = and i32 %61, -8193, !dbg !7834
  store volatile i32 %62, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7834
  br label %63, !dbg !7836

63:                                               ; preds = %60, %55
  %64 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7837
  %65 = or i32 %64, 255, !dbg !7837
  store volatile i32 %65, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7837
  store i8 0, i8* %2, align 1, !dbg !7838
  ret i32 %56, !dbg !7839
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !7840 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7844, metadata !DIExpression()), !dbg !7851
  call void @llvm.dbg.value(metadata i32 %0, metadata !7845, metadata !DIExpression()), !dbg !7851
  call void @llvm.dbg.value(metadata i8* %1, metadata !7846, metadata !DIExpression()), !dbg !7851
  call void @llvm.dbg.value(metadata i32 0, metadata !7847, metadata !DIExpression()), !dbg !7851
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13, i32 0, i32 0), i32 noundef 69) #25, !dbg !7852
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7857
  %4 = and i32 %3, 4096, !dbg !7859
  %5 = icmp eq i32 %4, 0, !dbg !7859
  br i1 %5, label %7, label %6, !dbg !7860

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.14, i32 0, i32 0), i32 noundef 69) #25, !dbg !7861
  br label %7, !dbg !7867

7:                                                ; preds = %6, %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7868
  %9 = and i32 %8, 2048, !dbg !7870
  %10 = icmp eq i32 %9, 0, !dbg !7870
  br i1 %10, label %12, label %11, !dbg !7871

11:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8.51, i32 0, i32 0), i32 noundef 69) #25, !dbg !7872
  br label %12, !dbg !7878

12:                                               ; preds = %11, %7
  %13 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7879
  %14 = and i32 %13, 512, !dbg !7880
  %15 = icmp eq i32 %14, 0, !dbg !7880
  br i1 %15, label %26, label %16, !dbg !7881

16:                                               ; preds = %12
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.15, i32 0, i32 0), i32 noundef 69) #25, !dbg !7882
  %17 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !7887
  call void @llvm.dbg.value(metadata i32 %17, metadata !7848, metadata !DIExpression()), !dbg !7888
  %18 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7889
  %19 = and i32 %18, 32768, !dbg !7891
  %20 = icmp eq i32 %19, 0, !dbg !7892
  br i1 %20, label %26, label %21, !dbg !7893

21:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.16, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #25, !dbg !7894
  %22 = icmp eq i32 %0, 0, !dbg !7900
  br i1 %22, label %26, label %23, !dbg !7902

23:                                               ; preds = %21
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7903
  %25 = and i32 %24, -32769, !dbg !7903
  store volatile i32 %25, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7903
  br label %26, !dbg !7905

26:                                               ; preds = %16, %23, %21, %12
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7906
  %28 = and i32 %27, 1024, !dbg !7908
  %29 = icmp eq i32 %28, 0, !dbg !7908
  br i1 %29, label %31, label %30, !dbg !7909

30:                                               ; preds = %26
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.17, i32 0, i32 0), i32 noundef 69) #25, !dbg !7910
  br label %31, !dbg !7916

31:                                               ; preds = %30, %26
  %32 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7917
  %33 = and i32 %32, 256, !dbg !7919
  %34 = icmp eq i32 %33, 0, !dbg !7920
  br i1 %34, label %35, label %39, !dbg !7921

35:                                               ; preds = %31
  %36 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7922
  %37 = and i32 %36, 8192, !dbg !7924
  %38 = icmp eq i32 %37, 0, !dbg !7924
  br i1 %38, label %41, label %39, !dbg !7925

39:                                               ; preds = %35, %31
  %40 = phi i8* [ getelementptr inbounds ([29 x i8], [29 x i8]* @.str.18, i32 0, i32 0), %31 ], [ getelementptr inbounds ([52 x i8], [52 x i8]* @.str.12, i32 0, i32 0), %35 ]
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef %40, i32 noundef 69) #25, !dbg !7926
  br label %41, !dbg !7927

41:                                               ; preds = %39, %35
  %42 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7927
  %43 = or i32 %42, 65280, !dbg !7927
  store volatile i32 %43, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7927
  store i8 0, i8* %1, align 1, !dbg !7928
  ret void, !dbg !7929
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #1 !dbg !7930 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7936, metadata !DIExpression()), !dbg !7938
  call void @llvm.dbg.value(metadata i32 0, metadata !7937, metadata !DIExpression()), !dbg !7938
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.19, i32 0, i32 0), i32 noundef 69) #25, !dbg !7939
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7944
  %2 = and i32 %1, 33554432, !dbg !7946
  %3 = icmp eq i32 %2, 0, !dbg !7947
  br i1 %3, label %5, label %4, !dbg !7948

4:                                                ; preds = %0
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.20, i32 0, i32 0), i32 noundef 69) #25, !dbg !7949
  br label %5, !dbg !7955

5:                                                ; preds = %4, %0
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7956
  %7 = and i32 %6, 16777216, !dbg !7958
  %8 = icmp eq i32 %7, 0, !dbg !7959
  br i1 %8, label %10, label %9, !dbg !7960

9:                                                ; preds = %5
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.21, i32 0, i32 0), i32 noundef 69) #25, !dbg !7961
  br label %10, !dbg !7967

10:                                               ; preds = %9, %5
  %11 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7968
  %12 = and i32 %11, 524288, !dbg !7970
  %13 = icmp eq i32 %12, 0, !dbg !7971
  br i1 %13, label %15, label %14, !dbg !7972

14:                                               ; preds = %10
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.22, i32 0, i32 0), i32 noundef 69) #25, !dbg !7973
  br label %15, !dbg !7979

15:                                               ; preds = %14, %10
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7980
  %17 = and i32 %16, 262144, !dbg !7982
  %18 = icmp eq i32 %17, 0, !dbg !7983
  br i1 %18, label %20, label %19, !dbg !7984

19:                                               ; preds = %15
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.23.50, i32 0, i32 0), i32 noundef 69) #25, !dbg !7985
  br label %20, !dbg !7991

20:                                               ; preds = %19, %15
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7992
  %22 = and i32 %21, 131072, !dbg !7994
  %23 = icmp eq i32 %22, 0, !dbg !7995
  br i1 %23, label %25, label %24, !dbg !7996

24:                                               ; preds = %20
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.24, i32 0, i32 0), i32 noundef 69) #25, !dbg !7997
  br label %25, !dbg !8003

25:                                               ; preds = %24, %20
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8004
  %27 = and i32 %26, 65536, !dbg !8006
  %28 = icmp eq i32 %27, 0, !dbg !8007
  br i1 %28, label %30, label %29, !dbg !8008

29:                                               ; preds = %25
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.25, i32 0, i32 0), i32 noundef 69) #25, !dbg !8009
  br label %30, !dbg !8015

30:                                               ; preds = %29, %25
  %31 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8016
  %32 = or i32 %31, -65536, !dbg !8016
  store volatile i32 %32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8016
  ret void, !dbg !8017
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #1 !dbg !8018 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !8022, metadata !DIExpression()), !dbg !8024
  call void @llvm.dbg.value(metadata i8* %0, metadata !8023, metadata !DIExpression()), !dbg !8024
  store i8 0, i8* %0, align 1, !dbg !8025
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.26, i32 0, i32 0), i32 noundef 69) #25, !dbg !8026
  ret void, !dbg !8031
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @reserved_exception(i32 noundef %0) unnamed_addr #1 !dbg !8032 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !8036, metadata !DIExpression()), !dbg !8038
  call void @llvm.dbg.value(metadata i32 %0, metadata !8037, metadata !DIExpression()), !dbg !8038
  %2 = icmp slt i32 %0, 16, !dbg !8039
  %3 = select i1 %2, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.28.49, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.29, i32 0, i32 0), !dbg !8039
  %4 = add nsw i32 %0, -16, !dbg !8039
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.27, i32 0, i32 0), i32 noundef 69, i8* noundef %3, i32 noundef %4) #25, !dbg !8039
  ret void, !dbg !8044
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !8045 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !8049, metadata !DIExpression()), !dbg !8052
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !8053
  %3 = load i32, i32* %2, align 4, !dbg !8053
  %4 = inttoptr i32 %3 to i16*, !dbg !8054
  call void @llvm.dbg.value(metadata i16* %4, metadata !8050, metadata !DIExpression()), !dbg !8052
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8055
  %6 = or i32 %5, 256, !dbg !8055
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8055
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !8056, !srcloc !8059
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !8060, !srcloc !8063
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !8064
  %8 = load i16, i16* %7, align 2, !dbg !8065
  call void @llvm.dbg.value(metadata i16 %8, metadata !8051, metadata !DIExpression()), !dbg !8052
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8066
  %10 = and i32 %9, -257, !dbg !8066
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8066
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !8067, !srcloc !8059
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !8069, !srcloc !8063
  %11 = icmp eq i16 %8, -8446, !dbg !8071
  ret i1 %11, !dbg !8073
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #15 !dbg !8074 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8075
  %2 = or i32 %1, 16, !dbg !8075
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8075
  ret void, !dbg !8076
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #15 !dbg !8077 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8080, metadata !DIExpression()), !dbg !8081
  br label %1, !dbg !8082

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !8080, metadata !DIExpression()), !dbg !8081
  tail call fastcc void @__NVIC_SetPriority.63(i32 noundef %2) #24, !dbg !8084
  %3 = add nuw nsw i32 %2, 1, !dbg !8087
  call void @llvm.dbg.value(metadata i32 %3, metadata !8080, metadata !DIExpression()), !dbg !8081
  %4 = icmp eq i32 %3, 91, !dbg !8088
  br i1 %4, label %5, label %1, !dbg !8082, !llvm.loop !8089

5:                                                ; preds = %1
  ret void, !dbg !8091
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.63(i32 noundef %0) unnamed_addr #15 !dbg !8092 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8094, metadata !DIExpression()), !dbg !8096
  call void @llvm.dbg.value(metadata i32 1, metadata !8095, metadata !DIExpression()), !dbg !8096
  %2 = and i32 %0, 15, !dbg !8097
  %3 = add nsw i32 %2, -4, !dbg !8097
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !8097
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !8097
  %6 = icmp slt i32 %0, 0, !dbg !8097
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !8097
  store volatile i8 16, i8* %7, align 1, !dbg !8098
  ret void, !dbg !8100
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !8101 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !8207, metadata !DIExpression()), !dbg !8208
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !8209
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !8211
  br i1 %3, label %4, label %12, !dbg !8212

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !8213, !srcloc !8225
  call void @llvm.dbg.value(metadata i32 %5, metadata !8216, metadata !DIExpression()) #23, !dbg !8226
  %6 = icmp eq i32 %5, 0, !dbg !8227
  br i1 %6, label %12, label %7, !dbg !8228

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8229
  %9 = or i32 %8, 268435456, !dbg !8229
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8229
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !8231
  %11 = and i32 %10, -32769, !dbg !8231
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !8231
  br label %12, !dbg !8232

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !8233
  ret void, !dbg !8234
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_static_mpu_regions() local_unnamed_addr #1 !dbg !8235 {
  tail call void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @static_regions, i32 0, i32 0), i8 noundef zeroext 1, i32 noundef ptrtoint ([0 x i8]* @_image_ram_start to i32), i32 noundef ptrtoint ([0 x i8]* @__kernel_ram_end to i32)) #25, !dbg !8236
  ret void, !dbg !8237
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !653 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !768, metadata !DIExpression()), !dbg !8238
  call void @llvm.dbg.value(metadata i8 0, metadata !769, metadata !DIExpression()), !dbg !8238
  call void @llvm.dbg.value(metadata i32 64, metadata !771, metadata !DIExpression()), !dbg !8238
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !8239
  %3 = load i32, i32* %2, align 4, !dbg !8239
  %4 = add i32 %3, -64, !dbg !8241
  call void @llvm.dbg.value(metadata i32 %4, metadata !770, metadata !DIExpression()), !dbg !8238
  store i32 %4, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 0), align 4, !dbg !8242
  store i32 64, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 1), align 4, !dbg !8243
  store i32 353042432, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 2, i32 0), align 4, !dbg !8244
  call void @llvm.dbg.value(metadata i8 1, metadata !769, metadata !DIExpression()), !dbg !8238
  tail call void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0), i8 noundef zeroext 1) #25, !dbg !8245
  ret void, !dbg !8246
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_enable() local_unnamed_addr #1 !dbg !8247 {
  store volatile i32 5, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !8248
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !8249, !srcloc !8252
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !8253, !srcloc !8256
  ret void, !dbg !8257
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_disable() local_unnamed_addr #1 !dbg !8258 {
  tail call void asm sideeffect "dmb 0xF", "~{memory}"() #23, !dbg !8259, !srcloc !8262
  store volatile i32 0, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !8263
  ret void, !dbg !8264
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !8265 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8280, metadata !DIExpression()), !dbg !8284
  call void @llvm.dbg.value(metadata i8 %1, metadata !8281, metadata !DIExpression()), !dbg !8284
  call void @llvm.dbg.value(metadata i32 %2, metadata !8282, metadata !DIExpression()), !dbg !8284
  call void @llvm.dbg.value(metadata i32 %3, metadata !8283, metadata !DIExpression()), !dbg !8284
  tail call fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #24, !dbg !8285
  ret void, !dbg !8287
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !8288 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8293, metadata !DIExpression()), !dbg !8298
  call void @llvm.dbg.value(metadata i8 %1, metadata !8294, metadata !DIExpression()), !dbg !8298
  call void @llvm.dbg.value(metadata i32 undef, metadata !8295, metadata !DIExpression()), !dbg !8298
  call void @llvm.dbg.value(metadata i32 undef, metadata !8296, metadata !DIExpression()), !dbg !8298
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !8299
  call void @llvm.dbg.value(metadata i8 %3, metadata !8297, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8298
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext true) #24, !dbg !8300
  call void @llvm.dbg.value(metadata i32 %4, metadata !8297, metadata !DIExpression()), !dbg !8298
  %5 = trunc i32 %4 to i8, !dbg !8301
  store i8 %5, i8* @static_regions_num, align 1, !dbg !8302
  ret void, !dbg !8303
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i1 noundef zeroext %3) unnamed_addr #1 !dbg !8304 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8308, metadata !DIExpression()), !dbg !8314
  call void @llvm.dbg.value(metadata i8 %1, metadata !8309, metadata !DIExpression()), !dbg !8314
  call void @llvm.dbg.value(metadata i8 %2, metadata !8310, metadata !DIExpression()), !dbg !8314
  call void @llvm.dbg.value(metadata i1 %3, metadata !8311, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8314
  %5 = zext i8 %2 to i32, !dbg !8315
  call void @llvm.dbg.value(metadata i32 %5, metadata !8313, metadata !DIExpression()), !dbg !8314
  call void @llvm.dbg.value(metadata i32 0, metadata !8312, metadata !DIExpression()), !dbg !8314
  %6 = zext i8 %1 to i32
  call void @llvm.dbg.value(metadata i32 %5, metadata !8313, metadata !DIExpression()), !dbg !8314
  call void @llvm.dbg.value(metadata i32 0, metadata !8312, metadata !DIExpression()), !dbg !8314
  %7 = icmp eq i8 %1, 0, !dbg !8316
  br i1 %7, label %30, label %8, !dbg !8319

8:                                                ; preds = %4, %26
  %9 = phi i32 [ %27, %26 ], [ %5, %4 ]
  %10 = phi i32 [ %28, %26 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !8313, metadata !DIExpression()), !dbg !8314
  call void @llvm.dbg.value(metadata i32 %10, metadata !8312, metadata !DIExpression()), !dbg !8314
  %11 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, !dbg !8320
  %12 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, i32 1, !dbg !8323
  %13 = load i32, i32* %12, align 4, !dbg !8323
  %14 = icmp eq i32 %13, 0, !dbg !8324
  br i1 %14, label %26, label %15, !dbg !8325

15:                                               ; preds = %8
  br i1 %3, label %16, label %20, !dbg !8326

16:                                               ; preds = %15
  %17 = tail call fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* noundef nonnull %11) #24, !dbg !8328
  %18 = icmp eq i32 %17, 0, !dbg !8328
  br i1 %18, label %19, label %20, !dbg !8329

19:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.72, i32 0, i32 0), i32 noundef 69, i32 noundef %10) #25, !dbg !8330
  br label %30, !dbg !8336

20:                                               ; preds = %16, %15
  %21 = trunc i32 %9 to i8, !dbg !8337
  %22 = tail call fastcc i32 @mpu_configure_region(i8 noundef zeroext %21, %struct.z_arm_mpu_partition* noundef nonnull %11) #24, !dbg !8338
  call void @llvm.dbg.value(metadata i32 %22, metadata !8313, metadata !DIExpression()), !dbg !8314
  %23 = icmp eq i32 %22, -22, !dbg !8339
  br i1 %23, label %30, label %24, !dbg !8341

24:                                               ; preds = %20
  %25 = add nsw i32 %22, 1, !dbg !8342
  call void @llvm.dbg.value(metadata i32 %25, metadata !8313, metadata !DIExpression()), !dbg !8314
  br label %26, !dbg !8343

26:                                               ; preds = %8, %24
  %27 = phi i32 [ %9, %8 ], [ %25, %24 ], !dbg !8314
  call void @llvm.dbg.value(metadata i32 %27, metadata !8313, metadata !DIExpression()), !dbg !8314
  %28 = add nuw nsw i32 %10, 1, !dbg !8344
  call void @llvm.dbg.value(metadata i32 %28, metadata !8312, metadata !DIExpression()), !dbg !8314
  %29 = icmp eq i32 %28, %6, !dbg !8316
  br i1 %29, label %30, label %8, !dbg !8319, !llvm.loop !8345

30:                                               ; preds = %20, %26, %4, %19
  %31 = phi i32 [ -22, %19 ], [ %5, %4 ], [ -22, %20 ], [ %27, %26 ], !dbg !8314
  ret i32 %31, !dbg !8347
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define internal fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* nocapture noundef readonly %0) unnamed_addr #16 !dbg !8348 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8352, metadata !DIExpression()), !dbg !8354
  %2 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 1, !dbg !8355
  %3 = load i32, i32* %2, align 4, !dbg !8355
  %4 = tail call i32 @llvm.ctpop.i32(i32 %3), !dbg !8356, !range !8357
  %5 = icmp ult i32 %4, 2, !dbg !8356
  %6 = icmp ugt i32 %3, 31
  %7 = and i1 %6, %5, !dbg !8358
  br i1 %7, label %8, label %15, !dbg !8358

8:                                                ; preds = %1
  %9 = add i32 %3, -1, !dbg !8359
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 0, !dbg !8360
  %11 = load i32, i32* %10, align 4, !dbg !8360
  %12 = and i32 %11, %9, !dbg !8361
  %13 = icmp eq i32 %12, 0, !dbg !8362
  %14 = zext i1 %13 to i32
  br label %15

15:                                               ; preds = %8, %1
  %16 = phi i32 [ 0, %1 ], [ %14, %8 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !8353, metadata !DIExpression()), !dbg !8354
  ret i32 %16, !dbg !8363
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_region(i8 noundef zeroext %0, %struct.z_arm_mpu_partition* nocapture noundef readonly %1) unnamed_addr #1 !dbg !8364 {
  %3 = alloca %struct.arm_mpu_region, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !8368, metadata !DIExpression()), !dbg !8371
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %1, metadata !8369, metadata !DIExpression()), !dbg !8371
  %4 = bitcast %struct.arm_mpu_region* %3 to i8*, !dbg !8372
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #23, !dbg !8372
  call void @llvm.dbg.declare(metadata %struct.arm_mpu_region* %3, metadata !8370, metadata !DIExpression()), !dbg !8373
  %5 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 0, !dbg !8374
  %6 = load i32, i32* %5, align 4, !dbg !8374
  %7 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 0, !dbg !8375
  store i32 %6, i32* %7, align 4, !dbg !8376
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 2, !dbg !8377
  %9 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 2, !dbg !8378
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 1, !dbg !8379
  %11 = load i32, i32* %10, align 4, !dbg !8379
  call fastcc void @get_region_attr_from_mpu_partition_info(%union.anon* noundef nonnull %8, %union.anon* noundef nonnull %9, i32 noundef %11) #24, !dbg !8380
  %12 = call fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* noundef nonnull %3) #24, !dbg !8381
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #23, !dbg !8382
  ret i32 %12, !dbg !8383
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @get_region_attr_from_mpu_partition_info(%union.anon* nocapture noundef writeonly %0, %union.anon* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #17 !dbg !8384 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !8391, metadata !DIExpression()), !dbg !8395
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !8392, metadata !DIExpression()), !dbg !8395
  call void @llvm.dbg.value(metadata i32 undef, metadata !8393, metadata !DIExpression()), !dbg !8395
  call void @llvm.dbg.value(metadata i32 %2, metadata !8394, metadata !DIExpression()), !dbg !8395
  %4 = getelementptr inbounds %union.anon, %union.anon* %1, i32 0, i32 0, !dbg !8396
  %5 = load i32, i32* %4, align 4, !dbg !8396
  %6 = tail call fastcc i32 @size_to_mpu_rasr_size(i32 noundef %2) #24, !dbg !8397
  %7 = or i32 %6, %5, !dbg !8398
  %8 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !8399
  store i32 %7, i32* %8, align 4, !dbg !8400
  ret void, !dbg !8401
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #1 !dbg !8402 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !8406, metadata !DIExpression()), !dbg !8408
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !8407, metadata !DIExpression()), !dbg !8408
  %3 = zext i8 %0 to i32, !dbg !8409
  %4 = icmp ugt i8 %0, 7, !dbg !8411
  br i1 %4, label %5, label %6, !dbg !8412

5:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.1.73, i32 0, i32 0), i32 noundef 69, i32 noundef %3) #25, !dbg !8413
  br label %7, !dbg !8419

6:                                                ; preds = %2
  tail call fastcc void @region_init(i32 noundef %3, %struct.arm_mpu_region* noundef %1) #24, !dbg !8420
  br label %7, !dbg !8421

7:                                                ; preds = %6, %5
  %8 = phi i32 [ -22, %5 ], [ %3, %6 ], !dbg !8408
  ret i32 %8, !dbg !8422
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @region_init(i32 noundef %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #15 !dbg !8423 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8427, metadata !DIExpression()), !dbg !8429
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !8428, metadata !DIExpression()), !dbg !8429
  tail call fastcc void @set_region_number(i32 noundef %0) #24, !dbg !8430
  %3 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 0, !dbg !8431
  %4 = load i32, i32* %3, align 4, !dbg !8431
  %5 = and i32 %4, -32, !dbg !8432
  %6 = or i32 %5, %0, !dbg !8433
  %7 = or i32 %6, 16, !dbg !8433
  store volatile i32 %7, i32* inttoptr (i32 -536810084 to i32*), align 4, !dbg !8434
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 2, i32 0, !dbg !8435
  %9 = load i32, i32* %8, align 4, !dbg !8435
  %10 = or i32 %9, 1, !dbg !8436
  store volatile i32 %10, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !8437
  ret void, !dbg !8438
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_region_number(i32 noundef %0) unnamed_addr #15 !dbg !8439 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8442, metadata !DIExpression()), !dbg !8443
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !8444
  ret void, !dbg !8445
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @size_to_mpu_rasr_size(i32 noundef %0) unnamed_addr #12 !dbg !8446 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8450, metadata !DIExpression()), !dbg !8451
  %2 = icmp ult i32 %0, 33, !dbg !8452
  br i1 %2, label %11, label %3, !dbg !8454

3:                                                ; preds = %1
  %4 = icmp ugt i32 %0, -2147483648, !dbg !8455
  br i1 %4, label %11, label %5, !dbg !8457

5:                                                ; preds = %3
  %6 = add i32 %0, -1, !dbg !8458
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false), !dbg !8459, !range !8357
  %8 = mul nsw i32 %7, -2, !dbg !8460
  %9 = add nsw i32 %8, 62, !dbg !8460
  %10 = and i32 %9, 62, !dbg !8461
  br label %11, !dbg !8462

11:                                               ; preds = %3, %1, %5
  %12 = phi i32 [ %10, %5 ], [ 8, %1 ], [ 62, %3 ], !dbg !8451
  ret i32 %12, !dbg !8463
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #3

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #3

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #1 !dbg !8464 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8468, metadata !DIExpression()), !dbg !8470
  call void @llvm.dbg.value(metadata i8 %1, metadata !8469, metadata !DIExpression()), !dbg !8470
  tail call fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #24, !dbg !8471
  ret void, !dbg !8473
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !8474 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8478, metadata !DIExpression()), !dbg !8485
  call void @llvm.dbg.value(metadata i8 %1, metadata !8479, metadata !DIExpression()), !dbg !8485
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !8486
  call void @llvm.dbg.value(metadata i8 %3, metadata !8480, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8485
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext false) #24, !dbg !8487
  call void @llvm.dbg.value(metadata i32 %4, metadata !8480, metadata !DIExpression()), !dbg !8485
  %5 = icmp ne i32 %4, -22, !dbg !8488
  %6 = icmp slt i32 %4, 8
  %7 = and i1 %5, %6, !dbg !8489
  call void @llvm.dbg.value(metadata i32 %4, metadata !8481, metadata !DIExpression()), !dbg !8490
  br i1 %7, label %8, label %12, !dbg !8489

8:                                                ; preds = %2, %8
  %9 = phi i32 [ %10, %8 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !8481, metadata !DIExpression()), !dbg !8490
  tail call fastcc void @ARM_MPU_ClrRegion(i32 noundef %9) #24, !dbg !8491
  %10 = add i32 %9, 1, !dbg !8494
  call void @llvm.dbg.value(metadata i32 %10, metadata !8481, metadata !DIExpression()), !dbg !8490
  %11 = icmp eq i32 %10, 8, !dbg !8495
  br i1 %11, label %12, label %8, !dbg !8496, !llvm.loop !8497

12:                                               ; preds = %8, %2
  ret void, !dbg !8499
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @ARM_MPU_ClrRegion(i32 noundef %0) unnamed_addr #15 !dbg !8500 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8503, metadata !DIExpression()), !dbg !8504
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !8505
  store volatile i32 0, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !8506
  ret void, !dbg !8507
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_arm_mpu_init() local_unnamed_addr #1 !dbg !8508 {
  %1 = load i32, i32* getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 0), align 4, !dbg !8513
  %2 = icmp ugt i32 %1, 8, !dbg !8515
  br i1 %2, label %14, label %3, !dbg !8516

3:                                                ; preds = %0
  tail call void @arm_core_mpu_disable() #24, !dbg !8517
  call void @llvm.dbg.value(metadata i32 0, metadata !8512, metadata !DIExpression()), !dbg !8518
  %4 = icmp eq i32 %1, 0, !dbg !8519
  br i1 %4, label %12, label %5, !dbg !8522

5:                                                ; preds = %3
  %6 = load %struct.arm_mpu_region*, %struct.arm_mpu_region** getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 1), align 4
  br label %7, !dbg !8522

7:                                                ; preds = %5, %7
  %8 = phi i32 [ 0, %5 ], [ %10, %7 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !8512, metadata !DIExpression()), !dbg !8518
  %9 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %6, i32 %8, !dbg !8523
  tail call fastcc void @region_init(i32 noundef %8, %struct.arm_mpu_region* noundef %9) #24, !dbg !8525
  %10 = add nuw i32 %8, 1, !dbg !8526
  call void @llvm.dbg.value(metadata i32 %10, metadata !8512, metadata !DIExpression()), !dbg !8518
  %11 = icmp eq i32 %10, %1, !dbg !8519
  br i1 %11, label %12, label %7, !dbg !8522, !llvm.loop !8527

12:                                               ; preds = %7, %3
  %13 = trunc i32 %1 to i8, !dbg !8529
  store i8 %13, i8* @static_regions_num, align 1, !dbg !8530
  tail call void @arm_core_mpu_enable() #24, !dbg !8531
  br label %14, !dbg !8532

14:                                               ; preds = %0, %12
  %15 = phi i32 [ 0, %12 ], [ -1, %0 ], !dbg !8518
  ret i32 %15, !dbg !8533
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #14 !dbg !8534 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8541, metadata !DIExpression()), !dbg !8544
  call void @llvm.dbg.value(metadata i8* %1, metadata !8542, metadata !DIExpression()), !dbg !8544
  call void @llvm.dbg.value(metadata i8* %0, metadata !8543, metadata !DIExpression()), !dbg !8544
  %3 = load i8, i8* %1, align 1, !dbg !8545
  %4 = icmp eq i8 %3, 0, !dbg !8546
  br i1 %4, label %13, label %5, !dbg !8547

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !8541, metadata !DIExpression()), !dbg !8544
  call void @llvm.dbg.value(metadata i8* %8, metadata !8542, metadata !DIExpression()), !dbg !8544
  store i8 %6, i8* %7, align 1, !dbg !8548
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !8550
  call void @llvm.dbg.value(metadata i8* %9, metadata !8541, metadata !DIExpression()), !dbg !8544
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8551
  call void @llvm.dbg.value(metadata i8* %10, metadata !8542, metadata !DIExpression()), !dbg !8544
  %11 = load i8, i8* %10, align 1, !dbg !8545
  %12 = icmp eq i8 %11, 0, !dbg !8546
  br i1 %12, label %13, label %5, !dbg !8547, !llvm.loop !8552

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !8554
  ret i8* %0, !dbg !8555
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !8556 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8560, metadata !DIExpression()), !dbg !8564
  call void @llvm.dbg.value(metadata i8* %1, metadata !8561, metadata !DIExpression()), !dbg !8564
  call void @llvm.dbg.value(metadata i32 %2, metadata !8562, metadata !DIExpression()), !dbg !8564
  call void @llvm.dbg.value(metadata i8* %0, metadata !8563, metadata !DIExpression()), !dbg !8564
  %4 = icmp eq i32 %2, 0, !dbg !8565
  br i1 %4, label %22, label %5, !dbg !8566

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !8560, metadata !DIExpression()), !dbg !8564
  call void @llvm.dbg.value(metadata i32 %7, metadata !8562, metadata !DIExpression()), !dbg !8564
  call void @llvm.dbg.value(metadata i8* %8, metadata !8561, metadata !DIExpression()), !dbg !8564
  %9 = load i8, i8* %8, align 1, !dbg !8567
  %10 = icmp eq i8 %9, 0, !dbg !8568
  br i1 %10, label %16, label %11, !dbg !8569

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !8570
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8572
  call void @llvm.dbg.value(metadata i8* %12, metadata !8561, metadata !DIExpression()), !dbg !8564
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !8573
  call void @llvm.dbg.value(metadata i8* %13, metadata !8560, metadata !DIExpression()), !dbg !8564
  %14 = add i32 %7, -1, !dbg !8574
  call void @llvm.dbg.value(metadata i32 %14, metadata !8562, metadata !DIExpression()), !dbg !8564
  %15 = icmp eq i32 %14, 0, !dbg !8565
  br i1 %15, label %22, label %5, !dbg !8566, !llvm.loop !8575

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !8560, metadata !DIExpression()), !dbg !8564
  call void @llvm.dbg.value(metadata i32 %18, metadata !8562, metadata !DIExpression()), !dbg !8564
  store i8 0, i8* %17, align 1, !dbg !8577
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !8579
  call void @llvm.dbg.value(metadata i8* %19, metadata !8560, metadata !DIExpression()), !dbg !8564
  %20 = add i32 %18, -1, !dbg !8580
  call void @llvm.dbg.value(metadata i32 %20, metadata !8562, metadata !DIExpression()), !dbg !8564
  %21 = icmp eq i32 %20, 0, !dbg !8581
  br i1 %21, label %22, label %16, !dbg !8582, !llvm.loop !8583

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !8585
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #9 !dbg !8586 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8590, metadata !DIExpression()), !dbg !8593
  call void @llvm.dbg.value(metadata i32 %1, metadata !8591, metadata !DIExpression()), !dbg !8593
  call void @llvm.dbg.value(metadata i32 %1, metadata !8592, metadata !DIExpression()), !dbg !8593
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !8594

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !8590, metadata !DIExpression()), !dbg !8593
  %6 = load i8, i8* %5, align 1, !dbg !8595
  %7 = icmp eq i8 %6, %3, !dbg !8596
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !8597
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !8598
  call void @llvm.dbg.value(metadata i8* %10, metadata !8590, metadata !DIExpression()), !dbg !8593
  br i1 %9, label %11, label %4, !dbg !8597, !llvm.loop !8600

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !8602
  ret i8* %12, !dbg !8603
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #9 !dbg !8604 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8606, metadata !DIExpression()), !dbg !8609
  call void @llvm.dbg.value(metadata i32 %1, metadata !8607, metadata !DIExpression()), !dbg !8609
  call void @llvm.dbg.value(metadata i8* null, metadata !8608, metadata !DIExpression()), !dbg !8609
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !8610

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !8609
  call void @llvm.dbg.value(metadata i8* %6, metadata !8608, metadata !DIExpression()), !dbg !8609
  call void @llvm.dbg.value(metadata i8* %5, metadata !8606, metadata !DIExpression()), !dbg !8609
  %7 = load i8, i8* %5, align 1, !dbg !8611
  %8 = icmp eq i8 %7, %3, !dbg !8614
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !8615
  call void @llvm.dbg.value(metadata i8* %9, metadata !8608, metadata !DIExpression()), !dbg !8609
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !8616
  call void @llvm.dbg.value(metadata i8* %10, metadata !8606, metadata !DIExpression()), !dbg !8609
  %11 = icmp eq i8 %7, 0, !dbg !8617
  br i1 %11, label %12, label %4, !dbg !8617, !llvm.loop !8618

12:                                               ; preds = %4
  ret i8* %9, !dbg !8620
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #9 !dbg !8621 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8625, metadata !DIExpression()), !dbg !8627
  call void @llvm.dbg.value(metadata i32 0, metadata !8626, metadata !DIExpression()), !dbg !8627
  %2 = load i8, i8* %0, align 1, !dbg !8628
  %3 = icmp eq i8 %2, 0, !dbg !8629
  br i1 %3, label %11, label %4, !dbg !8630

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !8626, metadata !DIExpression()), !dbg !8627
  call void @llvm.dbg.value(metadata i8* %6, metadata !8625, metadata !DIExpression()), !dbg !8627
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !8631
  call void @llvm.dbg.value(metadata i8* %7, metadata !8625, metadata !DIExpression()), !dbg !8627
  %8 = add i32 %5, 1, !dbg !8633
  call void @llvm.dbg.value(metadata i32 %8, metadata !8626, metadata !DIExpression()), !dbg !8627
  %9 = load i8, i8* %7, align 1, !dbg !8628
  %10 = icmp eq i8 %9, 0, !dbg !8629
  br i1 %10, label %11, label %4, !dbg !8630, !llvm.loop !8634

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !8627
  ret i32 %12, !dbg !8636
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #9 !dbg !8637 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8641, metadata !DIExpression()), !dbg !8644
  call void @llvm.dbg.value(metadata i32 %1, metadata !8642, metadata !DIExpression()), !dbg !8644
  call void @llvm.dbg.value(metadata i32 0, metadata !8643, metadata !DIExpression()), !dbg !8644
  %3 = load i8, i8* %0, align 1, !dbg !8645
  %4 = icmp ne i8 %3, 0, !dbg !8646
  %5 = icmp ne i32 %1, 0, !dbg !8647
  %6 = and i1 %4, %5, !dbg !8647
  br i1 %6, label %7, label %16, !dbg !8648

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !8643, metadata !DIExpression()), !dbg !8644
  call void @llvm.dbg.value(metadata i8* %9, metadata !8641, metadata !DIExpression()), !dbg !8644
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !8649
  call void @llvm.dbg.value(metadata i8* %10, metadata !8641, metadata !DIExpression()), !dbg !8644
  %11 = add nuw i32 %8, 1, !dbg !8651
  call void @llvm.dbg.value(metadata i32 %11, metadata !8643, metadata !DIExpression()), !dbg !8644
  %12 = load i8, i8* %10, align 1, !dbg !8645
  %13 = icmp ne i8 %12, 0, !dbg !8646
  %14 = icmp ult i32 %11, %1, !dbg !8647
  %15 = select i1 %13, i1 %14, i1 false, !dbg !8647
  br i1 %15, label %7, label %16, !dbg !8648, !llvm.loop !8652

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !8644
  ret i32 %17, !dbg !8654
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #9 !dbg !8655 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8659, metadata !DIExpression()), !dbg !8661
  call void @llvm.dbg.value(metadata i8* %1, metadata !8660, metadata !DIExpression()), !dbg !8661
  %3 = load i8, i8* %0, align 1, !dbg !8662
  %4 = load i8, i8* %1, align 1, !dbg !8663
  %5 = icmp ne i8 %3, %4, !dbg !8664
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !8665
  br i1 %7, label %18, label %8, !dbg !8665

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !8660, metadata !DIExpression()), !dbg !8661
  call void @llvm.dbg.value(metadata i8* %10, metadata !8659, metadata !DIExpression()), !dbg !8661
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !8666
  call void @llvm.dbg.value(metadata i8* %11, metadata !8659, metadata !DIExpression()), !dbg !8661
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !8668
  call void @llvm.dbg.value(metadata i8* %12, metadata !8660, metadata !DIExpression()), !dbg !8661
  %13 = load i8, i8* %11, align 1, !dbg !8662
  %14 = load i8, i8* %12, align 1, !dbg !8663
  %15 = icmp ne i8 %13, %14, !dbg !8664
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !8665
  br i1 %17, label %18, label %8, !dbg !8665, !llvm.loop !8669

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !8662
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !8663
  %21 = zext i8 %19 to i32, !dbg !8672
  %22 = zext i8 %20 to i32, !dbg !8673
  %23 = sub nsw i32 %21, %22, !dbg !8674
  ret i32 %23, !dbg !8675
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #9 !dbg !8676 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8680, metadata !DIExpression()), !dbg !8683
  call void @llvm.dbg.value(metadata i8* %1, metadata !8681, metadata !DIExpression()), !dbg !8683
  call void @llvm.dbg.value(metadata i32 %2, metadata !8682, metadata !DIExpression()), !dbg !8683
  %4 = icmp eq i32 %2, 0, !dbg !8684
  br i1 %4, label %23, label %5, !dbg !8684

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !8682, metadata !DIExpression()), !dbg !8683
  call void @llvm.dbg.value(metadata i8* %7, metadata !8681, metadata !DIExpression()), !dbg !8683
  call void @llvm.dbg.value(metadata i8* %8, metadata !8680, metadata !DIExpression()), !dbg !8683
  %9 = load i8, i8* %8, align 1, !dbg !8685
  %10 = load i8, i8* %7, align 1, !dbg !8686
  %11 = icmp ne i8 %9, %10, !dbg !8687
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !8688
  br i1 %13, label %19, label %14, !dbg !8688

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8689
  call void @llvm.dbg.value(metadata i8* %15, metadata !8680, metadata !DIExpression()), !dbg !8683
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !8691
  call void @llvm.dbg.value(metadata i8* %16, metadata !8681, metadata !DIExpression()), !dbg !8683
  %17 = add i32 %6, -1, !dbg !8692
  call void @llvm.dbg.value(metadata i32 %17, metadata !8682, metadata !DIExpression()), !dbg !8683
  %18 = icmp eq i32 %17, 0, !dbg !8684
  br i1 %18, label %23, label %5, !dbg !8684, !llvm.loop !8693

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !8696
  %21 = zext i8 %10 to i32, !dbg !8697
  %22 = sub nsw i32 %20, %21, !dbg !8698
  br label %23, !dbg !8699

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !8699
  ret i32 %24, !dbg !8700
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #14 !dbg !8701 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8705, metadata !DIExpression()), !dbg !8710
  call void @llvm.dbg.value(metadata i8* %1, metadata !8706, metadata !DIExpression()), !dbg !8710
  call void @llvm.dbg.value(metadata i8** %2, metadata !8707, metadata !DIExpression()), !dbg !8710
  %4 = icmp eq i8* %0, null, !dbg !8711
  br i1 %4, label %5, label %7, !dbg !8711

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !8712
  br label %7, !dbg !8711

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !8711
  call void @llvm.dbg.value(metadata i8* %8, metadata !8708, metadata !DIExpression()), !dbg !8710
  %9 = load i8, i8* %8, align 1, !dbg !8713
  %10 = icmp eq i8 %9, 0, !dbg !8713
  br i1 %10, label %33, label %11, !dbg !8714

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !8708, metadata !DIExpression()), !dbg !8710
  %14 = zext i8 %12 to i32, !dbg !8713
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #24, !dbg !8715
  %16 = icmp eq i8* %15, null, !dbg !8714
  br i1 %16, label %21, label %17, !dbg !8716

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !8717
  call void @llvm.dbg.value(metadata i8* %18, metadata !8708, metadata !DIExpression()), !dbg !8710
  %19 = load i8, i8* %18, align 1, !dbg !8713
  %20 = icmp eq i8 %19, 0, !dbg !8713
  br i1 %20, label %33, label %11, !dbg !8714, !llvm.loop !8719

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !8709, metadata !DIExpression()), !dbg !8710
  %24 = zext i8 %22 to i32, !dbg !8721
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #24, !dbg !8722
  %26 = icmp eq i8* %25, null, !dbg !8723
  br i1 %26, label %27, label %31, !dbg !8724

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !8725
  call void @llvm.dbg.value(metadata i8* %28, metadata !8709, metadata !DIExpression()), !dbg !8710
  %29 = load i8, i8* %28, align 1, !dbg !8721
  %30 = icmp eq i8 %29, 0, !dbg !8721
  br i1 %30, label %33, label %21, !dbg !8727, !llvm.loop !8728

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !8730
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !8733
  br label %33, !dbg !8734

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !8710
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !8710
  store i8* %34, i8** %2, align 4, !dbg !8710
  ret i8* %35, !dbg !8735
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #14 !dbg !8736 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8738, metadata !DIExpression()), !dbg !8740
  call void @llvm.dbg.value(metadata i8* %1, metadata !8739, metadata !DIExpression()), !dbg !8740
  %3 = tail call i32 @strlen(i8* noundef %0) #24, !dbg !8741
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !8742
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #24, !dbg !8743
  ret i8* %0, !dbg !8744
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !8745 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8747, metadata !DIExpression()), !dbg !8752
  call void @llvm.dbg.value(metadata i8* %1, metadata !8748, metadata !DIExpression()), !dbg !8752
  call void @llvm.dbg.value(metadata i32 %2, metadata !8749, metadata !DIExpression()), !dbg !8752
  call void @llvm.dbg.value(metadata i8* %0, metadata !8750, metadata !DIExpression()), !dbg !8752
  %4 = tail call i32 @strlen(i8* noundef %0) #24, !dbg !8753
  call void @llvm.dbg.value(metadata i32 %4, metadata !8751, metadata !DIExpression()), !dbg !8752
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !8754
  call void @llvm.dbg.value(metadata i8* %5, metadata !8747, metadata !DIExpression()), !dbg !8752
  call void @llvm.dbg.value(metadata i8* %1, metadata !8748, metadata !DIExpression()), !dbg !8752
  call void @llvm.dbg.value(metadata i32 %2, metadata !8749, metadata !DIExpression()), !dbg !8752
  call void @llvm.dbg.value(metadata i32 %2, metadata !8749, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8752
  %6 = icmp eq i32 %2, 0, !dbg !8755
  br i1 %6, label %18, label %7, !dbg !8756

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !8757
  call void @llvm.dbg.value(metadata i8* %9, metadata !8747, metadata !DIExpression()), !dbg !8752
  call void @llvm.dbg.value(metadata i8* %10, metadata !8748, metadata !DIExpression()), !dbg !8752
  %12 = load i8, i8* %10, align 1, !dbg !8758
  %13 = icmp eq i8 %12, 0, !dbg !8759
  br i1 %13, label %18, label %14, !dbg !8760

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !8761
  call void @llvm.dbg.value(metadata i8* %15, metadata !8748, metadata !DIExpression()), !dbg !8752
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !8763
  call void @llvm.dbg.value(metadata i8* %16, metadata !8747, metadata !DIExpression()), !dbg !8752
  store i8 %12, i8* %9, align 1, !dbg !8764
  call void @llvm.dbg.value(metadata i32 %11, metadata !8749, metadata !DIExpression()), !dbg !8752
  call void @llvm.dbg.value(metadata i32 %11, metadata !8749, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8752
  %17 = icmp eq i32 %11, 0, !dbg !8755
  br i1 %17, label %18, label %7, !dbg !8756, !llvm.loop !8765

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !8752
  store i8 0, i8* %19, align 1, !dbg !8767
  ret i8* %0, !dbg !8768
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #9 !dbg !8769 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8773, metadata !DIExpression()), !dbg !8778
  call void @llvm.dbg.value(metadata i8* %1, metadata !8774, metadata !DIExpression()), !dbg !8778
  call void @llvm.dbg.value(metadata i32 %2, metadata !8775, metadata !DIExpression()), !dbg !8778
  call void @llvm.dbg.value(metadata i8* %0, metadata !8776, metadata !DIExpression()), !dbg !8778
  call void @llvm.dbg.value(metadata i8* %1, metadata !8777, metadata !DIExpression()), !dbg !8778
  %4 = icmp eq i32 %2, 0, !dbg !8779
  br i1 %4, label %31, label %5, !dbg !8781

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8777, metadata !DIExpression()), !dbg !8778
  call void @llvm.dbg.value(metadata i8* %0, metadata !8776, metadata !DIExpression()), !dbg !8778
  call void @llvm.dbg.value(metadata i32 %2, metadata !8775, metadata !DIExpression()), !dbg !8778
  %6 = add i32 %2, -1, !dbg !8782
  call void @llvm.dbg.value(metadata i32 %6, metadata !8775, metadata !DIExpression()), !dbg !8778
  %7 = icmp eq i32 %6, 0, !dbg !8783
  br i1 %7, label %23, label %8, !dbg !8784

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !8785
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !8785
  br label %11, !dbg !8785

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !8777, metadata !DIExpression()), !dbg !8778
  call void @llvm.dbg.value(metadata i8* %14, metadata !8776, metadata !DIExpression()), !dbg !8778
  %15 = load i8, i8* %14, align 1, !dbg !8786
  %16 = load i8, i8* %13, align 1, !dbg !8787
  %17 = icmp eq i8 %15, %16, !dbg !8788
  br i1 %17, label %18, label %23, !dbg !8785

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !8789
  call void @llvm.dbg.value(metadata i8* %19, metadata !8776, metadata !DIExpression()), !dbg !8778
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !8791
  call void @llvm.dbg.value(metadata i8* %20, metadata !8777, metadata !DIExpression()), !dbg !8778
  call void @llvm.dbg.value(metadata i32 %12, metadata !8775, metadata !DIExpression()), !dbg !8778
  %21 = add i32 %12, -1, !dbg !8782
  call void @llvm.dbg.value(metadata i32 %21, metadata !8775, metadata !DIExpression()), !dbg !8778
  %22 = icmp eq i32 %21, 0, !dbg !8783
  br i1 %22, label %23, label %11, !dbg !8784, !llvm.loop !8792

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !8778
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !8778
  %26 = load i8, i8* %24, align 1, !dbg !8794
  %27 = zext i8 %26 to i32, !dbg !8794
  %28 = load i8, i8* %25, align 1, !dbg !8795
  %29 = zext i8 %28 to i32, !dbg !8795
  %30 = sub nsw i32 %27, %29, !dbg !8796
  br label %31, !dbg !8797

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !8778
  ret i32 %32, !dbg !8798
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #14 !dbg !8799 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8803, metadata !DIExpression()), !dbg !8808
  call void @llvm.dbg.value(metadata i8* %1, metadata !8804, metadata !DIExpression()), !dbg !8808
  call void @llvm.dbg.value(metadata i32 %2, metadata !8805, metadata !DIExpression()), !dbg !8808
  call void @llvm.dbg.value(metadata i8* %0, metadata !8806, metadata !DIExpression()), !dbg !8808
  call void @llvm.dbg.value(metadata i8* %1, metadata !8807, metadata !DIExpression()), !dbg !8808
  %4 = ptrtoint i8* %0 to i32, !dbg !8809
  %5 = ptrtoint i8* %1 to i32, !dbg !8809
  %6 = sub i32 %4, %5, !dbg !8809
  %7 = icmp ult i32 %6, %2, !dbg !8811
  br i1 %7, label %10, label %8, !dbg !8812

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8807, metadata !DIExpression()), !dbg !8808
  call void @llvm.dbg.value(metadata i8* %0, metadata !8806, metadata !DIExpression()), !dbg !8808
  call void @llvm.dbg.value(metadata i32 %2, metadata !8805, metadata !DIExpression()), !dbg !8808
  %9 = icmp eq i32 %2, 0, !dbg !8813
  br i1 %9, label %26, label %17, !dbg !8815

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !8805, metadata !DIExpression()), !dbg !8808
  %12 = add i32 %11, -1, !dbg !8816
  call void @llvm.dbg.value(metadata i32 %12, metadata !8805, metadata !DIExpression()), !dbg !8808
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !8819
  %14 = load i8, i8* %13, align 1, !dbg !8819
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !8820
  store i8 %14, i8* %15, align 1, !dbg !8821
  %16 = icmp eq i32 %12, 0, !dbg !8822
  br i1 %16, label %26, label %10, !dbg !8823, !llvm.loop !8824

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !8807, metadata !DIExpression()), !dbg !8808
  call void @llvm.dbg.value(metadata i8* %19, metadata !8806, metadata !DIExpression()), !dbg !8808
  call void @llvm.dbg.value(metadata i32 %20, metadata !8805, metadata !DIExpression()), !dbg !8808
  %21 = load i8, i8* %18, align 1, !dbg !8826
  store i8 %21, i8* %19, align 1, !dbg !8828
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !8829
  call void @llvm.dbg.value(metadata i8* %22, metadata !8806, metadata !DIExpression()), !dbg !8808
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !8830
  call void @llvm.dbg.value(metadata i8* %23, metadata !8807, metadata !DIExpression()), !dbg !8808
  %24 = add i32 %20, -1, !dbg !8831
  call void @llvm.dbg.value(metadata i32 %24, metadata !8805, metadata !DIExpression()), !dbg !8808
  %25 = icmp eq i32 %24, 0, !dbg !8813
  br i1 %25, label %26, label %17, !dbg !8815, !llvm.loop !8832

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !8834
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !8835 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8841, metadata !DIExpression()), !dbg !8846
  call void @llvm.dbg.value(metadata i8* %1, metadata !8842, metadata !DIExpression()), !dbg !8846
  call void @llvm.dbg.value(metadata i32 %2, metadata !8843, metadata !DIExpression()), !dbg !8846
  call void @llvm.dbg.value(metadata i8* %0, metadata !8844, metadata !DIExpression()), !dbg !8846
  call void @llvm.dbg.value(metadata i8* %1, metadata !8845, metadata !DIExpression()), !dbg !8846
  %4 = icmp eq i32 %2, 0, !dbg !8847
  br i1 %4, label %14, label %5, !dbg !8848

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !8845, metadata !DIExpression()), !dbg !8846
  call void @llvm.dbg.value(metadata i8* %7, metadata !8844, metadata !DIExpression()), !dbg !8846
  call void @llvm.dbg.value(metadata i32 %8, metadata !8843, metadata !DIExpression()), !dbg !8846
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !8849
  call void @llvm.dbg.value(metadata i8* %9, metadata !8845, metadata !DIExpression()), !dbg !8846
  %10 = load i8, i8* %6, align 1, !dbg !8851
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !8852
  call void @llvm.dbg.value(metadata i8* %11, metadata !8844, metadata !DIExpression()), !dbg !8846
  store i8 %10, i8* %7, align 1, !dbg !8853
  %12 = add i32 %8, -1, !dbg !8854
  call void @llvm.dbg.value(metadata i32 %12, metadata !8843, metadata !DIExpression()), !dbg !8846
  %13 = icmp eq i32 %12, 0, !dbg !8847
  br i1 %13, label %14, label %5, !dbg !8848, !llvm.loop !8855

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !8857
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #18 !dbg !8858 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8862, metadata !DIExpression()), !dbg !8867
  call void @llvm.dbg.value(metadata i32 %1, metadata !8863, metadata !DIExpression()), !dbg !8867
  call void @llvm.dbg.value(metadata i32 %2, metadata !8864, metadata !DIExpression()), !dbg !8867
  call void @llvm.dbg.value(metadata i8* %0, metadata !8865, metadata !DIExpression()), !dbg !8867
  %4 = trunc i32 %1 to i8, !dbg !8868
  call void @llvm.dbg.value(metadata i8 %4, metadata !8866, metadata !DIExpression()), !dbg !8867
  call void @llvm.dbg.value(metadata i32 %2, metadata !8864, metadata !DIExpression()), !dbg !8867
  call void @llvm.dbg.value(metadata i8* %0, metadata !8865, metadata !DIExpression()), !dbg !8867
  %5 = icmp eq i32 %2, 0, !dbg !8869
  br i1 %5, label %12, label %6, !dbg !8870

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !8864, metadata !DIExpression()), !dbg !8867
  call void @llvm.dbg.value(metadata i8* %8, metadata !8865, metadata !DIExpression()), !dbg !8867
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8871
  call void @llvm.dbg.value(metadata i8* %9, metadata !8865, metadata !DIExpression()), !dbg !8867
  store i8 %4, i8* %8, align 1, !dbg !8873
  %10 = add i32 %7, -1, !dbg !8874
  call void @llvm.dbg.value(metadata i32 %10, metadata !8864, metadata !DIExpression()), !dbg !8867
  %11 = icmp eq i32 %10, 0, !dbg !8869
  br i1 %11, label %12, label %6, !dbg !8870, !llvm.loop !8875

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !8877
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #9 !dbg !8878 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8882, metadata !DIExpression()), !dbg !8888
  call void @llvm.dbg.value(metadata i32 %1, metadata !8883, metadata !DIExpression()), !dbg !8888
  call void @llvm.dbg.value(metadata i32 %2, metadata !8884, metadata !DIExpression()), !dbg !8888
  %4 = icmp eq i32 %2, 0, !dbg !8889
  br i1 %4, label %17, label %5, !dbg !8890

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !8891

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !8892
  call void @llvm.dbg.value(metadata i8* %9, metadata !8885, metadata !DIExpression()), !dbg !8892
  call void @llvm.dbg.value(metadata i32 %8, metadata !8884, metadata !DIExpression()), !dbg !8888
  call void @llvm.dbg.value(metadata i8* %9, metadata !8885, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !8892
  %10 = load i8, i8* %9, align 1, !dbg !8893
  %11 = icmp eq i8 %10, %6, !dbg !8896
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !8897
  call void @llvm.dbg.value(metadata i8* %12, metadata !8885, metadata !DIExpression()), !dbg !8892
  call void @llvm.dbg.value(metadata i32 %13, metadata !8884, metadata !DIExpression()), !dbg !8888
  br i1 %15, label %16, label %7, !dbg !8897, !llvm.loop !8898

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !8900

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !8888
  ret i8* %19, !dbg !8901
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #6 !dbg !8902 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !8904, metadata !DIExpression()), !dbg !8905
  store i32 (i32)* %0, i32 (i32)** @_stdout_hook, align 4, !dbg !8906
  ret void, !dbg !8907
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @_stdout_hook_default(i32 noundef %0) #4 !dbg !8908 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8910, metadata !DIExpression()), !dbg !8911
  ret i32 -1, !dbg !8912
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !8913 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8917, metadata !DIExpression()), !dbg !8919
  call void @llvm.dbg.value(metadata i32* %1, metadata !8918, metadata !DIExpression()), !dbg !8919
  %3 = ptrtoint i32* %1 to i32, !dbg !8920
  %4 = and i32 %3, -2, !dbg !8920
  %5 = icmp eq i32 %4, 2, !dbg !8920
  br i1 %5, label %6, label %9, !dbg !8920

6:                                                ; preds = %2
  %7 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !8921
  %8 = tail call i32 %7(i32 noundef %0) #25, !dbg !8921
  br label %9, !dbg !8922

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %2 ], !dbg !8922
  ret i32 %10, !dbg !8923
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !8924 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8926, metadata !DIExpression()), !dbg !8928
  call void @llvm.dbg.value(metadata i32* %1, metadata !8927, metadata !DIExpression()), !dbg !8928
  %3 = tail call fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #24, !dbg !8929
  ret i32 %3, !dbg !8930
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) unnamed_addr #1 !dbg !8931 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8934, metadata !DIExpression()), !dbg !8936
  call void @llvm.dbg.value(metadata i32* %1, metadata !8935, metadata !DIExpression()), !dbg !8936
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8937, !srcloc !8939
  %3 = tail call i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #24, !dbg !8940
  ret i32 %3, !dbg !8941
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) local_unnamed_addr #1 !dbg !8942 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8947, metadata !DIExpression()), !dbg !8951
  call void @llvm.dbg.value(metadata i32* %1, metadata !8948, metadata !DIExpression()), !dbg !8951
  %3 = tail call i32 @strlen(i8* noundef %0) #25, !dbg !8952
  call void @llvm.dbg.value(metadata i32 %3, metadata !8949, metadata !DIExpression()), !dbg !8951
  %4 = tail call i32 @fwrite(i8* noundef %0, i32 noundef 1, i32 noundef %3, i32* noundef %1) #24, !dbg !8953
  call void @llvm.dbg.value(metadata i32 %4, metadata !8950, metadata !DIExpression()), !dbg !8951
  %5 = icmp ne i32 %3, %4, !dbg !8954
  %6 = sext i1 %5 to i32, !dbg !8955
  ret i32 %6, !dbg !8956
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) local_unnamed_addr #1 !dbg !8957 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8961, metadata !DIExpression()), !dbg !8965
  call void @llvm.dbg.value(metadata i32 %1, metadata !8962, metadata !DIExpression()), !dbg !8965
  call void @llvm.dbg.value(metadata i32 %2, metadata !8963, metadata !DIExpression()), !dbg !8965
  call void @llvm.dbg.value(metadata i32* %3, metadata !8964, metadata !DIExpression()), !dbg !8965
  %5 = tail call fastcc i32 @zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #24, !dbg !8966
  ret i32 %5, !dbg !8967
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) unnamed_addr #1 !dbg !8968 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8970, metadata !DIExpression()), !dbg !8974
  call void @llvm.dbg.value(metadata i32 %1, metadata !8971, metadata !DIExpression()), !dbg !8974
  call void @llvm.dbg.value(metadata i32 %2, metadata !8972, metadata !DIExpression()), !dbg !8974
  call void @llvm.dbg.value(metadata i32* %3, metadata !8973, metadata !DIExpression()), !dbg !8974
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8975, !srcloc !8977
  %5 = tail call i32 @z_impl_zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #24, !dbg !8978
  ret i32 %5, !dbg !8979
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef readnone %3) local_unnamed_addr #1 !dbg !8980 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8982, metadata !DIExpression()), !dbg !8990
  call void @llvm.dbg.value(metadata i32 %1, metadata !8983, metadata !DIExpression()), !dbg !8990
  call void @llvm.dbg.value(metadata i32 %2, metadata !8984, metadata !DIExpression()), !dbg !8990
  call void @llvm.dbg.value(metadata i32* %3, metadata !8985, metadata !DIExpression()), !dbg !8990
  %5 = icmp ne i32* %3, inttoptr (i32 2 to i32*), !dbg !8991
  %6 = icmp ne i32* %3, inttoptr (i32 3 to i32*)
  %7 = and i1 %5, %6, !dbg !8993
  %8 = icmp eq i32 %2, 0
  %9 = or i1 %8, %7, !dbg !8993
  %10 = icmp eq i32 %1, 0
  %11 = or i1 %10, %9, !dbg !8993
  br i1 %11, label %33, label %12, !dbg !8993

12:                                               ; preds = %4, %27
  %13 = phi i32 [ %28, %27 ], [ %2, %4 ], !dbg !8990
  %14 = phi i8* [ %19, %27 ], [ %0, %4 ], !dbg !8990
  call void @llvm.dbg.value(metadata i8* %14, metadata !8988, metadata !DIExpression()), !dbg !8990
  call void @llvm.dbg.value(metadata i32 %13, metadata !8986, metadata !DIExpression()), !dbg !8990
  call void @llvm.dbg.value(metadata i32 %1, metadata !8987, metadata !DIExpression()), !dbg !8990
  br label %15, !dbg !8994

15:                                               ; preds = %24, %12
  %16 = phi i32 [ %1, %12 ], [ %25, %24 ], !dbg !8996
  %17 = phi i8* [ %14, %12 ], [ %19, %24 ], !dbg !8990
  call void @llvm.dbg.value(metadata i8* %17, metadata !8988, metadata !DIExpression()), !dbg !8990
  call void @llvm.dbg.value(metadata i32 %16, metadata !8987, metadata !DIExpression()), !dbg !8990
  %18 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !8997
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !9000
  call void @llvm.dbg.value(metadata i8* %19, metadata !8988, metadata !DIExpression()), !dbg !8990
  %20 = load i8, i8* %17, align 1, !dbg !9001
  %21 = zext i8 %20 to i32, !dbg !9002
  %22 = tail call i32 %18(i32 noundef %21) #25, !dbg !8997
  %23 = icmp eq i32 %22, -1, !dbg !9003
  br i1 %23, label %30, label %24, !dbg !9004

24:                                               ; preds = %15
  %25 = add i32 %16, -1, !dbg !9005
  call void @llvm.dbg.value(metadata i32 %25, metadata !8987, metadata !DIExpression()), !dbg !8990
  %26 = icmp eq i32 %25, 0, !dbg !9006
  br i1 %26, label %27, label %15, !dbg !9007, !llvm.loop !9008

27:                                               ; preds = %24
  %28 = add i32 %13, -1, !dbg !9010
  call void @llvm.dbg.value(metadata i32 %28, metadata !8986, metadata !DIExpression()), !dbg !8990
  %29 = icmp eq i32 %28, 0, !dbg !9011
  br i1 %29, label %30, label %12, !dbg !9012, !llvm.loop !9013

30:                                               ; preds = %27, %15
  %31 = phi i32 [ %13, %15 ], [ 0, %27 ], !dbg !8990
  call void @llvm.dbg.value(metadata i32 %31, metadata !8986, metadata !DIExpression()), !dbg !8990
  call void @llvm.dbg.label(metadata !8989), !dbg !9016
  %32 = sub i32 %2, %31, !dbg !9017
  br label %33, !dbg !9018

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !8990
  ret i32 %34, !dbg !9019
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @puts(i8* noundef %0) local_unnamed_addr #1 !dbg !9020 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9024, metadata !DIExpression()), !dbg !9025
  %2 = tail call i32 @fputs(i8* noundef %0, i32* noundef nonnull inttoptr (i32 2 to i32*)) #24, !dbg !9026
  %3 = icmp eq i32 %2, -1, !dbg !9028
  br i1 %3, label %8, label %4, !dbg !9029

4:                                                ; preds = %1
  %5 = tail call i32 @fputc(i32 noundef 10, i32* noundef nonnull inttoptr (i32 2 to i32*)) #24, !dbg !9030
  %6 = icmp eq i32 %5, -1, !dbg !9031
  %7 = sext i1 %6 to i32, !dbg !9030
  br label %8, !dbg !9032

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ -1, %1 ], !dbg !9025
  ret i32 %9, !dbg !9033
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @rtio_simple_submit(%struct.rtio* noundef %0) #1 !dbg !9034 {
  call void @llvm.dbg.value(metadata %struct.rtio* %0, metadata !9125, metadata !DIExpression()), !dbg !9131
  %2 = getelementptr inbounds %struct.rtio, %struct.rtio* %0, i32 0, i32 2, !dbg !9132
  %3 = load %struct.rtio_sq*, %struct.rtio_sq** %2, align 4, !dbg !9132
  %4 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %3, i32 0, i32 0, i32 3, !dbg !9132
  %5 = tail call fastcc i32 @atomic_get.90(i32* noundef nonnull %4) #24, !dbg !9132
  %6 = load %struct.rtio_sq*, %struct.rtio_sq** %2, align 4, !dbg !9132
  %7 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %6, i32 0, i32 0, i32 1, !dbg !9132
  %8 = load i32, i32* %7, align 4, !dbg !9132
  %9 = add i32 %8, %5, !dbg !9132
  call void @llvm.dbg.value(metadata i32 %9, metadata !9128, metadata !DIExpression()), !dbg !9133
  %10 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %6, i32 0, i32 0, i32 2, !dbg !9132
  %11 = tail call fastcc i32 @atomic_get.90(i32* noundef nonnull %10) #24, !dbg !9132
  %12 = icmp eq i32 %9, %11, !dbg !9132
  call void @llvm.dbg.value(metadata i1 %12, metadata !9130, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9133
  br i1 %12, label %23, label %13, !dbg !9132

13:                                               ; preds = %1
  %14 = load %struct.rtio_sq*, %struct.rtio_sq** %2, align 4, !dbg !9134
  %15 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %14, i32 0, i32 0, i32 1, !dbg !9134
  %16 = load i32, i32* %15, align 4, !dbg !9134
  %17 = add i32 %16, 1, !dbg !9134
  store i32 %17, i32* %15, align 4, !dbg !9134
  %18 = load %struct.rtio_sq*, %struct.rtio_sq** %2, align 4, !dbg !9132
  %19 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %18, i32 0, i32 0, i32 4, !dbg !9132
  %20 = load i32, i32* %19, align 4, !dbg !9132
  %21 = and i32 %20, %9, !dbg !9132
  %22 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %18, i32 0, i32 1, i32 %21, !dbg !9132
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %22, metadata !9126, metadata !DIExpression()), !dbg !9131
  tail call fastcc void @rtio_iodev_submit(%struct.rtio_sqe* noundef nonnull %22, %struct.rtio* noundef nonnull %0) #24, !dbg !9137
  br label %23, !dbg !9140

23:                                               ; preds = %1, %13
  ret i32 0, !dbg !9141
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @atomic_get.90(i32* nocapture noundef readonly %0) unnamed_addr #5 !dbg !9142 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !9144, metadata !DIExpression()), !dbg !9145
  %2 = load atomic i32, i32* %0 seq_cst, align 4, !dbg !9146
  ret i32 %2, !dbg !9147
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @rtio_iodev_submit(%struct.rtio_sqe* noundef %0, %struct.rtio* noundef %1) unnamed_addr #1 !dbg !9148 {
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %0, metadata !9150, metadata !DIExpression()), !dbg !9152
  call void @llvm.dbg.value(metadata %struct.rtio* %1, metadata !9151, metadata !DIExpression()), !dbg !9152
  %3 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %0, i32 0, i32 3, !dbg !9153
  %4 = load %struct.rtio_iodev*, %struct.rtio_iodev** %3, align 4, !dbg !9153
  %5 = getelementptr inbounds %struct.rtio_iodev, %struct.rtio_iodev* %4, i32 0, i32 0, !dbg !9154
  %6 = load %struct.rtio_iodev_api*, %struct.rtio_iodev_api** %5, align 4, !dbg !9154
  %7 = getelementptr inbounds %struct.rtio_iodev_api, %struct.rtio_iodev_api* %6, i32 0, i32 0, !dbg !9155
  %8 = load void (%struct.rtio_sqe*, %struct.rtio*)*, void (%struct.rtio_sqe*, %struct.rtio*)** %7, align 4, !dbg !9155
  tail call void %8(%struct.rtio_sqe* noundef %0, %struct.rtio* noundef %1) #25, !dbg !9156
  ret void, !dbg !9157
}

; Function Attrs: noinline nounwind optsize
define dso_local void @rtio_simple_ok(%struct.rtio* noundef %0, %struct.rtio_sqe* nocapture noundef readonly %1, i32 noundef %2) #1 !dbg !9158 {
  call void @llvm.dbg.value(metadata %struct.rtio* %0, metadata !9160, metadata !DIExpression()), !dbg !9164
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %1, metadata !9161, metadata !DIExpression()), !dbg !9164
  call void @llvm.dbg.value(metadata i32 %2, metadata !9162, metadata !DIExpression()), !dbg !9164
  %4 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %1, i32 0, i32 4, !dbg !9165
  %5 = load i8*, i8** %4, align 4, !dbg !9165
  call void @llvm.dbg.value(metadata i8* %5, metadata !9163, metadata !DIExpression()), !dbg !9164
  %6 = getelementptr inbounds %struct.rtio, %struct.rtio* %0, i32 0, i32 2, !dbg !9166
  %7 = load %struct.rtio_sq*, %struct.rtio_sq** %6, align 4, !dbg !9166
  %8 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %7, i32 0, i32 0, i32 1, !dbg !9166
  %9 = load i32, i32* %8, align 4, !dbg !9166
  %10 = icmp eq i32 %9, 0, !dbg !9166
  br i1 %10, label %15, label %11, !dbg !9169

11:                                               ; preds = %3
  %12 = add i32 %9, -1, !dbg !9170
  store i32 %12, i32* %8, align 4, !dbg !9170
  %13 = load %struct.rtio_sq*, %struct.rtio_sq** %6, align 4, !dbg !9170
  %14 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %13, i32 0, i32 0, i32 3, !dbg !9170
  tail call fastcc void @atomic_add.93(i32* noundef nonnull %14) #24, !dbg !9170
  br label %15, !dbg !9170

15:                                               ; preds = %11, %3
  tail call fastcc void @rtio_cqe_submit(%struct.rtio* noundef nonnull %0, i32 noundef %2, i8* noundef %5) #24, !dbg !9172
  %16 = tail call i32 @rtio_simple_submit(%struct.rtio* noundef nonnull %0) #24, !dbg !9173
  ret void, !dbg !9174
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc void @atomic_add.93(i32* nocapture noundef %0) unnamed_addr #5 !dbg !9175 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !9177, metadata !DIExpression()), !dbg !9179
  call void @llvm.dbg.value(metadata i32 1, metadata !9178, metadata !DIExpression()), !dbg !9179
  %2 = atomicrmw add i32* %0, i32 1 seq_cst, align 4, !dbg !9180
  ret void, !dbg !9181
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc void @rtio_cqe_submit(%struct.rtio* nocapture noundef %0, i32 noundef %1, i8* noundef %2) unnamed_addr #5 !dbg !9182 {
  call void @llvm.dbg.value(metadata %struct.rtio* %0, metadata !9186, metadata !DIExpression()), !dbg !9194
  call void @llvm.dbg.value(metadata i32 %1, metadata !9187, metadata !DIExpression()), !dbg !9194
  call void @llvm.dbg.value(metadata i8* %2, metadata !9188, metadata !DIExpression()), !dbg !9194
  %4 = getelementptr inbounds %struct.rtio, %struct.rtio* %0, i32 0, i32 3, !dbg !9195
  %5 = load %struct.rtio_cq*, %struct.rtio_cq** %4, align 4, !dbg !9195
  %6 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %5, i32 0, i32 0, i32 2, !dbg !9195
  %7 = tail call fastcc i32 @atomic_get.90(i32* noundef nonnull %6) #24, !dbg !9195
  %8 = load %struct.rtio_cq*, %struct.rtio_cq** %4, align 4, !dbg !9195
  %9 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %8, i32 0, i32 0, i32 0, !dbg !9195
  %10 = load i32, i32* %9, align 4, !dbg !9195
  %11 = add i32 %10, %7, !dbg !9195
  call void @llvm.dbg.value(metadata i32 %11, metadata !9191, metadata !DIExpression()), !dbg !9196
  %12 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %8, i32 0, i32 0, i32 3, !dbg !9195
  %13 = tail call fastcc i32 @atomic_get.90(i32* noundef nonnull %12) #24, !dbg !9195
  %14 = sub i32 %11, %13, !dbg !9195
  %15 = load %struct.rtio_cq*, %struct.rtio_cq** %4, align 4, !dbg !9195
  %16 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %15, i32 0, i32 0, i32 4, !dbg !9195
  %17 = load i32, i32* %16, align 4, !dbg !9195
  %18 = add i32 %17, 1, !dbg !9195
  %19 = icmp ult i32 %14, %18, !dbg !9195
  call void @llvm.dbg.value(metadata i1 %19, metadata !9193, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9196
  br i1 %19, label %22, label %20, !dbg !9195

20:                                               ; preds = %3
  call void @llvm.dbg.value(metadata !DIArgList(%struct.rtio_cq* %26, i32 %29), metadata !9189, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 20, DW_OP_stack_value)), !dbg !9194
  %21 = getelementptr inbounds %struct.rtio, %struct.rtio* %0, i32 0, i32 1, !dbg !9197
  tail call fastcc void @atomic_inc(i32* noundef nonnull %21) #24, !dbg !9200
  br label %40, !dbg !9201

22:                                               ; preds = %3
  %23 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %15, i32 0, i32 0, i32 0, !dbg !9202
  %24 = load i32, i32* %23, align 4, !dbg !9202
  %25 = add i32 %24, 1, !dbg !9202
  store i32 %25, i32* %23, align 4, !dbg !9202
  %26 = load %struct.rtio_cq*, %struct.rtio_cq** %4, align 4, !dbg !9195
  %27 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %26, i32 0, i32 0, i32 4, !dbg !9195
  %28 = load i32, i32* %27, align 4, !dbg !9195
  %29 = and i32 %28, %11, !dbg !9195
  call void @llvm.dbg.value(metadata !DIArgList(%struct.rtio_cq* %26, i32 %29), metadata !9189, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 20, DW_OP_stack_value)), !dbg !9194
  %30 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %26, i32 0, i32 1, i32 %29, i32 0, !dbg !9205
  store i32 %1, i32* %30, align 4, !dbg !9207
  %31 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %26, i32 0, i32 1, i32 %29, i32 1, !dbg !9208
  store i8* %2, i8** %31, align 4, !dbg !9209
  %32 = load %struct.rtio_cq*, %struct.rtio_cq** %4, align 4, !dbg !9210
  %33 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %32, i32 0, i32 0, i32 0, !dbg !9210
  %34 = load i32, i32* %33, align 4, !dbg !9210
  %35 = icmp eq i32 %34, 0, !dbg !9210
  br i1 %35, label %40, label %36, !dbg !9213

36:                                               ; preds = %22
  %37 = add i32 %34, -1, !dbg !9214
  store i32 %37, i32* %33, align 4, !dbg !9214
  %38 = load %struct.rtio_cq*, %struct.rtio_cq** %4, align 4, !dbg !9214
  %39 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %38, i32 0, i32 0, i32 2, !dbg !9214
  tail call fastcc void @atomic_add.93(i32* noundef nonnull %39) #24, !dbg !9214
  br label %40, !dbg !9214

40:                                               ; preds = %22, %36, %20
  ret void, !dbg !9216
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc void @atomic_inc(i32* nocapture noundef %0) unnamed_addr #5 !dbg !9217 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !9221, metadata !DIExpression()), !dbg !9222
  tail call fastcc void @atomic_add.93(i32* noundef %0) #24, !dbg !9223
  ret void, !dbg !9224
}

; Function Attrs: noinline nounwind optsize
define dso_local void @rtio_simple_err(%struct.rtio* noundef %0, %struct.rtio_sqe* nocapture noundef readonly %1, i32 noundef %2) #1 !dbg !9225 {
  call void @llvm.dbg.value(metadata %struct.rtio* %0, metadata !9227, metadata !DIExpression()), !dbg !9242
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %1, metadata !9228, metadata !DIExpression()), !dbg !9242
  call void @llvm.dbg.value(metadata i32 %2, metadata !9229, metadata !DIExpression()), !dbg !9242
  %4 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %1, i32 0, i32 4, !dbg !9243
  call void @llvm.dbg.value(metadata i8* undef, metadata !9231, metadata !DIExpression()), !dbg !9242
  %5 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %1, i32 0, i32 2, !dbg !9244
  %6 = load i16, i16* %5, align 2, !dbg !9244
  %7 = and i16 %6, 1, !dbg !9245
  %8 = icmp eq i16 %7, 0, !dbg !9246
  call void @llvm.dbg.value(metadata i1 %8, metadata !9232, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9242
  %9 = getelementptr inbounds %struct.rtio, %struct.rtio* %0, i32 0, i32 2, !dbg !9247
  %10 = load %struct.rtio_sq*, %struct.rtio_sq** %9, align 4, !dbg !9247
  %11 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %10, i32 0, i32 0, i32 1, !dbg !9247
  %12 = load i32, i32* %11, align 4, !dbg !9247
  %13 = icmp eq i32 %12, 0, !dbg !9247
  br i1 %13, label %18, label %14, !dbg !9250

14:                                               ; preds = %3
  %15 = add i32 %12, -1, !dbg !9251
  store i32 %15, i32* %11, align 4, !dbg !9251
  %16 = load %struct.rtio_sq*, %struct.rtio_sq** %9, align 4, !dbg !9251
  %17 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %16, i32 0, i32 0, i32 3, !dbg !9251
  tail call fastcc void @atomic_add.93(i32* noundef nonnull %17) #24, !dbg !9251
  br label %18, !dbg !9251

18:                                               ; preds = %14, %3
  %19 = load i8*, i8** %4, align 4, !dbg !9253
  tail call fastcc void @rtio_cqe_submit(%struct.rtio* noundef nonnull %0, i32 noundef %2, i8* noundef %19) #24, !dbg !9254
  br i1 %8, label %69, label %20, !dbg !9255

20:                                               ; preds = %18
  %21 = load %struct.rtio_sq*, %struct.rtio_sq** %9, align 4, !dbg !9256
  %22 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %21, i32 0, i32 0, i32 3, !dbg !9256
  %23 = tail call fastcc i32 @atomic_get.90(i32* noundef nonnull %22) #24, !dbg !9256
  %24 = load %struct.rtio_sq*, %struct.rtio_sq** %9, align 4, !dbg !9256
  %25 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %24, i32 0, i32 0, i32 1, !dbg !9256
  %26 = load i32, i32* %25, align 4, !dbg !9256
  %27 = add i32 %26, %23, !dbg !9256
  call void @llvm.dbg.value(metadata i32 %27, metadata !9233, metadata !DIExpression()), !dbg !9257
  %28 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %24, i32 0, i32 0, i32 2, !dbg !9256
  %29 = tail call fastcc i32 @atomic_get.90(i32* noundef nonnull %28) #24, !dbg !9256
  %30 = icmp eq i32 %27, %29, !dbg !9256
  call void @llvm.dbg.value(metadata i1 %30, metadata !9237, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9257
  br i1 %30, label %71, label %31, !dbg !9256

31:                                               ; preds = %20, %56
  %32 = phi i32 [ %63, %56 ], [ %27, %20 ]
  %33 = load %struct.rtio_sq*, %struct.rtio_sq** %9, align 4, !dbg !9258
  %34 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %33, i32 0, i32 0, i32 1, !dbg !9258
  %35 = load i32, i32* %34, align 4, !dbg !9258
  %36 = add i32 %35, 1, !dbg !9258
  store i32 %36, i32* %34, align 4, !dbg !9258
  %37 = load %struct.rtio_sq*, %struct.rtio_sq** %9, align 4, !dbg !9258
  %38 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %37, i32 0, i32 0, i32 4, !dbg !9258
  %39 = load i32, i32* %38, align 4, !dbg !9258
  %40 = and i32 %39, %32, !dbg !9258
  call void @llvm.dbg.value(metadata !DIArgList(%struct.rtio_sq* %37, i32 %40), metadata !9230, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 20, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 20, DW_OP_stack_value)), !dbg !9242
  %41 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %37, i32 0, i32 1, i32 %40, i32 2, !dbg !9259
  %42 = load i16, i16* %41, align 2, !dbg !9259
  %43 = and i16 %42, 1, !dbg !9260
  %44 = icmp eq i16 %43, 0, !dbg !9261
  br i1 %44, label %67, label %45, !dbg !9262

45:                                               ; preds = %31
  %46 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %37, i32 0, i32 1, i32 %40, i32 4, !dbg !9263
  %47 = load i8*, i8** %46, align 4, !dbg !9263
  call void @llvm.dbg.value(metadata i8* %47, metadata !9231, metadata !DIExpression()), !dbg !9242
  %48 = load %struct.rtio_sq*, %struct.rtio_sq** %9, align 4, !dbg !9264
  %49 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %48, i32 0, i32 0, i32 1, !dbg !9264
  %50 = load i32, i32* %49, align 4, !dbg !9264
  %51 = icmp eq i32 %50, 0, !dbg !9264
  br i1 %51, label %56, label %52, !dbg !9267

52:                                               ; preds = %45
  %53 = add i32 %50, -1, !dbg !9268
  store i32 %53, i32* %49, align 4, !dbg !9268
  %54 = load %struct.rtio_sq*, %struct.rtio_sq** %9, align 4, !dbg !9268
  %55 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %54, i32 0, i32 0, i32 3, !dbg !9268
  tail call fastcc void @atomic_add.93(i32* noundef nonnull %55) #24, !dbg !9268
  br label %56, !dbg !9268

56:                                               ; preds = %52, %45
  tail call fastcc void @rtio_cqe_submit(%struct.rtio* noundef nonnull %0, i32 noundef -140, i8* noundef %47) #24, !dbg !9270
  %57 = load %struct.rtio_sq*, %struct.rtio_sq** %9, align 4, !dbg !9271
  %58 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %57, i32 0, i32 0, i32 3, !dbg !9271
  %59 = tail call fastcc i32 @atomic_get.90(i32* noundef nonnull %58) #24, !dbg !9271
  %60 = load %struct.rtio_sq*, %struct.rtio_sq** %9, align 4, !dbg !9271
  %61 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %60, i32 0, i32 0, i32 1, !dbg !9271
  %62 = load i32, i32* %61, align 4, !dbg !9271
  %63 = add i32 %62, %59, !dbg !9271
  call void @llvm.dbg.value(metadata i32 %63, metadata !9238, metadata !DIExpression()), !dbg !9272
  %64 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %60, i32 0, i32 0, i32 2, !dbg !9271
  %65 = tail call fastcc i32 @atomic_get.90(i32* noundef nonnull %64) #24, !dbg !9271
  %66 = icmp eq i32 %63, %65, !dbg !9271
  call void @llvm.dbg.value(metadata i1 %66, metadata !9241, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9272
  br i1 %66, label %71, label %31, !dbg !9271

67:                                               ; preds = %31
  %68 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %37, i32 0, i32 1, i32 %40, !dbg !9258
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %68, metadata !9230, metadata !DIExpression()), !dbg !9242
  tail call fastcc void @rtio_iodev_submit(%struct.rtio_sqe* noundef nonnull %68, %struct.rtio* noundef nonnull %0) #24, !dbg !9273
  br label %71, !dbg !9276

69:                                               ; preds = %18
  %70 = tail call i32 @rtio_simple_submit(%struct.rtio* noundef nonnull %0) #24, !dbg !9277
  br label %71

71:                                               ; preds = %56, %20, %67, %69
  ret void, !dbg !9279
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @rtio_concurrent_submit(%struct.rtio* noundef %0) local_unnamed_addr #1 !dbg !9280 {
  call void @llvm.dbg.value(metadata %struct.rtio* %0, metadata !9282, metadata !DIExpression()), !dbg !9313
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1.98, i32 0, i32 0), i32 noundef 73) #25, !dbg !9314
  %2 = bitcast %struct.rtio* %0 to %struct.rtio_concurrent_executor**, !dbg !9319
  %3 = load %struct.rtio_concurrent_executor*, %struct.rtio_concurrent_executor** %2, align 4, !dbg !9319
  call void @llvm.dbg.value(metadata %struct.rtio_concurrent_executor* %3, metadata !9283, metadata !DIExpression()), !dbg !9313
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9320, metadata !DIExpression()) #23, !dbg !9327
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !9329, !srcloc !9335
  call void @llvm.dbg.value(metadata i32 undef, metadata !9332, metadata !DIExpression()) #23, !dbg !9336
  call void @llvm.dbg.value(metadata i32 undef, metadata !9333, metadata !DIExpression()) #23, !dbg !9336
  call void @llvm.dbg.value(metadata i32 undef, metadata !9326, metadata !DIExpression()) #23, !dbg !9327
  call void @llvm.dbg.value(metadata i32 undef, metadata !9286, metadata !DIExpression()), !dbg !9313
  %5 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %3, i32 0, i32 6, !dbg !9337
  %6 = load %struct.rtio_sqe*, %struct.rtio_sqe** %5, align 4, !dbg !9337
  %7 = icmp eq %struct.rtio_sqe* %6, null, !dbg !9338
  %8 = getelementptr inbounds %struct.rtio, %struct.rtio* %0, i32 0, i32 2, !dbg !9339
  %9 = load %struct.rtio_sq*, %struct.rtio_sq** %8, align 4, !dbg !9339
  br i1 %7, label %10, label %26, !dbg !9340

10:                                               ; preds = %1
  %11 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %9, i32 0, i32 0, i32 3, !dbg !9341
  %12 = tail call fastcc i32 @atomic_get.99(i32* noundef nonnull %11) #24, !dbg !9341
  %13 = load %struct.rtio_sq*, %struct.rtio_sq** %8, align 4, !dbg !9341
  %14 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %13, i32 0, i32 0, i32 1, !dbg !9341
  %15 = load i32, i32* %14, align 4, !dbg !9341
  %16 = add i32 %15, %12, !dbg !9341
  call void @llvm.dbg.value(metadata i32 %16, metadata !9291, metadata !DIExpression()), !dbg !9342
  %17 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %13, i32 0, i32 0, i32 2, !dbg !9341
  %18 = tail call fastcc i32 @atomic_get.99(i32* noundef nonnull %17) #24, !dbg !9341
  %19 = icmp eq i32 %16, %18, !dbg !9341
  call void @llvm.dbg.value(metadata i1 %19, metadata !9295, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9342
  br i1 %19, label %45, label %20, !dbg !9341

20:                                               ; preds = %10
  %21 = load %struct.rtio_sq*, %struct.rtio_sq** %8, align 4, !dbg !9341
  %22 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %21, i32 0, i32 0, i32 4, !dbg !9341
  %23 = load i32, i32* %22, align 4, !dbg !9341
  %24 = and i32 %23, %16, !dbg !9341
  %25 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %21, i32 0, i32 1, i32 %24, !dbg !9341
  br label %47, !dbg !9341

26:                                               ; preds = %1
  %27 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %9, i32 0, i32 1, i32 0, !dbg !9343
  %28 = ptrtoint %struct.rtio_sqe* %6 to i32, !dbg !9343
  %29 = ptrtoint %struct.rtio_sqe* %27 to i32, !dbg !9343
  %30 = sub i32 %28, %29, !dbg !9343
  %31 = sdiv exact i32 %30, 20, !dbg !9343
  call void @llvm.dbg.value(metadata i32 %31, metadata !9296, metadata !DIExpression()), !dbg !9344
  %32 = add nsw i32 %31, 1, !dbg !9343
  %33 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %9, i32 0, i32 0, i32 4, !dbg !9343
  %34 = load i32, i32* %33, align 4, !dbg !9343
  %35 = and i32 %32, %34, !dbg !9343
  %36 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %9, i32 0, i32 0, i32 2, !dbg !9343
  %37 = tail call fastcc i32 @atomic_get.99(i32* noundef nonnull %36) #24, !dbg !9343
  %38 = load %struct.rtio_sq*, %struct.rtio_sq** %8, align 4, !dbg !9343
  %39 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %38, i32 0, i32 0, i32 4, !dbg !9343
  %40 = load i32, i32* %39, align 4, !dbg !9343
  %41 = and i32 %40, %37, !dbg !9343
  %42 = icmp eq i32 %35, %41, !dbg !9343
  call void @llvm.dbg.value(metadata i1 %42, metadata !9299, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9344
  %43 = and i32 %32, %40, !dbg !9343
  %44 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %38, i32 0, i32 1, i32 %43, !dbg !9343
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* undef, metadata !9284, metadata !DIExpression()), !dbg !9313
  br i1 %42, label %45, label %47

45:                                               ; preds = %26, %10
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %48, metadata !9284, metadata !DIExpression()), !dbg !9313
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %48, metadata !9285, metadata !DIExpression()), !dbg !9313
  %46 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %3, i32 0, i32 5, !dbg !9345
  store %struct.rtio_sqe* null, %struct.rtio_sqe** %46, align 4, !dbg !9346
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %112, metadata !9284, metadata !DIExpression()), !dbg !9313
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %111, metadata !9285, metadata !DIExpression()), !dbg !9313
  br label %140, !dbg !9347

47:                                               ; preds = %20, %26
  %48 = phi %struct.rtio_sqe* [ %44, %26 ], [ %25, %20 ], !dbg !9339
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %48, metadata !9284, metadata !DIExpression()), !dbg !9313
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %48, metadata !9285, metadata !DIExpression()), !dbg !9313
  %49 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %3, i32 0, i32 8
  %50 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %3, i32 0, i32 7
  %51 = getelementptr inbounds %struct.rtio, %struct.rtio* %0, i32 0, i32 2
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %48, metadata !9284, metadata !DIExpression()), !dbg !9313
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %48, metadata !9285, metadata !DIExpression()), !dbg !9313
  %52 = tail call fastcc zeroext i1 @conex_task_free(%struct.rtio_concurrent_executor* noundef %3) #24, !dbg !9348
  br i1 %52, label %55, label %110, !dbg !9349

53:                                               ; preds = %89
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %109, metadata !9284, metadata !DIExpression()), !dbg !9313
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %90, metadata !9285, metadata !DIExpression()), !dbg !9313
  %54 = tail call fastcc zeroext i1 @conex_task_free(%struct.rtio_concurrent_executor* noundef %3) #24, !dbg !9348
  br i1 %54, label %55, label %110, !dbg !9349

55:                                               ; preds = %47, %53
  %56 = phi %struct.rtio_sqe* [ %109, %53 ], [ %48, %47 ]
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %56, metadata !9284, metadata !DIExpression()), !dbg !9313
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.100, i32 0, i32 0), i32 noundef 73, %struct.rtio_sqe* noundef nonnull %56) #25, !dbg !9350
  %57 = tail call fastcc zeroext i16 @conex_task_next(%struct.rtio_concurrent_executor* noundef %3) #24, !dbg !9355
  call void @llvm.dbg.value(metadata i16 %57, metadata !9300, metadata !DIExpression()), !dbg !9356
  %58 = zext i16 %57 to i32, !dbg !9357
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.101, i32 0, i32 0), i32 noundef 73, i32 noundef %58) #25, !dbg !9357
  %59 = load %struct.rtio_sqe**, %struct.rtio_sqe*** %49, align 4, !dbg !9362
  %60 = getelementptr inbounds %struct.rtio_sqe*, %struct.rtio_sqe** %59, i32 %58, !dbg !9363
  store %struct.rtio_sqe* %56, %struct.rtio_sqe** %60, align 4, !dbg !9364
  %61 = load i8*, i8** %50, align 4, !dbg !9365
  %62 = getelementptr inbounds i8, i8* %61, i32 %58, !dbg !9366
  store i8 2, i8* %62, align 1, !dbg !9367
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.4.102, i32 0, i32 0), i32 noundef 73, %struct.rtio_sqe* noundef nonnull %56) #25, !dbg !9368
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %56, metadata !9284, metadata !DIExpression()), !dbg !9313
  br label %63, !dbg !9373

63:                                               ; preds = %55, %69
  %64 = phi %struct.rtio_sqe* [ %56, %55 ], [ %88, %69 ]
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %64, metadata !9284, metadata !DIExpression()), !dbg !9313
  %65 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %64, i32 0, i32 2, !dbg !9374
  %66 = load i16, i16* %65, align 2, !dbg !9374
  %67 = and i16 %66, 1, !dbg !9375
  %68 = icmp eq i16 %67, 0, !dbg !9373
  br i1 %68, label %89, label %69, !dbg !9376

69:                                               ; preds = %63
  %70 = load %struct.rtio_sq*, %struct.rtio_sq** %51, align 4, !dbg !9377
  %71 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %70, i32 0, i32 1, i32 0, !dbg !9377
  %72 = ptrtoint %struct.rtio_sqe* %64 to i32, !dbg !9377
  %73 = ptrtoint %struct.rtio_sqe* %71 to i32, !dbg !9377
  %74 = sub i32 %72, %73, !dbg !9377
  %75 = sdiv exact i32 %74, 20, !dbg !9377
  call void @llvm.dbg.value(metadata i32 %75, metadata !9302, metadata !DIExpression()), !dbg !9378
  %76 = add nsw i32 %75, 1, !dbg !9377
  %77 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %70, i32 0, i32 0, i32 4, !dbg !9377
  %78 = load i32, i32* %77, align 4, !dbg !9377
  %79 = and i32 %76, %78, !dbg !9377
  %80 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %70, i32 0, i32 0, i32 2, !dbg !9377
  %81 = tail call fastcc i32 @atomic_get.99(i32* noundef nonnull %80) #24, !dbg !9377
  %82 = load %struct.rtio_sq*, %struct.rtio_sq** %51, align 4, !dbg !9377
  %83 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %82, i32 0, i32 0, i32 4, !dbg !9377
  %84 = load i32, i32* %83, align 4, !dbg !9377
  %85 = and i32 %84, %81, !dbg !9377
  %86 = icmp eq i32 %79, %85, !dbg !9377
  call void @llvm.dbg.value(metadata i1 %86, metadata !9305, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9378
  %87 = and i32 %76, %84, !dbg !9377
  %88 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %82, i32 0, i32 1, i32 %87, !dbg !9377
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* undef, metadata !9284, metadata !DIExpression()), !dbg !9313
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* undef, metadata !9284, metadata !DIExpression()), !dbg !9313
  br i1 %86, label %89, label %63, !dbg !9373

89:                                               ; preds = %63, %69
  %90 = phi %struct.rtio_sqe* [ null, %69 ], [ %64, %63 ], !dbg !9313
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.5.103, i32 0, i32 0), i32 noundef 73, %struct.rtio_sqe* noundef %90) #25, !dbg !9379
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %90, metadata !9285, metadata !DIExpression()), !dbg !9313
  %91 = load %struct.rtio_sq*, %struct.rtio_sq** %51, align 4, !dbg !9384
  %92 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %91, i32 0, i32 1, i32 0, !dbg !9384
  %93 = ptrtoint %struct.rtio_sqe* %90 to i32, !dbg !9384
  %94 = ptrtoint %struct.rtio_sqe* %92 to i32, !dbg !9384
  %95 = sub i32 %93, %94, !dbg !9384
  %96 = sdiv exact i32 %95, 20, !dbg !9384
  call void @llvm.dbg.value(metadata i32 %96, metadata !9306, metadata !DIExpression()), !dbg !9385
  %97 = add nsw i32 %96, 1, !dbg !9384
  %98 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %91, i32 0, i32 0, i32 4, !dbg !9384
  %99 = load i32, i32* %98, align 4, !dbg !9384
  %100 = and i32 %97, %99, !dbg !9384
  %101 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %91, i32 0, i32 0, i32 2, !dbg !9384
  %102 = tail call fastcc i32 @atomic_get.99(i32* noundef nonnull %101) #24, !dbg !9384
  %103 = load %struct.rtio_sq*, %struct.rtio_sq** %51, align 4, !dbg !9384
  %104 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %103, i32 0, i32 0, i32 4, !dbg !9384
  %105 = load i32, i32* %104, align 4, !dbg !9384
  %106 = and i32 %105, %102, !dbg !9384
  %107 = icmp eq i32 %100, %106, !dbg !9384
  call void @llvm.dbg.value(metadata i1 %107, metadata !9308, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9385
  %108 = and i32 %97, %105, !dbg !9384
  %109 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %103, i32 0, i32 1, i32 %108, !dbg !9384
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* undef, metadata !9284, metadata !DIExpression()), !dbg !9313
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* undef, metadata !9284, metadata !DIExpression()), !dbg !9313
  br i1 %107, label %110, label %53, !dbg !9386

110:                                              ; preds = %89, %53, %47
  %111 = phi %struct.rtio_sqe* [ %48, %47 ], [ %90, %53 ], [ %90, %89 ], !dbg !9313
  %112 = phi %struct.rtio_sqe* [ %48, %47 ], [ null, %89 ], [ %109, %53 ], !dbg !9313
  %113 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %3, i32 0, i32 5, !dbg !9345
  store %struct.rtio_sqe* %112, %struct.rtio_sqe** %113, align 4, !dbg !9346
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %112, metadata !9284, metadata !DIExpression()), !dbg !9313
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %111, metadata !9285, metadata !DIExpression()), !dbg !9313
  %114 = icmp eq %struct.rtio_sqe* %112, null, !dbg !9387
  br i1 %114, label %140, label %115, !dbg !9347

115:                                              ; preds = %110
  %116 = getelementptr inbounds %struct.rtio, %struct.rtio* %0, i32 0, i32 2
  %117 = load %struct.rtio_sq*, %struct.rtio_sq** %116, align 4, !dbg !9388
  %118 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %117, i32 0, i32 0, i32 4
  %119 = load i32, i32* %118, align 4, !dbg !9388
  br label %120, !dbg !9347

120:                                              ; preds = %115, %120
  %121 = phi i32 [ %119, %115 ], [ %135, %120 ], !dbg !9388
  %122 = phi %struct.rtio_sq* [ %117, %115 ], [ %133, %120 ], !dbg !9388
  %123 = phi %struct.rtio_sqe* [ %112, %115 ], [ %139, %120 ]
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %123, metadata !9284, metadata !DIExpression()), !dbg !9313
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %123, metadata !9285, metadata !DIExpression()), !dbg !9313
  %124 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %122, i32 0, i32 1, i32 0, !dbg !9388
  %125 = ptrtoint %struct.rtio_sqe* %123 to i32, !dbg !9388
  %126 = ptrtoint %struct.rtio_sqe* %124 to i32, !dbg !9388
  %127 = sub i32 %125, %126, !dbg !9388
  %128 = sdiv exact i32 %127, 20, !dbg !9388
  call void @llvm.dbg.value(metadata i32 %128, metadata !9309, metadata !DIExpression()), !dbg !9389
  %129 = add nsw i32 %128, 1, !dbg !9388
  %130 = and i32 %129, %121, !dbg !9388
  %131 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %122, i32 0, i32 0, i32 2, !dbg !9388
  %132 = tail call fastcc i32 @atomic_get.99(i32* noundef nonnull %131) #24, !dbg !9388
  %133 = load %struct.rtio_sq*, %struct.rtio_sq** %116, align 4, !dbg !9388
  %134 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %133, i32 0, i32 0, i32 4, !dbg !9388
  %135 = load i32, i32* %134, align 4, !dbg !9388
  %136 = and i32 %135, %132, !dbg !9388
  %137 = icmp eq i32 %130, %136, !dbg !9388
  call void @llvm.dbg.value(metadata i1 %137, metadata !9312, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9389
  %138 = and i32 %129, %135, !dbg !9388
  %139 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %133, i32 0, i32 1, i32 %138, !dbg !9388
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* undef, metadata !9284, metadata !DIExpression()), !dbg !9313
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* undef, metadata !9284, metadata !DIExpression()), !dbg !9313
  br i1 %137, label %140, label %120, !dbg !9347

140:                                              ; preds = %120, %45, %110
  %141 = phi %struct.rtio_sqe* [ %111, %110 ], [ null, %45 ], [ %123, %120 ], !dbg !9313
  %142 = extractvalue { i32, i32 } %4, 0, !dbg !9329
  call void @llvm.dbg.value(metadata i32 %142, metadata !9332, metadata !DIExpression()) #23, !dbg !9336
  call void @llvm.dbg.value(metadata i32 %142, metadata !9326, metadata !DIExpression()) #23, !dbg !9327
  call void @llvm.dbg.value(metadata i32 %142, metadata !9286, metadata !DIExpression()), !dbg !9313
  store %struct.rtio_sqe* %141, %struct.rtio_sqe** %5, align 4, !dbg !9390
  tail call fastcc void @conex_resume(%struct.rtio* noundef nonnull %0, %struct.rtio_concurrent_executor* noundef %3) #24, !dbg !9391
  call void @llvm.dbg.value(metadata i32 undef, metadata !9392, metadata !DIExpression()) #23, !dbg !9398
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9397, metadata !DIExpression()) #23, !dbg !9398
  call void @llvm.dbg.value(metadata i32 undef, metadata !9400, metadata !DIExpression()) #23, !dbg !9403
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %142) #23, !dbg !9405, !srcloc !9406
  ret i32 0, !dbg !9407
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @atomic_get.99(i32* nocapture noundef readonly %0) unnamed_addr #5 !dbg !9408 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !9410, metadata !DIExpression()), !dbg !9411
  %2 = load atomic i32, i32* %0 seq_cst, align 4, !dbg !9412
  ret i32 %2, !dbg !9413
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @conex_task_free(%struct.rtio_concurrent_executor* nocapture noundef readonly %0) unnamed_addr #10 !dbg !9414 {
  call void @llvm.dbg.value(metadata %struct.rtio_concurrent_executor* %0, metadata !9418, metadata !DIExpression()), !dbg !9419
  %2 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %0, i32 0, i32 2, !dbg !9420
  %3 = load i16, i16* %2, align 4, !dbg !9420
  %4 = zext i16 %3 to i32, !dbg !9421
  %5 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %0, i32 0, i32 3, !dbg !9422
  %6 = load i16, i16* %5, align 2, !dbg !9422
  %7 = zext i16 %6 to i32, !dbg !9423
  %8 = sub nsw i32 %4, %7, !dbg !9424
  %9 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %0, i32 0, i32 4, !dbg !9425
  %10 = load i16, i16* %9, align 4, !dbg !9425
  %11 = zext i16 %10 to i32, !dbg !9426
  %12 = icmp sle i32 %8, %11, !dbg !9427
  ret i1 %12, !dbg !9428
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc zeroext i16 @conex_task_next(%struct.rtio_concurrent_executor* nocapture noundef %0) unnamed_addr #11 !dbg !9429 {
  call void @llvm.dbg.value(metadata %struct.rtio_concurrent_executor* %0, metadata !9433, metadata !DIExpression()), !dbg !9435
  %2 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %0, i32 0, i32 2, !dbg !9436
  %3 = load i16, i16* %2, align 4, !dbg !9436
  call void @llvm.dbg.value(metadata i16 %3, metadata !9434, metadata !DIExpression()), !dbg !9435
  %4 = add i16 %3, 1, !dbg !9437
  store i16 %4, i16* %2, align 4, !dbg !9437
  ret i16 %3, !dbg !9438
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @conex_resume(%struct.rtio* noundef %0, %struct.rtio_concurrent_executor* nocapture noundef readonly %1) unnamed_addr #1 !dbg !9439 {
  call void @llvm.dbg.value(metadata %struct.rtio* %0, metadata !9443, metadata !DIExpression()), !dbg !9447
  call void @llvm.dbg.value(metadata %struct.rtio_concurrent_executor* %1, metadata !9444, metadata !DIExpression()), !dbg !9447
  %3 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %1, i32 0, i32 3, !dbg !9448
  %4 = load i16, i16* %3, align 2, !dbg !9448
  call void @llvm.dbg.value(metadata i16 %4, metadata !9445, metadata !DIExpression()), !dbg !9449
  %5 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %1, i32 0, i32 2
  call void @llvm.dbg.value(metadata i16 %4, metadata !9445, metadata !DIExpression()), !dbg !9449
  %6 = load i16, i16* %5, align 4, !dbg !9450
  %7 = icmp ult i16 %4, %6, !dbg !9452
  br i1 %7, label %8, label %13, !dbg !9453

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %1, i32 0, i32 7
  %10 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %1, i32 0, i32 4
  %11 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %1, i32 0, i32 8
  %12 = zext i16 %4 to i32, !dbg !9453
  br label %14, !dbg !9453

13:                                               ; preds = %35, %2
  ret void, !dbg !9454

14:                                               ; preds = %8, %35
  %15 = phi i16 [ %6, %8 ], [ %36, %35 ]
  %16 = phi i32 [ %12, %8 ], [ %37, %35 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !9445, metadata !DIExpression()), !dbg !9449
  %17 = load i8*, i8** %9, align 4, !dbg !9455
  %18 = load i16, i16* %10, align 4, !dbg !9458
  %19 = trunc i32 %16 to i16, !dbg !9459
  %20 = and i16 %18, %19, !dbg !9459
  %21 = zext i16 %20 to i32, !dbg !9459
  %22 = getelementptr inbounds i8, i8* %17, i32 %21, !dbg !9460
  %23 = load i8, i8* %22, align 1, !dbg !9460
  %24 = and i8 %23, 2, !dbg !9461
  %25 = icmp eq i8 %24, 0, !dbg !9461
  br i1 %25, label %35, label %26, !dbg !9462

26:                                               ; preds = %14
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.6.104, i32 0, i32 0), i32 noundef 73, i32 noundef %16) #25, !dbg !9463
  %27 = load i8*, i8** %9, align 4, !dbg !9469
  %28 = getelementptr inbounds i8, i8* %27, i32 %16, !dbg !9470
  %29 = load i8, i8* %28, align 1, !dbg !9471
  %30 = and i8 %29, -3, !dbg !9471
  store i8 %30, i8* %28, align 1, !dbg !9471
  %31 = load %struct.rtio_sqe**, %struct.rtio_sqe*** %11, align 4, !dbg !9472
  %32 = getelementptr inbounds %struct.rtio_sqe*, %struct.rtio_sqe** %31, i32 %16, !dbg !9473
  %33 = load %struct.rtio_sqe*, %struct.rtio_sqe** %32, align 4, !dbg !9473
  tail call fastcc void @rtio_iodev_submit.105(%struct.rtio_sqe* noundef %33, %struct.rtio* noundef %0) #24, !dbg !9474
  %34 = load i16, i16* %5, align 4, !dbg !9450
  br label %35, !dbg !9475

35:                                               ; preds = %14, %26
  %36 = phi i16 [ %15, %14 ], [ %34, %26 ], !dbg !9450
  %37 = add nuw nsw i32 %16, 1, !dbg !9476
  call void @llvm.dbg.value(metadata i32 %37, metadata !9445, metadata !DIExpression()), !dbg !9449
  %38 = zext i16 %36 to i32, !dbg !9452
  %39 = icmp ult i32 %37, %38, !dbg !9452
  br i1 %39, label %14, label %13, !dbg !9453, !llvm.loop !9477
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @rtio_iodev_submit.105(%struct.rtio_sqe* noundef %0, %struct.rtio* noundef %1) unnamed_addr #1 !dbg !9479 {
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %0, metadata !9481, metadata !DIExpression()), !dbg !9483
  call void @llvm.dbg.value(metadata %struct.rtio* %1, metadata !9482, metadata !DIExpression()), !dbg !9483
  %3 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %0, i32 0, i32 3, !dbg !9484
  %4 = load %struct.rtio_iodev*, %struct.rtio_iodev** %3, align 4, !dbg !9484
  %5 = getelementptr inbounds %struct.rtio_iodev, %struct.rtio_iodev* %4, i32 0, i32 0, !dbg !9485
  %6 = load %struct.rtio_iodev_api*, %struct.rtio_iodev_api** %5, align 4, !dbg !9485
  %7 = getelementptr inbounds %struct.rtio_iodev_api, %struct.rtio_iodev_api* %6, i32 0, i32 0, !dbg !9486
  %8 = load void (%struct.rtio_sqe*, %struct.rtio*)*, void (%struct.rtio_sqe*, %struct.rtio*)** %7, align 4, !dbg !9486
  tail call void %8(%struct.rtio_sqe* noundef %0, %struct.rtio* noundef %1) #25, !dbg !9487
  ret void, !dbg !9488
}

; Function Attrs: noinline nounwind optsize
define dso_local void @rtio_concurrent_ok(%struct.rtio* noundef %0, %struct.rtio_sqe* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !9489 {
  call void @llvm.dbg.value(metadata %struct.rtio* %0, metadata !9491, metadata !DIExpression()), !dbg !9503
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %1, metadata !9492, metadata !DIExpression()), !dbg !9503
  call void @llvm.dbg.value(metadata i32 %2, metadata !9493, metadata !DIExpression()), !dbg !9503
  %4 = bitcast %struct.rtio* %0 to %struct.rtio_concurrent_executor**, !dbg !9504
  %5 = load %struct.rtio_concurrent_executor*, %struct.rtio_concurrent_executor** %4, align 4, !dbg !9504
  call void @llvm.dbg.value(metadata %struct.rtio_concurrent_executor* %5, metadata !9496, metadata !DIExpression()), !dbg !9503
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9320, metadata !DIExpression()) #23, !dbg !9505
  %6 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !9507, !srcloc !9335
  call void @llvm.dbg.value(metadata i32 undef, metadata !9332, metadata !DIExpression()) #23, !dbg !9509
  call void @llvm.dbg.value(metadata i32 undef, metadata !9333, metadata !DIExpression()) #23, !dbg !9509
  call void @llvm.dbg.value(metadata i32 undef, metadata !9326, metadata !DIExpression()) #23, !dbg !9505
  call void @llvm.dbg.value(metadata i32 undef, metadata !9495, metadata !DIExpression()), !dbg !9503
  %7 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %1, i32 0, i32 4, !dbg !9510
  %8 = load i8*, i8** %7, align 4, !dbg !9510
  tail call fastcc void @rtio_cqe_submit.106(%struct.rtio* noundef %0, i32 noundef %2, i8* noundef %8) #24, !dbg !9511
  %9 = tail call fastcc zeroext i16 @conex_task_id(%struct.rtio_concurrent_executor* noundef %5, %struct.rtio_sqe* noundef %1) #24, !dbg !9512
  call void @llvm.dbg.value(metadata i16 %9, metadata !9497, metadata !DIExpression()), !dbg !9503
  %10 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %1, i32 0, i32 2, !dbg !9513
  %11 = load i16, i16* %10, align 2, !dbg !9513
  %12 = and i16 %11, 1, !dbg !9514
  %13 = icmp eq i16 %12, 0, !dbg !9514
  br i1 %13, label %40, label %14, !dbg !9515

14:                                               ; preds = %3
  %15 = getelementptr inbounds %struct.rtio, %struct.rtio* %0, i32 0, i32 2, !dbg !9516
  %16 = load %struct.rtio_sq*, %struct.rtio_sq** %15, align 4, !dbg !9516
  %17 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %16, i32 0, i32 1, i32 0, !dbg !9516
  %18 = ptrtoint %struct.rtio_sqe* %1 to i32, !dbg !9516
  %19 = ptrtoint %struct.rtio_sqe* %17 to i32, !dbg !9516
  %20 = sub i32 %18, %19, !dbg !9516
  %21 = sdiv exact i32 %20, 20, !dbg !9516
  call void @llvm.dbg.value(metadata i32 %21, metadata !9498, metadata !DIExpression()), !dbg !9517
  %22 = add nsw i32 %21, 1, !dbg !9516
  %23 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %16, i32 0, i32 0, i32 4, !dbg !9516
  %24 = load i32, i32* %23, align 4, !dbg !9516
  %25 = and i32 %22, %24, !dbg !9516
  %26 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %16, i32 0, i32 0, i32 2, !dbg !9516
  %27 = tail call fastcc i32 @atomic_get.99(i32* noundef nonnull %26) #24, !dbg !9516
  %28 = load %struct.rtio_sq*, %struct.rtio_sq** %15, align 4, !dbg !9516
  %29 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %28, i32 0, i32 0, i32 4, !dbg !9516
  %30 = load i32, i32* %29, align 4, !dbg !9516
  %31 = and i32 %30, %27, !dbg !9516
  %32 = icmp eq i32 %25, %31, !dbg !9516
  call void @llvm.dbg.value(metadata i1 %32, metadata !9502, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9517
  %33 = and i32 %22, %30, !dbg !9516
  %34 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %28, i32 0, i32 1, i32 %33, !dbg !9516
  %35 = select i1 %32, %struct.rtio_sqe* null, %struct.rtio_sqe* %34, !dbg !9516
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %35, metadata !9494, metadata !DIExpression()), !dbg !9503
  tail call fastcc void @rtio_iodev_submit.105(%struct.rtio_sqe* noundef %35, %struct.rtio* noundef nonnull %0) #24, !dbg !9518
  %36 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %5, i32 0, i32 8, !dbg !9519
  %37 = load %struct.rtio_sqe**, %struct.rtio_sqe*** %36, align 4, !dbg !9519
  %38 = zext i16 %9 to i32, !dbg !9520
  %39 = getelementptr inbounds %struct.rtio_sqe*, %struct.rtio_sqe** %37, i32 %38, !dbg !9520
  store %struct.rtio_sqe* %35, %struct.rtio_sqe** %39, align 4, !dbg !9521
  br label %47, !dbg !9522

40:                                               ; preds = %3
  %41 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %5, i32 0, i32 7, !dbg !9523
  %42 = load i8*, i8** %41, align 4, !dbg !9523
  %43 = zext i16 %9 to i32, !dbg !9525
  %44 = getelementptr inbounds i8, i8* %42, i32 %43, !dbg !9525
  %45 = load i8, i8* %44, align 1, !dbg !9526
  %46 = or i8 %45, 1, !dbg !9526
  store i8 %46, i8* %44, align 1, !dbg !9526
  br label %47

47:                                               ; preds = %40, %14
  %48 = extractvalue { i32, i32 } %6, 0, !dbg !9507
  call void @llvm.dbg.value(metadata i32 %48, metadata !9332, metadata !DIExpression()) #23, !dbg !9509
  call void @llvm.dbg.value(metadata i32 %48, metadata !9326, metadata !DIExpression()) #23, !dbg !9505
  call void @llvm.dbg.value(metadata i32 %48, metadata !9495, metadata !DIExpression()), !dbg !9503
  tail call fastcc void @conex_sweep_resume(%struct.rtio* noundef nonnull %0, %struct.rtio_concurrent_executor* noundef nonnull %5) #24, !dbg !9527
  call void @llvm.dbg.value(metadata i32 undef, metadata !9392, metadata !DIExpression()) #23, !dbg !9528
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9397, metadata !DIExpression()) #23, !dbg !9528
  call void @llvm.dbg.value(metadata i32 undef, metadata !9400, metadata !DIExpression()) #23, !dbg !9530
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %48) #23, !dbg !9532, !srcloc !9406
  ret void, !dbg !9533
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc void @rtio_cqe_submit.106(%struct.rtio* nocapture noundef %0, i32 noundef %1, i8* noundef %2) unnamed_addr #5 !dbg !9534 {
  call void @llvm.dbg.value(metadata %struct.rtio* %0, metadata !9538, metadata !DIExpression()), !dbg !9546
  call void @llvm.dbg.value(metadata i32 %1, metadata !9539, metadata !DIExpression()), !dbg !9546
  call void @llvm.dbg.value(metadata i8* %2, metadata !9540, metadata !DIExpression()), !dbg !9546
  %4 = getelementptr inbounds %struct.rtio, %struct.rtio* %0, i32 0, i32 3, !dbg !9547
  %5 = load %struct.rtio_cq*, %struct.rtio_cq** %4, align 4, !dbg !9547
  %6 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %5, i32 0, i32 0, i32 2, !dbg !9547
  %7 = tail call fastcc i32 @atomic_get.99(i32* noundef nonnull %6) #24, !dbg !9547
  %8 = load %struct.rtio_cq*, %struct.rtio_cq** %4, align 4, !dbg !9547
  %9 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %8, i32 0, i32 0, i32 0, !dbg !9547
  %10 = load i32, i32* %9, align 4, !dbg !9547
  %11 = add i32 %10, %7, !dbg !9547
  call void @llvm.dbg.value(metadata i32 %11, metadata !9543, metadata !DIExpression()), !dbg !9548
  %12 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %8, i32 0, i32 0, i32 3, !dbg !9547
  %13 = tail call fastcc i32 @atomic_get.99(i32* noundef nonnull %12) #24, !dbg !9547
  %14 = sub i32 %11, %13, !dbg !9547
  %15 = load %struct.rtio_cq*, %struct.rtio_cq** %4, align 4, !dbg !9547
  %16 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %15, i32 0, i32 0, i32 4, !dbg !9547
  %17 = load i32, i32* %16, align 4, !dbg !9547
  %18 = add i32 %17, 1, !dbg !9547
  %19 = icmp ult i32 %14, %18, !dbg !9547
  call void @llvm.dbg.value(metadata i1 %19, metadata !9545, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9548
  br i1 %19, label %22, label %20, !dbg !9547

20:                                               ; preds = %3
  call void @llvm.dbg.value(metadata !DIArgList(%struct.rtio_cq* %26, i32 %29), metadata !9541, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 20, DW_OP_stack_value)), !dbg !9546
  %21 = getelementptr inbounds %struct.rtio, %struct.rtio* %0, i32 0, i32 1, !dbg !9549
  tail call fastcc void @atomic_inc.109(i32* noundef nonnull %21) #24, !dbg !9552
  br label %40, !dbg !9553

22:                                               ; preds = %3
  %23 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %15, i32 0, i32 0, i32 0, !dbg !9554
  %24 = load i32, i32* %23, align 4, !dbg !9554
  %25 = add i32 %24, 1, !dbg !9554
  store i32 %25, i32* %23, align 4, !dbg !9554
  %26 = load %struct.rtio_cq*, %struct.rtio_cq** %4, align 4, !dbg !9547
  %27 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %26, i32 0, i32 0, i32 4, !dbg !9547
  %28 = load i32, i32* %27, align 4, !dbg !9547
  %29 = and i32 %28, %11, !dbg !9547
  call void @llvm.dbg.value(metadata !DIArgList(%struct.rtio_cq* %26, i32 %29), metadata !9541, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 20, DW_OP_stack_value)), !dbg !9546
  %30 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %26, i32 0, i32 1, i32 %29, i32 0, !dbg !9557
  store i32 %1, i32* %30, align 4, !dbg !9559
  %31 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %26, i32 0, i32 1, i32 %29, i32 1, !dbg !9560
  store i8* %2, i8** %31, align 4, !dbg !9561
  %32 = load %struct.rtio_cq*, %struct.rtio_cq** %4, align 4, !dbg !9562
  %33 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %32, i32 0, i32 0, i32 0, !dbg !9562
  %34 = load i32, i32* %33, align 4, !dbg !9562
  %35 = icmp eq i32 %34, 0, !dbg !9562
  br i1 %35, label %40, label %36, !dbg !9565

36:                                               ; preds = %22
  %37 = add i32 %34, -1, !dbg !9566
  store i32 %37, i32* %33, align 4, !dbg !9566
  %38 = load %struct.rtio_cq*, %struct.rtio_cq** %4, align 4, !dbg !9566
  %39 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %38, i32 0, i32 0, i32 2, !dbg !9566
  tail call fastcc void @atomic_add.108(i32* noundef nonnull %39) #24, !dbg !9566
  br label %40, !dbg !9566

40:                                               ; preds = %22, %36, %20
  ret void, !dbg !9568
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define internal fastcc zeroext i16 @conex_task_id(%struct.rtio_concurrent_executor* nocapture noundef readonly %0, %struct.rtio_sqe* noundef readnone %1) unnamed_addr #9 !dbg !9569 {
  call void @llvm.dbg.value(metadata %struct.rtio_concurrent_executor* %0, metadata !9573, metadata !DIExpression()), !dbg !9576
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %1, metadata !9574, metadata !DIExpression()), !dbg !9576
  %3 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %0, i32 0, i32 3, !dbg !9577
  %4 = load i16, i16* %3, align 2, !dbg !9577
  call void @llvm.dbg.value(metadata i16 %4, metadata !9575, metadata !DIExpression()), !dbg !9576
  %5 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %0, i32 0, i32 2
  %6 = load i16, i16* %5, align 4
  call void @llvm.dbg.value(metadata i16 %4, metadata !9575, metadata !DIExpression()), !dbg !9576
  %7 = icmp ult i16 %4, %6, !dbg !9578
  br i1 %7, label %8, label %23, !dbg !9581

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %0, i32 0, i32 8, !dbg !9582
  %10 = load %struct.rtio_sqe**, %struct.rtio_sqe*** %9, align 4
  %11 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %0, i32 0, i32 4
  %12 = load i16, i16* %11, align 4
  br label %13, !dbg !9581

13:                                               ; preds = %8, %20
  %14 = phi i16 [ %4, %8 ], [ %21, %20 ]
  call void @llvm.dbg.value(metadata i16 %14, metadata !9575, metadata !DIExpression()), !dbg !9576
  %15 = and i16 %12, %14, !dbg !9585
  %16 = zext i16 %15 to i32, !dbg !9585
  %17 = getelementptr inbounds %struct.rtio_sqe*, %struct.rtio_sqe** %10, i32 %16, !dbg !9586
  %18 = load %struct.rtio_sqe*, %struct.rtio_sqe** %17, align 4, !dbg !9586
  %19 = icmp eq %struct.rtio_sqe* %18, %1, !dbg !9587
  br i1 %19, label %23, label %20, !dbg !9588

20:                                               ; preds = %13
  %21 = add nuw i16 %14, 1, !dbg !9589
  call void @llvm.dbg.value(metadata i16 %21, metadata !9575, metadata !DIExpression()), !dbg !9576
  %22 = icmp ult i16 %21, %6, !dbg !9578
  br i1 %22, label %13, label %23, !dbg !9581, !llvm.loop !9590

23:                                               ; preds = %20, %13, %2
  %24 = phi i16 [ %4, %2 ], [ %14, %13 ], [ %6, %20 ], !dbg !9576
  ret i16 %24, !dbg !9592
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @conex_sweep_resume(%struct.rtio* noundef %0, %struct.rtio_concurrent_executor* nocapture noundef %1) unnamed_addr #1 !dbg !9593 {
  call void @llvm.dbg.value(metadata %struct.rtio* %0, metadata !9595, metadata !DIExpression()), !dbg !9597
  call void @llvm.dbg.value(metadata %struct.rtio_concurrent_executor* %1, metadata !9596, metadata !DIExpression()), !dbg !9597
  tail call fastcc void @conex_sweep(%struct.rtio* noundef %0, %struct.rtio_concurrent_executor* noundef %1) #24, !dbg !9598
  tail call fastcc void @conex_resume(%struct.rtio* noundef %0, %struct.rtio_concurrent_executor* noundef %1) #24, !dbg !9599
  ret void, !dbg !9600
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @conex_sweep(%struct.rtio* nocapture noundef readonly %0, %struct.rtio_concurrent_executor* nocapture noundef %1) unnamed_addr #1 !dbg !9601 {
  call void @llvm.dbg.value(metadata %struct.rtio* %0, metadata !9603, metadata !DIExpression()), !dbg !9607
  call void @llvm.dbg.value(metadata %struct.rtio_concurrent_executor* %1, metadata !9604, metadata !DIExpression()), !dbg !9607
  %3 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %1, i32 0, i32 3, !dbg !9608
  %4 = load i16, i16* %3, align 2, !dbg !9608
  call void @llvm.dbg.value(metadata i16 %4, metadata !9605, metadata !DIExpression()), !dbg !9609
  %5 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %1, i32 0, i32 7, !dbg !9610
  %6 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %1, i32 0, i32 2
  call void @llvm.dbg.value(metadata i16 %4, metadata !9605, metadata !DIExpression()), !dbg !9609
  %7 = load i16, i16* %6, align 4, !dbg !9614
  %8 = icmp ult i16 %4, %7, !dbg !9615
  br i1 %8, label %9, label %30, !dbg !9616

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %1, i32 0, i32 4
  %11 = zext i16 %4 to i32, !dbg !9616
  br label %12, !dbg !9616

12:                                               ; preds = %9, %23
  %13 = phi i32 [ %11, %9 ], [ %26, %23 ]
  call void @llvm.dbg.value(metadata i32 %13, metadata !9605, metadata !DIExpression()), !dbg !9609
  %14 = load i8*, i8** %5, align 4, !dbg !9610
  %15 = load i16, i16* %10, align 4, !dbg !9617
  %16 = trunc i32 %13 to i16, !dbg !9618
  %17 = and i16 %15, %16, !dbg !9618
  %18 = zext i16 %17 to i32, !dbg !9618
  %19 = getelementptr inbounds i8, i8* %14, i32 %18, !dbg !9619
  %20 = load i8, i8* %19, align 1, !dbg !9619
  %21 = and i8 %20, 1, !dbg !9620
  %22 = icmp eq i8 %21, 0, !dbg !9620
  br i1 %22, label %30, label %23, !dbg !9621

23:                                               ; preds = %12
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.7.107, i32 0, i32 0), i32 noundef 73, i32 noundef %13) #25, !dbg !9622
  tail call fastcc void @conex_sweep_task(%struct.rtio* noundef %0) #24, !dbg !9628
  %24 = load i16, i16* %3, align 2, !dbg !9629
  %25 = add i16 %24, 1, !dbg !9629
  store i16 %25, i16* %3, align 2, !dbg !9629
  %26 = add nuw nsw i32 %13, 1, !dbg !9630
  call void @llvm.dbg.value(metadata i32 %26, metadata !9605, metadata !DIExpression()), !dbg !9609
  %27 = load i16, i16* %6, align 4, !dbg !9614
  %28 = zext i16 %27 to i32, !dbg !9615
  %29 = icmp ult i32 %26, %28, !dbg !9615
  br i1 %29, label %12, label %30, !dbg !9616, !llvm.loop !9631

30:                                               ; preds = %23, %12, %2
  ret void, !dbg !9633
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @conex_sweep_task(%struct.rtio* nocapture noundef readonly %0) unnamed_addr #15 !dbg !9634 {
  call void @llvm.dbg.value(metadata %struct.rtio* %0, metadata !9636, metadata !DIExpression()), !dbg !9646
  call void @llvm.dbg.value(metadata %struct.rtio_concurrent_executor* undef, metadata !9637, metadata !DIExpression()), !dbg !9646
  %2 = getelementptr inbounds %struct.rtio, %struct.rtio* %0, i32 0, i32 2, !dbg !9647
  %3 = load %struct.rtio_sq*, %struct.rtio_sq** %2, align 4, !dbg !9647
  %4 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %3, i32 0, i32 0, i32 3, !dbg !9647
  %5 = tail call fastcc i32 @atomic_get.99(i32* noundef nonnull %4) #24, !dbg !9647
  %6 = load %struct.rtio_sq*, %struct.rtio_sq** %2, align 4, !dbg !9647
  %7 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %6, i32 0, i32 0, i32 1, !dbg !9647
  %8 = load i32, i32* %7, align 4, !dbg !9647
  %9 = add i32 %8, %5, !dbg !9647
  call void @llvm.dbg.value(metadata i32 %9, metadata !9639, metadata !DIExpression()), !dbg !9648
  %10 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %6, i32 0, i32 0, i32 2, !dbg !9647
  %11 = tail call fastcc i32 @atomic_get.99(i32* noundef nonnull %10) #24, !dbg !9647
  %12 = icmp eq i32 %9, %11, !dbg !9647
  call void @llvm.dbg.value(metadata i1 %12, metadata !9641, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9648
  br i1 %12, label %48, label %13, !dbg !9647

13:                                               ; preds = %1, %37
  %14 = phi i32 [ %44, %37 ], [ %9, %1 ]
  %15 = load %struct.rtio_sq*, %struct.rtio_sq** %2, align 4, !dbg !9646
  %16 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %15, i32 0, i32 0, i32 1, !dbg !9646
  %17 = load i32, i32* %16, align 4, !dbg !9646
  %18 = add i32 %17, 1, !dbg !9646
  store i32 %18, i32* %16, align 4, !dbg !9646
  %19 = load %struct.rtio_sq*, %struct.rtio_sq** %2, align 4, !dbg !9646
  %20 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %19, i32 0, i32 0, i32 4, !dbg !9646
  %21 = load i32, i32* %20, align 4, !dbg !9646
  %22 = and i32 %21, %14, !dbg !9646
  call void @llvm.dbg.value(metadata !DIArgList(%struct.rtio_sq* %19, i32 %22), metadata !9638, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 20, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 20, DW_OP_stack_value)), !dbg !9646
  %23 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %19, i32 0, i32 1, i32 %22, i32 2, !dbg !9649
  %24 = load i16, i16* %23, align 2, !dbg !9649
  %25 = and i16 %24, 1, !dbg !9650
  %26 = icmp eq i16 %25, 0, !dbg !9651
  br i1 %26, label %48, label %27, !dbg !9652

27:                                               ; preds = %13
  %28 = load %struct.rtio_sq*, %struct.rtio_sq** %2, align 4, !dbg !9653
  %29 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %28, i32 0, i32 0, i32 1, !dbg !9653
  %30 = load i32, i32* %29, align 4, !dbg !9653
  %31 = icmp eq i32 %30, 0, !dbg !9653
  br i1 %31, label %37, label %32, !dbg !9656

32:                                               ; preds = %27
  %33 = add i32 %30, -1, !dbg !9657
  store i32 %33, i32* %29, align 4, !dbg !9657
  %34 = load %struct.rtio_sq*, %struct.rtio_sq** %2, align 4, !dbg !9657
  %35 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %34, i32 0, i32 0, i32 3, !dbg !9657
  tail call fastcc void @atomic_add.108(i32* noundef nonnull %35) #24, !dbg !9657
  %36 = load %struct.rtio_sq*, %struct.rtio_sq** %2, align 4, !dbg !9659
  br label %37, !dbg !9657

37:                                               ; preds = %32, %27
  %38 = phi %struct.rtio_sq* [ %36, %32 ], [ %28, %27 ], !dbg !9659
  %39 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %38, i32 0, i32 0, i32 3, !dbg !9659
  %40 = tail call fastcc i32 @atomic_get.99(i32* noundef nonnull %39) #24, !dbg !9659
  %41 = load %struct.rtio_sq*, %struct.rtio_sq** %2, align 4, !dbg !9659
  %42 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %41, i32 0, i32 0, i32 1, !dbg !9659
  %43 = load i32, i32* %42, align 4, !dbg !9659
  %44 = add i32 %43, %40, !dbg !9659
  call void @llvm.dbg.value(metadata i32 %44, metadata !9642, metadata !DIExpression()), !dbg !9660
  %45 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %41, i32 0, i32 0, i32 2, !dbg !9659
  %46 = tail call fastcc i32 @atomic_get.99(i32* noundef nonnull %45) #24, !dbg !9659
  %47 = icmp eq i32 %44, %46, !dbg !9659
  call void @llvm.dbg.value(metadata i1 %47, metadata !9645, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9660
  br i1 %47, label %48, label %13, !dbg !9659

48:                                               ; preds = %37, %13, %1
  %49 = load %struct.rtio_sq*, %struct.rtio_sq** %2, align 4, !dbg !9661
  %50 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %49, i32 0, i32 0, i32 1, !dbg !9661
  %51 = load i32, i32* %50, align 4, !dbg !9661
  %52 = icmp eq i32 %51, 0, !dbg !9661
  br i1 %52, label %57, label %53, !dbg !9664

53:                                               ; preds = %48
  %54 = add i32 %51, -1, !dbg !9665
  store i32 %54, i32* %50, align 4, !dbg !9665
  %55 = load %struct.rtio_sq*, %struct.rtio_sq** %2, align 4, !dbg !9665
  %56 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %55, i32 0, i32 0, i32 3, !dbg !9665
  tail call fastcc void @atomic_add.108(i32* noundef nonnull %56) #24, !dbg !9665
  br label %57, !dbg !9665

57:                                               ; preds = %53, %48
  ret void, !dbg !9667
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc void @atomic_add.108(i32* nocapture noundef %0) unnamed_addr #5 !dbg !9668 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !9670, metadata !DIExpression()), !dbg !9672
  call void @llvm.dbg.value(metadata i32 1, metadata !9671, metadata !DIExpression()), !dbg !9672
  %2 = atomicrmw add i32* %0, i32 1 seq_cst, align 4, !dbg !9673
  ret void, !dbg !9674
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc void @atomic_inc.109(i32* nocapture noundef %0) unnamed_addr #5 !dbg !9675 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !9677, metadata !DIExpression()), !dbg !9678
  tail call fastcc void @atomic_add.108(i32* noundef %0) #24, !dbg !9679
  ret void, !dbg !9680
}

; Function Attrs: noinline nounwind optsize
define dso_local void @rtio_concurrent_err(%struct.rtio* noundef %0, %struct.rtio_sqe* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !9681 {
  call void @llvm.dbg.value(metadata %struct.rtio* %0, metadata !9683, metadata !DIExpression()), !dbg !9699
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %1, metadata !9684, metadata !DIExpression()), !dbg !9699
  call void @llvm.dbg.value(metadata i32 %2, metadata !9685, metadata !DIExpression()), !dbg !9699
  %4 = bitcast %struct.rtio* %0 to %struct.rtio_concurrent_executor**, !dbg !9700
  %5 = load %struct.rtio_concurrent_executor*, %struct.rtio_concurrent_executor** %4, align 4, !dbg !9700
  call void @llvm.dbg.value(metadata %struct.rtio_concurrent_executor* %5, metadata !9688, metadata !DIExpression()), !dbg !9699
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9320, metadata !DIExpression()) #23, !dbg !9701
  %6 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !9703, !srcloc !9335
  call void @llvm.dbg.value(metadata i32 undef, metadata !9332, metadata !DIExpression()) #23, !dbg !9705
  call void @llvm.dbg.value(metadata i32 undef, metadata !9333, metadata !DIExpression()) #23, !dbg !9705
  call void @llvm.dbg.value(metadata i32 undef, metadata !9326, metadata !DIExpression()) #23, !dbg !9701
  call void @llvm.dbg.value(metadata i32 undef, metadata !9687, metadata !DIExpression()), !dbg !9699
  %7 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %1, i32 0, i32 4, !dbg !9706
  %8 = load i8*, i8** %7, align 4, !dbg !9706
  tail call fastcc void @rtio_cqe_submit.106(%struct.rtio* noundef %0, i32 noundef %2, i8* noundef %8) #24, !dbg !9707
  %9 = tail call fastcc zeroext i16 @conex_task_id(%struct.rtio_concurrent_executor* noundef %5, %struct.rtio_sqe* noundef %1) #24, !dbg !9708
  call void @llvm.dbg.value(metadata i16 %9, metadata !9689, metadata !DIExpression()), !dbg !9699
  %10 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %1, i32 0, i32 2, !dbg !9709
  %11 = load i16, i16* %10, align 2, !dbg !9709
  %12 = and i16 %11, 1, !dbg !9710
  %13 = icmp eq i16 %12, 0, !dbg !9710
  br i1 %13, label %64, label %14, !dbg !9711

14:                                               ; preds = %3
  %15 = getelementptr inbounds %struct.rtio, %struct.rtio* %0, i32 0, i32 2, !dbg !9712
  %16 = load %struct.rtio_sq*, %struct.rtio_sq** %15, align 4, !dbg !9712
  %17 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %16, i32 0, i32 1, i32 0, !dbg !9712
  %18 = ptrtoint %struct.rtio_sqe* %1 to i32, !dbg !9712
  %19 = ptrtoint %struct.rtio_sqe* %17 to i32, !dbg !9712
  %20 = sub i32 %18, %19, !dbg !9712
  %21 = sdiv exact i32 %20, 20, !dbg !9712
  call void @llvm.dbg.value(metadata i32 %21, metadata !9690, metadata !DIExpression()), !dbg !9713
  %22 = add nsw i32 %21, 1, !dbg !9712
  %23 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %16, i32 0, i32 0, i32 4, !dbg !9712
  %24 = load i32, i32* %23, align 4, !dbg !9712
  %25 = and i32 %22, %24, !dbg !9712
  %26 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %16, i32 0, i32 0, i32 2, !dbg !9712
  %27 = tail call fastcc i32 @atomic_get.99(i32* noundef nonnull %26) #24, !dbg !9712
  %28 = load %struct.rtio_sq*, %struct.rtio_sq** %15, align 4, !dbg !9712
  %29 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %28, i32 0, i32 0, i32 4, !dbg !9712
  %30 = load i32, i32* %29, align 4, !dbg !9712
  %31 = and i32 %30, %27, !dbg !9712
  %32 = icmp eq i32 %25, %31, !dbg !9712
  call void @llvm.dbg.value(metadata i1 %32, metadata !9694, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9713
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* undef, metadata !9686, metadata !DIExpression()), !dbg !9699
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* undef, metadata !9686, metadata !DIExpression()), !dbg !9699
  br i1 %32, label %64, label %33, !dbg !9714

33:                                               ; preds = %14
  %34 = and i32 %22, %30, !dbg !9712
  %35 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %28, i32 0, i32 1, i32 %34, !dbg !9712
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %35, metadata !9686, metadata !DIExpression()), !dbg !9699
  br label %36, !dbg !9715

36:                                               ; preds = %33, %42
  %37 = phi %struct.rtio_sqe* [ %63, %42 ], [ %35, %33 ]
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %37, metadata !9686, metadata !DIExpression()), !dbg !9699
  %38 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %37, i32 0, i32 2, !dbg !9716
  %39 = load i16, i16* %38, align 2, !dbg !9716
  %40 = and i16 %39, 1, !dbg !9717
  %41 = icmp eq i16 %40, 0, !dbg !9714
  br i1 %41, label %64, label %42, !dbg !9715

42:                                               ; preds = %36
  %43 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %37, i32 0, i32 4, !dbg !9718
  %44 = load i8*, i8** %43, align 4, !dbg !9718
  tail call fastcc void @rtio_cqe_submit.106(%struct.rtio* noundef nonnull %0, i32 noundef -140, i8* noundef %44) #24, !dbg !9719
  %45 = load %struct.rtio_sq*, %struct.rtio_sq** %15, align 4, !dbg !9720
  %46 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %45, i32 0, i32 1, i32 0, !dbg !9720
  %47 = ptrtoint %struct.rtio_sqe* %37 to i32, !dbg !9720
  %48 = ptrtoint %struct.rtio_sqe* %46 to i32, !dbg !9720
  %49 = sub i32 %47, %48, !dbg !9720
  %50 = sdiv exact i32 %49, 20, !dbg !9720
  call void @llvm.dbg.value(metadata i32 %50, metadata !9695, metadata !DIExpression()), !dbg !9721
  %51 = add nsw i32 %50, 1, !dbg !9720
  %52 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %45, i32 0, i32 0, i32 4, !dbg !9720
  %53 = load i32, i32* %52, align 4, !dbg !9720
  %54 = and i32 %51, %53, !dbg !9720
  %55 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %45, i32 0, i32 0, i32 2, !dbg !9720
  %56 = tail call fastcc i32 @atomic_get.99(i32* noundef nonnull %55) #24, !dbg !9720
  %57 = load %struct.rtio_sq*, %struct.rtio_sq** %15, align 4, !dbg !9720
  %58 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %57, i32 0, i32 0, i32 4, !dbg !9720
  %59 = load i32, i32* %58, align 4, !dbg !9720
  %60 = and i32 %59, %56, !dbg !9720
  %61 = icmp eq i32 %54, %60, !dbg !9720
  call void @llvm.dbg.value(metadata i1 %61, metadata !9698, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9721
  %62 = and i32 %51, %59, !dbg !9720
  %63 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %57, i32 0, i32 1, i32 %62, !dbg !9720
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* undef, metadata !9686, metadata !DIExpression()), !dbg !9699
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* undef, metadata !9686, metadata !DIExpression()), !dbg !9699
  br i1 %61, label %64, label %36, !dbg !9714

64:                                               ; preds = %42, %36, %14, %3
  %65 = extractvalue { i32, i32 } %6, 0, !dbg !9703
  call void @llvm.dbg.value(metadata i32 %65, metadata !9332, metadata !DIExpression()) #23, !dbg !9705
  call void @llvm.dbg.value(metadata i32 %65, metadata !9326, metadata !DIExpression()) #23, !dbg !9701
  call void @llvm.dbg.value(metadata i32 %65, metadata !9687, metadata !DIExpression()), !dbg !9699
  %66 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %5, i32 0, i32 7, !dbg !9722
  %67 = load i8*, i8** %66, align 4, !dbg !9722
  %68 = zext i16 %9 to i32, !dbg !9723
  %69 = getelementptr inbounds i8, i8* %67, i32 %68, !dbg !9723
  %70 = load i8, i8* %69, align 1, !dbg !9724
  %71 = or i8 %70, 1, !dbg !9724
  store i8 %71, i8* %69, align 1, !dbg !9724
  tail call fastcc void @conex_sweep_resume(%struct.rtio* noundef nonnull %0, %struct.rtio_concurrent_executor* noundef %5) #24, !dbg !9725
  call void @llvm.dbg.value(metadata i32 undef, metadata !9392, metadata !DIExpression()) #23, !dbg !9726
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9397, metadata !DIExpression()) #23, !dbg !9726
  call void @llvm.dbg.value(metadata i32 undef, metadata !9400, metadata !DIExpression()) #23, !dbg !9728
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %65) #23, !dbg !9730, !srcloc !9406
  ret void, !dbg !9731
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_9_5(%struct.device* nocapture noundef readonly %0) #1 !dbg !9732 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9734, metadata !DIExpression()), !dbg !9735
  tail call fastcc void @__stm32_exti_isr(i32 noundef 5, i32 noundef 10, %struct.device* noundef %0) #24, !dbg !9736
  ret void, !dbg !9737
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_isr(i32 noundef %0, i32 noundef %1, %struct.device* nocapture noundef readonly %2) unnamed_addr #1 !dbg !9738 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9742, metadata !DIExpression()), !dbg !9748
  call void @llvm.dbg.value(metadata i32 %1, metadata !9743, metadata !DIExpression()), !dbg !9748
  call void @llvm.dbg.value(metadata %struct.device* %2, metadata !9744, metadata !DIExpression()), !dbg !9748
  %4 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 4, !dbg !9749
  %5 = bitcast i8** %4 to %struct.stm32_exti_data**, !dbg !9749
  %6 = load %struct.stm32_exti_data*, %struct.stm32_exti_data** %5, align 4, !dbg !9749
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* %6, metadata !9745, metadata !DIExpression()), !dbg !9748
  call void @llvm.dbg.value(metadata i32 %0, metadata !9747, metadata !DIExpression()), !dbg !9748
  %7 = icmp slt i32 %0, %1, !dbg !9750
  br i1 %7, label %8, label %22, !dbg !9753

8:                                                ; preds = %3, %19
  %9 = phi i32 [ %20, %19 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !9747, metadata !DIExpression()), !dbg !9748
  %10 = tail call fastcc i32 @stm32_exti_is_pending(i32 noundef %9) #24, !dbg !9754
  %11 = icmp eq i32 %10, 0, !dbg !9754
  br i1 %11, label %19, label %12, !dbg !9757

12:                                               ; preds = %8
  tail call fastcc void @stm32_exti_clear_pending(i32 noundef %9) #24, !dbg !9758
  %13 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 0, !dbg !9760
  %14 = load void (i32, i8*)*, void (i32, i8*)** %13, align 4, !dbg !9760
  %15 = icmp eq void (i32, i8*)* %14, null, !dbg !9762
  br i1 %15, label %19, label %16, !dbg !9763

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 1, !dbg !9764
  %18 = load i8*, i8** %17, align 4, !dbg !9764
  tail call void %14(i32 noundef %9, i8* noundef %18) #25, !dbg !9765
  br label %19, !dbg !9766

19:                                               ; preds = %8, %16, %12
  %20 = add i32 %9, 1, !dbg !9767
  call void @llvm.dbg.value(metadata i32 %20, metadata !9747, metadata !DIExpression()), !dbg !9748
  %21 = icmp eq i32 %20, %1, !dbg !9750
  br i1 %21, label %22, label %8, !dbg !9753, !llvm.loop !9768

22:                                               ; preds = %19, %3
  ret void, !dbg !9770
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @stm32_exti_is_pending(i32 noundef %0) unnamed_addr #5 !dbg !9771 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9773, metadata !DIExpression()), !dbg !9774
  %2 = shl nuw i32 1, %0, !dbg !9775
  %3 = tail call fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %2) #24, !dbg !9778
  ret i32 %3, !dbg !9779
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_exti_clear_pending(i32 noundef %0) unnamed_addr #15 !dbg !9780 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9784, metadata !DIExpression()), !dbg !9785
  %2 = shl nuw i32 1, %0, !dbg !9786
  tail call fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %2) #24, !dbg !9789
  ret void, !dbg !9790
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %0) unnamed_addr #15 !dbg !9791 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9794, metadata !DIExpression()), !dbg !9795
  store volatile i32 %0, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !9796
  ret void, !dbg !9797
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %0) unnamed_addr #5 !dbg !9798 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9800, metadata !DIExpression()), !dbg !9801
  %2 = load volatile i32, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !9802
  %3 = and i32 %2, %0, !dbg !9802
  %4 = icmp eq i32 %3, %0, !dbg !9803
  %5 = zext i1 %4 to i32, !dbg !9803
  ret i32 %5, !dbg !9804
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_4(%struct.device* nocapture noundef readonly %0) #1 !dbg !9805 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9807, metadata !DIExpression()), !dbg !9808
  tail call fastcc void @__stm32_exti_isr(i32 noundef 4, i32 noundef 5, %struct.device* noundef %0) #24, !dbg !9809
  ret void, !dbg !9810
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_3(%struct.device* nocapture noundef readonly %0) #1 !dbg !9811 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9813, metadata !DIExpression()), !dbg !9814
  tail call fastcc void @__stm32_exti_isr(i32 noundef 3, i32 noundef 4, %struct.device* noundef %0) #24, !dbg !9815
  ret void, !dbg !9816
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_2(%struct.device* nocapture noundef readonly %0) #1 !dbg !9817 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9819, metadata !DIExpression()), !dbg !9820
  tail call fastcc void @__stm32_exti_isr(i32 noundef 2, i32 noundef 3, %struct.device* noundef %0) #24, !dbg !9821
  ret void, !dbg !9822
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_22(%struct.device* nocapture noundef readonly %0) #1 !dbg !9823 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9825, metadata !DIExpression()), !dbg !9826
  tail call fastcc void @__stm32_exti_isr(i32 noundef 22, i32 noundef 23, %struct.device* noundef %0) #24, !dbg !9827
  ret void, !dbg !9828
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_21(%struct.device* nocapture noundef readonly %0) #1 !dbg !9829 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9831, metadata !DIExpression()), !dbg !9832
  tail call fastcc void @__stm32_exti_isr(i32 noundef 21, i32 noundef 22, %struct.device* noundef %0) #24, !dbg !9833
  ret void, !dbg !9834
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_1(%struct.device* nocapture noundef readonly %0) #1 !dbg !9835 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9837, metadata !DIExpression()), !dbg !9838
  tail call fastcc void @__stm32_exti_isr(i32 noundef 1, i32 noundef 2, %struct.device* noundef %0) #24, !dbg !9839
  ret void, !dbg !9840
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_18(%struct.device* nocapture noundef readonly %0) #1 !dbg !9841 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9843, metadata !DIExpression()), !dbg !9844
  tail call fastcc void @__stm32_exti_isr(i32 noundef 18, i32 noundef 19, %struct.device* noundef %0) #24, !dbg !9845
  ret void, !dbg !9846
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_16(%struct.device* nocapture noundef readonly %0) #1 !dbg !9847 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9849, metadata !DIExpression()), !dbg !9850
  tail call fastcc void @__stm32_exti_isr(i32 noundef 16, i32 noundef 17, %struct.device* noundef %0) #24, !dbg !9851
  ret void, !dbg !9852
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_15_10(%struct.device* nocapture noundef readonly %0) #1 !dbg !9853 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9855, metadata !DIExpression()), !dbg !9856
  tail call fastcc void @__stm32_exti_isr(i32 noundef 10, i32 noundef 16, %struct.device* noundef %0) #24, !dbg !9857
  ret void, !dbg !9858
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_0(%struct.device* nocapture noundef readonly %0) #1 !dbg !9859 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9861, metadata !DIExpression()), !dbg !9862
  tail call fastcc void @__stm32_exti_isr(i32 noundef 0, i32 noundef 1, %struct.device* noundef %0) #24, !dbg !9863
  ret void, !dbg !9864
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_exti_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !9865 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9867, metadata !DIExpression()), !dbg !9868
  tail call fastcc void @__stm32_exti_connect_irqs() #24, !dbg !9869
  ret i32 0, !dbg !9870
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_connect_irqs() unnamed_addr #1 !dbg !1160 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !1164, metadata !DIExpression()), !dbg !9871
  tail call void @z_arm_irq_priority_set(i32 noundef 6, i32 noundef 0, i32 noundef 0) #25, !dbg !9872
  tail call void @z_arm_irq_priority_set(i32 noundef 7, i32 noundef 0, i32 noundef 0) #25, !dbg !9874
  tail call void @z_arm_irq_priority_set(i32 noundef 8, i32 noundef 0, i32 noundef 0) #25, !dbg !9876
  tail call void @z_arm_irq_priority_set(i32 noundef 9, i32 noundef 0, i32 noundef 0) #25, !dbg !9878
  tail call void @z_arm_irq_priority_set(i32 noundef 10, i32 noundef 0, i32 noundef 0) #25, !dbg !9880
  tail call void @z_arm_irq_priority_set(i32 noundef 23, i32 noundef 0, i32 noundef 0) #25, !dbg !9882
  tail call void @z_arm_irq_priority_set(i32 noundef 40, i32 noundef 0, i32 noundef 0) #25, !dbg !9884
  tail call void @z_arm_irq_priority_set(i32 noundef 1, i32 noundef 0, i32 noundef 0) #25, !dbg !9886
  tail call void @z_arm_irq_priority_set(i32 noundef 42, i32 noundef 0, i32 noundef 0) #25, !dbg !9888
  tail call void @z_arm_irq_priority_set(i32 noundef 2, i32 noundef 0, i32 noundef 0) #25, !dbg !9890
  tail call void @z_arm_irq_priority_set(i32 noundef 3, i32 noundef 0, i32 noundef 0) #25, !dbg !9892
  ret void, !dbg !9894
}

; Function Attrs: noinline nounwind optsize
define dso_local void @stm32_exti_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !9895 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9897, metadata !DIExpression()), !dbg !9899
  call void @llvm.dbg.value(metadata i32 0, metadata !9898, metadata !DIExpression()), !dbg !9899
  %2 = getelementptr inbounds [23 x i32], [23 x i32]* @exti_irq_table, i32 0, i32 %0, !dbg !9900
  %3 = load i32, i32* %2, align 4, !dbg !9900
  call void @llvm.dbg.value(metadata i32 %3, metadata !9898, metadata !DIExpression()), !dbg !9899
  %4 = shl nuw i32 1, %0, !dbg !9901
  tail call fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %4) #24, !dbg !9902
  tail call void @arch_irq_enable(i32 noundef %3) #25, !dbg !9903
  ret void, !dbg !9904
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %0) unnamed_addr #15 !dbg !9905 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9907, metadata !DIExpression()), !dbg !9908
  %2 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !9909
  %3 = or i32 %2, %0, !dbg !9909
  store volatile i32 %3, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !9909
  ret void, !dbg !9910
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_disable(i32 noundef %0) local_unnamed_addr #15 !dbg !9911 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9913, metadata !DIExpression()), !dbg !9914
  %2 = icmp slt i32 %0, 32, !dbg !9915
  br i1 %2, label %3, label %5, !dbg !9917

3:                                                ; preds = %1
  %4 = shl nuw i32 1, %0, !dbg !9918
  tail call fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %4) #24, !dbg !9920
  br label %5, !dbg !9921

5:                                                ; preds = %1, %3
  ret void, !dbg !9922
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %0) unnamed_addr #15 !dbg !9923 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9925, metadata !DIExpression()), !dbg !9926
  %2 = xor i32 %0, -1, !dbg !9927
  %3 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !9927
  %4 = and i32 %3, %2, !dbg !9927
  store volatile i32 %4, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !9927
  ret void, !dbg !9928
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_trigger(i32 noundef %0, i32 noundef %1) local_unnamed_addr #15 !dbg !9929 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9933, metadata !DIExpression()), !dbg !9935
  call void @llvm.dbg.value(metadata i32 %1, metadata !9934, metadata !DIExpression()), !dbg !9935
  switch i32 %1, label %11 [
    i32 0, label %3
    i32 1, label %5
    i32 2, label %7
    i32 3, label %9
  ], !dbg !9936

3:                                                ; preds = %2
  %4 = shl nuw i32 1, %0, !dbg !9937
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %4) #24, !dbg !9939
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %4) #24, !dbg !9940
  br label %11, !dbg !9941

5:                                                ; preds = %2
  %6 = shl nuw i32 1, %0, !dbg !9942
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %6) #24, !dbg !9943
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %6) #24, !dbg !9944
  br label %11, !dbg !9945

7:                                                ; preds = %2
  %8 = shl nuw i32 1, %0, !dbg !9946
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %8) #24, !dbg !9947
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %8) #24, !dbg !9948
  br label %11, !dbg !9949

9:                                                ; preds = %2
  %10 = shl nuw i32 1, %0, !dbg !9950
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %10) #24, !dbg !9951
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %10) #24, !dbg !9952
  br label %11, !dbg !9953

11:                                               ; preds = %2, %9, %7, %5, %3
  ret void, !dbg !9954
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !9955 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9957, metadata !DIExpression()), !dbg !9958
  %2 = xor i32 %0, -1, !dbg !9959
  %3 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !9959
  %4 = and i32 %3, %2, !dbg !9959
  store volatile i32 %4, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !9959
  ret void, !dbg !9960
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !9961 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9963, metadata !DIExpression()), !dbg !9964
  %2 = xor i32 %0, -1, !dbg !9965
  %3 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !9965
  %4 = and i32 %3, %2, !dbg !9965
  store volatile i32 %4, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !9965
  ret void, !dbg !9966
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !9967 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9969, metadata !DIExpression()), !dbg !9970
  %2 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !9971
  %3 = or i32 %2, %0, !dbg !9971
  store volatile i32 %3, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !9971
  ret void, !dbg !9972
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !9973 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9975, metadata !DIExpression()), !dbg !9976
  %2 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !9977
  %3 = or i32 %2, %0, !dbg !9977
  store volatile i32 %3, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !9977
  ret void, !dbg !9978
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @stm32_exti_set_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #11 !dbg !9979 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9983, metadata !DIExpression()), !dbg !9989
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !9984, metadata !DIExpression()), !dbg !9989
  call void @llvm.dbg.value(metadata i8* %2, metadata !9985, metadata !DIExpression()), !dbg !9989
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !9986, metadata !DIExpression()), !dbg !9989
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !9988, metadata !DIExpression()), !dbg !9989
  %4 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !9990
  %5 = load void (i32, i8*)*, void (i32, i8*)** %4, align 4, !dbg !9990
  %6 = icmp eq void (i32, i8*)* %5, null, !dbg !9992
  br i1 %6, label %7, label %9, !dbg !9993

7:                                                ; preds = %3
  store void (i32, i8*)* %1, void (i32, i8*)** %4, align 4, !dbg !9994
  %8 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !9995
  store i8* %2, i8** %8, align 4, !dbg !9996
  br label %9, !dbg !9997

9:                                                ; preds = %3, %7
  %10 = phi i32 [ 0, %7 ], [ -16, %3 ], !dbg !9989
  ret i32 %10, !dbg !9998
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @stm32_exti_unset_callback(i32 noundef %0) local_unnamed_addr #6 !dbg !9999 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10001, metadata !DIExpression()), !dbg !10004
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !10002, metadata !DIExpression()), !dbg !10004
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !10003, metadata !DIExpression()), !dbg !10004
  %2 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !10005
  store void (i32, i8*)* null, void (i32, i8*)** %2, align 4, !dbg !10006
  %3 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !10007
  store i8* null, i8** %3, align 4, !dbg !10008
  ret void, !dbg !10009
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_on(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #15 !dbg !10010 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10012, metadata !DIExpression()), !dbg !10017
  call void @llvm.dbg.value(metadata i8* %1, metadata !10013, metadata !DIExpression()), !dbg !10017
  call void @llvm.dbg.value(metadata i8* %1, metadata !10014, metadata !DIExpression()), !dbg !10017
  %3 = bitcast i8* %1 to i32*, !dbg !10018
  %4 = load i32, i32* %3, align 4, !dbg !10018
  %5 = add i32 %4, -169, !dbg !10018
  %6 = icmp ult i32 %5, -121, !dbg !10018
  br i1 %6, label %15, label %7, !dbg !10020

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !10021
  %9 = inttoptr i32 %8 to i32*, !dbg !10022
  call void @llvm.dbg.value(metadata i32* %9, metadata !10015, metadata !DIExpression()), !dbg !10017
  %10 = load volatile i32, i32* %9, align 4, !dbg !10023
  call void @llvm.dbg.value(metadata i32 %10, metadata !10016, metadata !DIExpression()), !dbg !10017
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !10024
  %12 = bitcast i8* %11 to i32*, !dbg !10024
  %13 = load i32, i32* %12, align 4, !dbg !10024
  %14 = or i32 %13, %10, !dbg !10025
  call void @llvm.dbg.value(metadata i32 %14, metadata !10016, metadata !DIExpression()), !dbg !10017
  store volatile i32 %14, i32* %9, align 4, !dbg !10026
  br label %15, !dbg !10027

15:                                               ; preds = %2, %7
  %16 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !10017
  ret i32 %16, !dbg !10028
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_off(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #15 !dbg !10029 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10031, metadata !DIExpression()), !dbg !10036
  call void @llvm.dbg.value(metadata i8* %1, metadata !10032, metadata !DIExpression()), !dbg !10036
  call void @llvm.dbg.value(metadata i8* %1, metadata !10033, metadata !DIExpression()), !dbg !10036
  %3 = bitcast i8* %1 to i32*, !dbg !10037
  %4 = load i32, i32* %3, align 4, !dbg !10037
  %5 = add i32 %4, -169, !dbg !10037
  %6 = icmp ult i32 %5, -121, !dbg !10037
  br i1 %6, label %16, label %7, !dbg !10039

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !10040
  %9 = inttoptr i32 %8 to i32*, !dbg !10041
  call void @llvm.dbg.value(metadata i32* %9, metadata !10034, metadata !DIExpression()), !dbg !10036
  %10 = load volatile i32, i32* %9, align 4, !dbg !10042
  call void @llvm.dbg.value(metadata i32 %10, metadata !10035, metadata !DIExpression()), !dbg !10036
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !10043
  %12 = bitcast i8* %11 to i32*, !dbg !10043
  %13 = load i32, i32* %12, align 4, !dbg !10043
  %14 = xor i32 %13, -1, !dbg !10044
  %15 = and i32 %10, %14, !dbg !10045
  call void @llvm.dbg.value(metadata i32 %15, metadata !10035, metadata !DIExpression()), !dbg !10036
  store volatile i32 %15, i32* %9, align 4, !dbg !10046
  br label %16, !dbg !10047

16:                                               ; preds = %2, %7
  %17 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !10036
  ret i32 %17, !dbg !10048
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_clock_control_get_subsys_rate(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i32* nocapture noundef writeonly %2) #1 !dbg !10049 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10051, metadata !DIExpression()), !dbg !10059
  call void @llvm.dbg.value(metadata i8* %1, metadata !10052, metadata !DIExpression()), !dbg !10059
  call void @llvm.dbg.value(metadata i32* %2, metadata !10053, metadata !DIExpression()), !dbg !10059
  call void @llvm.dbg.value(metadata i8* %1, metadata !10054, metadata !DIExpression()), !dbg !10059
  %4 = load i32, i32* @SystemCoreClock, align 4, !dbg !10060
  call void @llvm.dbg.value(metadata i32 %4, metadata !10055, metadata !DIExpression()), !dbg !10059
  call void @llvm.dbg.value(metadata i32 undef, metadata !10056, metadata !DIExpression()), !dbg !10059
  call void @llvm.dbg.value(metadata i32 undef, metadata !10057, metadata !DIExpression()), !dbg !10059
  call void @llvm.dbg.value(metadata i32 %4, metadata !10058, metadata !DIExpression()), !dbg !10059
  %5 = bitcast i8* %1 to i32*, !dbg !10061
  %6 = load i32, i32* %5, align 4, !dbg !10061
  switch i32 %6, label %21 [
    i32 48, label %19
    i32 52, label %19
    i32 56, label %19
    i32 64, label %7
    i32 68, label %9
    i32 168, label %19
    i32 6, label %19
    i32 1, label %11
    i32 2, label %14
    i32 4, label %17
    i32 5, label %18
  ], !dbg !10062

7:                                                ; preds = %3
  %8 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 4) #24, !dbg !10063
  call void @llvm.dbg.value(metadata i32 %8, metadata !10056, metadata !DIExpression()), !dbg !10059
  br label %19, !dbg !10064

9:                                                ; preds = %3
  %10 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 2) #24, !dbg !10066
  call void @llvm.dbg.value(metadata i32 %10, metadata !10057, metadata !DIExpression()), !dbg !10059
  br label %19, !dbg !10067

11:                                               ; preds = %3
  %12 = tail call i32 @get_pllsrc_frequency() #25, !dbg !10068
  %13 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %12, i32 noundef 2) #24, !dbg !10069
  br label %19, !dbg !10070

14:                                               ; preds = %3
  %15 = tail call i32 @get_pllsrc_frequency() #25, !dbg !10071
  %16 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %15, i32 noundef 7) #24, !dbg !10072
  br label %19, !dbg !10073

17:                                               ; preds = %3
  br label %19, !dbg !10074

18:                                               ; preds = %3
  br label %19, !dbg !10075

19:                                               ; preds = %3, %3, %3, %3, %3, %18, %17, %14, %11, %9, %7
  %20 = phi i32 [ %8, %7 ], [ %10, %9 ], [ %13, %11 ], [ %16, %14 ], [ 0, %17 ], [ 0, %18 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ]
  store i32 %20, i32* %2, align 4, !dbg !10076
  br label %21, !dbg !10077

21:                                               ; preds = %19, %3
  %22 = phi i32 [ -134, %3 ], [ 0, %19 ], !dbg !10059
  ret i32 %22, !dbg !10077
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_configure(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i8* nocapture noundef readnone %2) #15 !dbg !10078 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10080, metadata !DIExpression()), !dbg !10088
  call void @llvm.dbg.value(metadata i8* %1, metadata !10081, metadata !DIExpression()), !dbg !10088
  call void @llvm.dbg.value(metadata i8* %2, metadata !10082, metadata !DIExpression()), !dbg !10088
  call void @llvm.dbg.value(metadata i8* %1, metadata !10083, metadata !DIExpression()), !dbg !10088
  %4 = bitcast i8* %1 to i32*, !dbg !10089
  %5 = load i32, i32* %4, align 4, !dbg !10089
  %6 = tail call fastcc i32 @enabled_clock(i32 noundef %5) #24, !dbg !10090
  call void @llvm.dbg.value(metadata i32 %6, metadata !10087, metadata !DIExpression()), !dbg !10088
  %7 = icmp slt i32 %6, 0, !dbg !10091
  br i1 %7, label %22, label %8, !dbg !10093

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !10083, metadata !DIExpression()), !dbg !10088
  %9 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !10094
  %10 = bitcast i8* %9 to i32*, !dbg !10094
  %11 = load i32, i32* %10, align 4, !dbg !10094
  %12 = lshr i32 %11, 16, !dbg !10094
  %13 = and i32 %12, 7, !dbg !10094
  %14 = lshr i32 %11, 8, !dbg !10095
  %15 = and i32 %14, 31, !dbg !10095
  %16 = shl i32 %13, %15, !dbg !10096
  call void @llvm.dbg.value(metadata i32 %16, metadata !10086, metadata !DIExpression()), !dbg !10088
  %17 = and i32 %11, 255, !dbg !10097
  %18 = or i32 %17, 1073887232, !dbg !10098
  %19 = inttoptr i32 %18 to i32*, !dbg !10099
  call void @llvm.dbg.value(metadata i32* %19, metadata !10084, metadata !DIExpression()), !dbg !10088
  %20 = load volatile i32, i32* %19, align 4, !dbg !10100
  call void @llvm.dbg.value(metadata i32 %20, metadata !10085, metadata !DIExpression()), !dbg !10088
  %21 = or i32 %16, %20, !dbg !10101
  call void @llvm.dbg.value(metadata i32 %21, metadata !10085, metadata !DIExpression()), !dbg !10088
  store volatile i32 %21, i32* %19, align 4, !dbg !10102
  br label %22, !dbg !10103

22:                                               ; preds = %3, %8
  %23 = phi i32 [ 0, %8 ], [ %6, %3 ], !dbg !10088
  ret i32 %23, !dbg !10104
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @enabled_clock(i32 noundef %0) unnamed_addr #4 !dbg !10105 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10109, metadata !DIExpression()), !dbg !10111
  call void @llvm.dbg.value(metadata i32 0, metadata !10110, metadata !DIExpression()), !dbg !10111
  %2 = add i32 %0, -1, !dbg !10112
  %3 = icmp ult i32 %2, 6, !dbg !10112
  br i1 %3, label %4, label %7, !dbg !10112

4:                                                ; preds = %1
  %5 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table.enabled_clock, i32 0, i32 %2, !dbg !10112
  %6 = load i32, i32* %5, align 4, !dbg !10112
  call void @llvm.dbg.value(metadata i32 %6, metadata !10110, metadata !DIExpression()), !dbg !10111
  br label %7, !dbg !10113

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ -134, %1 ], !dbg !10111
  ret i32 %8, !dbg !10114
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_bus_clock(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !10115 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10119, metadata !DIExpression()), !dbg !10121
  call void @llvm.dbg.value(metadata i32 %1, metadata !10120, metadata !DIExpression()), !dbg !10121
  %3 = udiv i32 %0, %1, !dbg !10122
  ret i32 %3, !dbg !10123
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_pll_div_frequency(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !10124 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10128, metadata !DIExpression()), !dbg !10132
  call void @llvm.dbg.value(metadata i32 24, metadata !10129, metadata !DIExpression()), !dbg !10132
  call void @llvm.dbg.value(metadata i32 336, metadata !10130, metadata !DIExpression()), !dbg !10132
  call void @llvm.dbg.value(metadata i32 %1, metadata !10131, metadata !DIExpression()), !dbg !10132
  %3 = mul i32 %0, 336, !dbg !10133
  %4 = mul nsw i32 %1, 24, !dbg !10134
  %5 = udiv i32 %3, %4, !dbg !10135
  ret i32 %5, !dbg !10136
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @stm32_clock_control_init(%struct.device* nocapture readnone %0) #1 !dbg !10137 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !10139, metadata !DIExpression()), !dbg !10142
  tail call void @config_enable_default_clocks() #25, !dbg !10143
  %2 = tail call i32 @HAL_RCC_GetSysClockFreq() #25, !dbg !10144
  %3 = tail call fastcc i32 @LL_RCC_GetAHBPrescaler() #24, !dbg !10144
  %4 = lshr i32 %3, 4, !dbg !10144
  %5 = and i32 %4, 15, !dbg !10144
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %5, !dbg !10144
  %7 = load i8, i8* %6, align 1, !dbg !10144
  %8 = zext i8 %7 to i32, !dbg !10144
  %9 = lshr i32 %2, %8, !dbg !10144
  call void @llvm.dbg.value(metadata i32 %9, metadata !10140, metadata !DIExpression()), !dbg !10142
  call void @llvm.dbg.value(metadata !DIArgList(i32 168000000, i8 undef), metadata !10141, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_shra, DW_OP_stack_value)), !dbg !10142
  %10 = icmp ult i32 %9, 168000000, !dbg !10145
  br i1 %10, label %11, label %13, !dbg !10147

11:                                               ; preds = %1
  %12 = tail call i32 @LL_SetFlashLatency(i32 noundef 168000000) #25, !dbg !10148
  br label %13, !dbg !10150

13:                                               ; preds = %11, %1
  tail call fastcc void @set_up_fixed_clock_sources() #24, !dbg !10151
  tail call fastcc void @set_up_plls() #24, !dbg !10152
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #24, !dbg !10153
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 2) #24, !dbg !10156
  br label %14, !dbg !10157

14:                                               ; preds = %14, %13
  %15 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #24, !dbg !10158
  %16 = icmp eq i32 %15, 8, !dbg !10159
  br i1 %16, label %17, label %14, !dbg !10157, !llvm.loop !10160

17:                                               ; preds = %14
  %18 = icmp ugt i32 %9, 167999999, !dbg !10162
  br i1 %18, label %19, label %21, !dbg !10164

19:                                               ; preds = %17
  %20 = tail call i32 @LL_SetFlashLatency(i32 noundef 168000000) #25, !dbg !10165
  br label %21, !dbg !10167

21:                                               ; preds = %19, %17
  store i32 168000000, i32* @SystemCoreClock, align 4, !dbg !10168
  tail call fastcc void @LL_RCC_SetAPB1Prescaler() #24, !dbg !10169
  tail call fastcc void @LL_RCC_SetAPB2Prescaler() #24, !dbg !10170
  ret i32 0, !dbg !10171
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetAHBPrescaler() unnamed_addr #5 !dbg !10172 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10174
  %2 = and i32 %1, 240, !dbg !10174
  ret i32 %2, !dbg !10175
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_up_fixed_clock_sources() unnamed_addr #15 !dbg !10176 {
  tail call fastcc void @LL_RCC_HSE_DisableBypass() #24, !dbg !10177
  tail call fastcc void @LL_RCC_HSE_Enable() #24, !dbg !10182
  br label %1, !dbg !10183

1:                                                ; preds = %1, %0
  %2 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #24, !dbg !10184
  %3 = icmp eq i32 %2, 1, !dbg !10185
  br i1 %3, label %4, label %1, !dbg !10183, !llvm.loop !10186

4:                                                ; preds = %1
  ret void, !dbg !10188
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @set_up_plls() unnamed_addr #1 !dbg !10189 {
  %1 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #24, !dbg !10190
  %2 = icmp eq i32 %1, 8, !dbg !10192
  br i1 %2, label %3, label %4, !dbg !10193

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #24, !dbg !10194
  tail call fastcc void @stm32_clock_switch_to_hsi() #24, !dbg !10196
  br label %4, !dbg !10197

4:                                                ; preds = %3, %0
  tail call fastcc void @LL_RCC_PLL_Disable() #24, !dbg !10198
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10199
  %6 = and i32 %5, -196609, !dbg !10199
  store volatile i32 %6, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10199
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10200
  %8 = and i32 %7, -251658241, !dbg !10200
  %9 = or i32 %8, 117440512, !dbg !10200
  store volatile i32 %9, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10200
  tail call void @config_pll_sysclock() #25, !dbg !10201
  tail call fastcc void @LL_RCC_PLL_Enable() #24, !dbg !10202
  br label %10, !dbg !10203

10:                                               ; preds = %10, %4
  %11 = tail call fastcc i32 @LL_RCC_PLL_IsReady() #24, !dbg !10204
  %12 = icmp eq i32 %11, 1, !dbg !10205
  br i1 %12, label %13, label %10, !dbg !10203, !llvm.loop !10206

13:                                               ; preds = %10
  ret void, !dbg !10208
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler() unnamed_addr #15 !dbg !10209 {
  call void @llvm.dbg.value(metadata i32 0, metadata !10211, metadata !DIExpression()), !dbg !10212
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10213
  %2 = and i32 %1, -241, !dbg !10213
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10213
  ret void, !dbg !10214
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource(i32 noundef %0) unnamed_addr #15 !dbg !10215 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10217, metadata !DIExpression()), !dbg !10218
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10219
  %3 = and i32 %2, -4, !dbg !10219
  %4 = or i32 %3, %0, !dbg !10219
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10219
  ret void, !dbg !10220
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource() unnamed_addr #5 !dbg !10221 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10222
  %2 = and i32 %1, 12, !dbg !10222
  ret i32 %2, !dbg !10223
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler() unnamed_addr #15 !dbg !10224 {
  call void @llvm.dbg.value(metadata i32 5120, metadata !10226, metadata !DIExpression()), !dbg !10227
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10228
  %2 = and i32 %1, -7169, !dbg !10228
  %3 = or i32 %2, 5120, !dbg !10228
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10228
  ret void, !dbg !10229
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler() unnamed_addr #15 !dbg !10230 {
  call void @llvm.dbg.value(metadata i32 32768, metadata !10232, metadata !DIExpression()), !dbg !10233
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10234
  %2 = and i32 %1, -57345, !dbg !10234
  %3 = or i32 %2, 32768, !dbg !10234
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10234
  ret void, !dbg !10235
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_clock_switch_to_hsi() unnamed_addr #15 !dbg !10236 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #24, !dbg !10237
  %2 = icmp eq i32 %1, 1, !dbg !10239
  br i1 %2, label %7, label %3, !dbg !10240

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #24, !dbg !10241
  br label %4, !dbg !10243

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #24, !dbg !10244
  %6 = icmp eq i32 %5, 1, !dbg !10245
  br i1 %6, label %7, label %4, !dbg !10243, !llvm.loop !10246

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 0) #24, !dbg !10248
  br label %8, !dbg !10249

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #24, !dbg !10250
  %10 = icmp eq i32 %9, 0, !dbg !10251
  br i1 %10, label %11, label %8, !dbg !10249, !llvm.loop !10252

11:                                               ; preds = %8
  ret void, !dbg !10254
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Disable() unnamed_addr #15 !dbg !10255 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10256
  %2 = and i32 %1, -16777217, !dbg !10256
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10256
  ret void, !dbg !10257
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable() unnamed_addr #15 !dbg !10258 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10259
  %2 = or i32 %1, 16777216, !dbg !10259
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10259
  ret void, !dbg !10260
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady() unnamed_addr #5 !dbg !10261 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10262
  %2 = lshr i32 %1, 25, !dbg !10263
  %3 = and i32 %2, 1, !dbg !10263
  ret i32 %3, !dbg !10264
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady() unnamed_addr #5 !dbg !10265 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10266
  %2 = lshr i32 %1, 1, !dbg !10267
  %3 = and i32 %2, 1, !dbg !10267
  ret i32 %3, !dbg !10268
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable() unnamed_addr #15 !dbg !10269 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10270
  %2 = or i32 %1, 1, !dbg !10270
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10270
  ret void, !dbg !10271
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass() unnamed_addr #15 !dbg !10272 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10273
  %2 = and i32 %1, -262145, !dbg !10273
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10273
  ret void, !dbg !10274
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable() unnamed_addr #15 !dbg !10275 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10276
  %2 = or i32 %1, 65536, !dbg !10276
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10276
  ret void, !dbg !10277
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady() unnamed_addr #5 !dbg !10278 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10279
  %2 = lshr i32 %1, 17, !dbg !10280
  %3 = and i32 %2, 1, !dbg !10280
  ret i32 %3, !dbg !10281
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllsrc_frequency() local_unnamed_addr #4 !dbg !10282 {
  ret i32 24000000, !dbg !10284
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @config_pll_sysclock() local_unnamed_addr #15 !dbg !10288 {
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS() #24, !dbg !10289
  ret void, !dbg !10290
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS() unnamed_addr #15 !dbg !10291 {
  call void @llvm.dbg.value(metadata i32 4194304, metadata !10295, metadata !DIExpression()), !dbg !10299
  call void @llvm.dbg.value(metadata i32 24, metadata !10296, metadata !DIExpression()), !dbg !10299
  call void @llvm.dbg.value(metadata i32 336, metadata !10297, metadata !DIExpression()), !dbg !10299
  call void @llvm.dbg.value(metadata i32 0, metadata !10298, metadata !DIExpression()), !dbg !10299
  %1 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10300
  %2 = and i32 %1, -4227072, !dbg !10300
  %3 = or i32 %2, 4215832, !dbg !10300
  store volatile i32 %3, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10300
  %4 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10301
  %5 = and i32 %4, -196609, !dbg !10301
  store volatile i32 %5, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10301
  ret void, !dbg !10302
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @config_enable_default_clocks() local_unnamed_addr #19 !dbg !10303 {
  tail call fastcc void @LL_APB1_GRP1_EnableClock() #24, !dbg !10304
  ret void, !dbg !10305
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB1_GRP1_EnableClock() unnamed_addr #19 !dbg !10306 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 268435456, metadata !10309, metadata !DIExpression()), !dbg !10311
  %2 = bitcast i32* %1 to i8*, !dbg !10312
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !10312
  call void @llvm.dbg.declare(metadata i32* %1, metadata !10310, metadata !DIExpression()), !dbg !10313
  %3 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10314
  %4 = or i32 %3, 268435456, !dbg !10314
  store volatile i32 %4, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10314
  %5 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10315
  %6 = and i32 %5, 268435456, !dbg !10315
  store volatile i32 %6, i32* %1, align 4, !dbg !10316
  %7 = load volatile i32, i32* %1, align 4, !dbg !10317
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !10318
  ret void, !dbg !10318
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !10319 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10321, metadata !DIExpression()), !dbg !10322
  %2 = tail call fastcc zeroext i1 @device_is_ready() #24, !dbg !10323
  br i1 %2, label %3, label %4, !dbg !10325

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #24, !dbg !10326
  br label %4, !dbg !10327

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !10322
  ret i32 %5, !dbg !10328
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready() unnamed_addr #1 !dbg !10329 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_60, metadata !10334, metadata !DIExpression()), !dbg !10335
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !10336, !srcloc !10338
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready() #24, !dbg !10339
  ret i1 %1, !dbg !10340
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !10341 {
  tail call void @__stdout_hook_install(i32 (i32)* noundef nonnull @console_out) #25, !dbg !10342
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #25, !dbg !10343
  ret void, !dbg !10344
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !10345 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10347, metadata !DIExpression()), !dbg !10348
  %2 = icmp eq i32 %0, 10, !dbg !10349
  br i1 %2, label %3, label %4, !dbg !10351

3:                                                ; preds = %1
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 13) #24, !dbg !10352
  br label %4, !dbg !10354

4:                                                ; preds = %3, %1
  %5 = trunc i32 %0 to i8, !dbg !10355
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %5) #24, !dbg !10356
  ret i32 %0, !dbg !10357
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !10358 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_60, metadata !10361, metadata !DIExpression()), !dbg !10363
  call void @llvm.dbg.value(metadata i8 %0, metadata !10362, metadata !DIExpression()), !dbg !10363
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !10364, !srcloc !10366
  tail call fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) #24, !dbg !10367
  ret void, !dbg !10368
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !10369 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_60, metadata !10371, metadata !DIExpression()), !dbg !10374
  call void @llvm.dbg.value(metadata i8 %0, metadata !10372, metadata !DIExpression()), !dbg !10374
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_60, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !10375
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !10373, metadata !DIExpression()), !dbg !10374
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !10376
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !10376
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_60, i8 noundef zeroext %0) #25, !dbg !10377
  ret void, !dbg !10378
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready() unnamed_addr #1 !dbg !10379 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_60, metadata !10381, metadata !DIExpression()), !dbg !10382
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_60) #25, !dbg !10383
  ret i1 %1, !dbg !10384
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @uart_register_input(%struct.k_fifo* nocapture noundef %0, %struct.k_fifo* nocapture noundef %1, i8 (i8*, i8)* nocapture noundef %2) local_unnamed_addr #4 !dbg !10385 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !10432, metadata !DIExpression()), !dbg !10435
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !10433, metadata !DIExpression()), !dbg !10435
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !10434, metadata !DIExpression()), !dbg !10435
  ret void, !dbg !10436
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_config(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !10437 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10439, metadata !DIExpression()), !dbg !10444
  call void @llvm.dbg.value(metadata i8 %1, metadata !10440, metadata !DIExpression()), !dbg !10444
  call void @llvm.dbg.value(metadata i32 %2, metadata !10441, metadata !DIExpression()), !dbg !10444
  %5 = bitcast i32* %4 to i8*, !dbg !10445
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !10445
  call void @llvm.dbg.value(metadata i32* %4, metadata !10443, metadata !DIExpression(DW_OP_deref)), !dbg !10444
  %6 = call fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %2, i32* noundef nonnull %4) #24, !dbg !10446
  call void @llvm.dbg.value(metadata i32 %6, metadata !10442, metadata !DIExpression()), !dbg !10444
  %7 = icmp eq i32 %6, 0, !dbg !10447
  br i1 %7, label %8, label %31, !dbg !10449

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !10442, metadata !DIExpression()), !dbg !10444
  %9 = and i32 %2, 131072, !dbg !10450
  %10 = icmp eq i32 %9, 0, !dbg !10452
  br i1 %10, label %28, label %11, !dbg !10453

11:                                               ; preds = %8
  %12 = and i32 %2, 524288, !dbg !10454
  %13 = icmp eq i32 %12, 0, !dbg !10457
  br i1 %13, label %18, label %14, !dbg !10458

14:                                               ; preds = %11
  %15 = zext i8 %1 to i32, !dbg !10459
  %16 = shl nuw i32 1, %15, !dbg !10459
  %17 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %16) #24, !dbg !10461
  br label %25, !dbg !10462

18:                                               ; preds = %11
  %19 = and i32 %2, 262144, !dbg !10463
  %20 = icmp eq i32 %19, 0, !dbg !10465
  %21 = zext i8 %1 to i32, !dbg !10444
  br i1 %20, label %25, label %22, !dbg !10466

22:                                               ; preds = %18
  %23 = shl nuw i32 1, %21, !dbg !10467
  %24 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %23) #24, !dbg !10469
  br label %25, !dbg !10470

25:                                               ; preds = %18, %14, %22
  %26 = phi i32 [ %15, %14 ], [ %21, %22 ], [ %21, %18 ], !dbg !10471
  %27 = load i32, i32* %4, align 4, !dbg !10472
  call void @llvm.dbg.value(metadata i32 %30, metadata !10443, metadata !DIExpression()), !dbg !10444
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %26, i32 noundef %27, i32 noundef 0) #24, !dbg !10473
  br label %31, !dbg !10474

28:                                               ; preds = %8
  %29 = zext i8 %1 to i32, !dbg !10471
  %30 = load i32, i32* %4, align 4, !dbg !10472
  call void @llvm.dbg.value(metadata i32 %30, metadata !10443, metadata !DIExpression()), !dbg !10444
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %29, i32 noundef %30, i32 noundef 0) #24, !dbg !10473
  call void @llvm.dbg.value(metadata i32 0, metadata !10442, metadata !DIExpression()), !dbg !10444
  br label %31

31:                                               ; preds = %25, %28, %3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !10475
  ret i32 %6, !dbg !10475
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @gpio_stm32_port_get_raw(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) #5 !dbg !10476 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10480, metadata !DIExpression()), !dbg !10485
  call void @llvm.dbg.value(metadata i32* %1, metadata !10481, metadata !DIExpression()), !dbg !10485
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10486
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !10486
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !10486
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !10482, metadata !DIExpression()), !dbg !10485
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !10487
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !10487
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !10487
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !10484, metadata !DIExpression()), !dbg !10485
  %9 = tail call fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %8) #24, !dbg !10488
  store i32 %9, i32* %1, align 4, !dbg !10489
  ret i32 0, !dbg !10490
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_masked_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #15 !dbg !10491 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10493, metadata !DIExpression()), !dbg !10499
  call void @llvm.dbg.value(metadata i32 %1, metadata !10494, metadata !DIExpression()), !dbg !10499
  call void @llvm.dbg.value(metadata i32 %2, metadata !10495, metadata !DIExpression()), !dbg !10499
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10500
  %5 = bitcast i8** %4 to %struct.gpio_stm32_config**, !dbg !10500
  %6 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %5, align 4, !dbg !10500
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %6, metadata !10496, metadata !DIExpression()), !dbg !10499
  %7 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %6, i32 0, i32 1, !dbg !10501
  %8 = bitcast i32** %7 to %struct.GPIO_TypeDef**, !dbg !10501
  %9 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %8, align 4, !dbg !10501
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %9, metadata !10497, metadata !DIExpression()), !dbg !10499
  %10 = tail call fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %9) #24, !dbg !10502
  call void @llvm.dbg.value(metadata i32 %10, metadata !10498, metadata !DIExpression()), !dbg !10499
  %11 = xor i32 %1, -1, !dbg !10503
  %12 = and i32 %10, %11, !dbg !10504
  %13 = and i32 %2, %1, !dbg !10505
  %14 = or i32 %12, %13, !dbg !10506
  tail call fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %9, i32 noundef %14) #24, !dbg !10507
  ret i32 0, !dbg !10508
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !10509 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10511, metadata !DIExpression()), !dbg !10515
  call void @llvm.dbg.value(metadata i32 %1, metadata !10512, metadata !DIExpression()), !dbg !10515
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10516
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !10516
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !10516
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !10513, metadata !DIExpression()), !dbg !10515
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !10517
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !10517
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !10517
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !10514, metadata !DIExpression()), !dbg !10515
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 6, !dbg !10518
  store volatile i32 %1, i32* %9, align 4, !dbg !10518
  ret i32 0, !dbg !10519
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_clear_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !10520 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10522, metadata !DIExpression()), !dbg !10526
  call void @llvm.dbg.value(metadata i32 %1, metadata !10523, metadata !DIExpression()), !dbg !10526
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10527
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !10527
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !10527
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !10524, metadata !DIExpression()), !dbg !10526
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !10528
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !10528
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !10528
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !10525, metadata !DIExpression()), !dbg !10526
  tail call fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %8, i32 noundef %1) #24, !dbg !10529
  ret i32 0, !dbg !10530
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_toggle_bits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !10531 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10533, metadata !DIExpression()), !dbg !10537
  call void @llvm.dbg.value(metadata i32 %1, metadata !10534, metadata !DIExpression()), !dbg !10537
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10538
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !10538
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !10538
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !10535, metadata !DIExpression()), !dbg !10537
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !10539
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !10539
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !10539
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !10536, metadata !DIExpression()), !dbg !10537
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 5, !dbg !10540
  %10 = load volatile i32, i32* %9, align 4, !dbg !10540
  %11 = xor i32 %10, %1, !dbg !10540
  store volatile i32 %11, i32* %9, align 4, !dbg !10540
  ret i32 0, !dbg !10541
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_pin_interrupt_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) #1 !dbg !10542 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10544, metadata !DIExpression()), !dbg !10554
  call void @llvm.dbg.value(metadata i8 %1, metadata !10545, metadata !DIExpression()), !dbg !10554
  call void @llvm.dbg.value(metadata i32 %2, metadata !10546, metadata !DIExpression()), !dbg !10554
  call void @llvm.dbg.value(metadata i32 %3, metadata !10547, metadata !DIExpression()), !dbg !10554
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10555
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !10555
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !10555
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !10548, metadata !DIExpression()), !dbg !10554
  call void @llvm.dbg.value(metadata i8* undef, metadata !10549, metadata !DIExpression()), !dbg !10554
  call void @llvm.dbg.value(metadata i32 0, metadata !10551, metadata !DIExpression()), !dbg !10554
  call void @llvm.dbg.value(metadata i32 0, metadata !10552, metadata !DIExpression()), !dbg !10554
  switch i32 %2, label %15 [
    i32 2097152, label %8
    i32 4194304, label %29
  ], !dbg !10556

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !10557
  %10 = tail call fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %9) #24, !dbg !10561
  %11 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !10562
  %12 = load i32, i32* %11, align 4, !dbg !10562
  %13 = icmp eq i32 %10, %12, !dbg !10563
  br i1 %13, label %14, label %29, !dbg !10564

14:                                               ; preds = %8
  tail call void @stm32_exti_disable(i32 noundef %9) #25, !dbg !10565
  tail call void @stm32_exti_unset_callback(i32 noundef %9) #25, !dbg !10567
  tail call void @stm32_exti_trigger(i32 noundef %9, i32 noundef 0) #25, !dbg !10568
  br label %29, !dbg !10569

15:                                               ; preds = %4
  %16 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10570
  %17 = load i8*, i8** %16, align 4, !dbg !10570
  call void @llvm.dbg.value(metadata i8* %17, metadata !10549, metadata !DIExpression()), !dbg !10554
  %18 = zext i8 %1 to i32, !dbg !10571
  %19 = tail call i32 @stm32_exti_set_callback(i32 noundef %18, void (i32, i8*)* noundef nonnull @gpio_stm32_isr, i8* noundef %17) #25, !dbg !10573
  %20 = icmp eq i32 %19, 0, !dbg !10574
  br i1 %20, label %21, label %29, !dbg !10575

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !10576
  %23 = load i32, i32* %22, align 4, !dbg !10576
  tail call fastcc void @gpio_stm32_enable_int(i32 noundef %23, i32 noundef %18) #24, !dbg !10577
  switch i32 %3, label %27 [
    i32 33554432, label %24
    i32 67108864, label %25
    i32 100663296, label %26
  ], !dbg !10578

24:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 2, metadata !10551, metadata !DIExpression()), !dbg !10554
  br label %27, !dbg !10579

25:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 1, metadata !10551, metadata !DIExpression()), !dbg !10554
  br label %27, !dbg !10581

26:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 3, metadata !10551, metadata !DIExpression()), !dbg !10554
  br label %27, !dbg !10582

27:                                               ; preds = %21, %26, %25, %24
  %28 = phi i32 [ 0, %21 ], [ 3, %26 ], [ 1, %25 ], [ 2, %24 ], !dbg !10554
  call void @llvm.dbg.value(metadata i32 %28, metadata !10551, metadata !DIExpression()), !dbg !10554
  tail call void @stm32_exti_trigger(i32 noundef %18, i32 noundef %28) #25, !dbg !10583
  tail call void @stm32_exti_enable(i32 noundef %18) #25, !dbg !10584
  br label %29, !dbg !10584

29:                                               ; preds = %15, %4, %8, %14, %27
  %30 = phi i32 [ 0, %14 ], [ 0, %8 ], [ 0, %27 ], [ -134, %4 ], [ -16, %15 ], !dbg !10554
  call void @llvm.dbg.value(metadata i32 %30, metadata !10552, metadata !DIExpression()), !dbg !10554
  call void @llvm.dbg.label(metadata !10553), !dbg !10585
  ret i32 %30, !dbg !10586
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal i32 @gpio_stm32_manage_callback(%struct.device* nocapture noundef readonly %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #14 !dbg !10587 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10589, metadata !DIExpression()), !dbg !10593
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !10590, metadata !DIExpression()), !dbg !10593
  call void @llvm.dbg.value(metadata i1 %2, metadata !10591, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10593
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10594
  %5 = bitcast i8** %4 to %struct.gpio_stm32_data**, !dbg !10594
  %6 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %5, align 4, !dbg !10594
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %6, metadata !10592, metadata !DIExpression()), !dbg !10593
  %7 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %6, i32 0, i32 2, !dbg !10595
  %8 = tail call fastcc i32 @gpio_manage_callback(%struct._slist* noundef nonnull %7, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #24, !dbg !10596
  ret i32 %8, !dbg !10597
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @gpio_manage_callback(%struct._slist* nocapture noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) unnamed_addr #14 !dbg !10598 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10604, metadata !DIExpression()), !dbg !10607
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !10605, metadata !DIExpression()), !dbg !10607
  call void @llvm.dbg.value(metadata i1 %2, metadata !10606, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10607
  %4 = tail call fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %0) #24, !dbg !10608
  br i1 %4, label %10, label %5, !dbg !10610

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !10611
  %7 = tail call fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %0, %struct._snode* noundef %6) #24, !dbg !10614
  %8 = or i1 %7, %2, !dbg !10615
  %9 = select i1 %8, i32 0, i32 -22, !dbg !10615
  br i1 %2, label %11, label %13, !dbg !10615

10:                                               ; preds = %3
  br i1 %2, label %11, label %13, !dbg !10616

11:                                               ; preds = %10, %5
  %12 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !10617
  tail call fastcc void @sys_slist_prepend(%struct._slist* noundef %0, %struct._snode* noundef %12) #24, !dbg !10620
  br label %13, !dbg !10621

13:                                               ; preds = %5, %11, %10
  %14 = phi i32 [ %9, %5 ], [ -22, %10 ], [ 0, %11 ], !dbg !10607
  ret i32 %14, !dbg !10622
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* nocapture noundef readonly %0) unnamed_addr #10 !dbg !10623 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10627, metadata !DIExpression()), !dbg !10628
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !10629
  %3 = icmp eq %struct._snode* %2, null, !dbg !10629
  ret i1 %3, !dbg !10629
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #14 !dbg !10630 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10634, metadata !DIExpression()), !dbg !10638
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10635, metadata !DIExpression()), !dbg !10638
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !10636, metadata !DIExpression()), !dbg !10638
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !10639
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !10637, metadata !DIExpression()), !dbg !10638
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !10636, metadata !DIExpression()), !dbg !10638
  %4 = icmp eq %struct._snode* %3, null, !dbg !10641
  br i1 %4, label %15, label %5, !dbg !10639

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !10637, metadata !DIExpression()), !dbg !10638
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !10636, metadata !DIExpression()), !dbg !10638
  %6 = icmp eq %struct._snode* %3, %1, !dbg !10643
  br i1 %6, label %9, label %11, !dbg !10646

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !10637, metadata !DIExpression()), !dbg !10638
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !10636, metadata !DIExpression()), !dbg !10638
  %8 = icmp eq %struct._snode* %13, %1, !dbg !10643
  br i1 %8, label %9, label %11, !dbg !10646, !llvm.loop !10647

9:                                                ; preds = %7, %5
  %10 = phi %struct._snode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_slist_remove(%struct._slist* noundef %0, %struct._snode* noundef %10, %struct._snode* noundef %1) #24, !dbg !10648
  br label %15, !dbg !10648

11:                                               ; preds = %5, %7
  %12 = phi %struct._snode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !10637, metadata !DIExpression()), !dbg !10638
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !10636, metadata !DIExpression()), !dbg !10638
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %12) #24, !dbg !10641
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !10637, metadata !DIExpression()), !dbg !10638
  %14 = icmp eq %struct._snode* %13, null, !dbg !10641
  br i1 %14, label %15, label %7, !dbg !10639, !llvm.loop !10647

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !10650
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_prepend(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #11 !dbg !10651 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10655, metadata !DIExpression()), !dbg !10657
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10656, metadata !DIExpression()), !dbg !10657
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !10658
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %1, %struct._snode* noundef %3) #24, !dbg !10658
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #24, !dbg !10658
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !10659
  %5 = icmp eq %struct._snode* %4, null, !dbg !10659
  br i1 %5, label %6, label %8, !dbg !10658

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !10661
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %7) #24, !dbg !10661
  br label %8, !dbg !10661

8:                                                ; preds = %6, %2
  ret void, !dbg !10658
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* nocapture noundef readonly %0) unnamed_addr #10 !dbg !10663 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10667, metadata !DIExpression()), !dbg !10668
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !10669
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10669
  ret %struct._snode* %3, !dbg !10670
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #6 !dbg !10671 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10675, metadata !DIExpression()), !dbg !10677
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10676, metadata !DIExpression()), !dbg !10677
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !10678
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !10679
  ret void, !dbg !10680
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #6 !dbg !10681 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10683, metadata !DIExpression()), !dbg !10685
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10684, metadata !DIExpression()), !dbg !10685
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !10686
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !10687
  ret void, !dbg !10688
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* nocapture noundef readonly %0) unnamed_addr #10 !dbg !10689 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10691, metadata !DIExpression()), !dbg !10692
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !10693
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10693
  ret %struct._snode* %3, !dbg !10694
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #6 !dbg !10695 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10697, metadata !DIExpression()), !dbg !10699
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10698, metadata !DIExpression()), !dbg !10699
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !10700
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !10701
  ret void, !dbg !10702
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #11 !dbg !10703 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10707, metadata !DIExpression()), !dbg !10710
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10708, metadata !DIExpression()), !dbg !10710
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !10709, metadata !DIExpression()), !dbg !10710
  %4 = icmp eq %struct._snode* %1, null, !dbg !10711
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %2) #24, !dbg !10713
  br i1 %4, label %6, label %11, !dbg !10714

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %5) #24, !dbg !10715
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !10717
  %8 = icmp eq %struct._snode* %7, %2, !dbg !10717
  br i1 %8, label %9, label %15, !dbg !10715

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !10719
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %10) #24, !dbg !10719
  br label %15, !dbg !10719

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #24, !dbg !10721
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !10723
  %13 = icmp eq %struct._snode* %12, %2, !dbg !10723
  br i1 %13, label %14, label %15, !dbg !10721

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #24, !dbg !10725
  br label %15, !dbg !10725

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %2, %struct._snode* noundef null) #24, !dbg !10714
  ret void, !dbg !10714
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef readonly %0) unnamed_addr #10 !dbg !10727 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10731, metadata !DIExpression()), !dbg !10732
  %2 = icmp eq %struct._snode* %0, null, !dbg !10733
  br i1 %2, label %5, label %3, !dbg !10733

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef nonnull %0) #24, !dbg !10733
  br label %5, !dbg !10733

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !10733
  ret %struct._snode* %6, !dbg !10733
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* nocapture noundef readonly %0) unnamed_addr #10 !dbg !10734 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10736, metadata !DIExpression()), !dbg !10737
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %0) #24, !dbg !10738
  ret %struct._snode* %2, !dbg !10738
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek(%struct._snode* nocapture noundef readonly %0) unnamed_addr #10 !dbg !10739 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10741, metadata !DIExpression()), !dbg !10742
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !10743
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10743
  ret %struct._snode* %3, !dbg !10744
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %0) unnamed_addr #1 !dbg !10745 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10747, metadata !DIExpression()), !dbg !10750
  %2 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) #24, !dbg !10751, !range !10752
  call void @llvm.dbg.value(metadata i32 %2, metadata !10748, metadata !DIExpression()), !dbg !10750
  %3 = tail call fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %2) #24, !dbg !10753
  call void @llvm.dbg.value(metadata i32 %3, metadata !10749, metadata !DIExpression()), !dbg !10750
  ret i32 %3, !dbg !10754
}

; Function Attrs: noinline nounwind optsize
define internal void @gpio_stm32_isr(i32 noundef %0, i8* nocapture noundef readonly %1) #1 !dbg !10755 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10757, metadata !DIExpression()), !dbg !10760
  call void @llvm.dbg.value(metadata i8* %1, metadata !10758, metadata !DIExpression()), !dbg !10760
  call void @llvm.dbg.value(metadata i8* %1, metadata !10759, metadata !DIExpression()), !dbg !10760
  %3 = getelementptr inbounds i8, i8* %1, i32 8, !dbg !10761
  %4 = bitcast i8* %3 to %struct._slist*, !dbg !10761
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !10762
  %6 = bitcast i8* %5 to %struct.device**, !dbg !10762
  %7 = load %struct.device*, %struct.device** %6, align 4, !dbg !10762
  %8 = shl nuw i32 1, %0, !dbg !10763
  tail call fastcc void @gpio_fire_callbacks(%struct._slist* noundef nonnull %4, %struct.device* noundef %7, i32 noundef %8) #24, !dbg !10764
  ret void, !dbg !10765
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_enable_int(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10766 {
  %3 = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %0, metadata !10770, metadata !DIExpression()), !dbg !10776
  call void @llvm.dbg.value(metadata i32 %1, metadata !10771, metadata !DIExpression()), !dbg !10776
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !10772, metadata !DIExpression()), !dbg !10776
  %4 = bitcast i64* %3 to i8*, !dbg !10777
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #23, !dbg !10777
  call void @llvm.dbg.value(metadata i64 70368744177732, metadata !10774, metadata !DIExpression()), !dbg !10776
  store i64 70368744177732, i64* %3, align 8, !dbg !10778
  call void @llvm.dbg.value(metadata i64* %3, metadata !10774, metadata !DIExpression(DW_OP_deref)), !dbg !10776
  %5 = call fastcc i32 @clock_control_on(i8* noundef nonnull %4) #24, !dbg !10779
  call void @llvm.dbg.value(metadata i32 %5, metadata !10775, metadata !DIExpression()), !dbg !10776
  %6 = icmp eq i32 %5, 0, !dbg !10780
  br i1 %6, label %7, label %8, !dbg !10782

7:                                                ; preds = %2
  call fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) #24, !dbg !10783
  br label %8, !dbg !10784

8:                                                ; preds = %2, %7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #23, !dbg !10785
  ret void, !dbg !10785
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on(i8* noundef %0) unnamed_addr #1 !dbg !10786 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !10788, metadata !DIExpression()), !dbg !10791
  call void @llvm.dbg.value(metadata i8* %0, metadata !10789, metadata !DIExpression()), !dbg !10791
  %2 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_8, i32 0, i32 2) to %struct.clock_control_driver_api**), align 4, !dbg !10792
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %2, metadata !10790, metadata !DIExpression()), !dbg !10791
  %3 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %2, i32 0, i32 0, !dbg !10793
  %4 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %3, align 4, !dbg !10793
  %5 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_8, i8* noundef %0) #25, !dbg !10794
  ret i32 %5, !dbg !10795
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10796 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10798, metadata !DIExpression()), !dbg !10801
  call void @llvm.dbg.value(metadata i32 %1, metadata !10799, metadata !DIExpression()), !dbg !10801
  %3 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %1) #24, !dbg !10802
  call void @llvm.dbg.value(metadata i32 %3, metadata !10800, metadata !DIExpression()), !dbg !10801
  tail call fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %3) #24, !dbg !10803
  ret void, !dbg !10804
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) unnamed_addr #4 !dbg !10805 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10809, metadata !DIExpression()), !dbg !10810
  %2 = sdiv i32 %0, 4, !dbg !10811
  %3 = mul i32 %2, 4
  %4 = sub i32 %0, %3
  %5 = shl nsw i32 %4, 2, !dbg !10812
  %6 = add nsw i32 %5, 16, !dbg !10813
  %7 = shl i32 15, %6, !dbg !10814
  %8 = or i32 %7, %2, !dbg !10815
  ret i32 %8, !dbg !10816
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10817 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10821, metadata !DIExpression()), !dbg !10823
  call void @llvm.dbg.value(metadata i32 %1, metadata !10822, metadata !DIExpression()), !dbg !10823
  %3 = and i32 %1, 255, !dbg !10824
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %3, !dbg !10824
  %5 = load volatile i32, i32* %4, align 4, !dbg !10824
  %6 = lshr i32 %1, 16, !dbg !10824
  %7 = xor i32 %6, -1, !dbg !10824
  %8 = and i32 %5, %7, !dbg !10824
  call void @llvm.dbg.value(metadata i32 %6, metadata !10825, metadata !DIExpression()) #23, !dbg !10829
  %9 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #28, !dbg !10831, !srcloc !10832
  call void @llvm.dbg.value(metadata i32 %9, metadata !10828, metadata !DIExpression()) #23, !dbg !10829
  call void @llvm.dbg.value(metadata i32 %9, metadata !10833, metadata !DIExpression()) #23, !dbg !10838
  %10 = tail call i32 @llvm.ctlz.i32(i32 %9, i1 false) #23, !dbg !10840, !range !8357
  %11 = shl i32 %0, %10, !dbg !10824
  %12 = or i32 %11, %8, !dbg !10824
  store volatile i32 %12, i32* %4, align 4, !dbg !10824
  ret void, !dbg !10841
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_fire_callbacks(%struct._slist* nocapture noundef readonly %0, %struct.device* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10842 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10846, metadata !DIExpression()), !dbg !10851
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !10847, metadata !DIExpression()), !dbg !10851
  call void @llvm.dbg.value(metadata i32 %2, metadata !10848, metadata !DIExpression()), !dbg !10851
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !10852
  %5 = icmp eq %struct._snode* %4, null, !dbg !10852
  br i1 %5, label %21, label %6, !dbg !10852

6:                                                ; preds = %3, %19
  %7 = phi %struct._snode* [ %8, %19 ], [ %4, %3 ]
  %8 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %7) #24, !dbg !10854
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !10850, metadata !DIExpression()), !dbg !10851
  call void @llvm.dbg.value(metadata %struct._snode* %7, metadata !10849, metadata !DIExpression()), !dbg !10851
  %9 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 2, !dbg !10855
  %10 = bitcast %struct._snode* %9 to i32*, !dbg !10855
  %11 = load i32, i32* %10, align 4, !dbg !10855
  %12 = and i32 %11, %2, !dbg !10859
  %13 = icmp eq i32 %12, 0, !dbg !10859
  br i1 %13, label %19, label %14, !dbg !10860

14:                                               ; preds = %6
  %15 = bitcast %struct._snode* %7 to %struct.gpio_callback*
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %15, metadata !10849, metadata !DIExpression()), !dbg !10851
  %16 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 1, !dbg !10861
  %17 = bitcast %struct._snode* %16 to void (%struct.device*, %struct.gpio_callback*, i32)**, !dbg !10861
  %18 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %17, align 4, !dbg !10861
  tail call void %18(%struct.device* noundef %1, %struct.gpio_callback* noundef nonnull %15, i32 noundef %12) #25, !dbg !10863
  br label %19, !dbg !10864

19:                                               ; preds = %6, %14
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !10849, metadata !DIExpression()), !dbg !10851
  %20 = icmp eq %struct._snode* %8, null, !dbg !10865
  br i1 %20, label %21, label %6, !dbg !10865

21:                                               ; preds = %19, %3
  ret void, !dbg !10866
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %0) unnamed_addr #1 !dbg !10867 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10869, metadata !DIExpression()), !dbg !10870
  %2 = and i32 %0, 255, !dbg !10871
  %3 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %2, !dbg !10871
  %4 = load volatile i32, i32* %3, align 4, !dbg !10871
  %5 = lshr i32 %0, 16, !dbg !10871
  %6 = and i32 %4, %5, !dbg !10871
  call void @llvm.dbg.value(metadata i32 %5, metadata !10825, metadata !DIExpression()) #23, !dbg !10872
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %5) #28, !dbg !10874, !srcloc !10832
  call void @llvm.dbg.value(metadata i32 %7, metadata !10828, metadata !DIExpression()) #23, !dbg !10872
  call void @llvm.dbg.value(metadata i32 %7, metadata !10833, metadata !DIExpression()) #23, !dbg !10875
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #23, !dbg !10877, !range !8357
  %9 = lshr i32 %6, %8, !dbg !10878
  ret i32 %9, !dbg !10879
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !10880 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10885, metadata !DIExpression()), !dbg !10887
  call void @llvm.dbg.value(metadata i32 %1, metadata !10886, metadata !DIExpression()), !dbg !10887
  %3 = shl i32 %1, 16, !dbg !10888
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 6, !dbg !10888
  store volatile i32 %3, i32* %4, align 4, !dbg !10888
  ret void, !dbg !10889
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #5 !dbg !10890 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10894, metadata !DIExpression()), !dbg !10895
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !10896
  %3 = load volatile i32, i32* %2, align 4, !dbg !10896
  ret i32 %3, !dbg !10897
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !10898 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10900, metadata !DIExpression()), !dbg !10902
  call void @llvm.dbg.value(metadata i32 %1, metadata !10901, metadata !DIExpression()), !dbg !10902
  %3 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !10903
  store volatile i32 %1, i32* %3, align 4, !dbg !10903
  ret void, !dbg !10904
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #5 !dbg !10905 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10907, metadata !DIExpression()), !dbg !10908
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 4, !dbg !10909
  %3 = load volatile i32, i32* %2, align 4, !dbg !10909
  ret i32 %3, !dbg !10910
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %0, i32* nocapture noundef %1) unnamed_addr #11 !dbg !10911 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10915, metadata !DIExpression()), !dbg !10917
  call void @llvm.dbg.value(metadata i32* %1, metadata !10916, metadata !DIExpression()), !dbg !10917
  %3 = and i32 %0, 131072, !dbg !10918
  %4 = icmp eq i32 %3, 0, !dbg !10920
  br i1 %4, label %22, label %5, !dbg !10921

5:                                                ; preds = %2
  store i32 16, i32* %1, align 4, !dbg !10922
  %6 = and i32 %0, 2, !dbg !10924
  %7 = icmp eq i32 %6, 0, !dbg !10926
  br i1 %7, label %11, label %8, !dbg !10927

8:                                                ; preds = %5
  %9 = and i32 %0, 4, !dbg !10928
  %10 = icmp eq i32 %9, 0, !dbg !10928
  br i1 %10, label %33, label %11, !dbg !10931

11:                                               ; preds = %5, %8
  %12 = phi i32 [ 80, %8 ], [ 16, %5 ], !dbg !10932
  store i32 %12, i32* %1, align 4, !dbg !10932
  %13 = and i32 %0, 16, !dbg !10933
  %14 = icmp eq i32 %13, 0, !dbg !10935
  br i1 %14, label %17, label %15, !dbg !10936

15:                                               ; preds = %11
  %16 = or i32 %12, 512, !dbg !10937
  br label %31, !dbg !10939

17:                                               ; preds = %11
  %18 = and i32 %0, 32, !dbg !10940
  %19 = icmp eq i32 %18, 0, !dbg !10942
  br i1 %19, label %33, label %20, !dbg !10943

20:                                               ; preds = %17
  %21 = or i32 %12, 1024, !dbg !10944
  br label %31, !dbg !10946

22:                                               ; preds = %2
  %23 = and i32 %0, 65536, !dbg !10947
  %24 = icmp eq i32 %23, 0, !dbg !10949
  br i1 %24, label %31, label %25, !dbg !10950

25:                                               ; preds = %22
  %26 = and i32 %0, 16, !dbg !10951
  %27 = icmp eq i32 %26, 0, !dbg !10954
  br i1 %27, label %28, label %31, !dbg !10955

28:                                               ; preds = %25
  %29 = shl i32 %0, 5
  %30 = and i32 %29, 1024
  br label %31

31:                                               ; preds = %22, %28, %25, %15, %20
  %32 = phi i32 [ %21, %20 ], [ %16, %15 ], [ 512, %25 ], [ %30, %28 ], [ 48, %22 ]
  store i32 %32, i32* %1, align 4, !dbg !10956
  br label %33, !dbg !10957

33:                                               ; preds = %31, %17, %8
  %34 = phi i32 [ -134, %8 ], [ 0, %17 ], [ 0, %31 ], !dbg !10917
  ret i32 %34, !dbg !10957
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_configure_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !10958 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10962, metadata !DIExpression()), !dbg !10973
  call void @llvm.dbg.value(metadata i32 %1, metadata !10963, metadata !DIExpression()), !dbg !10973
  call void @llvm.dbg.value(metadata i32 %2, metadata !10964, metadata !DIExpression()), !dbg !10973
  call void @llvm.dbg.value(metadata i32 %3, metadata !10965, metadata !DIExpression()), !dbg !10973
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10974
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !10974
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !10974
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !10966, metadata !DIExpression()), !dbg !10973
  %8 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 1, !dbg !10975
  %9 = bitcast i32** %8 to %struct.GPIO_TypeDef**, !dbg !10975
  %10 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %9, align 4, !dbg !10975
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %10, metadata !10967, metadata !DIExpression()), !dbg !10973
  %11 = tail call fastcc i32 @stm32_pinval_get(i32 noundef %1) #24, !dbg !10976
  call void @llvm.dbg.value(metadata i32 %11, metadata !10968, metadata !DIExpression()), !dbg !10973
  %12 = and i32 %2, 48, !dbg !10977
  call void @llvm.dbg.value(metadata i32 %12, metadata !10969, metadata !DIExpression()), !dbg !10973
  call void @llvm.dbg.value(metadata i32 %2, metadata !10970, metadata !DIExpression(DW_OP_constu, 64, DW_OP_and, DW_OP_stack_value)), !dbg !10973
  call void @llvm.dbg.value(metadata i32 %2, metadata !10971, metadata !DIExpression(DW_OP_constu, 384, DW_OP_and, DW_OP_stack_value)), !dbg !10973
  call void @llvm.dbg.value(metadata i32 %2, metadata !10972, metadata !DIExpression(DW_OP_constu, 1536, DW_OP_and, DW_OP_stack_value)), !dbg !10973
  %13 = lshr i32 %2, 6, !dbg !10978
  %14 = and i32 %13, 1, !dbg !10978
  tail call fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %14) #24, !dbg !10979
  %15 = lshr i32 %2, 7, !dbg !10980
  %16 = and i32 %15, 3, !dbg !10980
  tail call fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %16) #24, !dbg !10981
  %17 = lshr i32 %2, 9, !dbg !10982
  %18 = and i32 %17, 3, !dbg !10982
  tail call fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %18) #24, !dbg !10983
  %19 = icmp eq i32 %12, 32, !dbg !10984
  br i1 %19, label %20, label %24, !dbg !10986

20:                                               ; preds = %4
  %21 = icmp slt i32 %1, 8, !dbg !10987
  br i1 %21, label %22, label %23, !dbg !10990

22:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #24, !dbg !10991
  br label %24, !dbg !10993

23:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #24, !dbg !10994
  br label %24

24:                                               ; preds = %22, %23, %4
  %25 = lshr exact i32 %12, 4, !dbg !10996
  tail call fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %25) #24, !dbg !10997
  ret void, !dbg !10998
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @stm32_pinval_get(i32 noundef %0) unnamed_addr #4 !dbg !10999 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11001, metadata !DIExpression()), !dbg !11003
  %2 = shl nuw i32 1, %0, !dbg !11004
  call void @llvm.dbg.value(metadata i32 %2, metadata !11002, metadata !DIExpression()), !dbg !11003
  ret i32 %2, !dbg !11005
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !11006 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11010, metadata !DIExpression()), !dbg !11013
  call void @llvm.dbg.value(metadata i32 %1, metadata !11011, metadata !DIExpression()), !dbg !11013
  call void @llvm.dbg.value(metadata i32 %2, metadata !11012, metadata !DIExpression()), !dbg !11013
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 1, !dbg !11014
  %5 = load volatile i32, i32* %4, align 4, !dbg !11014
  %6 = xor i32 %1, -1, !dbg !11014
  %7 = and i32 %5, %6, !dbg !11014
  %8 = mul i32 %2, %1, !dbg !11014
  %9 = or i32 %7, %8, !dbg !11014
  store volatile i32 %9, i32* %4, align 4, !dbg !11014
  ret void, !dbg !11015
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11016 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11018, metadata !DIExpression()), !dbg !11021
  call void @llvm.dbg.value(metadata i32 %1, metadata !11019, metadata !DIExpression()), !dbg !11021
  call void @llvm.dbg.value(metadata i32 %2, metadata !11020, metadata !DIExpression()), !dbg !11021
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 2, !dbg !11022
  %5 = load volatile i32, i32* %4, align 4, !dbg !11022
  call void @llvm.dbg.value(metadata i32 %1, metadata !10825, metadata !DIExpression()) #23, !dbg !11023
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !11025, !srcloc !10832
  call void @llvm.dbg.value(metadata i32 %6, metadata !10828, metadata !DIExpression()) #23, !dbg !11023
  call void @llvm.dbg.value(metadata i32 %6, metadata !10833, metadata !DIExpression()) #23, !dbg !11026
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !11028, !range !8357
  %8 = shl nuw nsw i32 %7, 1, !dbg !11022
  %9 = shl i32 3, %8, !dbg !11022
  %10 = xor i32 %9, -1, !dbg !11022
  %11 = and i32 %5, %10, !dbg !11022
  call void @llvm.dbg.value(metadata i32 %1, metadata !10825, metadata !DIExpression()) #23, !dbg !11029
  call void @llvm.dbg.value(metadata i32 %6, metadata !10828, metadata !DIExpression()) #23, !dbg !11029
  call void @llvm.dbg.value(metadata i32 %6, metadata !10833, metadata !DIExpression()) #23, !dbg !11031
  %12 = shl i32 %2, %8, !dbg !11022
  %13 = or i32 %11, %12, !dbg !11022
  store volatile i32 %13, i32* %4, align 4, !dbg !11022
  ret void, !dbg !11033
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11034 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11036, metadata !DIExpression()), !dbg !11039
  call void @llvm.dbg.value(metadata i32 %1, metadata !11037, metadata !DIExpression()), !dbg !11039
  call void @llvm.dbg.value(metadata i32 %2, metadata !11038, metadata !DIExpression()), !dbg !11039
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 3, !dbg !11040
  %5 = load volatile i32, i32* %4, align 4, !dbg !11040
  call void @llvm.dbg.value(metadata i32 %1, metadata !10825, metadata !DIExpression()) #23, !dbg !11041
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !11043, !srcloc !10832
  call void @llvm.dbg.value(metadata i32 %6, metadata !10828, metadata !DIExpression()) #23, !dbg !11041
  call void @llvm.dbg.value(metadata i32 %6, metadata !10833, metadata !DIExpression()) #23, !dbg !11044
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !11046, !range !8357
  %8 = shl nuw nsw i32 %7, 1, !dbg !11040
  %9 = shl i32 3, %8, !dbg !11040
  %10 = xor i32 %9, -1, !dbg !11040
  %11 = and i32 %5, %10, !dbg !11040
  call void @llvm.dbg.value(metadata i32 %1, metadata !10825, metadata !DIExpression()) #23, !dbg !11047
  call void @llvm.dbg.value(metadata i32 %6, metadata !10828, metadata !DIExpression()) #23, !dbg !11047
  call void @llvm.dbg.value(metadata i32 %6, metadata !10833, metadata !DIExpression()) #23, !dbg !11049
  %12 = shl i32 %2, %8, !dbg !11040
  %13 = or i32 %11, %12, !dbg !11040
  store volatile i32 %13, i32* %4, align 4, !dbg !11040
  ret void, !dbg !11051
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11052 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11054, metadata !DIExpression()), !dbg !11057
  call void @llvm.dbg.value(metadata i32 %1, metadata !11055, metadata !DIExpression()), !dbg !11057
  call void @llvm.dbg.value(metadata i32 %2, metadata !11056, metadata !DIExpression()), !dbg !11057
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 0, !dbg !11058
  %5 = load volatile i32, i32* %4, align 4, !dbg !11058
  call void @llvm.dbg.value(metadata i32 %1, metadata !10825, metadata !DIExpression()) #23, !dbg !11059
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !11061, !srcloc !10832
  call void @llvm.dbg.value(metadata i32 %6, metadata !10828, metadata !DIExpression()) #23, !dbg !11059
  call void @llvm.dbg.value(metadata i32 %6, metadata !10833, metadata !DIExpression()) #23, !dbg !11062
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !11064, !range !8357
  %8 = shl nuw nsw i32 %7, 2, !dbg !11058
  %9 = shl i32 15, %8, !dbg !11058
  %10 = xor i32 %9, -1, !dbg !11058
  %11 = and i32 %5, %10, !dbg !11058
  call void @llvm.dbg.value(metadata i32 %1, metadata !10825, metadata !DIExpression()) #23, !dbg !11065
  call void @llvm.dbg.value(metadata i32 %6, metadata !10828, metadata !DIExpression()) #23, !dbg !11065
  call void @llvm.dbg.value(metadata i32 %6, metadata !10833, metadata !DIExpression()) #23, !dbg !11067
  %12 = shl i32 %2, %8, !dbg !11058
  %13 = or i32 %11, %12, !dbg !11058
  store volatile i32 %13, i32* %4, align 4, !dbg !11058
  ret void, !dbg !11069
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11070 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11072, metadata !DIExpression()), !dbg !11075
  call void @llvm.dbg.value(metadata i32 %1, metadata !11073, metadata !DIExpression()), !dbg !11075
  call void @llvm.dbg.value(metadata i32 %2, metadata !11074, metadata !DIExpression()), !dbg !11075
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 1, !dbg !11076
  %5 = load volatile i32, i32* %4, align 4, !dbg !11076
  %6 = lshr i32 %1, 8, !dbg !11076
  call void @llvm.dbg.value(metadata i32 %6, metadata !10825, metadata !DIExpression()) #23, !dbg !11077
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #28, !dbg !11079, !srcloc !10832
  call void @llvm.dbg.value(metadata i32 %7, metadata !10828, metadata !DIExpression()) #23, !dbg !11077
  call void @llvm.dbg.value(metadata i32 %7, metadata !10833, metadata !DIExpression()) #23, !dbg !11080
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #23, !dbg !11082, !range !8357
  %9 = shl nuw nsw i32 %8, 2, !dbg !11076
  %10 = shl i32 15, %9, !dbg !11076
  %11 = xor i32 %10, -1, !dbg !11076
  %12 = and i32 %5, %11, !dbg !11076
  call void @llvm.dbg.value(metadata i32 %6, metadata !10825, metadata !DIExpression()) #23, !dbg !11083
  call void @llvm.dbg.value(metadata i32 %7, metadata !10828, metadata !DIExpression()) #23, !dbg !11083
  call void @llvm.dbg.value(metadata i32 %7, metadata !10833, metadata !DIExpression()) #23, !dbg !11085
  %13 = shl i32 %2, %9, !dbg !11076
  %14 = or i32 %12, %13, !dbg !11076
  store volatile i32 %14, i32* %4, align 4, !dbg !11076
  ret void, !dbg !11087
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11088 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11090, metadata !DIExpression()), !dbg !11093
  call void @llvm.dbg.value(metadata i32 %1, metadata !11091, metadata !DIExpression()), !dbg !11093
  call void @llvm.dbg.value(metadata i32 %2, metadata !11092, metadata !DIExpression()), !dbg !11093
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 0, !dbg !11094
  %5 = load volatile i32, i32* %4, align 4, !dbg !11094
  call void @llvm.dbg.value(metadata i32 %1, metadata !10825, metadata !DIExpression()) #23, !dbg !11095
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !11097, !srcloc !10832
  call void @llvm.dbg.value(metadata i32 %6, metadata !10828, metadata !DIExpression()) #23, !dbg !11095
  call void @llvm.dbg.value(metadata i32 %6, metadata !10833, metadata !DIExpression()) #23, !dbg !11098
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !11100, !range !8357
  %8 = shl nuw nsw i32 %7, 1, !dbg !11094
  %9 = shl i32 3, %8, !dbg !11094
  %10 = xor i32 %9, -1, !dbg !11094
  %11 = and i32 %5, %10, !dbg !11094
  call void @llvm.dbg.value(metadata i32 %1, metadata !10825, metadata !DIExpression()) #23, !dbg !11101
  call void @llvm.dbg.value(metadata i32 %6, metadata !10828, metadata !DIExpression()) #23, !dbg !11101
  call void @llvm.dbg.value(metadata i32 %6, metadata !10833, metadata !DIExpression()) #23, !dbg !11103
  %12 = shl i32 %2, %8, !dbg !11094
  %13 = or i32 %11, %12, !dbg !11094
  store volatile i32 %13, i32* %4, align 4, !dbg !11094
  ret void, !dbg !11105
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_init(%struct.device* noundef %0) #1 !dbg !11106 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11108, metadata !DIExpression()), !dbg !11111
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11112
  %3 = bitcast i8** %2 to %struct.gpio_stm32_data**, !dbg !11112
  %4 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %3, align 4, !dbg !11112
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %4, metadata !11109, metadata !DIExpression()), !dbg !11111
  %5 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %4, i32 0, i32 1, !dbg !11113
  store %struct.device* %0, %struct.device** %5, align 4, !dbg !11114
  %6 = tail call fastcc zeroext i1 @device_is_ready.133() #24, !dbg !11115
  br i1 %6, label %7, label %11, !dbg !11117

7:                                                ; preds = %1
  %8 = tail call fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef nonnull %0) #24, !dbg !11118
  call void @llvm.dbg.value(metadata i32 %8, metadata !11110, metadata !DIExpression()), !dbg !11111
  %9 = icmp slt i32 %8, 0, !dbg !11119
  %10 = select i1 %9, i32 %8, i32 0, !dbg !11121
  br label %11, !dbg !11121

11:                                               ; preds = %7, %1
  %12 = phi i32 [ -19, %1 ], [ %10, %7 ], !dbg !11111
  ret i32 %12, !dbg !11122
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.133() unnamed_addr #1 !dbg !11123 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !11127, metadata !DIExpression()), !dbg !11128
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !11129, !srcloc !11131
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.134() #24, !dbg !11132
  ret i1 %1, !dbg !11133
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_clock_request(%struct.device* nocapture noundef readonly %0) unnamed_addr #1 !dbg !11134 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11138, metadata !DIExpression()), !dbg !11143
  call void @llvm.dbg.value(metadata i8 1, metadata !11139, metadata !DIExpression()), !dbg !11143
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* undef, metadata !11140, metadata !DIExpression()), !dbg !11143
  call void @llvm.dbg.value(metadata i32 0, metadata !11141, metadata !DIExpression()), !dbg !11143
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !11142, metadata !DIExpression()), !dbg !11143
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11144
  %3 = bitcast i8** %2 to %struct.gpio_stm32_config**, !dbg !11144
  %4 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %3, align 4, !dbg !11144
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %4, metadata !11140, metadata !DIExpression()), !dbg !11143
  %5 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %4, i32 0, i32 3, !dbg !11145
  %6 = bitcast %struct.vnd_sensor_config* %5 to i8*, !dbg !11148
  %7 = tail call fastcc i32 @clock_control_on(i8* noundef nonnull %6) #24, !dbg !11149
  call void @llvm.dbg.value(metadata i32 %7, metadata !11141, metadata !DIExpression()), !dbg !11143
  call void @llvm.dbg.value(metadata i32 %7, metadata !11141, metadata !DIExpression()), !dbg !11143
  ret i32 %7, !dbg !11150
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.134() unnamed_addr #1 !dbg !11151 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !11153, metadata !DIExpression()), !dbg !11154
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_8) #25, !dbg !11155
  ret i1 %1, !dbg !11156
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpio_stm32_configure(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !11157 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11161, metadata !DIExpression()), !dbg !11169
  call void @llvm.dbg.value(metadata i32 %1, metadata !11162, metadata !DIExpression()), !dbg !11169
  call void @llvm.dbg.value(metadata i32 %2, metadata !11163, metadata !DIExpression()), !dbg !11169
  call void @llvm.dbg.value(metadata i32 %3, metadata !11164, metadata !DIExpression()), !dbg !11169
  call void @llvm.dbg.value(metadata i32 0, metadata !11165, metadata !DIExpression()), !dbg !11169
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #24, !dbg !11170
  %5 = icmp eq i32 %3, 17, !dbg !11171
  br i1 %5, label %6, label %14, !dbg !11172

6:                                                ; preds = %4
  %7 = and i32 %2, 2048, !dbg !11173
  call void @llvm.dbg.value(metadata i32 %7, metadata !11166, metadata !DIExpression()), !dbg !11174
  %8 = icmp eq i32 %7, 0, !dbg !11175
  %9 = shl nuw i32 1, %1, !dbg !11177
  br i1 %8, label %12, label %10, !dbg !11178

10:                                               ; preds = %6
  %11 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %9) #24, !dbg !11179
  br label %14, !dbg !11181

12:                                               ; preds = %6
  %13 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %9) #24, !dbg !11182
  br label %14, !dbg !11185

14:                                               ; preds = %10, %12, %4
  ret i32 0, !dbg !11186
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #19 !dbg !11187 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11189, metadata !DIExpression()), !dbg !11193
  call void @llvm.dbg.value(metadata i8* %1, metadata !11190, metadata !DIExpression()), !dbg !11193
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11194
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11194
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11194
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11191, metadata !DIExpression()), !dbg !11193
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11195
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11195
  %8 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %7) #24, !dbg !11197
  %9 = icmp eq i32 %8, 0, !dbg !11197
  br i1 %9, label %12, label %10, !dbg !11198

10:                                               ; preds = %2
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11199
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %11) #24, !dbg !11201
  br label %12, !dbg !11202

12:                                               ; preds = %10, %2
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11203
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %13) #24, !dbg !11205
  %15 = icmp eq i32 %14, 0, !dbg !11205
  br i1 %15, label %19, label %16, !dbg !11206

16:                                               ; preds = %12
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11207
  %18 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %17) #24, !dbg !11208
  store i8 %18, i8* %1, align 1, !dbg !11209
  br label %19, !dbg !11210

19:                                               ; preds = %12, %16
  %20 = phi i32 [ 0, %16 ], [ -1, %12 ], !dbg !11193
  ret i32 %20, !dbg !11211
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #1 !dbg !11212 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11214, metadata !DIExpression()), !dbg !11218
  call void @llvm.dbg.value(metadata i8 %1, metadata !11215, metadata !DIExpression()), !dbg !11218
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11219
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11219
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11219
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11216, metadata !DIExpression()), !dbg !11218
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  br label %7, !dbg !11220

7:                                                ; preds = %18, %2
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11221
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #24, !dbg !11224
  %10 = icmp eq i32 %9, 0, !dbg !11224
  br i1 %10, label %18, label %11, !dbg !11225

11:                                               ; preds = %7
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !11226, !srcloc !11233
  call void @llvm.dbg.value(metadata i32 undef, metadata !11229, metadata !DIExpression()) #23, !dbg !11234
  call void @llvm.dbg.value(metadata i32 undef, metadata !11230, metadata !DIExpression()) #23, !dbg !11234
  call void @llvm.dbg.value(metadata i32 undef, metadata !11217, metadata !DIExpression()), !dbg !11218
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11235
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %13) #24, !dbg !11237
  %15 = icmp eq i32 %14, 0, !dbg !11237
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !11226
  br i1 %15, label %17, label %19, !dbg !11238

17:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %16, metadata !11229, metadata !DIExpression()) #23, !dbg !11234
  call void @llvm.dbg.value(metadata i32 %16, metadata !11217, metadata !DIExpression()), !dbg !11218
  call void @llvm.dbg.value(metadata i32 undef, metadata !11239, metadata !DIExpression()) #23, !dbg !11242
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #23, !dbg !11244, !srcloc !11245
  br label %18, !dbg !11246

18:                                               ; preds = %17, %7
  br label %7, !dbg !11221, !llvm.loop !11247

19:                                               ; preds = %11
  %20 = extractvalue { i32, i32 } %12, 0, !dbg !11226
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11249
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %21, i8 noundef zeroext %1) #24, !dbg !11250
  call void @llvm.dbg.value(metadata i32 %20, metadata !11239, metadata !DIExpression()) #23, !dbg !11251
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #23, !dbg !11253, !srcloc !11245
  ret void, !dbg !11254
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_err_check(%struct.device* nocapture noundef readonly %0) #19 !dbg !11255 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11257, metadata !DIExpression()), !dbg !11260
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11261
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11261
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11261
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11258, metadata !DIExpression()), !dbg !11260
  call void @llvm.dbg.value(metadata i32 0, metadata !11259, metadata !DIExpression()), !dbg !11260
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11262
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11262
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %6) #24, !dbg !11264
  %8 = icmp ne i32 %7, 0, !dbg !11264
  %9 = zext i1 %8 to i32, !dbg !11265
  call void @llvm.dbg.value(metadata i32 %9, metadata !11259, metadata !DIExpression()), !dbg !11260
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11266
  %11 = tail call fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %10) #24, !dbg !11268
  %12 = icmp eq i32 %11, 0, !dbg !11268
  %13 = or i32 %9, 2, !dbg !11269
  %14 = select i1 %12, i32 %9, i32 %13, !dbg !11269
  call void @llvm.dbg.value(metadata i32 %14, metadata !11259, metadata !DIExpression()), !dbg !11260
  %15 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11270
  %16 = tail call fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %15) #24, !dbg !11272
  %17 = icmp eq i32 %16, 0, !dbg !11272
  %18 = or i32 %14, 4, !dbg !11273
  %19 = select i1 %17, i32 %14, i32 %18, !dbg !11273
  call void @llvm.dbg.value(metadata i32 %19, metadata !11259, metadata !DIExpression()), !dbg !11260
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11274
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %20) #24, !dbg !11276
  %22 = icmp eq i32 %21, 0, !dbg !11276
  %23 = or i32 %19, 8, !dbg !11277
  %24 = select i1 %22, i32 %19, i32 %23, !dbg !11277
  call void @llvm.dbg.value(metadata i32 %24, metadata !11259, metadata !DIExpression()), !dbg !11260
  %25 = and i32 %24, 8, !dbg !11278
  %26 = icmp eq i32 %25, 0, !dbg !11278
  br i1 %26, label %29, label %27, !dbg !11280

27:                                               ; preds = %1
  %28 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11281
  tail call fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %28) #24, !dbg !11283
  br label %29, !dbg !11284

29:                                               ; preds = %27, %1
  %30 = and i32 %24, 1, !dbg !11285
  %31 = icmp eq i32 %30, 0, !dbg !11285
  br i1 %31, label %34, label %32, !dbg !11287

32:                                               ; preds = %29
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11288
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %33) #24, !dbg !11290
  br label %34, !dbg !11291

34:                                               ; preds = %32, %29
  %35 = and i32 %24, 2, !dbg !11292
  %36 = icmp eq i32 %35, 0, !dbg !11292
  br i1 %36, label %39, label %37, !dbg !11294

37:                                               ; preds = %34
  %38 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11295
  tail call fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %38) #24, !dbg !11297
  br label %39, !dbg !11298

39:                                               ; preds = %37, %34
  %40 = and i32 %24, 4, !dbg !11299
  %41 = icmp eq i32 %40, 0, !dbg !11299
  br i1 %41, label %44, label %42, !dbg !11301

42:                                               ; preds = %39
  %43 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11302
  tail call fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %43) #24, !dbg !11304
  br label %44, !dbg !11305

44:                                               ; preds = %42, %39
  %45 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11306
  tail call fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %45) #24, !dbg !11307
  ret i32 %24, !dbg !11308
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_configure(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef readonly %1) #1 !dbg !11309 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11311, metadata !DIExpression()), !dbg !11320
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !11312, metadata !DIExpression()), !dbg !11320
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11321
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11321
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11321
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11313, metadata !DIExpression()), !dbg !11320
  %6 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11322
  %7 = bitcast i8** %6 to %struct.uart_stm32_data**, !dbg !11322
  %8 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %7, align 4, !dbg !11322
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %8, metadata !11314, metadata !DIExpression()), !dbg !11320
  %9 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !11323
  %10 = load i8, i8* %9, align 4, !dbg !11323
  %11 = zext i8 %10 to i32, !dbg !11324
  %12 = tail call fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %11) #24, !dbg !11325
  call void @llvm.dbg.value(metadata i32 %12, metadata !11316, metadata !DIExpression()), !dbg !11320
  %13 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !11326
  %14 = load i8, i8* %13, align 1, !dbg !11326
  %15 = zext i8 %14 to i32, !dbg !11327
  %16 = tail call fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %15) #24, !dbg !11328
  call void @llvm.dbg.value(metadata i32 %16, metadata !11317, metadata !DIExpression()), !dbg !11320
  %17 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !11329
  %18 = load i8, i8* %17, align 2, !dbg !11329
  %19 = zext i8 %18 to i32, !dbg !11330
  %20 = tail call fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %19, i32 noundef %11) #24, !dbg !11331
  call void @llvm.dbg.value(metadata i32 %20, metadata !11318, metadata !DIExpression()), !dbg !11320
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !11332
  %22 = load i8, i8* %21, align 1, !dbg !11332
  %23 = zext i8 %22 to i32, !dbg !11333
  %24 = tail call fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %23) #24, !dbg !11334
  call void @llvm.dbg.value(metadata i32 %24, metadata !11319, metadata !DIExpression()), !dbg !11320
  switch i8 %10, label %25 [
    i8 3, label %69
    i8 4, label %69
    i8 0, label %27
  ], !dbg !11335

25:                                               ; preds = %2
  %26 = icmp eq i8 %18, 4, !dbg !11337
  br i1 %26, label %69, label %27, !dbg !11339

27:                                               ; preds = %2, %25
  switch i8 %14, label %28 [
    i8 0, label %69
    i8 2, label %69
  ], !dbg !11340

28:                                               ; preds = %27
  %29 = icmp ult i8 %18, 5, !dbg !11341
  br i1 %29, label %65, label %30, !dbg !11341

30:                                               ; preds = %65, %28
  %31 = icmp eq i8 %22, 0, !dbg !11343
  %32 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %32, align 4, !dbg !11320
  br i1 %31, label %38, label %34, !dbg !11345

34:                                               ; preds = %30
  %35 = ptrtoint %struct.USART_TypeDef* %33 to i32, !dbg !11346
  switch i32 %35, label %69 [
    i32 1073811456, label %36
    i32 1073759232, label %36
    i32 1073760256, label %36
    i32 1073812480, label %36
  ], !dbg !11346

36:                                               ; preds = %34, %34, %34, %34
  %37 = icmp eq i8 %22, 1, !dbg !11349
  br i1 %37, label %38, label %69, !dbg !11350

38:                                               ; preds = %30, %36
  %39 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11351
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %33) #24, !dbg !11352
  %40 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef nonnull %0) #24, !dbg !11353
  %41 = icmp eq i32 %12, %40, !dbg !11355
  br i1 %41, label %43, label %42, !dbg !11356

42:                                               ; preds = %38
  tail call fastcc void @uart_stm32_set_parity(%struct.device* noundef nonnull %0, i32 noundef %12) #24, !dbg !11357
  br label %43, !dbg !11359

43:                                               ; preds = %42, %38
  %44 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef nonnull %0) #24, !dbg !11360
  %45 = icmp eq i32 %16, %44, !dbg !11362
  br i1 %45, label %47, label %46, !dbg !11363

46:                                               ; preds = %43
  tail call fastcc void @uart_stm32_set_stopbits(%struct.device* noundef nonnull %0, i32 noundef %16) #24, !dbg !11364
  br label %47, !dbg !11366

47:                                               ; preds = %46, %43
  %48 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef nonnull %0) #24, !dbg !11367
  %49 = icmp eq i32 %20, %48, !dbg !11369
  br i1 %49, label %51, label %50, !dbg !11370

50:                                               ; preds = %47
  tail call fastcc void @uart_stm32_set_databits(%struct.device* noundef nonnull %0, i32 noundef %20) #24, !dbg !11371
  br label %51, !dbg !11373

51:                                               ; preds = %50, %47
  %52 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef nonnull %0) #24, !dbg !11374
  %53 = icmp eq i32 %24, %52, !dbg !11376
  br i1 %53, label %55, label %54, !dbg !11377

54:                                               ; preds = %51
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef %24) #24, !dbg !11378
  br label %55, !dbg !11380

55:                                               ; preds = %54, %51
  %56 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !11381
  %57 = load i32, i32* %56, align 4, !dbg !11381
  %58 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %8, i32 0, i32 0, !dbg !11383
  %59 = load i32, i32* %58, align 4, !dbg !11383
  %60 = icmp eq i32 %57, %59, !dbg !11384
  br i1 %60, label %63, label %61, !dbg !11385

61:                                               ; preds = %55
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %57) #24, !dbg !11386
  %62 = load i32, i32* %56, align 4, !dbg !11388
  store i32 %62, i32* %58, align 4, !dbg !11389
  br label %63, !dbg !11390

63:                                               ; preds = %61, %55
  %64 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %39, align 4, !dbg !11391
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %64) #24, !dbg !11392
  br label %69, !dbg !11393

65:                                               ; preds = %28
  %66 = lshr i8 23, %18, !dbg !11341
  %67 = and i8 %66, 1, !dbg !11341
  %68 = icmp eq i8 %67, 0, !dbg !11341
  br i1 %68, label %30, label %69, !dbg !11341

69:                                               ; preds = %65, %36, %34, %27, %27, %25, %2, %2, %63
  %70 = phi i32 [ 0, %63 ], [ -134, %2 ], [ -134, %2 ], [ -134, %25 ], [ -134, %27 ], [ -134, %27 ], [ -134, %34 ], [ -134, %36 ], [ -134, %65 ], !dbg !11320
  ret i32 %70, !dbg !11394
}

; Function Attrs: mustprogress nofree noinline nounwind optsize willreturn
define internal i32 @uart_stm32_config_get(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef writeonly %1) #20 !dbg !11395 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11397, metadata !DIExpression()), !dbg !11400
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !11398, metadata !DIExpression()), !dbg !11400
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11401
  %4 = bitcast i8** %3 to %struct.uart_stm32_data**, !dbg !11401
  %5 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %4, align 4, !dbg !11401
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %5, metadata !11399, metadata !DIExpression()), !dbg !11400
  %6 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %5, i32 0, i32 0, !dbg !11402
  %7 = load i32, i32* %6, align 4, !dbg !11402
  %8 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !11403
  store i32 %7, i32* %8, align 4, !dbg !11404
  %9 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #24, !dbg !11405, !range !11406
  %10 = tail call fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %9) #24, !dbg !11407
  %11 = trunc i32 %10 to i8, !dbg !11407
  %12 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !11408
  store i8 %11, i8* %12, align 4, !dbg !11409
  %13 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef %0) #24, !dbg !11410, !range !11411
  %14 = tail call fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %13) #24, !dbg !11412
  %15 = trunc i32 %14 to i8, !dbg !11412
  %16 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !11413
  store i8 %15, i8* %16, align 1, !dbg !11414
  %17 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef %0) #24, !dbg !11415
  %18 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #24, !dbg !11416, !range !11406
  %19 = tail call fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %17, i32 noundef %18) #24, !dbg !11417
  %20 = trunc i32 %19 to i8, !dbg !11417
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !11418
  store i8 %20, i8* %21, align 2, !dbg !11419
  %22 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef %0) #24, !dbg !11420, !range !11421
  %23 = tail call fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %22) #24, !dbg !11422
  %24 = trunc i32 %23 to i8, !dbg !11422
  %25 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !11423
  store i8 %24, i8* %25, align 1, !dbg !11424
  ret i32 0, !dbg !11425
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_parity(%struct.device* nocapture noundef readonly %0) unnamed_addr #5 !dbg !11426 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11430, metadata !DIExpression()), !dbg !11432
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11433
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11433
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11433
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11431, metadata !DIExpression()), !dbg !11432
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11434
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11434
  %7 = tail call fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %6) #24, !dbg !11435
  ret i32 %7, !dbg !11436
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %0) unnamed_addr #4 !dbg !11437 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11441, metadata !DIExpression()), !dbg !11442
  %2 = icmp eq i32 %0, 1024, !dbg !11443
  %3 = select i1 %2, i32 2, i32 0, !dbg !11443
  %4 = icmp eq i32 %0, 1536, !dbg !11443
  %5 = select i1 %4, i32 1, i32 %3, !dbg !11443
  ret i32 %5, !dbg !11444
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_stopbits(%struct.device* nocapture noundef readonly %0) unnamed_addr #5 !dbg !11445 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11447, metadata !DIExpression()), !dbg !11449
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11450
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11450
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11450
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11448, metadata !DIExpression()), !dbg !11449
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11451
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11451
  %7 = tail call fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %6) #24, !dbg !11452
  ret i32 %7, !dbg !11453
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %0) unnamed_addr #12 !dbg !11454 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11458, metadata !DIExpression()), !dbg !11459
  %2 = tail call i32 @llvm.fshl.i32(i32 %0, i32 %0, i32 20), !dbg !11460
  %3 = icmp ult i32 %2, 4, !dbg !11460
  br i1 %3, label %4, label %7, !dbg !11460

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.uart_stm32_ll2cfg_stopbits, i32 0, i32 %2, !dbg !11460
  %6 = load i32, i32* %5, align 4, !dbg !11460
  br label %7, !dbg !11460

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ 3, %1 ], !dbg !11461
  ret i32 %8, !dbg !11463
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_databits(%struct.device* nocapture noundef readonly %0) unnamed_addr #5 !dbg !11464 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11466, metadata !DIExpression()), !dbg !11468
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11469
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11469
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11469
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11467, metadata !DIExpression()), !dbg !11468
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11470
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11470
  %7 = tail call fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %6) #24, !dbg !11471
  ret i32 %7, !dbg !11472
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !11473 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11477, metadata !DIExpression()), !dbg !11479
  call void @llvm.dbg.value(metadata i32 %1, metadata !11478, metadata !DIExpression()), !dbg !11479
  %3 = icmp eq i32 %0, 4096, !dbg !11480
  %4 = icmp eq i32 %1, 0, !dbg !11480
  %5 = select i1 %4, i32 4, i32 3, !dbg !11480
  %6 = select i1 %4, i32 3, i32 2, !dbg !11480
  %7 = select i1 %3, i32 %5, i32 %6, !dbg !11480
  ret i32 %7, !dbg !11481
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_hwctrl(%struct.device* nocapture noundef readonly %0) unnamed_addr #5 !dbg !11482 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11484, metadata !DIExpression()), !dbg !11486
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11487
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11487
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11487
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11485, metadata !DIExpression()), !dbg !11486
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11488
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11488
  %7 = tail call fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %6) #24, !dbg !11489
  ret i32 %7, !dbg !11490
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %0) unnamed_addr #4 !dbg !11491 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11495, metadata !DIExpression()), !dbg !11496
  %2 = icmp eq i32 %0, 768, !dbg !11497
  %3 = zext i1 %2 to i32, !dbg !11496
  ret i32 %3, !dbg !11499
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !11500 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11505, metadata !DIExpression()), !dbg !11506
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !11507
  %3 = load volatile i32, i32* %2, align 4, !dbg !11507
  %4 = and i32 %3, 768, !dbg !11507
  ret i32 %4, !dbg !11508
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !11509 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11511, metadata !DIExpression()), !dbg !11512
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11513
  %3 = load volatile i32, i32* %2, align 4, !dbg !11513
  %4 = and i32 %3, 4096, !dbg !11513
  ret i32 %4, !dbg !11514
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #3

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !11515 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11517, metadata !DIExpression()), !dbg !11518
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !11519
  %3 = load volatile i32, i32* %2, align 4, !dbg !11519
  %4 = and i32 %3, 12288, !dbg !11519
  ret i32 %4, !dbg !11520
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !11521 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11523, metadata !DIExpression()), !dbg !11524
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11525
  %3 = load volatile i32, i32* %2, align 4, !dbg !11525
  %4 = and i32 %3, 1536, !dbg !11525
  ret i32 %4, !dbg !11526
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %0) unnamed_addr #4 !dbg !11527 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11531, metadata !DIExpression()), !dbg !11532
  %2 = icmp eq i32 %0, 2, !dbg !11533
  %3 = select i1 %2, i32 1024, i32 0, !dbg !11533
  %4 = icmp eq i32 %0, 1, !dbg !11533
  %5 = select i1 %4, i32 1536, i32 %3, !dbg !11533
  ret i32 %5, !dbg !11534
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %0) unnamed_addr #4 !dbg !11535 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11539, metadata !DIExpression()), !dbg !11540
  %2 = icmp ult i32 %0, 3, !dbg !11541
  br i1 %2, label %3, label %6, !dbg !11541

3:                                                ; preds = %1
  %4 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_cfg2ll_stopbits, i32 0, i32 %0, !dbg !11541
  %5 = load i32, i32* %4, align 4, !dbg !11541
  br label %6, !dbg !11541

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ 8192, %1 ], !dbg !11542
  ret i32 %7, !dbg !11544
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !11545 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11549, metadata !DIExpression()), !dbg !11551
  call void @llvm.dbg.value(metadata i32 %1, metadata !11550, metadata !DIExpression()), !dbg !11551
  %3 = icmp eq i32 %0, 4, !dbg !11552
  %4 = icmp eq i32 %1, 0, !dbg !11552
  %5 = select i1 %4, i32 0, i32 4096, !dbg !11552
  %6 = select i1 %3, i32 4096, i32 %5, !dbg !11552
  ret i32 %6, !dbg !11553
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %0) unnamed_addr #4 !dbg !11554 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11558, metadata !DIExpression()), !dbg !11559
  %2 = icmp eq i32 %0, 1, !dbg !11560
  %3 = select i1 %2, i32 768, i32 0, !dbg !11559
  ret i32 %3, !dbg !11562
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11563 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11567, metadata !DIExpression()), !dbg !11568
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11569
  %3 = load volatile i32, i32* %2, align 4, !dbg !11569
  %4 = and i32 %3, -8193, !dbg !11569
  store volatile i32 %4, i32* %2, align 4, !dbg !11569
  ret void, !dbg !11570
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_parity(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !11571 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11575, metadata !DIExpression()), !dbg !11578
  call void @llvm.dbg.value(metadata i32 %1, metadata !11576, metadata !DIExpression()), !dbg !11578
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11579
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11579
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11579
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11577, metadata !DIExpression()), !dbg !11578
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11580
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11580
  tail call fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !11581
  ret void, !dbg !11582
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_stopbits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !11583 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11585, metadata !DIExpression()), !dbg !11588
  call void @llvm.dbg.value(metadata i32 %1, metadata !11586, metadata !DIExpression()), !dbg !11588
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11589
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11589
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11589
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11587, metadata !DIExpression()), !dbg !11588
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11590
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11590
  tail call fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !11591
  ret void, !dbg !11592
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_databits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !11593 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11595, metadata !DIExpression()), !dbg !11598
  call void @llvm.dbg.value(metadata i32 %1, metadata !11596, metadata !DIExpression()), !dbg !11598
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11599
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11599
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11599
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11597, metadata !DIExpression()), !dbg !11598
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11600
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11600
  tail call fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !11601
  ret void, !dbg !11602
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_hwctrl(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !11603 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11605, metadata !DIExpression()), !dbg !11608
  call void @llvm.dbg.value(metadata i32 %1, metadata !11606, metadata !DIExpression()), !dbg !11608
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11609
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11609
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11609
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11607, metadata !DIExpression()), !dbg !11608
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11610
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11610
  tail call fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !11611
  ret void, !dbg !11612
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_stm32_set_baudrate(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !11613 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11615, metadata !DIExpression()), !dbg !11620
  call void @llvm.dbg.value(metadata i32 %1, metadata !11616, metadata !DIExpression()), !dbg !11620
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11621
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !11621
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !11621
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !11617, metadata !DIExpression()), !dbg !11620
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11622
  %8 = bitcast i8** %7 to %struct.uart_stm32_data**, !dbg !11622
  %9 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %8, align 4, !dbg !11622
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %9, metadata !11618, metadata !DIExpression()), !dbg !11620
  %10 = bitcast i32* %3 to i8*, !dbg !11623
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #23, !dbg !11623
  %11 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %9, i32 0, i32 1, !dbg !11624
  %12 = load %struct.device*, %struct.device** %11, align 4, !dbg !11624
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 1, !dbg !11628
  %14 = bitcast %struct.vnd_sensor_config** %13 to i8**, !dbg !11628
  %15 = load i8*, i8** %14, align 4, !dbg !11628
  call void @llvm.dbg.value(metadata i32* %3, metadata !11619, metadata !DIExpression(DW_OP_deref)), !dbg !11620
  %16 = call fastcc i32 @clock_control_get_rate(%struct.device* noundef %12, i8* noundef %15, i32* noundef nonnull %3) #24, !dbg !11629
  %17 = icmp slt i32 %16, 0, !dbg !11630
  br i1 %17, label %18, label %21, !dbg !11631

18:                                               ; preds = %2
  %19 = call fastcc zeroext i8 @z_log_minimal_level_to_char.137(i32 noundef 1) #24, !dbg !11632
  %20 = zext i8 %19 to i32, !dbg !11632
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.6.138, i32 0, i32 0), i32 noundef %20) #25, !dbg !11632
  br label %26, !dbg !11638

21:                                               ; preds = %2
  %22 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !11639
  %23 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !11639
  call fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %23) #24, !dbg !11640
  %24 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !11641
  %25 = load i32, i32* %3, align 4, !dbg !11642
  call void @llvm.dbg.value(metadata i32 %25, metadata !11619, metadata !DIExpression()), !dbg !11620
  call fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %24, i32 noundef %25, i32 noundef %1) #24, !dbg !11643
  br label %26, !dbg !11644

26:                                               ; preds = %21, %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #23, !dbg !11644
  ret void, !dbg !11644
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11645 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11647, metadata !DIExpression()), !dbg !11648
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11649
  %3 = load volatile i32, i32* %2, align 4, !dbg !11649
  %4 = or i32 %3, 8192, !dbg !11649
  store volatile i32 %4, i32* %2, align 4, !dbg !11649
  ret void, !dbg !11650
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_get_rate(%struct.device* noundef %0, i8* noundef %1, i32* noundef %2) unnamed_addr #1 !dbg !11651 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11653, metadata !DIExpression()), !dbg !11657
  call void @llvm.dbg.value(metadata i8* %1, metadata !11654, metadata !DIExpression()), !dbg !11657
  call void @llvm.dbg.value(metadata i32* %2, metadata !11655, metadata !DIExpression()), !dbg !11657
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !11658
  %5 = bitcast i8** %4 to %struct.clock_control_driver_api**, !dbg !11658
  %6 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %5, align 4, !dbg !11658
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %6, metadata !11656, metadata !DIExpression()), !dbg !11657
  %7 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %6, i32 0, i32 3, !dbg !11659
  %8 = load i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*, i32*)** %7, align 4, !dbg !11659
  %9 = icmp eq i32 (%struct.device*, i8*, i32*)* %8, null, !dbg !11661
  br i1 %9, label %12, label %10, !dbg !11662

10:                                               ; preds = %3
  %11 = tail call i32 %8(%struct.device* noundef nonnull %0, i8* noundef %1, i32* noundef %2) #25, !dbg !11663
  br label %12, !dbg !11664

12:                                               ; preds = %3, %10
  %13 = phi i32 [ %11, %10 ], [ -88, %3 ], !dbg !11657
  ret i32 %13, !dbg !11665
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char.137(i32 noundef %0) unnamed_addr #4 !dbg !11666 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11668, metadata !DIExpression()), !dbg !11669
  %2 = icmp eq i32 %0, 2, !dbg !11670
  %3 = select i1 %2, i8 87, i8 63, !dbg !11670
  %4 = icmp eq i32 %0, 1, !dbg !11670
  %5 = select i1 %4, i8 69, i8 %3, !dbg !11670
  ret i8 %5, !dbg !11671
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11672 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11676, metadata !DIExpression()), !dbg !11678
  call void @llvm.dbg.value(metadata i32 0, metadata !11677, metadata !DIExpression()), !dbg !11678
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11679
  %3 = load volatile i32, i32* %2, align 4, !dbg !11679
  %4 = and i32 %3, -32769, !dbg !11679
  store volatile i32 %4, i32* %2, align 4, !dbg !11679
  ret void, !dbg !11680
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !11681 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11685, metadata !DIExpression()), !dbg !11689
  call void @llvm.dbg.value(metadata i32 %1, metadata !11686, metadata !DIExpression()), !dbg !11689
  call void @llvm.dbg.value(metadata i32 0, metadata !11687, metadata !DIExpression()), !dbg !11689
  call void @llvm.dbg.value(metadata i32 %2, metadata !11688, metadata !DIExpression()), !dbg !11689
  %4 = zext i32 %1 to i64, !dbg !11690
  %5 = mul nuw nsw i64 %4, 25, !dbg !11690
  %6 = zext i32 %2 to i64, !dbg !11690
  %7 = shl nuw nsw i64 %6, 2, !dbg !11690
  %8 = udiv i64 %5, %7, !dbg !11690
  %9 = trunc i64 %8 to i32, !dbg !11690
  %10 = udiv i32 %9, 100, !dbg !11690
  %11 = shl nuw nsw i32 %10, 4, !dbg !11690
  %12 = mul i32 %10, -100, !dbg !11690
  %13 = add i32 %12, %9, !dbg !11690
  %14 = shl i32 %13, 4, !dbg !11690
  %15 = add i32 %14, 50, !dbg !11690
  %16 = udiv i32 %15, 100, !dbg !11690
  %17 = and i32 %16, 240, !dbg !11690
  %18 = add nuw nsw i32 %17, %11, !dbg !11690
  %19 = and i32 %16, 15, !dbg !11690
  %20 = and i32 %18, 65520, !dbg !11693
  %21 = or i32 %20, %19, !dbg !11693
  %22 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 2, !dbg !11694
  store volatile i32 %21, i32* %22, align 4, !dbg !11695
  ret void, !dbg !11696
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !11697 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11699, metadata !DIExpression()), !dbg !11701
  call void @llvm.dbg.value(metadata i32 %1, metadata !11700, metadata !DIExpression()), !dbg !11701
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !11702
  %4 = load volatile i32, i32* %3, align 4, !dbg !11702
  %5 = and i32 %4, -769, !dbg !11702
  %6 = or i32 %5, %1, !dbg !11702
  store volatile i32 %6, i32* %3, align 4, !dbg !11702
  ret void, !dbg !11703
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !11704 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11706, metadata !DIExpression()), !dbg !11708
  call void @llvm.dbg.value(metadata i32 %1, metadata !11707, metadata !DIExpression()), !dbg !11708
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11709
  %4 = load volatile i32, i32* %3, align 4, !dbg !11709
  %5 = and i32 %4, -4097, !dbg !11709
  %6 = or i32 %5, %1, !dbg !11709
  store volatile i32 %6, i32* %3, align 4, !dbg !11709
  ret void, !dbg !11710
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !11711 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11713, metadata !DIExpression()), !dbg !11715
  call void @llvm.dbg.value(metadata i32 %1, metadata !11714, metadata !DIExpression()), !dbg !11715
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !11716
  %4 = load volatile i32, i32* %3, align 4, !dbg !11716
  %5 = and i32 %4, -12289, !dbg !11716
  %6 = or i32 %5, %1, !dbg !11716
  store volatile i32 %6, i32* %3, align 4, !dbg !11716
  ret void, !dbg !11717
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !11718 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11720, metadata !DIExpression()), !dbg !11722
  call void @llvm.dbg.value(metadata i32 %1, metadata !11721, metadata !DIExpression()), !dbg !11722
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11723
  %4 = load volatile i32, i32* %3, align 4, !dbg !11723
  %5 = and i32 %4, -1537, !dbg !11723
  %6 = or i32 %5, %1, !dbg !11723
  store volatile i32 %6, i32* %3, align 4, !dbg !11723
  ret void, !dbg !11724
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !11725 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11727, metadata !DIExpression()), !dbg !11728
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11729
  %3 = load volatile i32, i32* %2, align 4, !dbg !11729
  %4 = lshr i32 %3, 3, !dbg !11730
  %5 = and i32 %4, 1, !dbg !11730
  ret i32 %5, !dbg !11731
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !11732 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11734, metadata !DIExpression()), !dbg !11735
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11736
  %3 = load volatile i32, i32* %2, align 4, !dbg !11736
  %4 = and i32 %3, 1, !dbg !11736
  ret i32 %4, !dbg !11737
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !11738 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11740, metadata !DIExpression()), !dbg !11741
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11742
  %3 = load volatile i32, i32* %2, align 4, !dbg !11742
  %4 = lshr i32 %3, 1, !dbg !11743
  %5 = and i32 %4, 1, !dbg !11743
  ret i32 %5, !dbg !11744
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !11745 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11747, metadata !DIExpression()), !dbg !11748
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11749
  %3 = load volatile i32, i32* %2, align 4, !dbg !11749
  %4 = lshr i32 %3, 8, !dbg !11750
  %5 = and i32 %4, 1, !dbg !11750
  ret i32 %5, !dbg !11751
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11752 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11754, metadata !DIExpression()), !dbg !11755
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11756
  store volatile i32 -257, i32* %2, align 4, !dbg !11756
  ret void, !dbg !11757
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #19 !dbg !11758 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11760, metadata !DIExpression()), !dbg !11762
  %3 = bitcast i32* %2 to i8*, !dbg !11763
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11763
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11761, metadata !DIExpression()), !dbg !11764
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11765
  %5 = load volatile i32, i32* %4, align 4, !dbg !11765
  store volatile i32 %5, i32* %2, align 4, !dbg !11766
  %6 = load volatile i32, i32* %2, align 4, !dbg !11767
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11768
  %8 = load volatile i32, i32* %7, align 4, !dbg !11768
  store volatile i32 %8, i32* %2, align 4, !dbg !11769
  %9 = load volatile i32, i32* %2, align 4, !dbg !11770
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11771
  ret void, !dbg !11771
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #19 !dbg !11772 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11774, metadata !DIExpression()), !dbg !11776
  %3 = bitcast i32* %2 to i8*, !dbg !11777
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11777
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11775, metadata !DIExpression()), !dbg !11778
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11779
  %5 = load volatile i32, i32* %4, align 4, !dbg !11779
  store volatile i32 %5, i32* %2, align 4, !dbg !11780
  %6 = load volatile i32, i32* %2, align 4, !dbg !11781
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11782
  %8 = load volatile i32, i32* %7, align 4, !dbg !11782
  store volatile i32 %8, i32* %2, align 4, !dbg !11783
  %9 = load volatile i32, i32* %2, align 4, !dbg !11784
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11785
  ret void, !dbg !11785
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #19 !dbg !11786 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11788, metadata !DIExpression()), !dbg !11790
  %3 = bitcast i32* %2 to i8*, !dbg !11791
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11791
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11789, metadata !DIExpression()), !dbg !11792
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11793
  %5 = load volatile i32, i32* %4, align 4, !dbg !11793
  store volatile i32 %5, i32* %2, align 4, !dbg !11794
  %6 = load volatile i32, i32* %2, align 4, !dbg !11795
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11796
  %8 = load volatile i32, i32* %7, align 4, !dbg !11796
  store volatile i32 %8, i32* %2, align 4, !dbg !11797
  %9 = load volatile i32, i32* %2, align 4, !dbg !11798
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11799
  ret void, !dbg !11799
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %0) unnamed_addr #19 !dbg !11800 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11802, metadata !DIExpression()), !dbg !11804
  %3 = bitcast i32* %2 to i8*, !dbg !11805
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11805
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11803, metadata !DIExpression()), !dbg !11806
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11807
  %5 = load volatile i32, i32* %4, align 4, !dbg !11807
  store volatile i32 %5, i32* %2, align 4, !dbg !11808
  %6 = load volatile i32, i32* %2, align 4, !dbg !11809
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11810
  %8 = load volatile i32, i32* %7, align 4, !dbg !11810
  store volatile i32 %8, i32* %2, align 4, !dbg !11811
  %9 = load volatile i32, i32* %2, align 4, !dbg !11812
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11813
  ret void, !dbg !11813
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !11814 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11816, metadata !DIExpression()), !dbg !11817
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11818
  %3 = load volatile i32, i32* %2, align 4, !dbg !11818
  %4 = lshr i32 %3, 7, !dbg !11819
  %5 = and i32 %4, 1, !dbg !11819
  ret i32 %5, !dbg !11820
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %0, i8 noundef zeroext %1) unnamed_addr #15 !dbg !11821 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11825, metadata !DIExpression()), !dbg !11827
  call void @llvm.dbg.value(metadata i8 %1, metadata !11826, metadata !DIExpression()), !dbg !11827
  %3 = zext i8 %1 to i32, !dbg !11828
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11829
  store volatile i32 %3, i32* %4, align 4, !dbg !11830
  ret void, !dbg !11831
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !11832 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11834, metadata !DIExpression()), !dbg !11835
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11836
  %3 = load volatile i32, i32* %2, align 4, !dbg !11836
  %4 = lshr i32 %3, 5, !dbg !11837
  %5 = and i32 %4, 1, !dbg !11837
  ret i32 %5, !dbg !11838
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !11839 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11843, metadata !DIExpression()), !dbg !11844
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11845
  %3 = load volatile i32, i32* %2, align 4, !dbg !11845
  %4 = trunc i32 %3 to i8, !dbg !11846
  ret i8 %4, !dbg !11847
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_init(%struct.device* nocapture noundef readonly %0) #1 !dbg !11848 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11850, metadata !DIExpression()), !dbg !11856
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11857
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11857
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11857
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11851, metadata !DIExpression()), !dbg !11856
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11858
  %6 = bitcast i8** %5 to %struct.uart_stm32_data**, !dbg !11858
  %7 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %6, align 4, !dbg !11858
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %7, metadata !11852, metadata !DIExpression()), !dbg !11856
  tail call fastcc void @__uart_stm32_get_clock(%struct.device* noundef %0) #24, !dbg !11859
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 1, !dbg !11860
  %9 = load %struct.device*, %struct.device** %8, align 4, !dbg !11860
  %10 = tail call fastcc zeroext i1 @device_is_ready.146(%struct.device* noundef %9) #24, !dbg !11862
  br i1 %10, label %14, label %11, !dbg !11863

11:                                               ; preds = %1
  %12 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.137(i32 noundef 1) #24, !dbg !11864
  %13 = zext i8 %12 to i32, !dbg !11864
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.7.147, i32 0, i32 0), i32 noundef %13) #25, !dbg !11864
  br label %62, !dbg !11870

14:                                               ; preds = %1
  %15 = load %struct.device*, %struct.device** %8, align 4, !dbg !11871
  %16 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 1, !dbg !11872
  %17 = bitcast %struct.vnd_sensor_config** %16 to i8**, !dbg !11872
  %18 = load i8*, i8** %17, align 4, !dbg !11872
  %19 = tail call fastcc i32 @clock_control_on.148(%struct.device* noundef %15, i8* noundef %18) #24, !dbg !11873
  call void @llvm.dbg.value(metadata i32 %19, metadata !11855, metadata !DIExpression()), !dbg !11856
  %20 = icmp eq i32 %19, 0, !dbg !11874
  br i1 %20, label %24, label %21, !dbg !11876

21:                                               ; preds = %14
  %22 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.137(i32 noundef 1) #24, !dbg !11877
  %23 = zext i8 %22 to i32, !dbg !11877
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.8.149, i32 0, i32 0), i32 noundef %23) #25, !dbg !11877
  br label %62, !dbg !11883

24:                                               ; preds = %14
  %25 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 9, !dbg !11884
  %26 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %25, align 4, !dbg !11884
  %27 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %26) #24, !dbg !11885
  call void @llvm.dbg.value(metadata i32 %27, metadata !11855, metadata !DIExpression()), !dbg !11856
  %28 = icmp slt i32 %27, 0, !dbg !11886
  br i1 %28, label %62, label %29, !dbg !11888

29:                                               ; preds = %24
  %30 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11889
  %31 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11889
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %31) #24, !dbg !11890
  %32 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11891
  tail call fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %32) #24, !dbg !11892
  %33 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 4, !dbg !11893
  %34 = load i32, i32* %33, align 4, !dbg !11893
  %35 = icmp ult i32 %34, 3, !dbg !11895
  br i1 %35, label %39, label %36, !dbg !11895

36:                                               ; preds = %29
  %37 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.137(i32 noundef 2) #24, !dbg !11896
  %38 = zext i8 %37 to i32, !dbg !11896
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.9.150, i32 0, i32 0), i32 noundef %38, i32 noundef %34) #25, !dbg !11896
  call void @llvm.dbg.value(metadata i32 0, metadata !11853, metadata !DIExpression()), !dbg !11856
  call void @llvm.dbg.value(metadata i32 0, metadata !11854, metadata !DIExpression()), !dbg !11856
  br label %44

39:                                               ; preds = %29
  %40 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_init, i32 0, i32 %34, !dbg !11895
  %41 = load i32, i32* %40, align 4, !dbg !11895
  %42 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_init.10, i32 0, i32 %34, !dbg !11895
  %43 = load i32, i32* %42, align 4, !dbg !11895
  br label %44, !dbg !11895

44:                                               ; preds = %39, %36
  %45 = phi i32 [ 0, %36 ], [ %41, %39 ], !dbg !11905
  %46 = phi i32 [ 0, %36 ], [ %43, %39 ], !dbg !11905
  call void @llvm.dbg.value(metadata i32 %46, metadata !11854, metadata !DIExpression()), !dbg !11856
  call void @llvm.dbg.value(metadata i32 %45, metadata !11853, metadata !DIExpression()), !dbg !11856
  %47 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11906
  tail call fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %47, i32 noundef %46, i32 noundef %45) #24, !dbg !11907
  %48 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 3, !dbg !11908
  %49 = load i8, i8* %48, align 4, !dbg !11908, !range !7546
  %50 = icmp eq i8 %49, 0, !dbg !11908
  br i1 %50, label %52, label %51, !dbg !11910

51:                                               ; preds = %44
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef 768) #24, !dbg !11911
  br label %52, !dbg !11913

52:                                               ; preds = %51, %44
  %53 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 0, !dbg !11914
  %54 = load i32, i32* %53, align 4, !dbg !11914
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %54) #24, !dbg !11915
  %55 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 5, !dbg !11916
  %56 = load i8, i8* %55, align 4, !dbg !11916, !range !7546
  %57 = icmp eq i8 %56, 0, !dbg !11916
  br i1 %57, label %60, label %58, !dbg !11918

58:                                               ; preds = %52
  %59 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11919
  tail call fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %59) #24, !dbg !11921
  br label %60, !dbg !11922

60:                                               ; preds = %58, %52
  %61 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11923
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %61) #24, !dbg !11924
  br label %62, !dbg !11925

62:                                               ; preds = %24, %60, %21, %11
  %63 = phi i32 [ %19, %21 ], [ 0, %60 ], [ -19, %11 ], [ %27, %24 ], !dbg !11856
  ret i32 %63, !dbg !11926
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @__uart_stm32_get_clock(%struct.device* nocapture noundef readonly %0) unnamed_addr #11 !dbg !11927 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11931, metadata !DIExpression()), !dbg !11935
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11936
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !11936
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !11936
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !11932, metadata !DIExpression()), !dbg !11935
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !11933, metadata !DIExpression()), !dbg !11935
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 1, !dbg !11937
  store %struct.device* @__device_dts_ord_8, %struct.device** %5, align 4, !dbg !11938
  ret void, !dbg !11939
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.146(%struct.device* noundef %0) unnamed_addr #1 !dbg !11940 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11944, metadata !DIExpression()), !dbg !11945
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !11946, !srcloc !11948
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.151(%struct.device* noundef %0) #24, !dbg !11949
  ret i1 %2, !dbg !11950
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on.148(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !11951 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11953, metadata !DIExpression()), !dbg !11956
  call void @llvm.dbg.value(metadata i8* %1, metadata !11954, metadata !DIExpression()), !dbg !11956
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !11957
  %4 = bitcast i8** %3 to %struct.clock_control_driver_api**, !dbg !11957
  %5 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %4, align 4, !dbg !11957
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %5, metadata !11955, metadata !DIExpression()), !dbg !11956
  %6 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %5, i32 0, i32 0, !dbg !11958
  %7 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %6, align 4, !dbg !11958
  %8 = tail call i32 %7(%struct.device* noundef %0, i8* noundef %1) #25, !dbg !11959
  ret i32 %8, !dbg !11960
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !11961 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !11965, metadata !DIExpression()), !dbg !11969
  call void @llvm.dbg.value(metadata i8 0, metadata !11966, metadata !DIExpression()), !dbg !11969
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !11970
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !11970
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !11968, metadata !DIExpression(DW_OP_deref)), !dbg !11969
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #25, !dbg !11971
  call void @llvm.dbg.value(metadata i32 %4, metadata !11967, metadata !DIExpression()), !dbg !11969
  %5 = icmp slt i32 %4, 0, !dbg !11972
  br i1 %5, label %9, label %6, !dbg !11974

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !11975
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !11968, metadata !DIExpression()), !dbg !11969
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #24, !dbg !11976
  br label %9, !dbg !11977

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !11969
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !11978
  ret i32 %10, !dbg !11978
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !11979 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11981, metadata !DIExpression()), !dbg !11985
  call void @llvm.dbg.value(metadata i32 12, metadata !11982, metadata !DIExpression()), !dbg !11985
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !11986

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !11987, metadata !DIExpression()) #23, !dbg !11993
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #23, !dbg !11996, !srcloc !11997
  call void @llvm.dbg.value(metadata i32 %4, metadata !11992, metadata !DIExpression()) #23, !dbg !11993
  %5 = or i32 %4, 12, !dbg !11998
  call void @llvm.dbg.value(metadata i32 %5, metadata !11983, metadata !DIExpression()), !dbg !11999
  call void @llvm.dbg.value(metadata i32 %5, metadata !12000, metadata !DIExpression()) #23, !dbg !12007
  call void @llvm.dbg.value(metadata i32* %2, metadata !12005, metadata !DIExpression()) #23, !dbg !12007
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #23, !dbg !12009, !srcloc !12010
  call void @llvm.dbg.value(metadata i32 %6, metadata !12006, metadata !DIExpression()) #23, !dbg !12007
  %7 = icmp eq i32 %6, 0, !dbg !11986
  br i1 %7, label %8, label %3, !dbg !11998, !llvm.loop !12011

8:                                                ; preds = %3
  ret void, !dbg !12012
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !12013 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12015, metadata !DIExpression()), !dbg !12019
  call void @llvm.dbg.value(metadata i32 %1, metadata !12016, metadata !DIExpression()), !dbg !12019
  call void @llvm.dbg.value(metadata i32 %2, metadata !12017, metadata !DIExpression()), !dbg !12019
  call void @llvm.dbg.value(metadata i32 0, metadata !12018, metadata !DIExpression()), !dbg !12019
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !12020
  %5 = load volatile i32, i32* %4, align 4, !dbg !12020
  %6 = and i32 %5, -5633, !dbg !12020
  %7 = or i32 %2, %1, !dbg !12020
  %8 = or i32 %7, %6, !dbg !12020
  store volatile i32 %8, i32* %4, align 4, !dbg !12020
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !12021
  %10 = load volatile i32, i32* %9, align 4, !dbg !12021
  %11 = and i32 %10, -12289, !dbg !12021
  store volatile i32 %11, i32* %9, align 4, !dbg !12021
  ret void, !dbg !12022
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !12023 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12025, metadata !DIExpression()), !dbg !12026
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !12027
  %3 = load volatile i32, i32* %2, align 4, !dbg !12027
  %4 = or i32 %3, 8, !dbg !12027
  store volatile i32 %4, i32* %2, align 4, !dbg !12027
  ret void, !dbg !12028
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !12029 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !12033, metadata !DIExpression()), !dbg !12036
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !12034, metadata !DIExpression()), !dbg !12036
  call void @llvm.dbg.value(metadata i32 0, metadata !12035, metadata !DIExpression()), !dbg !12036
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !12037
  %3 = load %struct.vnd_sensor_config*, %struct.vnd_sensor_config** %2, align 4, !dbg !12037
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !12038
  %5 = load i8, i8* %4, align 4, !dbg !12038
  %6 = tail call i32 @pinctrl_configure_pins(%struct.vnd_sensor_config* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #25, !dbg !12039
  ret i32 %6, !dbg !12040
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.151(%struct.device* noundef %0) unnamed_addr #1 !dbg !12041 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12043, metadata !DIExpression()), !dbg !12044
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #25, !dbg !12045
  ret i1 %2, !dbg !12046
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #15 !dbg !12047 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12049, metadata !DIExpression()), !dbg !12050
  tail call fastcc void @__NVIC_SetPriority.153() #24, !dbg !12051
  store i32 16799, i32* @last_load, align 4, !dbg !12052
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !12053
  store volatile i32 16799, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !12054
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12055
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12056
  %3 = or i32 %2, 7, !dbg !12056
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12056
  ret i32 0, !dbg !12057
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.153() unnamed_addr #15 !dbg !12058 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !12060, metadata !DIExpression()), !dbg !12062
  call void @llvm.dbg.value(metadata i32 1, metadata !12061, metadata !DIExpression()), !dbg !12062
  store volatile i8 16, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !12063
  ret void, !dbg !12066
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !12067 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12069, metadata !DIExpression()), !dbg !12071
  %2 = tail call fastcc i32 @elapsed() #24, !dbg !12072
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !12073
  %4 = load i32, i32* @cycle_count, align 4, !dbg !12074
  %5 = add i32 %4, %3, !dbg !12074
  store i32 %5, i32* @cycle_count, align 4, !dbg !12074
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !12075
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !12076
  %7 = sub i32 %5, %6, !dbg !12079
  %8 = udiv i32 %7, 16800, !dbg !12080
  call void @llvm.dbg.value(metadata i32 %8, metadata !12070, metadata !DIExpression()), !dbg !12071
  %9 = mul nuw i32 %8, 16800, !dbg !12081
  %10 = add i32 %9, %6, !dbg !12082
  store i32 %10, i32* @announced_cycles, align 4, !dbg !12082
  tail call void @sys_clock_announce(i32 noundef %8) #25, !dbg !12083
  tail call void @z_arm_int_exit() #25, !dbg !12084
  ret void, !dbg !12085
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #15 !dbg !12086 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12091
  call void @llvm.dbg.value(metadata i32 %1, metadata !12088, metadata !DIExpression()), !dbg !12092
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12093
  call void @llvm.dbg.value(metadata i32 %2, metadata !12089, metadata !DIExpression()), !dbg !12092
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12094
  call void @llvm.dbg.value(metadata i32 %3, metadata !12090, metadata !DIExpression()), !dbg !12092
  %4 = and i32 %2, 65536, !dbg !12095
  %5 = icmp ne i32 %4, 0, !dbg !12095
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !12097
  %8 = load i32, i32* @last_load, align 4, !dbg !12092
  br i1 %7, label %9, label %13, !dbg !12097

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !12098
  %11 = add i32 %10, %8, !dbg !12098
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !12098
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12100
  br label %13, !dbg !12101

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !12102
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !12103
  %16 = add i32 %14, %15, !dbg !12104
  ret i32 %16, !dbg !12105
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !12106 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12110, metadata !DIExpression()), !dbg !12123
  call void @llvm.dbg.value(metadata i1 %1, metadata !12111, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12123
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !12124
  br i1 %4, label %5, label %8, !dbg !12124

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12126
  %7 = and i32 %6, -2, !dbg !12126
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12126
  store i32 -16777216, i32* @last_load, align 4, !dbg !12128
  br label %54, !dbg !12129

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !12130
  call void @llvm.dbg.value(metadata i32 %9, metadata !12115, metadata !DIExpression()), !dbg !12123
  br i1 %3, label %18, label %10, !dbg !12131

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !12131
  call void @llvm.dbg.value(metadata i32 undef, metadata !12110, metadata !DIExpression()), !dbg !12123
  %12 = icmp slt i32 %11, 1, !dbg !12132
  br i1 %12, label %18, label %13, !dbg !12132

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 997, !dbg !12132
  %15 = select i1 %14, i32 %11, i32 997, !dbg !12132
  %16 = mul nuw nsw i32 %15, 16800, !dbg !12132
  %17 = add nuw nsw i32 %16, 16799, !dbg !12132
  br label %18, !dbg !12132

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 16799, %10 ], [ 16749599, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !12110, metadata !DIExpression()), !dbg !12123
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12133, metadata !DIExpression()) #23, !dbg !12140
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12142, !srcloc !12148
  %21 = extractvalue { i32, i32 } %20, 0, !dbg !12142
  call void @llvm.dbg.value(metadata i32 %21, metadata !12145, metadata !DIExpression()) #23, !dbg !12149
  call void @llvm.dbg.value(metadata i32 undef, metadata !12146, metadata !DIExpression()) #23, !dbg !12149
  call void @llvm.dbg.value(metadata i32 %21, metadata !12139, metadata !DIExpression()) #23, !dbg !12140
  call void @llvm.dbg.value(metadata i32 %21, metadata !12116, metadata !DIExpression()), !dbg !12123
  %22 = tail call fastcc i32 @elapsed() #24, !dbg !12150
  call void @llvm.dbg.value(metadata i32 %22, metadata !12121, metadata !DIExpression()), !dbg !12123
  %23 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12151
  call void @llvm.dbg.value(metadata i32 %23, metadata !12113, metadata !DIExpression()), !dbg !12123
  %24 = load i32, i32* @cycle_count, align 4, !dbg !12152
  %25 = add i32 %24, %22, !dbg !12152
  store i32 %25, i32* @cycle_count, align 4, !dbg !12152
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !12153
  %26 = load i32, i32* @announced_cycles, align 4, !dbg !12154
  %27 = sub i32 %25, %26, !dbg !12155
  call void @llvm.dbg.value(metadata i32 %27, metadata !12122, metadata !DIExpression()), !dbg !12123
  %28 = icmp slt i32 %27, 0, !dbg !12156
  br i1 %28, label %38, label %29, !dbg !12158

29:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 undef, metadata !12112, metadata !DIExpression()), !dbg !12123
  call void @llvm.dbg.value(metadata i32 undef, metadata !12112, metadata !DIExpression()), !dbg !12123
  %30 = add nuw i32 %19, %27, !dbg !12159
  %31 = urem i32 %30, 16800, !dbg !12161
  call void @llvm.dbg.value(metadata !DIArgList(i32 %30, i32 %31), metadata !12112, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !12123
  %32 = sub nuw nsw i32 %19, %31, !dbg !12162
  call void @llvm.dbg.value(metadata i32 %32, metadata !12112, metadata !DIExpression()), !dbg !12123
  %33 = icmp ugt i32 %32, 1050, !dbg !12163
  br i1 %33, label %34, label %36, !dbg !12163

34:                                               ; preds = %29
  call void @llvm.dbg.value(metadata i32 %32, metadata !12112, metadata !DIExpression()), !dbg !12123
  %35 = icmp ugt i32 %32, 16749600, !dbg !12164
  br i1 %35, label %38, label %36, !dbg !12166

36:                                               ; preds = %29, %34
  %37 = phi i32 [ %32, %34 ], [ 1050, %29 ]
  br label %38

38:                                               ; preds = %34, %18, %36
  %39 = phi i32 [ %37, %36 ], [ 1050, %18 ], [ 16749600, %34 ]
  store i32 %39, i32* @last_load, align 4, !dbg !12167
  %40 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12168
  call void @llvm.dbg.value(metadata i32 %40, metadata !12114, metadata !DIExpression()), !dbg !12123
  %41 = add nsw i32 %39, -1, !dbg !12169
  store volatile i32 %41, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !12170
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12171
  %42 = icmp ult i32 %23, %40, !dbg !12172
  br i1 %42, label %43, label %48, !dbg !12174

43:                                               ; preds = %38
  %44 = load i32, i32* @cycle_count, align 4, !dbg !12175
  %45 = add i32 %23, %9, !dbg !12177
  %46 = sub i32 %45, %40, !dbg !12178
  %47 = add i32 %46, %44, !dbg !12175
  br label %52, !dbg !12179

48:                                               ; preds = %38
  %49 = sub i32 %23, %40, !dbg !12180
  %50 = load i32, i32* @cycle_count, align 4, !dbg !12182
  %51 = add i32 %49, %50, !dbg !12182
  br label %52

52:                                               ; preds = %48, %43
  %53 = phi i32 [ %51, %48 ], [ %47, %43 ], !dbg !12183
  store i32 %53, i32* @cycle_count, align 4, !dbg !12183
  call void @llvm.dbg.value(metadata i32 %21, metadata !12184, metadata !DIExpression()) #23, !dbg !12190
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12189, metadata !DIExpression()) #23, !dbg !12190
  call void @llvm.dbg.value(metadata i32 %21, metadata !12192, metadata !DIExpression()) #23, !dbg !12195
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %21) #23, !dbg !12197, !srcloc !12198
  br label %54

54:                                               ; preds = %52, %5
  ret void, !dbg !12199
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !12200 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12133, metadata !DIExpression()) #23, !dbg !12204
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12206, !srcloc !12148
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !12206
  call void @llvm.dbg.value(metadata i32 %2, metadata !12145, metadata !DIExpression()) #23, !dbg !12208
  call void @llvm.dbg.value(metadata i32 undef, metadata !12146, metadata !DIExpression()) #23, !dbg !12208
  call void @llvm.dbg.value(metadata i32 %2, metadata !12139, metadata !DIExpression()) #23, !dbg !12204
  call void @llvm.dbg.value(metadata i32 %2, metadata !12202, metadata !DIExpression()), !dbg !12209
  %3 = tail call fastcc i32 @elapsed() #24, !dbg !12210
  %4 = load i32, i32* @cycle_count, align 4, !dbg !12211
  %5 = add i32 %4, %3, !dbg !12212
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !12213
  %7 = sub i32 %5, %6, !dbg !12214
  call void @llvm.dbg.value(metadata i32 %7, metadata !12203, metadata !DIExpression()), !dbg !12209
  call void @llvm.dbg.value(metadata i32 %2, metadata !12184, metadata !DIExpression()) #23, !dbg !12215
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12189, metadata !DIExpression()) #23, !dbg !12215
  call void @llvm.dbg.value(metadata i32 %2, metadata !12192, metadata !DIExpression()) #23, !dbg !12217
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !12219, !srcloc !12198
  %8 = udiv i32 %7, 16800, !dbg !12220
  ret i32 %8, !dbg !12221
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !12222 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12133, metadata !DIExpression()) #23, !dbg !12226
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12228, !srcloc !12148
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !12228
  call void @llvm.dbg.value(metadata i32 %2, metadata !12145, metadata !DIExpression()) #23, !dbg !12230
  call void @llvm.dbg.value(metadata i32 undef, metadata !12146, metadata !DIExpression()) #23, !dbg !12230
  call void @llvm.dbg.value(metadata i32 %2, metadata !12139, metadata !DIExpression()) #23, !dbg !12226
  call void @llvm.dbg.value(metadata i32 %2, metadata !12224, metadata !DIExpression()), !dbg !12231
  %3 = tail call fastcc i32 @elapsed() #24, !dbg !12232
  %4 = load i32, i32* @cycle_count, align 4, !dbg !12233
  %5 = add i32 %4, %3, !dbg !12234
  call void @llvm.dbg.value(metadata i32 %5, metadata !12225, metadata !DIExpression()), !dbg !12231
  call void @llvm.dbg.value(metadata i32 %2, metadata !12184, metadata !DIExpression()) #23, !dbg !12235
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12189, metadata !DIExpression()) #23, !dbg !12235
  call void @llvm.dbg.value(metadata i32 %2, metadata !12192, metadata !DIExpression()) #23, !dbg !12237
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !12239, !srcloc !12198
  ret i32 %5, !dbg !12240
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #15 !dbg !12241 {
  %1 = load i32, i32* @last_load, align 4, !dbg !12242
  %2 = icmp eq i32 %1, -16777216, !dbg !12244
  br i1 %2, label %3, label %6, !dbg !12245

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12246
  %5 = or i32 %4, 1, !dbg !12246
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12246
  br label %6, !dbg !12248

6:                                                ; preds = %3, %0
  ret void, !dbg !12249
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #15 !dbg !12250 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12251
  %2 = and i32 %1, -2, !dbg !12251
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12251
  ret void, !dbg !12252
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #14 !dbg !12253 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !12279, metadata !DIExpression()), !dbg !12282
  call void @llvm.dbg.value(metadata i8 %1, metadata !12280, metadata !DIExpression()), !dbg !12282
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !12281, metadata !DIExpression()), !dbg !12282
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !12283
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !12283
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !12282
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !12284
  %8 = load i8, i8* %6, align 4, !dbg !12285
  %9 = zext i8 %8 to i32, !dbg !12286
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !12286
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !12287
  br i1 %11, label %18, label %24, !dbg !12288

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !12282
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !12284
  %14 = load i8, i8* %6, align 4, !dbg !12285
  %15 = zext i8 %14 to i32, !dbg !12286
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !12286
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !12287
  br i1 %17, label %18, label %24, !dbg !12288, !llvm.loop !12289

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !12291
  %21 = load i8, i8* %20, align 1, !dbg !12291
  %22 = icmp eq i8 %21, %1, !dbg !12294
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !12295
  br i1 %22, label %24, label %12, !dbg !12296

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !12282
  ret i32 %25, !dbg !12297
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pinctrl_configure_pins(%struct.vnd_sensor_config* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12298 {
  call void @llvm.dbg.value(metadata %struct.vnd_sensor_config* %0, metadata !12309, metadata !DIExpression()), !dbg !12325
  call void @llvm.dbg.value(metadata i8 %1, metadata !12310, metadata !DIExpression()), !dbg !12325
  call void @llvm.dbg.value(metadata i32 %2, metadata !12311, metadata !DIExpression()), !dbg !12325
  call void @llvm.dbg.value(metadata i32 0, metadata !12314, metadata !DIExpression()), !dbg !12325
  call void @llvm.dbg.value(metadata i32 0, metadata !12315, metadata !DIExpression()), !dbg !12325
  call void @llvm.dbg.value(metadata i8 0, metadata !12316, metadata !DIExpression()), !dbg !12326
  %4 = icmp eq i8 %1, 0, !dbg !12327
  br i1 %4, label %35, label %5, !dbg !12328

5:                                                ; preds = %3
  %6 = zext i8 %1 to i32, !dbg !12327
  br label %9, !dbg !12328

7:                                                ; preds = %28
  call void @llvm.dbg.value(metadata i32 %34, metadata !12316, metadata !DIExpression()), !dbg !12326
  call void @llvm.dbg.value(metadata i32 %29, metadata !12314, metadata !DIExpression()), !dbg !12325
  %8 = icmp eq i32 %34, %6, !dbg !12327
  br i1 %8, label %35, label %9, !dbg !12328, !llvm.loop !12329

9:                                                ; preds = %5, %7
  %10 = phi i32 [ 0, %5 ], [ %34, %7 ]
  %11 = phi i32 [ 0, %5 ], [ %29, %7 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !12316, metadata !DIExpression()), !dbg !12326
  call void @llvm.dbg.value(metadata i32 %11, metadata !12314, metadata !DIExpression()), !dbg !12325
  %12 = getelementptr inbounds %struct.vnd_sensor_config, %struct.vnd_sensor_config* %0, i32 %10, i32 0, !dbg !12331
  %13 = load i32, i32* %12, align 4, !dbg !12331
  call void @llvm.dbg.value(metadata i32 %13, metadata !12313, metadata !DIExpression()), !dbg !12325
  %14 = and i32 %13, 31, !dbg !12332
  %15 = icmp ult i32 %14, 16, !dbg !12333
  br i1 %15, label %16, label %20, !dbg !12334

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct.vnd_sensor_config, %struct.vnd_sensor_config* %0, i32 %10, i32 1, !dbg !12335
  %18 = load i32, i32* %17, align 4, !dbg !12335
  %19 = or i32 %18, 32, !dbg !12337
  call void @llvm.dbg.value(metadata i32 %19, metadata !12314, metadata !DIExpression()), !dbg !12325
  br label %28, !dbg !12338

20:                                               ; preds = %9
  switch i32 %14, label %27 [
    i32 16, label %28
    i32 17, label %21
  ], !dbg !12339

21:                                               ; preds = %20
  %22 = getelementptr inbounds %struct.vnd_sensor_config, %struct.vnd_sensor_config* %0, i32 %10, i32 1, !dbg !12340
  %23 = load i32, i32* %22, align 4, !dbg !12340
  call void @llvm.dbg.value(metadata i32 %23, metadata !12318, metadata !DIExpression(DW_OP_constu, 2048, DW_OP_and, DW_OP_stack_value)), !dbg !12341
  %24 = lshr i32 %23, 7, !dbg !12342
  %25 = and i32 %24, 16, !dbg !12342
  %26 = or i32 %25, %23, !dbg !12342
  call void @llvm.dbg.value(metadata i32 %26, metadata !12314, metadata !DIExpression()), !dbg !12325
  br label %28, !dbg !12343

27:                                               ; preds = %20
  br label %28, !dbg !12344

28:                                               ; preds = %20, %27, %21, %16
  %29 = phi i32 [ %19, %16 ], [ %26, %21 ], [ 48, %20 ], [ %11, %27 ], !dbg !12325
  call void @llvm.dbg.value(metadata i32 %29, metadata !12314, metadata !DIExpression()), !dbg !12325
  %30 = lshr i32 %13, 5, !dbg !12344
  %31 = and i32 %30, 255, !dbg !12344
  call void @llvm.dbg.value(metadata i32 %31, metadata !12312, metadata !DIExpression()), !dbg !12325
  %32 = tail call fastcc i32 @stm32_pin_configure(i32 noundef %31, i32 noundef %29, i32 noundef %14) #24, !dbg !12345
  call void @llvm.dbg.value(metadata i32 %32, metadata !12315, metadata !DIExpression()), !dbg !12325
  %33 = icmp slt i32 %32, 0, !dbg !12346
  %34 = add nuw nsw i32 %10, 1, !dbg !12348
  call void @llvm.dbg.value(metadata i32 %34, metadata !12316, metadata !DIExpression()), !dbg !12326
  br i1 %33, label %35, label %7, !dbg !12349

35:                                               ; preds = %7, %28, %3
  %36 = phi i32 [ 0, %3 ], [ %32, %28 ], [ 0, %7 ]
  ret i32 %36, !dbg !12350
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @stm32_pin_configure(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !12351 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12355, metadata !DIExpression()), !dbg !12359
  call void @llvm.dbg.value(metadata i32 %1, metadata !12356, metadata !DIExpression()), !dbg !12359
  call void @llvm.dbg.value(metadata i32 %2, metadata !12357, metadata !DIExpression()), !dbg !12359
  %4 = icmp ugt i32 %0, 175, !dbg !12360
  br i1 %4, label %13, label %5, !dbg !12362

5:                                                ; preds = %3
  %6 = lshr i32 %0, 4, !dbg !12363
  %7 = getelementptr inbounds [11 x %struct.device*], [11 x %struct.device*]* @gpio_ports, i32 0, i32 %6, !dbg !12364
  %8 = load %struct.device*, %struct.device** %7, align 4, !dbg !12364
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !12358, metadata !DIExpression()), !dbg !12359
  %9 = tail call fastcc zeroext i1 @device_is_ready.158(%struct.device* noundef %8) #24, !dbg !12365
  br i1 %9, label %10, label %13, !dbg !12367

10:                                               ; preds = %5
  %11 = and i32 %0, 15, !dbg !12368
  %12 = tail call i32 @gpio_stm32_configure(%struct.device* noundef %8, i32 noundef %11, i32 noundef %1, i32 noundef %2) #25, !dbg !12369
  br label %13, !dbg !12370

13:                                               ; preds = %5, %3, %10
  %14 = phi i32 [ %12, %10 ], [ -22, %3 ], [ -19, %5 ], !dbg !12359
  ret i32 %14, !dbg !12371
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.158(%struct.device* noundef %0) unnamed_addr #1 !dbg !12372 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12376, metadata !DIExpression()), !dbg !12377
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !12378, !srcloc !12380
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.159(%struct.device* noundef %0) #24, !dbg !12381
  ret i1 %2, !dbg !12382
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.159(%struct.device* noundef %0) unnamed_addr #1 !dbg !12383 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12385, metadata !DIExpression()), !dbg !12386
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #25, !dbg !12387
  ret i1 %2, !dbg !12388
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SystemInit() local_unnamed_addr #4 !dbg !12389 {
  ret void, !dbg !12390
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #5 !dbg !12391 {
  call void @llvm.dbg.value(metadata i32 0, metadata !12393, metadata !DIExpression()), !dbg !12398
  call void @llvm.dbg.value(metadata i32 0, metadata !12394, metadata !DIExpression()), !dbg !12398
  call void @llvm.dbg.value(metadata i32 2, metadata !12395, metadata !DIExpression()), !dbg !12398
  call void @llvm.dbg.value(metadata i32 0, metadata !12396, metadata !DIExpression()), !dbg !12398
  call void @llvm.dbg.value(metadata i32 2, metadata !12397, metadata !DIExpression()), !dbg !12398
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12399
  %2 = and i32 %1, 12, !dbg !12400
  call void @llvm.dbg.value(metadata i32 %2, metadata !12393, metadata !DIExpression()), !dbg !12398
  switch i32 %2, label %21 [
    i32 8, label %4
    i32 4, label %3
  ], !dbg !12401

3:                                                ; preds = %0
  br label %21, !dbg !12402

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12404
  call void @llvm.dbg.value(metadata i32 %5, metadata !12396, metadata !DIExpression(DW_OP_constu, 22, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !12398
  %6 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12405
  %7 = and i32 %6, 63, !dbg !12406
  call void @llvm.dbg.value(metadata i32 %7, metadata !12397, metadata !DIExpression()), !dbg !12398
  %8 = and i32 %5, 4194304, !dbg !12407
  %9 = icmp eq i32 %8, 0, !dbg !12407
  %10 = select i1 %9, i32 16000000, i32 24000000
  %11 = udiv i32 %10, %7, !dbg !12409
  %12 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12409
  %13 = lshr i32 %12, 6, !dbg !12409
  %14 = and i32 %13, 511, !dbg !12409
  %15 = mul i32 %14, %11, !dbg !12409
  call void @llvm.dbg.value(metadata i32 %15, metadata !12394, metadata !DIExpression()), !dbg !12398
  %16 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12410
  %17 = lshr i32 %16, 15, !dbg !12411
  %18 = and i32 %17, 6, !dbg !12411
  %19 = add nuw nsw i32 %18, 2, !dbg !12411
  call void @llvm.dbg.value(metadata i32 %19, metadata !12395, metadata !DIExpression()), !dbg !12398
  %20 = udiv i32 %15, %19, !dbg !12412
  br label %21, !dbg !12413

21:                                               ; preds = %0, %4, %3
  %22 = phi i32 [ %20, %4 ], [ 24000000, %3 ], [ 16000000, %0 ]
  store i32 %22, i32* @SystemCoreClock, align 4, !dbg !12414
  %23 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12415
  %24 = lshr i32 %23, 4, !dbg !12416
  %25 = and i32 %24, 15, !dbg !12416
  %26 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %25, !dbg !12417
  %27 = load i8, i8* %26, align 1, !dbg !12417
  %28 = zext i8 %27 to i32, !dbg !12417
  call void @llvm.dbg.value(metadata i32 %28, metadata !12393, metadata !DIExpression()), !dbg !12398
  %29 = lshr i32 %22, %28, !dbg !12418
  store i32 %29, i32* @SystemCoreClock, align 4, !dbg !12418
  ret void, !dbg !12419
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_DeInit() local_unnamed_addr #1 !dbg !12420 {
  ret i32 0, !dbg !12425
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_OscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !12426 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !12452, metadata !DIExpression()), !dbg !12463
  %3 = icmp eq %struct.RCC_OscInitTypeDef* %0, null, !dbg !12464
  br i1 %3, label %311, label %4, !dbg !12466

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !12467
  %6 = load i32, i32* %5, align 4, !dbg !12467
  %7 = and i32 %6, 1, !dbg !12469
  %8 = icmp eq i32 %7, 0, !dbg !12470
  br i1 %8, label %66, label %9, !dbg !12471

9:                                                ; preds = %4
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12472
  %11 = and i32 %10, 12, !dbg !12472
  %12 = icmp eq i32 %11, 4, !dbg !12475
  br i1 %12, label %21, label %13, !dbg !12476

13:                                               ; preds = %9
  %14 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12477
  %15 = and i32 %14, 12, !dbg !12477
  %16 = icmp eq i32 %15, 8, !dbg !12478
  br i1 %16, label %17, label %29, !dbg !12479

17:                                               ; preds = %13
  %18 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12480
  %19 = and i32 %18, 4194304, !dbg !12481
  %20 = icmp eq i32 %19, 0, !dbg !12482
  br i1 %20, label %29, label %21, !dbg !12483

21:                                               ; preds = %17, %9
  %22 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12484
  %23 = and i32 %22, 131072, !dbg !12484
  %24 = icmp eq i32 %23, 0, !dbg !12484
  br i1 %24, label %66, label %25, !dbg !12487

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12488
  %27 = load i32, i32* %26, align 4, !dbg !12488
  %28 = icmp eq i32 %27, 0, !dbg !12489
  br i1 %28, label %311, label %66, !dbg !12490

29:                                               ; preds = %13, %17
  %30 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12491
  %31 = load i32, i32* %30, align 4, !dbg !12491
  switch i32 %31, label %40 [
    i32 65536, label %32
    i32 327680, label %35
  ], !dbg !12495

32:                                               ; preds = %29
  %33 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12496
  %34 = or i32 %33, 65536, !dbg !12496
  br label %45, !dbg !12496

35:                                               ; preds = %29
  %36 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12498
  %37 = or i32 %36, 262144, !dbg !12498
  store volatile i32 %37, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12498
  %38 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12498
  %39 = or i32 %38, 65536, !dbg !12498
  br label %45, !dbg !12498

40:                                               ; preds = %29
  %41 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12501
  %42 = and i32 %41, -65537, !dbg !12501
  store volatile i32 %42, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12501
  %43 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12501
  %44 = and i32 %43, -262145, !dbg !12501
  br label %45

45:                                               ; preds = %35, %40, %32
  %46 = phi i32 [ %39, %35 ], [ %44, %40 ], [ %34, %32 ]
  store volatile i32 %46, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12503
  %47 = load i32, i32* %30, align 4, !dbg !12504
  %48 = icmp eq i32 %47, 0, !dbg !12506
  %49 = tail call i32 @HAL_GetTick() #25, !dbg !12507
  call void @llvm.dbg.value(metadata i32 %49, metadata !12453, metadata !DIExpression()), !dbg !12463
  call void @llvm.dbg.value(metadata i32 %49, metadata !12453, metadata !DIExpression()), !dbg !12463
  br i1 %48, label %58, label %50, !dbg !12508

50:                                               ; preds = %45, %54
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12509
  %52 = and i32 %51, 131072, !dbg !12511
  %53 = icmp eq i32 %52, 0, !dbg !12511
  br i1 %53, label %54, label %66, !dbg !12512

54:                                               ; preds = %50
  %55 = tail call i32 @HAL_GetTick() #25, !dbg !12513
  %56 = sub i32 %55, %49, !dbg !12516
  %57 = icmp ugt i32 %56, 100, !dbg !12517
  br i1 %57, label %311, label %50, !dbg !12518, !llvm.loop !12519

58:                                               ; preds = %45, %62
  %59 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12521
  %60 = and i32 %59, 131072, !dbg !12521
  %61 = icmp eq i32 %60, 0, !dbg !12521
  br i1 %61, label %66, label %62, !dbg !12523

62:                                               ; preds = %58
  %63 = tail call i32 @HAL_GetTick() #25, !dbg !12524
  %64 = sub i32 %63, %49, !dbg !12527
  %65 = icmp ugt i32 %64, 100, !dbg !12528
  br i1 %65, label %311, label %58, !dbg !12529, !llvm.loop !12530

66:                                               ; preds = %50, %58, %25, %21, %4
  %67 = load i32, i32* %5, align 4, !dbg !12532
  %68 = and i32 %67, 2, !dbg !12534
  %69 = icmp eq i32 %68, 0, !dbg !12535
  br i1 %69, label %121, label %70, !dbg !12536

70:                                               ; preds = %66
  %71 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12537
  %72 = and i32 %71, 12, !dbg !12537
  %73 = icmp eq i32 %72, 0, !dbg !12540
  br i1 %73, label %82, label %74, !dbg !12541

74:                                               ; preds = %70
  %75 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12542
  %76 = and i32 %75, 12, !dbg !12542
  %77 = icmp eq i32 %76, 8, !dbg !12543
  br i1 %77, label %78, label %90, !dbg !12544

78:                                               ; preds = %74
  %79 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12545
  %80 = and i32 %79, 4194304, !dbg !12546
  %81 = icmp eq i32 %80, 0, !dbg !12547
  br i1 %81, label %82, label %90, !dbg !12548

82:                                               ; preds = %78, %70
  %83 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12549
  %84 = and i32 %83, 2, !dbg !12549
  %85 = icmp eq i32 %84, 0, !dbg !12549
  br i1 %85, label %114, label %86, !dbg !12552

86:                                               ; preds = %82
  %87 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !12553
  %88 = load i32, i32* %87, align 4, !dbg !12553
  %89 = icmp eq i32 %88, 1, !dbg !12554
  br i1 %89, label %114, label %311, !dbg !12555

90:                                               ; preds = %78, %74
  %91 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !12556
  %92 = load i32, i32* %91, align 4, !dbg !12556
  %93 = icmp eq i32 %92, 0, !dbg !12559
  br i1 %93, label %104, label %94, !dbg !12560

94:                                               ; preds = %90
  store volatile i32 1, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !12561
  %95 = tail call i32 @HAL_GetTick() #25, !dbg !12563
  call void @llvm.dbg.value(metadata i32 %95, metadata !12453, metadata !DIExpression()), !dbg !12463
  br label %96, !dbg !12564

96:                                               ; preds = %100, %94
  %97 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12565
  %98 = and i32 %97, 2, !dbg !12566
  %99 = icmp eq i32 %98, 0, !dbg !12566
  br i1 %99, label %100, label %114, !dbg !12564

100:                                              ; preds = %96
  %101 = tail call i32 @HAL_GetTick() #25, !dbg !12567
  %102 = sub i32 %101, %95, !dbg !12570
  %103 = icmp ugt i32 %102, 2, !dbg !12571
  br i1 %103, label %311, label %96, !dbg !12572, !llvm.loop !12573

104:                                              ; preds = %90
  store volatile i32 0, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !12575
  %105 = tail call i32 @HAL_GetTick() #25, !dbg !12577
  call void @llvm.dbg.value(metadata i32 %105, metadata !12453, metadata !DIExpression()), !dbg !12463
  br label %106, !dbg !12578

106:                                              ; preds = %110, %104
  %107 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12579
  %108 = and i32 %107, 2, !dbg !12579
  %109 = icmp eq i32 %108, 0, !dbg !12579
  br i1 %109, label %121, label %110, !dbg !12578

110:                                              ; preds = %106
  %111 = tail call i32 @HAL_GetTick() #25, !dbg !12580
  %112 = sub i32 %111, %105, !dbg !12583
  %113 = icmp ugt i32 %112, 2, !dbg !12584
  br i1 %113, label %311, label %106, !dbg !12585, !llvm.loop !12586

114:                                              ; preds = %96, %82, %86
  %115 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12588
  %116 = and i32 %115, -249, !dbg !12588
  %117 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !12588
  %118 = load i32, i32* %117, align 4, !dbg !12588
  %119 = shl i32 %118, 3, !dbg !12588
  %120 = or i32 %119, %116, !dbg !12588
  store volatile i32 %120, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12588
  br label %121, !dbg !12589

121:                                              ; preds = %106, %114, %66
  %122 = load i32, i32* %5, align 4, !dbg !12589
  %123 = and i32 %122, 8, !dbg !12591
  %124 = icmp eq i32 %123, 0, !dbg !12592
  br i1 %124, label %149, label %125, !dbg !12593

125:                                              ; preds = %121
  %126 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !12594
  %127 = load i32, i32* %126, align 4, !dbg !12594
  %128 = icmp eq i32 %127, 0, !dbg !12597
  br i1 %128, label %139, label %129, !dbg !12598

129:                                              ; preds = %125
  store volatile i32 1, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !12599
  %130 = tail call i32 @HAL_GetTick() #25, !dbg !12601
  call void @llvm.dbg.value(metadata i32 %130, metadata !12453, metadata !DIExpression()), !dbg !12463
  br label %131, !dbg !12602

131:                                              ; preds = %135, %129
  %132 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !12603
  %133 = and i32 %132, 2, !dbg !12604
  %134 = icmp eq i32 %133, 0, !dbg !12604
  br i1 %134, label %135, label %149, !dbg !12602

135:                                              ; preds = %131
  %136 = tail call i32 @HAL_GetTick() #25, !dbg !12605
  %137 = sub i32 %136, %130, !dbg !12608
  %138 = icmp ugt i32 %137, 2, !dbg !12609
  br i1 %138, label %311, label %131, !dbg !12610, !llvm.loop !12611

139:                                              ; preds = %125
  store volatile i32 0, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !12613
  %140 = tail call i32 @HAL_GetTick() #25, !dbg !12615
  call void @llvm.dbg.value(metadata i32 %140, metadata !12453, metadata !DIExpression()), !dbg !12463
  br label %141, !dbg !12616

141:                                              ; preds = %145, %139
  %142 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !12617
  %143 = and i32 %142, 2, !dbg !12617
  %144 = icmp eq i32 %143, 0, !dbg !12617
  br i1 %144, label %149, label %145, !dbg !12616

145:                                              ; preds = %141
  %146 = tail call i32 @HAL_GetTick() #25, !dbg !12618
  %147 = sub i32 %146, %140, !dbg !12621
  %148 = icmp ugt i32 %147, 2, !dbg !12622
  br i1 %148, label %311, label %141, !dbg !12623, !llvm.loop !12624

149:                                              ; preds = %131, %141, %121
  %150 = load i32, i32* %5, align 4, !dbg !12626
  %151 = and i32 %150, 4, !dbg !12627
  %152 = icmp eq i32 %151, 0, !dbg !12628
  br i1 %152, label %221, label %153, !dbg !12629

153:                                              ; preds = %149
  call void @llvm.dbg.value(metadata i32 0, metadata !12455, metadata !DIExpression()), !dbg !12630
  %154 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12631
  %155 = and i32 %154, 268435456, !dbg !12631
  %156 = icmp eq i32 %155, 0, !dbg !12631
  br i1 %156, label %157, label %164, !dbg !12632

157:                                              ; preds = %153
  %158 = bitcast i32* %2 to i8*, !dbg !12633
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %158), !dbg !12633
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12459, metadata !DIExpression()), !dbg !12633
  store volatile i32 0, i32* %2, align 4, !dbg !12633
  %159 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12633
  %160 = or i32 %159, 268435456, !dbg !12633
  store volatile i32 %160, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12633
  %161 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12633
  %162 = and i32 %161, 268435456, !dbg !12633
  store volatile i32 %162, i32* %2, align 4, !dbg !12633
  %163 = load volatile i32, i32* %2, align 4, !dbg !12633
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %158), !dbg !12634
  call void @llvm.dbg.value(metadata i32 1, metadata !12455, metadata !DIExpression()), !dbg !12630
  br label %164, !dbg !12635

164:                                              ; preds = %157, %153
  call void @llvm.dbg.value(metadata i32 undef, metadata !12455, metadata !DIExpression()), !dbg !12630
  %165 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12636
  %166 = and i32 %165, 256, !dbg !12636
  %167 = icmp eq i32 %166, 0, !dbg !12636
  br i1 %167, label %168, label %180, !dbg !12638

168:                                              ; preds = %164
  %169 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12639
  %170 = or i32 %169, 256, !dbg !12639
  store volatile i32 %170, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12639
  %171 = tail call i32 @HAL_GetTick() #25, !dbg !12641
  call void @llvm.dbg.value(metadata i32 %171, metadata !12453, metadata !DIExpression()), !dbg !12463
  br label %172, !dbg !12642

172:                                              ; preds = %176, %168
  %173 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12643
  %174 = and i32 %173, 256, !dbg !12643
  %175 = icmp eq i32 %174, 0, !dbg !12643
  br i1 %175, label %176, label %180, !dbg !12642

176:                                              ; preds = %172
  %177 = tail call i32 @HAL_GetTick() #25, !dbg !12644
  %178 = sub i32 %177, %171, !dbg !12647
  %179 = icmp ugt i32 %178, 2, !dbg !12648
  br i1 %179, label %311, label %172, !dbg !12649, !llvm.loop !12650

180:                                              ; preds = %172, %164
  %181 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !12652
  %182 = load i32, i32* %181, align 4, !dbg !12652
  switch i32 %182, label %191 [
    i32 1, label %183
    i32 5, label %186
  ], !dbg !12655

183:                                              ; preds = %180
  %184 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12656
  %185 = or i32 %184, 1, !dbg !12656
  br label %196, !dbg !12656

186:                                              ; preds = %180
  %187 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12658
  %188 = or i32 %187, 4, !dbg !12658
  store volatile i32 %188, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12658
  %189 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12658
  %190 = or i32 %189, 1, !dbg !12658
  br label %196, !dbg !12658

191:                                              ; preds = %180
  %192 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12661
  %193 = and i32 %192, -2, !dbg !12661
  store volatile i32 %193, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12661
  %194 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12661
  %195 = and i32 %194, -5, !dbg !12661
  br label %196

196:                                              ; preds = %186, %191, %183
  %197 = phi i32 [ %190, %186 ], [ %195, %191 ], [ %185, %183 ]
  store volatile i32 %197, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12663
  %198 = load i32, i32* %181, align 4, !dbg !12664
  %199 = icmp eq i32 %198, 0, !dbg !12666
  %200 = tail call i32 @HAL_GetTick() #25, !dbg !12667
  call void @llvm.dbg.value(metadata i32 %200, metadata !12453, metadata !DIExpression()), !dbg !12463
  call void @llvm.dbg.value(metadata i32 %200, metadata !12453, metadata !DIExpression()), !dbg !12463
  br i1 %199, label %209, label %201, !dbg !12668

201:                                              ; preds = %196, %205
  %202 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12669
  %203 = and i32 %202, 2, !dbg !12671
  %204 = icmp eq i32 %203, 0, !dbg !12671
  br i1 %204, label %205, label %217, !dbg !12672

205:                                              ; preds = %201
  %206 = tail call i32 @HAL_GetTick() #25, !dbg !12673
  %207 = sub i32 %206, %200, !dbg !12676
  %208 = icmp ugt i32 %207, 5000, !dbg !12677
  br i1 %208, label %311, label %201, !dbg !12678, !llvm.loop !12679

209:                                              ; preds = %196, %213
  %210 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12681
  %211 = and i32 %210, 2, !dbg !12681
  %212 = icmp eq i32 %211, 0, !dbg !12681
  br i1 %212, label %217, label %213, !dbg !12683

213:                                              ; preds = %209
  %214 = tail call i32 @HAL_GetTick() #25, !dbg !12684
  %215 = sub i32 %214, %200, !dbg !12687
  %216 = icmp ugt i32 %215, 5000, !dbg !12688
  br i1 %216, label %311, label %209, !dbg !12689, !llvm.loop !12690

217:                                              ; preds = %201, %209
  br i1 %156, label %218, label %221, !dbg !12692

218:                                              ; preds = %217
  %219 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12693
  %220 = and i32 %219, -268435457, !dbg !12693
  store volatile i32 %220, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12693
  br label %221, !dbg !12696

221:                                              ; preds = %218, %217, %149
  %222 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !12697
  %223 = load i32, i32* %222, align 4, !dbg !12697
  %224 = icmp eq i32 %223, 0, !dbg !12699
  br i1 %224, label %310, label %225, !dbg !12700

225:                                              ; preds = %221
  %226 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12701
  %227 = and i32 %226, 12, !dbg !12701
  %228 = icmp eq i32 %227, 8, !dbg !12704
  br i1 %228, label %277, label %229, !dbg !12705

229:                                              ; preds = %225
  %230 = icmp eq i32 %223, 2, !dbg !12706
  store volatile i32 0, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !12709
  %231 = tail call i32 @HAL_GetTick() #25, !dbg !12709
  call void @llvm.dbg.value(metadata i32 %231, metadata !12453, metadata !DIExpression()), !dbg !12463
  call void @llvm.dbg.value(metadata i32 %231, metadata !12453, metadata !DIExpression()), !dbg !12463
  br i1 %230, label %232, label %269, !dbg !12710

232:                                              ; preds = %229, %236
  %233 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12711
  %234 = and i32 %233, 33554432, !dbg !12711
  %235 = icmp eq i32 %234, 0, !dbg !12711
  br i1 %235, label %240, label %236, !dbg !12713

236:                                              ; preds = %232
  %237 = tail call i32 @HAL_GetTick() #25, !dbg !12714
  %238 = sub i32 %237, %231, !dbg !12717
  %239 = icmp ugt i32 %238, 2, !dbg !12718
  br i1 %239, label %311, label %232, !dbg !12719, !llvm.loop !12720

240:                                              ; preds = %232
  %241 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !12722
  %242 = load i32, i32* %241, align 4, !dbg !12722
  %243 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !12722
  %244 = load i32, i32* %243, align 4, !dbg !12722
  %245 = or i32 %244, %242, !dbg !12722
  %246 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !12722
  %247 = load i32, i32* %246, align 4, !dbg !12722
  %248 = shl i32 %247, 6, !dbg !12722
  %249 = or i32 %245, %248, !dbg !12722
  %250 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !12722
  %251 = load i32, i32* %250, align 4, !dbg !12722
  %252 = shl i32 %251, 15, !dbg !12722
  %253 = add i32 %252, -65536, !dbg !12722
  %254 = and i32 %253, -65536, !dbg !12722
  %255 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !12722
  %256 = load i32, i32* %255, align 4, !dbg !12722
  %257 = shl i32 %256, 24, !dbg !12722
  %258 = or i32 %249, %257, !dbg !12722
  %259 = or i32 %258, %254, !dbg !12722
  store volatile i32 %259, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12722
  store volatile i32 1, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !12723
  %260 = tail call i32 @HAL_GetTick() #25, !dbg !12724
  call void @llvm.dbg.value(metadata i32 %260, metadata !12453, metadata !DIExpression()), !dbg !12463
  br label %261, !dbg !12725

261:                                              ; preds = %265, %240
  %262 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12726
  %263 = and i32 %262, 33554432, !dbg !12727
  %264 = icmp eq i32 %263, 0, !dbg !12727
  br i1 %264, label %265, label %310, !dbg !12725

265:                                              ; preds = %261
  %266 = tail call i32 @HAL_GetTick() #25, !dbg !12728
  %267 = sub i32 %266, %260, !dbg !12731
  %268 = icmp ugt i32 %267, 2, !dbg !12732
  br i1 %268, label %311, label %261, !dbg !12733, !llvm.loop !12734

269:                                              ; preds = %229, %273
  %270 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12736
  %271 = and i32 %270, 33554432, !dbg !12736
  %272 = icmp eq i32 %271, 0, !dbg !12736
  br i1 %272, label %310, label %273, !dbg !12738

273:                                              ; preds = %269
  %274 = tail call i32 @HAL_GetTick() #25, !dbg !12739
  %275 = sub i32 %274, %231, !dbg !12742
  %276 = icmp ugt i32 %275, 2, !dbg !12743
  br i1 %276, label %311, label %269, !dbg !12744, !llvm.loop !12745

277:                                              ; preds = %225
  %278 = icmp eq i32 %223, 1, !dbg !12747
  br i1 %278, label %311, label %279, !dbg !12750

279:                                              ; preds = %277
  %280 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12751
  call void @llvm.dbg.value(metadata i32 %280, metadata !12454, metadata !DIExpression()), !dbg !12463
  %281 = and i32 %280, 4194304, !dbg !12753
  %282 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !12755
  %283 = load i32, i32* %282, align 4, !dbg !12755
  %284 = icmp eq i32 %281, %283, !dbg !12756
  br i1 %284, label %285, label %311, !dbg !12757

285:                                              ; preds = %279
  %286 = and i32 %280, 63, !dbg !12758
  %287 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !12759
  %288 = load i32, i32* %287, align 4, !dbg !12759
  %289 = icmp eq i32 %286, %288, !dbg !12760
  br i1 %289, label %290, label %311, !dbg !12761

290:                                              ; preds = %285
  %291 = and i32 %280, 32704, !dbg !12762
  %292 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !12763
  %293 = load i32, i32* %292, align 4, !dbg !12763
  %294 = shl i32 %293, 6, !dbg !12764
  %295 = icmp eq i32 %291, %294, !dbg !12765
  br i1 %295, label %296, label %311, !dbg !12766

296:                                              ; preds = %290
  %297 = and i32 %280, 196608, !dbg !12767
  %298 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !12768
  %299 = load i32, i32* %298, align 4, !dbg !12768
  %300 = shl i32 %299, 15, !dbg !12769
  %301 = add i32 %300, -65536, !dbg !12769
  %302 = and i32 %301, -65536, !dbg !12769
  %303 = icmp eq i32 %297, %302, !dbg !12770
  br i1 %303, label %304, label %311, !dbg !12771

304:                                              ; preds = %296
  %305 = and i32 %280, 251658240, !dbg !12772
  %306 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !12773
  %307 = load i32, i32* %306, align 4, !dbg !12773
  %308 = shl i32 %307, 24, !dbg !12774
  %309 = icmp eq i32 %305, %308, !dbg !12775
  br i1 %309, label %310, label %311, !dbg !12776

310:                                              ; preds = %269, %261, %304, %221
  br label %311, !dbg !12777

311:                                              ; preds = %54, %62, %100, %110, %135, %145, %176, %205, %213, %273, %236, %265, %279, %285, %290, %296, %304, %277, %86, %25, %1, %310
  %312 = phi i32 [ 0, %310 ], [ 1, %1 ], [ 1, %25 ], [ 1, %86 ], [ 1, %277 ], [ 1, %304 ], [ 1, %296 ], [ 1, %290 ], [ 1, %285 ], [ 1, %279 ], [ 3, %265 ], [ 3, %236 ], [ 3, %273 ], [ 3, %213 ], [ 3, %205 ], [ 3, %176 ], [ 3, %145 ], [ 3, %135 ], [ 3, %110 ], [ 3, %100 ], [ 3, %62 ], [ 3, %54 ], !dbg !12463
  ret i32 %312, !dbg !12778
}

; Function Attrs: optsize
declare !dbg !12779 dso_local i32 @HAL_GetTick() local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_ClockConfig(%struct.rtio_spsc* noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !12781 {
  call void @llvm.dbg.value(metadata %struct.rtio_spsc* %0, metadata !12794, metadata !DIExpression()), !dbg !12797
  call void @llvm.dbg.value(metadata i32 %1, metadata !12795, metadata !DIExpression()), !dbg !12797
  %3 = icmp eq %struct.rtio_spsc* %0, null, !dbg !12798
  br i1 %3, label %115, label %4, !dbg !12800

4:                                                ; preds = %2
  %5 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12801
  %6 = and i32 %5, 15, !dbg !12801
  %7 = icmp ult i32 %6, %1, !dbg !12803
  br i1 %7, label %8, label %13, !dbg !12804

8:                                                ; preds = %4
  %9 = trunc i32 %1 to i8, !dbg !12805
  store volatile i8 %9, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !12805
  %10 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12807
  %11 = and i32 %10, 15, !dbg !12807
  %12 = icmp eq i32 %11, %1, !dbg !12809
  br i1 %12, label %13, label %115, !dbg !12810

13:                                               ; preds = %8, %4
  %14 = getelementptr inbounds %struct.rtio_spsc, %struct.rtio_spsc* %0, i32 0, i32 0, !dbg !12811
  %15 = load i32, i32* %14, align 4, !dbg !12811
  %16 = and i32 %15, 2, !dbg !12813
  %17 = icmp eq i32 %16, 0, !dbg !12814
  br i1 %17, label %39, label %18, !dbg !12815

18:                                               ; preds = %13
  %19 = and i32 %15, 4, !dbg !12816
  %20 = icmp eq i32 %19, 0, !dbg !12819
  br i1 %20, label %25, label %21, !dbg !12820

21:                                               ; preds = %18
  %22 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12821
  %23 = or i32 %22, 7168, !dbg !12821
  store volatile i32 %23, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12821
  %24 = load i32, i32* %14, align 4, !dbg !12823
  br label %25, !dbg !12825

25:                                               ; preds = %21, %18
  %26 = phi i32 [ %24, %21 ], [ %15, %18 ], !dbg !12823
  %27 = and i32 %26, 8, !dbg !12826
  %28 = icmp eq i32 %27, 0, !dbg !12827
  br i1 %28, label %32, label %29, !dbg !12828

29:                                               ; preds = %25
  %30 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12829
  %31 = or i32 %30, 57344, !dbg !12829
  store volatile i32 %31, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12829
  br label %32, !dbg !12831

32:                                               ; preds = %29, %25
  %33 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12832
  %34 = and i32 %33, -241, !dbg !12832
  %35 = getelementptr inbounds %struct.rtio_spsc, %struct.rtio_spsc* %0, i32 0, i32 2, !dbg !12832
  %36 = load i32, i32* %35, align 4, !dbg !12832
  %37 = or i32 %34, %36, !dbg !12832
  store volatile i32 %37, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12832
  %38 = load i32, i32* %14, align 4, !dbg !12833
  br label %39, !dbg !12835

39:                                               ; preds = %32, %13
  %40 = phi i32 [ %38, %32 ], [ %15, %13 ], !dbg !12833
  %41 = and i32 %40, 1, !dbg !12836
  %42 = icmp eq i32 %41, 0, !dbg !12837
  br i1 %42, label %73, label %43, !dbg !12838

43:                                               ; preds = %39
  %44 = getelementptr inbounds %struct.rtio_spsc, %struct.rtio_spsc* %0, i32 0, i32 1, !dbg !12839
  %45 = load i32, i32* %44, align 4, !dbg !12839
  switch i32 %45, label %54 [
    i32 1, label %46
    i32 2, label %50
    i32 3, label %50
  ], !dbg !12842

46:                                               ; preds = %43
  %47 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12843
  %48 = and i32 %47, 131072, !dbg !12846
  %49 = icmp eq i32 %48, 0, !dbg !12846
  br i1 %49, label %115, label %58, !dbg !12847

50:                                               ; preds = %43, %43
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12848
  %52 = and i32 %51, 33554432, !dbg !12852
  %53 = icmp eq i32 %52, 0, !dbg !12852
  br i1 %53, label %115, label %58, !dbg !12853

54:                                               ; preds = %43
  %55 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12854
  %56 = and i32 %55, 2, !dbg !12857
  %57 = icmp eq i32 %56, 0, !dbg !12857
  br i1 %57, label %115, label %58, !dbg !12858

58:                                               ; preds = %50, %54, %46
  %59 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12859
  %60 = and i32 %59, -4, !dbg !12859
  %61 = or i32 %60, %45, !dbg !12859
  store volatile i32 %61, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12859
  %62 = tail call i32 @HAL_GetTick() #25, !dbg !12860
  call void @llvm.dbg.value(metadata i32 %62, metadata !12796, metadata !DIExpression()), !dbg !12797
  br label %63, !dbg !12861

63:                                               ; preds = %69, %58
  %64 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12862
  %65 = and i32 %64, 12, !dbg !12862
  %66 = load i32, i32* %44, align 4, !dbg !12863
  %67 = shl i32 %66, 2, !dbg !12864
  %68 = icmp eq i32 %65, %67, !dbg !12865
  br i1 %68, label %73, label %69, !dbg !12861

69:                                               ; preds = %63
  %70 = tail call i32 @HAL_GetTick() #25, !dbg !12866
  %71 = sub i32 %70, %62, !dbg !12869
  %72 = icmp ugt i32 %71, 5000, !dbg !12870
  br i1 %72, label %115, label %63, !dbg !12871, !llvm.loop !12872

73:                                               ; preds = %63, %39
  %74 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12874
  %75 = and i32 %74, 15, !dbg !12874
  %76 = icmp ugt i32 %75, %1, !dbg !12876
  br i1 %76, label %77, label %82, !dbg !12877

77:                                               ; preds = %73
  %78 = trunc i32 %1 to i8, !dbg !12878
  store volatile i8 %78, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !12878
  %79 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12880
  %80 = and i32 %79, 15, !dbg !12880
  %81 = icmp eq i32 %80, %1, !dbg !12882
  br i1 %81, label %82, label %115, !dbg !12883

82:                                               ; preds = %77, %73
  %83 = load i32, i32* %14, align 4, !dbg !12884
  %84 = and i32 %83, 4, !dbg !12886
  %85 = icmp eq i32 %84, 0, !dbg !12887
  br i1 %85, label %93, label %86, !dbg !12888

86:                                               ; preds = %82
  %87 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12889
  %88 = and i32 %87, -7169, !dbg !12889
  %89 = getelementptr inbounds %struct.rtio_spsc, %struct.rtio_spsc* %0, i32 0, i32 3, !dbg !12889
  %90 = load i32, i32* %89, align 4, !dbg !12889
  %91 = or i32 %88, %90, !dbg !12889
  store volatile i32 %91, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12889
  %92 = load i32, i32* %14, align 4, !dbg !12891
  br label %93, !dbg !12893

93:                                               ; preds = %86, %82
  %94 = phi i32 [ %92, %86 ], [ %83, %82 ], !dbg !12891
  %95 = and i32 %94, 8, !dbg !12894
  %96 = icmp eq i32 %95, 0, !dbg !12895
  br i1 %96, label %104, label %97, !dbg !12896

97:                                               ; preds = %93
  %98 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12897
  %99 = and i32 %98, -57345, !dbg !12897
  %100 = getelementptr inbounds %struct.rtio_spsc, %struct.rtio_spsc* %0, i32 0, i32 4, !dbg !12897
  %101 = load i32, i32* %100, align 4, !dbg !12897
  %102 = shl i32 %101, 3, !dbg !12897
  %103 = or i32 %102, %99, !dbg !12897
  store volatile i32 %103, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12897
  br label %104, !dbg !12899

104:                                              ; preds = %97, %93
  %105 = tail call i32 @HAL_RCC_GetSysClockFreq() #24, !dbg !12900
  %106 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12901
  %107 = lshr i32 %106, 4, !dbg !12902
  %108 = and i32 %107, 15, !dbg !12902
  %109 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %108, !dbg !12903
  %110 = load i8, i8* %109, align 1, !dbg !12903
  %111 = zext i8 %110 to i32, !dbg !12903
  %112 = lshr i32 %105, %111, !dbg !12904
  store i32 %112, i32* @SystemCoreClock, align 4, !dbg !12905
  %113 = load i32, i32* @uwTickPrio, align 4, !dbg !12906
  %114 = tail call i32 @HAL_InitTick(i32 noundef %113) #25, !dbg !12907
  br label %115, !dbg !12908

115:                                              ; preds = %69, %77, %54, %50, %46, %8, %2, %104
  %116 = phi i32 [ 0, %104 ], [ 1, %2 ], [ 1, %8 ], [ 1, %46 ], [ 1, %50 ], [ 1, %54 ], [ 1, %77 ], [ 3, %69 ], !dbg !12797
  ret i32 %116, !dbg !12909
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_GetSysClockFreq() local_unnamed_addr #1 !dbg !12910 {
  call void @llvm.dbg.value(metadata i32 0, metadata !12912, metadata !DIExpression()), !dbg !12916
  call void @llvm.dbg.value(metadata i32 0, metadata !12913, metadata !DIExpression()), !dbg !12916
  call void @llvm.dbg.value(metadata i32 0, metadata !12914, metadata !DIExpression()), !dbg !12916
  call void @llvm.dbg.value(metadata i32 0, metadata !12915, metadata !DIExpression()), !dbg !12916
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12917
  %2 = and i32 %1, 12, !dbg !12918
  switch i32 %2, label %24 [
    i32 8, label %4
    i32 4, label %3
  ], !dbg !12919

3:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 24000000, metadata !12915, metadata !DIExpression()), !dbg !12916
  br label %24, !dbg !12920

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12923
  %6 = and i32 %5, 63, !dbg !12925
  call void @llvm.dbg.value(metadata i32 %6, metadata !12912, metadata !DIExpression()), !dbg !12916
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12926
  %8 = and i32 %7, 4194304, !dbg !12926
  %9 = icmp eq i32 %8, 0, !dbg !12928
  %10 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12929
  %11 = lshr i32 %10, 6, !dbg !12929
  %12 = and i32 %11, 511, !dbg !12929
  %13 = zext i32 %12 to i64, !dbg !12929
  %14 = select i1 %9, i64 16000000, i64 24000000
  %15 = mul nuw nsw i64 %14, %13, !dbg !12929
  %16 = zext i32 %6 to i64, !dbg !12929
  %17 = udiv i64 %15, %16, !dbg !12929
  %18 = trunc i64 %17 to i32, !dbg !12929
  call void @llvm.dbg.value(metadata i32 %18, metadata !12913, metadata !DIExpression()), !dbg !12916
  %19 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12930
  %20 = lshr i32 %19, 15, !dbg !12931
  %21 = and i32 %20, 6, !dbg !12931
  %22 = add nuw nsw i32 %21, 2, !dbg !12931
  call void @llvm.dbg.value(metadata i32 %22, metadata !12914, metadata !DIExpression()), !dbg !12916
  %23 = udiv i32 %18, %22, !dbg !12932
  call void @llvm.dbg.value(metadata i32 %23, metadata !12915, metadata !DIExpression()), !dbg !12916
  br label %24, !dbg !12933

24:                                               ; preds = %0, %4, %3
  %25 = phi i32 [ %23, %4 ], [ 24000000, %3 ], [ 16000000, %0 ], !dbg !12934
  call void @llvm.dbg.value(metadata i32 %25, metadata !12915, metadata !DIExpression()), !dbg !12916
  ret i32 %25, !dbg !12935
}

; Function Attrs: optsize
declare !dbg !12936 dso_local i32 @HAL_InitTick(i32 noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_MCOConfig(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12939 {
  %4 = alloca %struct.rtio_spsc, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !12943, metadata !DIExpression()), !dbg !12963
  call void @llvm.dbg.value(metadata i32 %1, metadata !12944, metadata !DIExpression()), !dbg !12963
  call void @llvm.dbg.value(metadata i32 %2, metadata !12945, metadata !DIExpression()), !dbg !12963
  %7 = bitcast %struct.rtio_spsc* %4 to i8*, !dbg !12964
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %7) #23, !dbg !12964
  call void @llvm.dbg.declare(metadata %struct.rtio_spsc* %4, metadata !12946, metadata !DIExpression()), !dbg !12965
  %8 = icmp eq i32 %0, 0, !dbg !12966
  br i1 %8, label %9, label %23, !dbg !12967

9:                                                ; preds = %3
  %10 = bitcast i32* %5 to i8*, !dbg !12968
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10), !dbg !12968
  call void @llvm.dbg.declare(metadata i32* %5, metadata !12956, metadata !DIExpression()), !dbg !12968
  store volatile i32 0, i32* %5, align 4, !dbg !12968
  %11 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12968
  %12 = or i32 %11, 1, !dbg !12968
  store volatile i32 %12, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12968
  %13 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12968
  %14 = and i32 %13, 1, !dbg !12968
  store volatile i32 %14, i32* %5, align 4, !dbg !12968
  %15 = load volatile i32, i32* %5, align 4, !dbg !12968
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10), !dbg !12969
  %16 = getelementptr inbounds %struct.rtio_spsc, %struct.rtio_spsc* %4, i32 0, i32 0, !dbg !12970
  store i32 256, i32* %16, align 4, !dbg !12971
  %17 = getelementptr inbounds %struct.rtio_spsc, %struct.rtio_spsc* %4, i32 0, i32 1, !dbg !12972
  store i32 2, i32* %17, align 4, !dbg !12973
  %18 = getelementptr inbounds %struct.rtio_spsc, %struct.rtio_spsc* %4, i32 0, i32 3, !dbg !12974
  store i32 3, i32* %18, align 4, !dbg !12975
  %19 = getelementptr inbounds %struct.rtio_spsc, %struct.rtio_spsc* %4, i32 0, i32 2, !dbg !12976
  store i32 0, i32* %19, align 4, !dbg !12977
  %20 = getelementptr inbounds %struct.rtio_spsc, %struct.rtio_spsc* %4, i32 0, i32 4, !dbg !12978
  store i32 0, i32* %20, align 4, !dbg !12979
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073872896 to %struct.GPIO_TypeDef*), %struct.rtio_spsc* noundef nonnull %4) #25, !dbg !12980
  %21 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12981
  %22 = and i32 %21, -123731969, !dbg !12981
  br label %38, !dbg !12982

23:                                               ; preds = %3
  %24 = bitcast i32* %6 to i8*, !dbg !12983
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %24), !dbg !12983
  call void @llvm.dbg.declare(metadata i32* %6, metadata !12960, metadata !DIExpression()), !dbg !12983
  store volatile i32 0, i32* %6, align 4, !dbg !12983
  %25 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12983
  %26 = or i32 %25, 4, !dbg !12983
  store volatile i32 %26, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12983
  %27 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12983
  %28 = and i32 %27, 4, !dbg !12983
  store volatile i32 %28, i32* %6, align 4, !dbg !12983
  %29 = load volatile i32, i32* %6, align 4, !dbg !12983
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %24), !dbg !12984
  %30 = getelementptr inbounds %struct.rtio_spsc, %struct.rtio_spsc* %4, i32 0, i32 0, !dbg !12985
  store i32 512, i32* %30, align 4, !dbg !12986
  %31 = getelementptr inbounds %struct.rtio_spsc, %struct.rtio_spsc* %4, i32 0, i32 1, !dbg !12987
  store i32 2, i32* %31, align 4, !dbg !12988
  %32 = getelementptr inbounds %struct.rtio_spsc, %struct.rtio_spsc* %4, i32 0, i32 3, !dbg !12989
  store i32 3, i32* %32, align 4, !dbg !12990
  %33 = getelementptr inbounds %struct.rtio_spsc, %struct.rtio_spsc* %4, i32 0, i32 2, !dbg !12991
  store i32 0, i32* %33, align 4, !dbg !12992
  %34 = getelementptr inbounds %struct.rtio_spsc, %struct.rtio_spsc* %4, i32 0, i32 4, !dbg !12993
  store i32 0, i32* %34, align 4, !dbg !12994
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073874944 to %struct.GPIO_TypeDef*), %struct.rtio_spsc* noundef nonnull %4) #25, !dbg !12995
  %35 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12996
  %36 = and i32 %35, 134217727, !dbg !12996
  %37 = shl i32 %2, 3, !dbg !12996
  br label %38

38:                                               ; preds = %23, %9
  %39 = phi i32 [ %37, %23 ], [ %2, %9 ]
  %40 = phi i32 [ %36, %23 ], [ %22, %9 ]
  %41 = or i32 %39, %1, !dbg !12997
  %42 = or i32 %41, %40, !dbg !12997
  store volatile i32 %42, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12997
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %7) #23, !dbg !12998
  ret void, !dbg !12998
}

; Function Attrs: optsize
declare !dbg !12999 dso_local void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef, %struct.rtio_spsc* noundef) local_unnamed_addr #0

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_EnableCSS() local_unnamed_addr #15 !dbg !13003 {
  store volatile i32 1, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !13004
  ret void, !dbg !13005
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_DisableCSS() local_unnamed_addr #15 !dbg !13006 {
  store volatile i32 0, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !13007
  ret void, !dbg !13008
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @HAL_RCC_GetHCLKFreq() local_unnamed_addr #10 !dbg !13009 {
  %1 = load i32, i32* @SystemCoreClock, align 4, !dbg !13010
  ret i32 %1, !dbg !13011
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK1Freq() local_unnamed_addr #5 !dbg !13012 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #24, !dbg !13013
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13014
  %3 = lshr i32 %2, 10, !dbg !13015
  %4 = and i32 %3, 7, !dbg !13015
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !13016
  %6 = load i8, i8* %5, align 1, !dbg !13016
  %7 = zext i8 %6 to i32, !dbg !13016
  %8 = lshr i32 %1, %7, !dbg !13017
  ret i32 %8, !dbg !13018
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK2Freq() local_unnamed_addr #5 !dbg !13019 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #24, !dbg !13020
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13021
  %3 = lshr i32 %2, 13, !dbg !13022
  %4 = and i32 %3, 7, !dbg !13022
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !13023
  %6 = load i8, i8* %5, align 1, !dbg !13023
  %7 = zext i8 %6 to i32, !dbg !13023
  %8 = lshr i32 %1, %7, !dbg !13024
  ret i32 %8, !dbg !13025
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_GetOscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !13026 {
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !13030, metadata !DIExpression()), !dbg !13031
  %2 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !13032
  store i32 15, i32* %2, align 4, !dbg !13033
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13034
  %4 = and i32 %3, 262144, !dbg !13036
  %5 = icmp eq i32 %4, 0, !dbg !13037
  br i1 %5, label %8, label %6, !dbg !13038

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !13039
  store i32 327680, i32* %7, align 4, !dbg !13041
  br label %15, !dbg !13042

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13043
  %10 = and i32 %9, 65536, !dbg !13045
  %11 = icmp eq i32 %10, 0, !dbg !13046
  %12 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !13047
  br i1 %11, label %14, label %13, !dbg !13048

13:                                               ; preds = %8
  store i32 65536, i32* %12, align 4, !dbg !13049
  br label %15, !dbg !13051

14:                                               ; preds = %8
  store i32 0, i32* %12, align 4, !dbg !13052
  br label %15

15:                                               ; preds = %13, %14, %6
  %16 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13054
  %17 = and i32 %16, 1, !dbg !13056
  %18 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !13057
  store i32 %17, i32* %18, align 4, !dbg !13059
  %19 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13060
  %20 = lshr i32 %19, 3, !dbg !13061
  %21 = and i32 %20, 31, !dbg !13061
  %22 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !13062
  store i32 %21, i32* %22, align 4, !dbg !13063
  %23 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13064
  %24 = and i32 %23, 4, !dbg !13066
  %25 = icmp eq i32 %24, 0, !dbg !13067
  br i1 %25, label %28, label %26, !dbg !13068

26:                                               ; preds = %15
  %27 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !13069
  store i32 5, i32* %27, align 4, !dbg !13071
  br label %35, !dbg !13072

28:                                               ; preds = %15
  %29 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13073
  %30 = and i32 %29, 1, !dbg !13075
  %31 = icmp eq i32 %30, 0, !dbg !13076
  %32 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !13077
  br i1 %31, label %34, label %33, !dbg !13078

33:                                               ; preds = %28
  store i32 1, i32* %32, align 4, !dbg !13079
  br label %35, !dbg !13081

34:                                               ; preds = %28
  store i32 0, i32* %32, align 4, !dbg !13082
  br label %35

35:                                               ; preds = %33, %34, %26
  %36 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !13084
  %37 = and i32 %36, 1, !dbg !13086
  %38 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !13087
  store i32 %37, i32* %38, align 4, !dbg !13089
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13090
  %40 = and i32 %39, 16777216, !dbg !13092
  %41 = icmp eq i32 %40, 0, !dbg !13093
  %42 = select i1 %41, i32 1, i32 2, !dbg !13094
  %43 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !13095
  store i32 %42, i32* %43, align 4, !dbg !13097
  %44 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13098
  %45 = and i32 %44, 4194304, !dbg !13099
  %46 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !13100
  store i32 %45, i32* %46, align 4, !dbg !13101
  %47 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13102
  %48 = and i32 %47, 63, !dbg !13103
  %49 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !13104
  store i32 %48, i32* %49, align 4, !dbg !13105
  %50 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13106
  %51 = lshr i32 %50, 6, !dbg !13107
  %52 = and i32 %51, 511, !dbg !13107
  %53 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !13108
  store i32 %52, i32* %53, align 4, !dbg !13109
  %54 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13110
  %55 = shl i32 %54, 1, !dbg !13111
  %56 = and i32 %55, 393216, !dbg !13111
  %57 = add nuw nsw i32 %56, 131072, !dbg !13111
  %58 = lshr exact i32 %57, 16, !dbg !13112
  %59 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !13113
  store i32 %58, i32* %59, align 4, !dbg !13114
  %60 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13115
  %61 = lshr i32 %60, 24, !dbg !13116
  %62 = and i32 %61, 15, !dbg !13116
  %63 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !13117
  store i32 %62, i32* %63, align 4, !dbg !13118
  ret void, !dbg !13119
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetClockConfig(%struct.rtio_spsc* nocapture noundef writeonly %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #5 !dbg !13120 {
  call void @llvm.dbg.value(metadata %struct.rtio_spsc* %0, metadata !13124, metadata !DIExpression()), !dbg !13126
  call void @llvm.dbg.value(metadata i32* %1, metadata !13125, metadata !DIExpression()), !dbg !13126
  %3 = getelementptr inbounds %struct.rtio_spsc, %struct.rtio_spsc* %0, i32 0, i32 0, !dbg !13127
  store i32 15, i32* %3, align 4, !dbg !13128
  %4 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13129
  %5 = and i32 %4, 3, !dbg !13130
  %6 = getelementptr inbounds %struct.rtio_spsc, %struct.rtio_spsc* %0, i32 0, i32 1, !dbg !13131
  store i32 %5, i32* %6, align 4, !dbg !13132
  %7 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13133
  %8 = and i32 %7, 240, !dbg !13134
  %9 = getelementptr inbounds %struct.rtio_spsc, %struct.rtio_spsc* %0, i32 0, i32 2, !dbg !13135
  store i32 %8, i32* %9, align 4, !dbg !13136
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13137
  %11 = and i32 %10, 7168, !dbg !13138
  %12 = getelementptr inbounds %struct.rtio_spsc, %struct.rtio_spsc* %0, i32 0, i32 3, !dbg !13139
  store i32 %11, i32* %12, align 4, !dbg !13140
  %13 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13141
  %14 = lshr i32 %13, 3, !dbg !13142
  %15 = and i32 %14, 7168, !dbg !13142
  %16 = getelementptr inbounds %struct.rtio_spsc, %struct.rtio_spsc* %0, i32 0, i32 4, !dbg !13143
  store i32 %15, i32* %16, align 4, !dbg !13144
  %17 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13145
  %18 = and i32 %17, 15, !dbg !13146
  store i32 %18, i32* %1, align 4, !dbg !13147
  ret void, !dbg !13148
}

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_NMI_IRQHandler() local_unnamed_addr #1 !dbg !13149 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !13150
  %2 = and i32 %1, 128, !dbg !13150
  %3 = icmp eq i32 %2, 0, !dbg !13150
  br i1 %3, label %5, label %4, !dbg !13152

4:                                                ; preds = %0
  tail call void @HAL_RCC_CSSCallback() #24, !dbg !13153
  store volatile i8 -128, i8* inttoptr (i32 1073887246 to i8*), align 2, !dbg !13155
  br label %5, !dbg !13156

5:                                                ; preds = %4, %0
  ret void, !dbg !13157
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_CSSCallback() local_unnamed_addr #1 !dbg !13158 {
  ret void, !dbg !13159
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @LL_Init1msTick(i32 noundef %0) local_unnamed_addr #15 !dbg !13160 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13163, metadata !DIExpression()), !dbg !13164
  tail call fastcc void @LL_InitTick(i32 noundef %0) #24, !dbg !13165
  ret void, !dbg !13166
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_InitTick(i32 noundef %0) unnamed_addr #15 !dbg !13167 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13170, metadata !DIExpression()), !dbg !13172
  call void @llvm.dbg.value(metadata i32 1000, metadata !13171, metadata !DIExpression()), !dbg !13172
  %2 = udiv i32 %0, 1000, !dbg !13173
  %3 = add nsw i32 %2, -1, !dbg !13174
  store volatile i32 %3, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !13175
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !13176
  store volatile i32 5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13177
  ret void, !dbg !13178
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @LL_mDelay(i32 noundef %0) local_unnamed_addr #19 !dbg !13179 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !13181, metadata !DIExpression()), !dbg !13183
  %3 = bitcast i32* %2 to i8*, !dbg !13184
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !13184
  call void @llvm.dbg.declare(metadata i32* %2, metadata !13182, metadata !DIExpression()), !dbg !13185
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13186
  store volatile i32 %4, i32* %2, align 4, !dbg !13185
  %5 = load volatile i32, i32* %2, align 4, !dbg !13187
  %6 = icmp eq i32 %0, -1, !dbg !13188
  %7 = add i32 %0, 1
  call void @llvm.dbg.value(metadata i32 undef, metadata !13181, metadata !DIExpression()), !dbg !13183
  %8 = select i1 %6, i32 -1, i32 %7, !dbg !13183
  call void @llvm.dbg.value(metadata i32 %8, metadata !13181, metadata !DIExpression()), !dbg !13183
  br label %9, !dbg !13190

9:                                                ; preds = %1, %9
  %10 = phi i32 [ %14, %9 ], [ %8, %1 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !13181, metadata !DIExpression()), !dbg !13183
  %11 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13191
  call void @llvm.dbg.value(metadata i32 undef, metadata !13181, metadata !DIExpression()), !dbg !13183
  %12 = shl i32 %11, 15, !dbg !13183
  %13 = ashr i32 %12, 31, !dbg !13183
  %14 = add i32 %13, %10, !dbg !13183
  call void @llvm.dbg.value(metadata i32 %14, metadata !13181, metadata !DIExpression()), !dbg !13183
  %15 = icmp eq i32 %14, 0, !dbg !13190
  br i1 %15, label %16, label %9, !dbg !13190

16:                                               ; preds = %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !13194
  ret void, !dbg !13194
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @LL_SetSystemCoreClock(i32 noundef %0) local_unnamed_addr #6 !dbg !13195 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13197, metadata !DIExpression()), !dbg !13198
  store i32 %0, i32* @SystemCoreClock, align 4, !dbg !13199
  ret void, !dbg !13200
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_SetFlashLatency(i32 noundef %0) local_unnamed_addr #15 !dbg !13201 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13206, metadata !DIExpression()), !dbg !13211
  call void @llvm.dbg.value(metadata i32 0, metadata !13209, metadata !DIExpression()), !dbg !13211
  call void @llvm.dbg.value(metadata i32 0, metadata !13210, metadata !DIExpression()), !dbg !13211
  %2 = icmp eq i32 %0, 0, !dbg !13212
  br i1 %2, label %72, label %3, !dbg !13214

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #24, !dbg !13215
  %5 = icmp eq i32 %4, 49152, !dbg !13218
  br i1 %5, label %6, label %21, !dbg !13219

6:                                                ; preds = %3
  %7 = icmp ult i32 %0, 150000001, !dbg !13220
  %8 = select i1 %7, i32 0, i32 5, !dbg !13223
  call void @llvm.dbg.value(metadata i32 %8, metadata !13209, metadata !DIExpression()), !dbg !13211
  %9 = add i32 %0, -120000001, !dbg !13224
  %10 = icmp ult i32 %9, 30000000, !dbg !13224
  %11 = select i1 %10, i32 4, i32 %8, !dbg !13224
  call void @llvm.dbg.value(metadata i32 %11, metadata !13209, metadata !DIExpression()), !dbg !13211
  %12 = icmp ult i32 %9, -30000000, !dbg !13226
  %13 = select i1 %12, i32 %11, i32 3, !dbg !13226
  call void @llvm.dbg.value(metadata i32 %13, metadata !13209, metadata !DIExpression()), !dbg !13211
  %14 = icmp ugt i32 %0, 60000000, !dbg !13228
  %15 = icmp eq i32 %13, 0
  %16 = and i1 %14, %15, !dbg !13230
  br i1 %16, label %21, label %17, !dbg !13230

17:                                               ; preds = %6
  %18 = icmp ugt i32 %0, 30000000, !dbg !13231
  %19 = and i1 %18, %15, !dbg !13234
  %20 = select i1 %19, i32 1, i32 %13, !dbg !13234
  br label %21, !dbg !13234

21:                                               ; preds = %17, %6, %3
  %22 = phi i32 [ 0, %3 ], [ 2, %6 ], [ %20, %17 ], !dbg !13211
  call void @llvm.dbg.value(metadata i32 %22, metadata !13209, metadata !DIExpression()), !dbg !13211
  %23 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #24, !dbg !13235
  %24 = icmp eq i32 %23, 32768, !dbg !13237
  br i1 %24, label %25, label %45, !dbg !13238

25:                                               ; preds = %21
  %26 = icmp ugt i32 %0, 150000000, !dbg !13239
  %27 = icmp eq i32 %22, 0
  %28 = and i1 %26, %27, !dbg !13242
  %29 = select i1 %28, i32 5, i32 %22, !dbg !13242
  call void @llvm.dbg.value(metadata i32 %29, metadata !13209, metadata !DIExpression()), !dbg !13211
  %30 = icmp ugt i32 %0, 12000000, !dbg !13243
  %31 = icmp eq i32 %29, 0
  %32 = and i1 %30, %31, !dbg !13245
  %33 = select i1 %32, i32 4, i32 %29, !dbg !13245
  call void @llvm.dbg.value(metadata i32 %33, metadata !13209, metadata !DIExpression()), !dbg !13211
  %34 = icmp ugt i32 %0, 90000000, !dbg !13246
  %35 = icmp eq i32 %33, 0
  %36 = and i1 %34, %35, !dbg !13248
  %37 = select i1 %36, i32 3, i32 %33, !dbg !13248
  call void @llvm.dbg.value(metadata i32 %37, metadata !13209, metadata !DIExpression()), !dbg !13211
  %38 = icmp ugt i32 %0, 60000000, !dbg !13249
  %39 = icmp eq i32 %37, 0
  %40 = select i1 %38, i1 %39, i1 false, !dbg !13251
  br i1 %40, label %45, label %41, !dbg !13251

41:                                               ; preds = %25
  %42 = icmp ugt i32 %0, 30000000, !dbg !13252
  %43 = select i1 %42, i1 %39, i1 false, !dbg !13255
  %44 = select i1 %43, i32 1, i32 %37, !dbg !13255
  br label %45, !dbg !13255

45:                                               ; preds = %41, %25, %21
  %46 = phi i32 [ %22, %21 ], [ 2, %25 ], [ %44, %41 ], !dbg !13256
  call void @llvm.dbg.value(metadata i32 %46, metadata !13209, metadata !DIExpression()), !dbg !13211
  %47 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #24, !dbg !13257
  %48 = icmp eq i32 %47, 16384, !dbg !13259
  br i1 %48, label %49, label %61, !dbg !13260

49:                                               ; preds = %45
  %50 = icmp ugt i32 %0, 90000000, !dbg !13261
  %51 = icmp eq i32 %46, 0
  %52 = select i1 %50, i1 %51, i1 false, !dbg !13264
  %53 = select i1 %52, i32 3, i32 %46, !dbg !13264
  call void @llvm.dbg.value(metadata i32 %53, metadata !13209, metadata !DIExpression()), !dbg !13211
  %54 = icmp ugt i32 %0, 60000000, !dbg !13265
  %55 = icmp eq i32 %53, 0
  %56 = select i1 %54, i1 %55, i1 false, !dbg !13267
  br i1 %56, label %61, label %57, !dbg !13267

57:                                               ; preds = %49
  %58 = icmp ugt i32 %0, 30000000, !dbg !13268
  %59 = select i1 %58, i1 %55, i1 false, !dbg !13271
  %60 = select i1 %59, i32 1, i32 %53, !dbg !13271
  br label %61, !dbg !13271

61:                                               ; preds = %57, %49, %45
  %62 = phi i32 [ %46, %45 ], [ 2, %49 ], [ %60, %57 ], !dbg !13256
  call void @llvm.dbg.value(metadata i32 %62, metadata !13209, metadata !DIExpression()), !dbg !13211
  tail call fastcc void @LL_FLASH_SetLatency(i32 noundef %62) #24, !dbg !13272
  call void @llvm.dbg.value(metadata i32 2, metadata !13207, metadata !DIExpression()), !dbg !13211
  br label %63, !dbg !13273

63:                                               ; preds = %63, %61
  %64 = phi i32 [ 2, %61 ], [ %66, %63 ], !dbg !13256
  call void @llvm.dbg.value(metadata i32 %64, metadata !13207, metadata !DIExpression()), !dbg !13211
  %65 = tail call fastcc i32 @LL_FLASH_GetLatency() #24, !dbg !13274
  call void @llvm.dbg.value(metadata i32 %65, metadata !13208, metadata !DIExpression()), !dbg !13211
  %66 = add nsw i32 %64, -1, !dbg !13276
  call void @llvm.dbg.value(metadata i32 %66, metadata !13207, metadata !DIExpression()), !dbg !13211
  %67 = icmp ne i32 %65, %62, !dbg !13277
  %68 = icmp ne i32 %66, 0, !dbg !13278
  %69 = select i1 %67, i1 %68, i1 false, !dbg !13278
  br i1 %69, label %63, label %70, !dbg !13279, !llvm.loop !13280

70:                                               ; preds = %63
  %71 = zext i1 %67 to i32
  br label %72

72:                                               ; preds = %70, %1
  %73 = phi i32 [ 1, %1 ], [ %71, %70 ], !dbg !13282
  call void @llvm.dbg.value(metadata i32 %73, metadata !13210, metadata !DIExpression()), !dbg !13211
  ret i32 %73, !dbg !13283
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_PWR_GetRegulVoltageScaling() unnamed_addr #5 !dbg !13284 {
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !13286
  %2 = and i32 %1, 49152, !dbg !13286
  ret i32 %2, !dbg !13287
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_SetLatency(i32 noundef %0) unnamed_addr #15 !dbg !13288 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13290, metadata !DIExpression()), !dbg !13291
  %2 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13292
  %3 = and i32 %2, -16, !dbg !13292
  %4 = or i32 %3, %0, !dbg !13292
  store volatile i32 %4, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13292
  ret void, !dbg !13293
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_FLASH_GetLatency() unnamed_addr #5 !dbg !13294 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13295
  %2 = and i32 %1, 15, !dbg !13295
  ret i32 %2, !dbg !13296
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSI(%struct._thread_stack_info* nocapture noundef readonly %0, %struct._thread_stack_info* nocapture noundef readonly %1) local_unnamed_addr #15 !dbg !13297 {
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %0, metadata !13315, metadata !DIExpression()), !dbg !13319
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !13316, metadata !DIExpression()), !dbg !13319
  call void @llvm.dbg.value(metadata i32 0, metadata !13317, metadata !DIExpression()), !dbg !13319
  call void @llvm.dbg.value(metadata i32 0, metadata !13318, metadata !DIExpression()), !dbg !13319
  %3 = tail call fastcc i32 @UTILS_PLL_IsBusy() #24, !dbg !13320
  %4 = icmp eq i32 %3, 0, !dbg !13322
  br i1 %4, label %5, label %21, !dbg !13323

5:                                                ; preds = %2
  %6 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef 16000000, %struct._thread_stack_info* noundef %0) #24, !dbg !13324
  call void @llvm.dbg.value(metadata i32 %6, metadata !13318, metadata !DIExpression()), !dbg !13319
  %7 = tail call fastcc i32 @LL_RCC_HSI_IsReady.168() #24, !dbg !13326
  %8 = icmp eq i32 %7, 1, !dbg !13328
  br i1 %8, label %13, label %9, !dbg !13329

9:                                                ; preds = %5
  tail call fastcc void @LL_RCC_HSI_Enable.169() #24, !dbg !13330
  br label %10, !dbg !13332

10:                                               ; preds = %10, %9
  %11 = tail call fastcc i32 @LL_RCC_HSI_IsReady.168() #24, !dbg !13333
  %12 = icmp eq i32 %11, 1, !dbg !13334
  br i1 %12, label %13, label %10, !dbg !13332, !llvm.loop !13335

13:                                               ; preds = %10, %5
  %14 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 0, !dbg !13337
  %15 = load i32, i32* %14, align 4, !dbg !13337
  %16 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 1, !dbg !13338
  %17 = load i32, i32* %16, align 4, !dbg !13338
  %18 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 2, !dbg !13339
  %19 = load i32, i32* %18, align 4, !dbg !13339
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.170(i32 noundef 0, i32 noundef %15, i32 noundef %17, i32 noundef %19) #24, !dbg !13340
  %20 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %6, %struct._thread_stack_info* noundef %1) #24, !dbg !13341
  call void @llvm.dbg.value(metadata i32 %20, metadata !13317, metadata !DIExpression()), !dbg !13319
  br label %21, !dbg !13342

21:                                               ; preds = %2, %13
  %22 = phi i32 [ %20, %13 ], [ 1, %2 ], !dbg !13343
  call void @llvm.dbg.value(metadata i32 %22, metadata !13317, metadata !DIExpression()), !dbg !13319
  ret i32 %22, !dbg !13344
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @UTILS_PLL_IsBusy() unnamed_addr #5 !dbg !13345 {
  call void @llvm.dbg.value(metadata i32 0, metadata !13349, metadata !DIExpression()), !dbg !13350
  %1 = tail call fastcc i32 @LL_RCC_PLL_IsReady.172() #24, !dbg !13351
  %2 = icmp ne i32 %1, 0, !dbg !13353
  call void @llvm.dbg.value(metadata i1 %2, metadata !13349, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13350
  %3 = tail call fastcc i32 @LL_RCC_PLLSAI_IsReady() #24, !dbg !13354
  %4 = icmp ne i32 %3, 0, !dbg !13356
  call void @llvm.dbg.value(metadata i1 undef, metadata !13349, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13350
  %5 = tail call fastcc i32 @LL_RCC_PLLI2S_IsReady() #24, !dbg !13357
  %6 = icmp ne i32 %5, 0, !dbg !13359
  %7 = select i1 %6, i1 true, i1 %4, !dbg !13360
  %8 = select i1 %7, i1 true, i1 %2, !dbg !13360
  %9 = zext i1 %8 to i32, !dbg !13360
  call void @llvm.dbg.value(metadata i32 %9, metadata !13349, metadata !DIExpression()), !dbg !13350
  ret i32 %9, !dbg !13361
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #10 !dbg !13362 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13366, metadata !DIExpression()), !dbg !13369
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !13367, metadata !DIExpression()), !dbg !13369
  call void @llvm.dbg.value(metadata i32 0, metadata !13368, metadata !DIExpression()), !dbg !13369
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !13370
  %4 = load i32, i32* %3, align 4, !dbg !13370
  %5 = and i32 %4, 63, !dbg !13371
  %6 = udiv i32 %0, %5, !dbg !13372
  call void @llvm.dbg.value(metadata i32 %6, metadata !13368, metadata !DIExpression()), !dbg !13369
  %7 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !13373
  %8 = load i32, i32* %7, align 4, !dbg !13373
  %9 = and i32 %8, 511, !dbg !13374
  %10 = mul i32 %9, %6, !dbg !13375
  call void @llvm.dbg.value(metadata i32 %10, metadata !13368, metadata !DIExpression()), !dbg !13369
  %11 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !13376
  %12 = load i32, i32* %11, align 4, !dbg !13376
  %13 = lshr i32 %12, 15, !dbg !13377
  %14 = and i32 %13, 131070, !dbg !13377
  %15 = add nuw nsw i32 %14, 2, !dbg !13377
  %16 = udiv i32 %10, %15, !dbg !13378
  call void @llvm.dbg.value(metadata i32 %16, metadata !13368, metadata !DIExpression()), !dbg !13369
  ret i32 %16, !dbg !13379
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady.168() unnamed_addr #5 !dbg !13380 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13381
  %2 = lshr i32 %1, 1, !dbg !13382
  %3 = and i32 %2, 1, !dbg !13382
  ret i32 %3, !dbg !13383
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable.169() unnamed_addr #15 !dbg !13384 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13385
  %2 = or i32 %1, 1, !dbg !13385
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13385
  ret void, !dbg !13386
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS.170(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #15 !dbg !13387 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13389, metadata !DIExpression()), !dbg !13393
  call void @llvm.dbg.value(metadata i32 %1, metadata !13390, metadata !DIExpression()), !dbg !13393
  call void @llvm.dbg.value(metadata i32 %2, metadata !13391, metadata !DIExpression()), !dbg !13393
  call void @llvm.dbg.value(metadata i32 %3, metadata !13392, metadata !DIExpression()), !dbg !13393
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13394
  %6 = and i32 %5, -4227072, !dbg !13394
  %7 = or i32 %1, %0, !dbg !13394
  %8 = shl i32 %2, 6, !dbg !13394
  %9 = or i32 %7, %8, !dbg !13394
  %10 = or i32 %9, %6, !dbg !13394
  store volatile i32 %10, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13394
  %11 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13395
  %12 = and i32 %11, -196609, !dbg !13395
  %13 = or i32 %12, %3, !dbg !13395
  store volatile i32 %13, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13395
  ret void, !dbg !13396
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #15 !dbg !13397 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13401, metadata !DIExpression()), !dbg !13405
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !13402, metadata !DIExpression()), !dbg !13405
  call void @llvm.dbg.value(metadata i32 0, metadata !13403, metadata !DIExpression()), !dbg !13405
  call void @llvm.dbg.value(metadata i32 0, metadata !13404, metadata !DIExpression()), !dbg !13405
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !13406
  %4 = load i32, i32* %3, align 4, !dbg !13406
  %5 = lshr i32 %4, 4, !dbg !13406
  %6 = and i32 %5, 15, !dbg !13406
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %6, !dbg !13406
  %8 = load i8, i8* %7, align 1, !dbg !13406
  %9 = zext i8 %8 to i32, !dbg !13406
  %10 = lshr i32 %0, %9, !dbg !13406
  call void @llvm.dbg.value(metadata i32 %10, metadata !13404, metadata !DIExpression()), !dbg !13405
  %11 = load i32, i32* @SystemCoreClock, align 4, !dbg !13407
  %12 = icmp ult i32 %11, %10, !dbg !13409
  br i1 %12, label %13, label %16, !dbg !13410

13:                                               ; preds = %2
  %14 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #24, !dbg !13411
  call void @llvm.dbg.value(metadata i32 %14, metadata !13403, metadata !DIExpression()), !dbg !13405
  %15 = icmp eq i32 %14, 0, !dbg !13413
  br i1 %15, label %16, label %30, !dbg !13415

16:                                               ; preds = %2, %13
  tail call fastcc void @LL_RCC_PLL_Enable.171() #24, !dbg !13416
  br label %17, !dbg !13418

17:                                               ; preds = %17, %16
  %18 = tail call fastcc i32 @LL_RCC_PLL_IsReady.172() #24, !dbg !13419
  %19 = icmp eq i32 %18, 1, !dbg !13420
  br i1 %19, label %20, label %17, !dbg !13418, !llvm.loop !13421

20:                                               ; preds = %17
  %21 = load i32, i32* %3, align 4, !dbg !13423
  tail call fastcc void @LL_RCC_SetAHBPrescaler.173(i32 noundef %21) #24, !dbg !13424
  tail call fastcc void @LL_RCC_SetSysClkSource.174() #24, !dbg !13425
  br label %22, !dbg !13426

22:                                               ; preds = %22, %20
  %23 = tail call fastcc i32 @LL_RCC_GetSysClkSource.175() #24, !dbg !13427
  %24 = icmp eq i32 %23, 8, !dbg !13428
  br i1 %24, label %25, label %22, !dbg !13426, !llvm.loop !13429

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !13431
  %27 = load i32, i32* %26, align 4, !dbg !13431
  tail call fastcc void @LL_RCC_SetAPB1Prescaler.176(i32 noundef %27) #24, !dbg !13432
  %28 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !13433
  %29 = load i32, i32* %28, align 4, !dbg !13433
  tail call fastcc void @LL_RCC_SetAPB2Prescaler.177(i32 noundef %29) #24, !dbg !13434
  br label %30, !dbg !13435

30:                                               ; preds = %25, %13
  %31 = phi i32 [ 0, %25 ], [ %14, %13 ]
  %32 = load i32, i32* @SystemCoreClock, align 4, !dbg !13436
  %33 = icmp ugt i32 %32, %10, !dbg !13438
  br i1 %33, label %34, label %36, !dbg !13439

34:                                               ; preds = %30
  %35 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #24, !dbg !13440
  call void @llvm.dbg.value(metadata i32 %35, metadata !13403, metadata !DIExpression()), !dbg !13405
  br label %36, !dbg !13442

36:                                               ; preds = %34, %30
  %37 = phi i32 [ %35, %34 ], [ %31, %30 ], !dbg !13405
  call void @llvm.dbg.value(metadata i32 %37, metadata !13403, metadata !DIExpression()), !dbg !13405
  %38 = icmp eq i32 %37, 0, !dbg !13443
  br i1 %38, label %39, label %40, !dbg !13445

39:                                               ; preds = %36
  tail call void @LL_SetSystemCoreClock(i32 noundef %10) #24, !dbg !13446
  br label %40, !dbg !13448

40:                                               ; preds = %39, %36
  ret i32 %37, !dbg !13449
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable.171() unnamed_addr #15 !dbg !13450 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13451
  %2 = or i32 %1, 16777216, !dbg !13451
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13451
  ret void, !dbg !13452
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady.172() unnamed_addr #5 !dbg !13453 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13454
  %2 = lshr i32 %1, 25, !dbg !13455
  %3 = and i32 %2, 1, !dbg !13455
  ret i32 %3, !dbg !13456
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler.173(i32 noundef %0) unnamed_addr #15 !dbg !13457 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13459, metadata !DIExpression()), !dbg !13460
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13461
  %3 = and i32 %2, -241, !dbg !13461
  %4 = or i32 %3, %0, !dbg !13461
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13461
  ret void, !dbg !13462
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource.174() unnamed_addr #15 !dbg !13463 {
  call void @llvm.dbg.value(metadata i32 2, metadata !13465, metadata !DIExpression()), !dbg !13466
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13467
  %2 = and i32 %1, -4, !dbg !13467
  %3 = or i32 %2, 2, !dbg !13467
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13467
  ret void, !dbg !13468
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource.175() unnamed_addr #5 !dbg !13469 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13470
  %2 = and i32 %1, 12, !dbg !13470
  ret i32 %2, !dbg !13471
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler.176(i32 noundef %0) unnamed_addr #15 !dbg !13472 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13474, metadata !DIExpression()), !dbg !13475
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13476
  %3 = and i32 %2, -7169, !dbg !13476
  %4 = or i32 %3, %0, !dbg !13476
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13476
  ret void, !dbg !13477
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler.177(i32 noundef %0) unnamed_addr #15 !dbg !13478 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13480, metadata !DIExpression()), !dbg !13481
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13482
  %3 = and i32 %2, -57345, !dbg !13482
  %4 = or i32 %3, %0, !dbg !13482
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13482
  ret void, !dbg !13483
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLLSAI_IsReady() unnamed_addr #5 !dbg !13484 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13485
  %2 = lshr i32 %1, 29, !dbg !13486
  %3 = and i32 %2, 1, !dbg !13486
  ret i32 %3, !dbg !13487
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLLI2S_IsReady() unnamed_addr #5 !dbg !13488 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13489
  %2 = lshr i32 %1, 27, !dbg !13490
  %3 = and i32 %2, 1, !dbg !13490
  ret i32 %3, !dbg !13491
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSE(i32 noundef %0, i32 noundef %1, %struct._thread_stack_info* nocapture noundef readonly %2, %struct._thread_stack_info* nocapture noundef readonly %3) local_unnamed_addr #15 !dbg !13492 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13496, metadata !DIExpression()), !dbg !13502
  call void @llvm.dbg.value(metadata i32 %1, metadata !13497, metadata !DIExpression()), !dbg !13502
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %2, metadata !13498, metadata !DIExpression()), !dbg !13502
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %3, metadata !13499, metadata !DIExpression()), !dbg !13502
  call void @llvm.dbg.value(metadata i32 0, metadata !13500, metadata !DIExpression()), !dbg !13502
  call void @llvm.dbg.value(metadata i32 0, metadata !13501, metadata !DIExpression()), !dbg !13502
  %5 = tail call fastcc i32 @UTILS_PLL_IsBusy() #24, !dbg !13503
  %6 = icmp eq i32 %5, 0, !dbg !13505
  br i1 %6, label %7, label %27, !dbg !13506

7:                                                ; preds = %4
  %8 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* noundef %2) #24, !dbg !13507
  call void @llvm.dbg.value(metadata i32 %8, metadata !13501, metadata !DIExpression()), !dbg !13502
  %9 = tail call fastcc i32 @LL_RCC_HSE_IsReady.178() #24, !dbg !13509
  %10 = icmp eq i32 %9, 1, !dbg !13511
  br i1 %10, label %19, label %11, !dbg !13512

11:                                               ; preds = %7
  %12 = icmp eq i32 %1, 1, !dbg !13513
  br i1 %12, label %13, label %14, !dbg !13516

13:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_EnableBypass() #24, !dbg !13517
  br label %15, !dbg !13519

14:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_DisableBypass.179() #24, !dbg !13520
  br label %15

15:                                               ; preds = %14, %13
  tail call fastcc void @LL_RCC_HSE_Enable.180() #24, !dbg !13522
  br label %16, !dbg !13523

16:                                               ; preds = %16, %15
  %17 = tail call fastcc i32 @LL_RCC_HSE_IsReady.178() #24, !dbg !13524
  %18 = icmp eq i32 %17, 1, !dbg !13525
  br i1 %18, label %19, label %16, !dbg !13523, !llvm.loop !13526

19:                                               ; preds = %16, %7
  %20 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 0, !dbg !13528
  %21 = load i32, i32* %20, align 4, !dbg !13528
  %22 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 1, !dbg !13529
  %23 = load i32, i32* %22, align 4, !dbg !13529
  %24 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 2, !dbg !13530
  %25 = load i32, i32* %24, align 4, !dbg !13530
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.170(i32 noundef 4194304, i32 noundef %21, i32 noundef %23, i32 noundef %25) #24, !dbg !13531
  %26 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %8, %struct._thread_stack_info* noundef %3) #24, !dbg !13532
  call void @llvm.dbg.value(metadata i32 %26, metadata !13500, metadata !DIExpression()), !dbg !13502
  br label %27, !dbg !13533

27:                                               ; preds = %4, %19
  %28 = phi i32 [ %26, %19 ], [ 1, %4 ], !dbg !13534
  call void @llvm.dbg.value(metadata i32 %28, metadata !13500, metadata !DIExpression()), !dbg !13502
  ret i32 %28, !dbg !13535
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady.178() unnamed_addr #5 !dbg !13536 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13537
  %2 = lshr i32 %1, 17, !dbg !13538
  %3 = and i32 %2, 1, !dbg !13538
  ret i32 %3, !dbg !13539
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_EnableBypass() unnamed_addr #15 !dbg !13540 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13541
  %2 = or i32 %1, 262144, !dbg !13541
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13541
  ret void, !dbg !13542
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass.179() unnamed_addr #15 !dbg !13543 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13544
  %2 = and i32 %1, -262145, !dbg !13544
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13544
  ret void, !dbg !13545
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable.180() unnamed_addr #15 !dbg !13546 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13547
  %2 = or i32 %1, 65536, !dbg !13547
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13547
  ret void, !dbg !13548
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #21 !dbg !13549 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !13552, metadata !DIExpression()), !dbg !13568
  call void @llvm.dbg.value(metadata i32 undef, metadata !13552, metadata !DIExpression()), !dbg !13568
  call void @llvm.dbg.value(metadata i32 undef, metadata !13552, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !13568
  ret void, !dbg !13569
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !13570 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13574, metadata !DIExpression()), !dbg !13576
  %2 = icmp eq i8* %0, null, !dbg !13577
  br i1 %2, label %29, label %3, !dbg !13579

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !13580
  %5 = icmp eq i8 %4, 0, !dbg !13581
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !13582
  br i1 %6, label %29, label %8, !dbg !13582

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !13575, metadata !DIExpression()), !dbg !13576
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !13583

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !13575, metadata !DIExpression()), !dbg !13576
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #24, !dbg !13585
  br i1 %10, label %11, label %15, !dbg !13590

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !13591
  %13 = load i8*, i8** %12, align 4, !dbg !13591
  %14 = icmp eq i8* %13, %0, !dbg !13592
  br i1 %14, label %29, label %15, !dbg !13593

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !13594
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !13575, metadata !DIExpression()), !dbg !13576
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !13595
  br i1 %17, label %7, label %8, !dbg !13596, !llvm.loop !13597

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !13575, metadata !DIExpression()), !dbg !13576
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #24, !dbg !13599
  br i1 %20, label %21, label %26, !dbg !13603

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !13604
  %23 = load i8*, i8** %22, align 4, !dbg !13604
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #25, !dbg !13605
  %25 = icmp eq i32 %24, 0, !dbg !13606
  br i1 %25, label %29, label %26, !dbg !13607

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !13608
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !13575, metadata !DIExpression()), !dbg !13576
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !13609
  br i1 %28, label %29, label %18, !dbg !13583, !llvm.loop !13610

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !13576
  ret %struct.device* %30, !dbg !13612
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #10 !dbg !13613 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13617, metadata !DIExpression()), !dbg !13618
  %2 = icmp eq %struct.device* %0, null, !dbg !13619
  br i1 %2, label %14, label %3, !dbg !13621

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !13622
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !13622
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !13623
  %7 = load i8, i8* %6, align 1, !dbg !13623
  %8 = and i8 %7, 1, !dbg !13623
  %9 = icmp eq i8 %8, 0, !dbg !13623
  br i1 %9, label %14, label %10, !dbg !13624

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !13625
  %12 = load i8, i8* %11, align 1, !dbg !13625
  %13 = icmp eq i8 %12, 0, !dbg !13626
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !13618
  ret i1 %15, !dbg !13627
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #6 !dbg !13628 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !13633, metadata !DIExpression()), !dbg !13634
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !13635
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !13636
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !13637 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13645, metadata !DIExpression()), !dbg !13650
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !13646, metadata !DIExpression()), !dbg !13650
  call void @llvm.dbg.value(metadata i8* %2, metadata !13647, metadata !DIExpression()), !dbg !13650
  %5 = bitcast i32* %4 to i8*, !dbg !13651
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !13651
  call void @llvm.dbg.value(metadata i32 0, metadata !13648, metadata !DIExpression()), !dbg !13650
  store i32 0, i32* %4, align 4, !dbg !13652
  call void @llvm.dbg.value(metadata i32* %4, metadata !13648, metadata !DIExpression(DW_OP_deref)), !dbg !13650
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #24, !dbg !13653
  call void @llvm.dbg.value(metadata i16* %6, metadata !13649, metadata !DIExpression()), !dbg !13650
  %7 = load i32, i32* %4, align 4, !dbg !13654
  call void @llvm.dbg.value(metadata i32 %7, metadata !13648, metadata !DIExpression()), !dbg !13650
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #24, !dbg !13655
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !13656
  ret i32 %8, !dbg !13657
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #14 !dbg !13658 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13662, metadata !DIExpression()), !dbg !13668
  call void @llvm.dbg.value(metadata i32* %1, metadata !13663, metadata !DIExpression()), !dbg !13668
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !13669
  %4 = load i16*, i16** %3, align 4, !dbg !13669
  call void @llvm.dbg.value(metadata i16* %4, metadata !13664, metadata !DIExpression()), !dbg !13668
  %5 = icmp eq i16* %4, null, !dbg !13670
  br i1 %5, label %14, label %6, !dbg !13671

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !13672
  call void @llvm.dbg.value(metadata i32 %7, metadata !13665, metadata !DIExpression()), !dbg !13672
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !13673
  %9 = load i16, i16* %8, align 2, !dbg !13673
  %10 = add i16 %9, -32767, !dbg !13674
  %11 = icmp ult i16 %10, 2, !dbg !13674
  %12 = add i32 %7, 1, !dbg !13675
  call void @llvm.dbg.value(metadata i32 %12, metadata !13665, metadata !DIExpression()), !dbg !13672
  br i1 %11, label %13, label %6, !dbg !13674, !llvm.loop !13677

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !13680
  br label %14, !dbg !13681

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !13682
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !13683 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !13687, metadata !DIExpression()), !dbg !13698
  call void @llvm.dbg.value(metadata i32 %1, metadata !13688, metadata !DIExpression()), !dbg !13698
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !13689, metadata !DIExpression()), !dbg !13698
  call void @llvm.dbg.value(metadata i8* %3, metadata !13690, metadata !DIExpression()), !dbg !13698
  call void @llvm.dbg.value(metadata i32 0, metadata !13691, metadata !DIExpression()), !dbg !13699
  %5 = icmp eq i32 %1, 0, !dbg !13700
  br i1 %5, label %16, label %8, !dbg !13701

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !13691, metadata !DIExpression()), !dbg !13699
  %7 = icmp eq i32 %15, %1, !dbg !13700
  br i1 %7, label %16, label %8, !dbg !13701, !llvm.loop !13702

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !13691, metadata !DIExpression()), !dbg !13699
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !13704
  %11 = load i16, i16* %10, align 2, !dbg !13704
  call void @llvm.dbg.value(metadata i16 %11, metadata !13693, metadata !DIExpression()), !dbg !13705
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #24, !dbg !13706
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !13696, metadata !DIExpression()), !dbg !13705
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #25, !dbg !13707
  call void @llvm.dbg.value(metadata i32 %13, metadata !13697, metadata !DIExpression()), !dbg !13705
  %14 = icmp slt i32 %13, 0, !dbg !13708
  %15 = add nuw i32 %9, 1, !dbg !13710
  call void @llvm.dbg.value(metadata i32 %15, metadata !13691, metadata !DIExpression()), !dbg !13699
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !13711
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #4 !dbg !13712 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !13716, metadata !DIExpression()), !dbg !13719
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !13717, metadata !DIExpression()), !dbg !13719
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !13718, metadata !DIExpression()), !dbg !13719
  %2 = sext i16 %0 to i32, !dbg !13720
  %3 = icmp slt i16 %0, 1, !dbg !13722
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !13723
  %6 = add nsw i32 %2, -1, !dbg !13723
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !13723
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !13723
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !13717, metadata !DIExpression()), !dbg !13719
  ret %struct.device* %8, !dbg !13724
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !13725 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13727, metadata !DIExpression()), !dbg !13732
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !13728, metadata !DIExpression()), !dbg !13732
  call void @llvm.dbg.value(metadata i8* %2, metadata !13729, metadata !DIExpression()), !dbg !13732
  %5 = bitcast i32* %4 to i8*, !dbg !13733
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !13733
  call void @llvm.dbg.value(metadata i32 0, metadata !13730, metadata !DIExpression()), !dbg !13732
  store i32 0, i32* %4, align 4, !dbg !13734
  call void @llvm.dbg.value(metadata i32* %4, metadata !13730, metadata !DIExpression(DW_OP_deref)), !dbg !13732
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #24, !dbg !13735
  call void @llvm.dbg.value(metadata i16* %6, metadata !13731, metadata !DIExpression()), !dbg !13732
  %7 = load i32, i32* %4, align 4, !dbg !13736
  call void @llvm.dbg.value(metadata i32 %7, metadata !13730, metadata !DIExpression()), !dbg !13732
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #24, !dbg !13737
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !13738
  ret i32 %8, !dbg !13739
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #14 !dbg !13740 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13742, metadata !DIExpression()), !dbg !13747
  call void @llvm.dbg.value(metadata i32* %1, metadata !13743, metadata !DIExpression()), !dbg !13747
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !13748
  %4 = load i16*, i16** %3, align 4, !dbg !13748
  call void @llvm.dbg.value(metadata i16* %4, metadata !13744, metadata !DIExpression()), !dbg !13747
  call void @llvm.dbg.value(metadata i32 0, metadata !13745, metadata !DIExpression()), !dbg !13747
  call void @llvm.dbg.value(metadata i32 0, metadata !13746, metadata !DIExpression()), !dbg !13747
  %5 = icmp eq i16* %4, null, !dbg !13749
  br i1 %5, label %22, label %6, !dbg !13751

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !13745, metadata !DIExpression()), !dbg !13747
  call void @llvm.dbg.value(metadata i16* %8, metadata !13744, metadata !DIExpression()), !dbg !13747
  %9 = load i16, i16* %8, align 2, !dbg !13752
  %10 = icmp eq i16 %9, -32768, !dbg !13756
  call void @llvm.dbg.value(metadata i32 undef, metadata !13745, metadata !DIExpression()), !dbg !13747
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !13757
  call void @llvm.dbg.value(metadata i16* %11, metadata !13744, metadata !DIExpression()), !dbg !13747
  %12 = zext i1 %10 to i32, !dbg !13758
  %13 = add i32 %7, %12, !dbg !13758
  call void @llvm.dbg.value(metadata i32 %13, metadata !13745, metadata !DIExpression()), !dbg !13747
  %14 = icmp eq i32 %13, 2, !dbg !13759
  br i1 %14, label %15, label %6, !dbg !13760

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !13747
  call void @llvm.dbg.value(metadata i32 %16, metadata !13746, metadata !DIExpression()), !dbg !13747
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !13761
  %18 = load i16, i16* %17, align 2, !dbg !13761
  %19 = icmp eq i16 %18, 32767, !dbg !13762
  %20 = add i32 %16, 1, !dbg !13763
  call void @llvm.dbg.value(metadata i32 %20, metadata !13746, metadata !DIExpression()), !dbg !13747
  br i1 %19, label %21, label %15, !dbg !13765, !llvm.loop !13766

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !13768
  br label %22, !dbg !13769

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !13770
  call void @llvm.dbg.value(metadata i16* %23, metadata !13744, metadata !DIExpression()), !dbg !13747
  ret i16* %23, !dbg !13771
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #10 !dbg !13772 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13775
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 4, !dbg !13776
  ret i32* %2, !dbg !13777
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #4 !dbg !13778 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !13926, metadata !DIExpression()), !dbg !13929
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !13927, metadata !DIExpression()), !dbg !13929
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !13928, metadata !DIExpression()), !dbg !13929
  ret void, !dbg !13930
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #4 !dbg !13931 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13935, metadata !DIExpression()), !dbg !13937
  call void @llvm.dbg.value(metadata i32 %1, metadata !13936, metadata !DIExpression()), !dbg !13937
  ret void, !dbg !13938
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #4 !dbg !13939 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13943, metadata !DIExpression()), !dbg !13945
  call void @llvm.dbg.value(metadata i32 %1, metadata !13944, metadata !DIExpression()), !dbg !13945
  ret void, !dbg !13946
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #4 !dbg !13947 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13951, metadata !DIExpression()), !dbg !13953
  call void @llvm.dbg.value(metadata i8* %1, metadata !13952, metadata !DIExpression()), !dbg !13953
  ret i32 -134, !dbg !13954
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #4 !dbg !13955 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13959, metadata !DIExpression()), !dbg !13961
  call void @llvm.dbg.value(metadata i8* %1, metadata !13960, metadata !DIExpression()), !dbg !13961
  ret i32 -134, !dbg !13962
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #2 !dbg !13963 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13966, metadata !DIExpression()), !dbg !13967
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13968, !srcloc !13974
  call void @llvm.dbg.value(metadata i32 undef, metadata !13971, metadata !DIExpression()) #23, !dbg !13975
  call void @llvm.dbg.value(metadata i32 undef, metadata !13972, metadata !DIExpression()) #23, !dbg !13975
  br label %3, !dbg !13976

3:                                                ; preds = %3, %1
  br label %3, !dbg !13977, !llvm.loop !13980
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !13983 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13987, metadata !DIExpression()), !dbg !13989
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !13988, metadata !DIExpression()), !dbg !13989
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.185, i32 0, i32 0), i32 noundef 69) #25, !dbg !13990
  tail call void @arch_system_halt(i32 noundef %0) #29, !dbg !13995
  unreachable, !dbg !13995
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #2 !dbg !13996 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13998, metadata !DIExpression()), !dbg !13999
  tail call void @arch_system_halt(i32 noundef %0) #29, !dbg !14000
  unreachable, !dbg !14000
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !14001 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14003, metadata !DIExpression()), !dbg !14007
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !14004, metadata !DIExpression()), !dbg !14007
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14008, !srcloc !13974
  call void @llvm.dbg.value(metadata i32 undef, metadata !13971, metadata !DIExpression()) #23, !dbg !14010
  call void @llvm.dbg.value(metadata i32 undef, metadata !13972, metadata !DIExpression()) #23, !dbg !14010
  call void @llvm.dbg.value(metadata i32 undef, metadata !14005, metadata !DIExpression()), !dbg !14007
  %4 = tail call fastcc %struct.k_thread* @k_current_get.188() #26, !dbg !14011
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14006, metadata !DIExpression()), !dbg !14007
  %5 = tail call fastcc i8* @reason_to_str(i32 noundef %0) #24, !dbg !14012
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.1.189, i32 0, i32 0), i32 noundef 69, i32 noundef %0, i8* noundef %5, i32 noundef 0) #25, !dbg !14012
  %6 = icmp eq %struct.__esf* %1, null, !dbg !14017
  br i1 %6, label %15, label %7, !dbg !14019

7:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !14020, metadata !DIExpression()), !dbg !14025
  %8 = getelementptr inbounds %struct.__esf, %struct.__esf* %1, i32 0, i32 0, i32 7, !dbg !14027
  %9 = load i32, i32* %8, align 4, !dbg !14027
  %10 = and i32 %9, 511, !dbg !14028
  %11 = icmp eq i32 %10, 0, !dbg !14029
  br i1 %11, label %13, label %12, !dbg !14030

12:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.190, i32 0, i32 0), i32 noundef 69) #25, !dbg !14031
  br label %13, !dbg !14037

13:                                               ; preds = %7, %12
  %14 = tail call fastcc i8* @thread_name_get(%struct.k_thread* noundef %4) #24, !dbg !14038
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.191, i32 0, i32 0), i32 noundef 69, %struct.k_thread* noundef %4, i8* noundef %14) #25, !dbg !14038
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef nonnull %1) #24, !dbg !14043
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !14020, metadata !DIExpression()), !dbg !14044
  br label %17, !dbg !14049

15:                                               ; preds = %2
  %16 = tail call fastcc i8* @thread_name_get(%struct.k_thread* noundef %4) #24, !dbg !14038
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.191, i32 0, i32 0), i32 noundef 69, %struct.k_thread* noundef %4, i8* noundef %16) #25, !dbg !14038
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef null) #24, !dbg !14043
  br label %17, !dbg !14050

17:                                               ; preds = %15, %13
  %18 = extractvalue { i32, i32 } %3, 0, !dbg !14008
  call void @llvm.dbg.value(metadata i32 %18, metadata !13971, metadata !DIExpression()) #23, !dbg !14010
  call void @llvm.dbg.value(metadata i32 %18, metadata !14005, metadata !DIExpression()), !dbg !14007
  call void @llvm.dbg.value(metadata i32 undef, metadata !14051, metadata !DIExpression()) #23, !dbg !14054
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #23, !dbg !14056, !srcloc !14057
  tail call fastcc void @k_thread_abort.192(%struct.k_thread* noundef %4) #24, !dbg !14058
  ret void, !dbg !14061
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.188() unnamed_addr #12 !dbg !14062 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.200() #26, !dbg !14066
  ret %struct.k_thread* %1, !dbg !14067
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @reason_to_str(i32 noundef %0) unnamed_addr #4 !dbg !14068 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14072, metadata !DIExpression()), !dbg !14073
  %2 = icmp ult i32 %0, 5, !dbg !14074
  br i1 %2, label %3, label %6, !dbg !14074

3:                                                ; preds = %1
  %4 = getelementptr inbounds [5 x i8*], [5 x i8*]* @switch.table.reason_to_str, i32 0, i32 %0, !dbg !14074
  %5 = load i8*, i8** %4, align 4, !dbg !14074
  br label %6, !dbg !14074

6:                                                ; preds = %1, %3
  %7 = phi i8* [ %5, %3 ], [ getelementptr inbounds ([14 x i8], [14 x i8]* @.str.9.194, i32 0, i32 0), %1 ], !dbg !14075
  ret i8* %7, !dbg !14077
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @thread_name_get(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14078 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14082, metadata !DIExpression()), !dbg !14084
  %2 = icmp eq %struct.k_thread* %0, null, !dbg !14085
  br i1 %2, label %9, label %3, !dbg !14086

3:                                                ; preds = %1
  %4 = tail call i8* @k_thread_name_get(%struct.k_thread* noundef nonnull %0) #25, !dbg !14087
  call void @llvm.dbg.value(metadata i8* %4, metadata !14083, metadata !DIExpression()), !dbg !14084
  %5 = icmp eq i8* %4, null, !dbg !14088
  br i1 %5, label %9, label %6, !dbg !14090

6:                                                ; preds = %3
  %7 = load i8, i8* %4, align 1, !dbg !14091
  %8 = icmp eq i8 %7, 0, !dbg !14092
  br i1 %8, label %9, label %10, !dbg !14093

9:                                                ; preds = %1, %6, %3
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10.193, i32 0, i32 0), metadata !14083, metadata !DIExpression()), !dbg !14084
  br label %10, !dbg !14094

10:                                               ; preds = %9, %6
  %11 = phi i8* [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10.193, i32 0, i32 0), %9 ], [ %4, %6 ], !dbg !14084
  call void @llvm.dbg.value(metadata i8* %11, metadata !14083, metadata !DIExpression()), !dbg !14084
  ret i8* %11, !dbg !14096
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.192(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14097 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14101, metadata !DIExpression()), !dbg !14102
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !14103, !srcloc !14105
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !14106
  ret void, !dbg !14107
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.200() unnamed_addr #12 !dbg !14108 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !14109, !srcloc !14111
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #25, !dbg !14112
  ret %struct.k_thread* %1, !dbg !14113
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !14114 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14118, metadata !DIExpression()), !dbg !14121
  call void @llvm.dbg.value(metadata i32 %1, metadata !14119, metadata !DIExpression()), !dbg !14121
  call void @llvm.dbg.value(metadata i32 %2, metadata !14120, metadata !DIExpression()), !dbg !14121
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #25, !dbg !14122
  ret void, !dbg !14123
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !14124 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14128, metadata !DIExpression()), !dbg !14131
  call void @llvm.dbg.value(metadata i8* %1, metadata !14129, metadata !DIExpression()), !dbg !14131
  call void @llvm.dbg.value(metadata i32 %2, metadata !14130, metadata !DIExpression()), !dbg !14131
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #25, !dbg !14132
  ret void, !dbg !14133
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !14134 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #24, !dbg !14135
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ccm_bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__ccm_bss_end to i32), i32 ptrtoint ([0 x i8]* @__ccm_bss_start to i32))) #24, !dbg !14136
  ret void, !dbg !14137
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !14138 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14140, metadata !DIExpression()), !dbg !14141
  tail call fastcc void @init_idle_thread(i32 noundef %0) #24, !dbg !14142
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !14143
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !14144
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !14145
  %4 = trunc i32 %0 to i8, !dbg !14146
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 5, !dbg !14147
  store i8 %4, i8* %5, align 4, !dbg !14148
  %6 = getelementptr inbounds [1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !14149
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef nonnull %6) #24, !dbg !14150
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !14151
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !14152
  store i8* %8, i8** %9, align 4, !dbg !14153
  ret void, !dbg !14154
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !14155 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14157, metadata !DIExpression()), !dbg !14163
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !14164
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14158, metadata !DIExpression()), !dbg !14163
  %3 = getelementptr inbounds [1 x [384 x %struct.z_thread_stack_element]], [1 x [384 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !14165
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %3, metadata !14159, metadata !DIExpression()), !dbg !14163
  call void @llvm.dbg.value(metadata i8* null, metadata !14162, metadata !DIExpression()), !dbg !14163
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !14166
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !14167
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.z_thread_stack_element* noundef nonnull %3, i32 noundef 320, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef null) #25, !dbg !14168
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #24, !dbg !14169
  ret void, !dbg !14170
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #4 !dbg !14171 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !14175, metadata !DIExpression()), !dbg !14176
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !14177
  ret i8* %2, !dbg !14178
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !14179 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14184, metadata !DIExpression()), !dbg !14185
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14186
  %3 = load i8, i8* %2, align 1, !dbg !14187
  %4 = and i8 %3, -5, !dbg !14187
  store i8 %4, i8* %2, align 1, !dbg !14187
  ret void, !dbg !14188
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #2 !dbg !14189 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #24, !dbg !14192
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #25, !dbg !14193
  %3 = ptrtoint i8* %2 to i32, !dbg !14202
  %4 = add i32 %3, 2048, !dbg !14203
  call void @llvm.dbg.value(metadata i32 %4, metadata !14197, metadata !DIExpression()) #23, !dbg !14204
  call void @llvm.dbg.value(metadata i32 %4, metadata !14205, metadata !DIExpression()) #23, !dbg !14208
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #23, !dbg !14210, !srcloc !14211
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !14212
  %6 = or i32 %5, 512, !dbg !14212
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !14212
  tail call fastcc void @__NVIC_SetPriority.209(i32 noundef -2, i32 noundef 255) #25, !dbg !14213
  tail call fastcc void @__NVIC_SetPriority.209(i32 noundef -5, i32 noundef 0) #25, !dbg !14216
  tail call fastcc void @__NVIC_SetPriority.209(i32 noundef -12, i32 noundef 0) #25, !dbg !14217
  tail call fastcc void @__NVIC_SetPriority.209(i32 noundef -11, i32 noundef 0) #25, !dbg !14218
  tail call fastcc void @__NVIC_SetPriority.209(i32 noundef -10, i32 noundef 0) #25, !dbg !14219
  tail call fastcc void @__NVIC_SetPriority.209(i32 noundef -4, i32 noundef 0) #25, !dbg !14220
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !14221
  %8 = or i32 %7, 458752, !dbg !14221
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !14221
  tail call void @z_arm_fault_init() #25, !dbg !14222
  tail call void @z_arm_cpu_idle_init() #25, !dbg !14223
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !14224
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !14227
  %9 = tail call i32 @z_arm_mpu_init() #25, !dbg !14228
  tail call void @z_arm_configure_static_mpu_regions() #25, !dbg !14229
  %10 = bitcast %struct.k_thread* %1 to i8*, !dbg !14230
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %10) #23, !dbg !14230
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !14191, metadata !DIExpression()), !dbg !14231
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #24, !dbg !14232
  call void @z_device_state_init() #25, !dbg !14233
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #24, !dbg !14234
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #24, !dbg !14235
  %11 = call fastcc i8* @prepare_multithreading() #24, !dbg !14236
  call fastcc void @switch_to_main_thread(i8* noundef %11) #29, !dbg !14237
  unreachable, !dbg !14237
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !2536 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2540, metadata !DIExpression()), !dbg !14238
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !14239
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !14239
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2541, metadata !DIExpression()), !dbg !14238
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2541, metadata !DIExpression()), !dbg !14238
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !14240
  br i1 %7, label %8, label %35, !dbg !14241

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !2541, metadata !DIExpression()), !dbg !14238
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !14242
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !14242
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !2551, metadata !DIExpression()), !dbg !14243
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !14244
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !14244
  %14 = tail call i32 %13(%struct.device* noundef %11) #25, !dbg !14245
  call void @llvm.dbg.value(metadata i32 %14, metadata !2555, metadata !DIExpression()), !dbg !14243
  %15 = icmp eq %struct.device* %11, null, !dbg !14246
  br i1 %15, label %32, label %16, !dbg !14248

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !14249
  br i1 %17, label %26, label %18, !dbg !14252

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !14253
  call void @llvm.dbg.value(metadata i32 %19, metadata !2555, metadata !DIExpression()), !dbg !14243
  %20 = icmp ult i32 %19, 255, !dbg !14255
  %21 = select i1 %20, i32 %19, i32 255, !dbg !14255
  call void @llvm.dbg.value(metadata i32 %21, metadata !2555, metadata !DIExpression()), !dbg !14243
  %22 = trunc i32 %21 to i8, !dbg !14256
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !14257
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !14257
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !14258
  store i8 %22, i8* %25, align 1, !dbg !14259
  br label %26, !dbg !14260

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !14261
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !14261
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !14262
  %30 = load i8, i8* %29, align 1, !dbg !14263
  %31 = or i8 %30, 1, !dbg !14263
  store i8 %31, i8* %29, align 1, !dbg !14263
  br label %32, !dbg !14264

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !14265
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !2541, metadata !DIExpression()), !dbg !14238
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !14240
  br i1 %34, label %8, label %35, !dbg !14241, !llvm.loop !14266

35:                                               ; preds = %32, %1
  ret void, !dbg !14268
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.209(i32 noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !14269 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14271, metadata !DIExpression()), !dbg !14273
  call void @llvm.dbg.value(metadata i32 %1, metadata !14272, metadata !DIExpression()), !dbg !14273
  %3 = trunc i32 %1 to i8, !dbg !14274
  %4 = shl i8 %3, 4, !dbg !14274
  %5 = and i32 %0, 15, !dbg !14277
  %6 = add nsw i32 %5, -4, !dbg !14278
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !14279
  store volatile i8 %4, i8* %7, align 1, !dbg !14280
  ret void, !dbg !14281
}

; Function Attrs: optsize
declare !dbg !14282 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #6 !dbg !14283 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14286, metadata !DIExpression()), !dbg !14287
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14288
  store i8 1, i8* %2, align 1, !dbg !14289
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !14290
  store i8 1, i8* %3, align 4, !dbg !14291
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !14292
  store i32 0, i32* %4, align 4, !dbg !14293
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !14294
  store i32 0, i32* %5, align 4, !dbg !14295
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !14296
  store %struct.k_heap* null, %struct.k_heap** %6, align 8, !dbg !14297
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14298
  ret void, !dbg !14299
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !14300 {
  tail call void @z_sched_init() #25, !dbg !14305
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !14306
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 0, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.210, i32 0, i32 0)) #25, !dbg !14307
  call void @llvm.dbg.value(metadata i8* %1, metadata !14304, metadata !DIExpression()), !dbg !14308
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #24, !dbg !14309
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #25, !dbg !14310
  tail call void @z_init_cpu(i32 noundef 0) #24, !dbg !14311
  ret i8* %1, !dbg !14312
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #2 !dbg !14313 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14317, metadata !DIExpression()), !dbg !14318
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #25, !dbg !14319
  unreachable, !dbg !14320
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !14321 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14323, metadata !DIExpression()), !dbg !14326
  call void @llvm.dbg.value(metadata i8* %1, metadata !14324, metadata !DIExpression()), !dbg !14326
  call void @llvm.dbg.value(metadata i8* %2, metadata !14325, metadata !DIExpression()), !dbg !14326
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !14327
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #24, !dbg !14328
  tail call void @boot_banner() #25, !dbg !14329
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #24, !dbg !14330
  tail call void @z_init_static_threads() #25, !dbg !14331
  tail call void @main() #25, !dbg !14332
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !14333
  %5 = and i8 %4, -2, !dbg !14333
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !14333
  ret void, !dbg !14334
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #4 !dbg !14335 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !14345, metadata !DIExpression()), !dbg !14347
  call void @llvm.dbg.value(metadata i8* %1, metadata !14346, metadata !DIExpression()), !dbg !14347
  ret void, !dbg !14348
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #4 !dbg !14349 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !14351, metadata !DIExpression()), !dbg !14353
  call void @llvm.dbg.value(metadata i8* %1, metadata !14352, metadata !DIExpression()), !dbg !14353
  ret void, !dbg !14354
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !14355 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !14356, !srcloc !14363
  call void @llvm.dbg.value(metadata i32 %1, metadata !14359, metadata !DIExpression()) #23, !dbg !14364
  %2 = icmp ne i32 %1, 0, !dbg !14365
  ret i1 %2, !dbg !14366
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #11 !dbg !14367 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14368
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !14369
  %3 = load i8, i8* %2, align 4, !dbg !14370
  %4 = or i8 %3, 1, !dbg !14370
  store i8 %4, i8* %2, align 4, !dbg !14370
  ret void, !dbg !14371
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #11 !dbg !14372 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14373
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !14374
  %3 = load i8, i8* %2, align 4, !dbg !14375
  %4 = and i8 %3, -2, !dbg !14375
  store i8 %4, i8* %2, align 4, !dbg !14375
  ret void, !dbg !14376
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #10 !dbg !14377 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14378
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !14379
  %3 = load i8, i8* %2, align 4, !dbg !14379
  %4 = and i8 %3, 1, !dbg !14380
  %5 = icmp ne i8 %4, 0, !dbg !14381
  ret i1 %5, !dbg !14382
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1) local_unnamed_addr #4 !dbg !14383 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14387, metadata !DIExpression()), !dbg !14389
  call void @llvm.dbg.value(metadata i8* %1, metadata !14388, metadata !DIExpression()), !dbg !14389
  ret i32 -88, !dbg !14390
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local noalias i8* @k_thread_name_get(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #4 !dbg !14391 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14395, metadata !DIExpression()), !dbg !14396
  ret i8* null, !dbg !14397
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i32 noundef %2) local_unnamed_addr #4 !dbg !14398 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14402, metadata !DIExpression()), !dbg !14405
  call void @llvm.dbg.value(metadata i8* %1, metadata !14403, metadata !DIExpression()), !dbg !14405
  call void @llvm.dbg.value(metadata i32 %2, metadata !14404, metadata !DIExpression()), !dbg !14405
  ret i32 -88, !dbg !14406
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !2566 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !2680, metadata !DIExpression()), !dbg !14407
  call void @llvm.dbg.value(metadata i8* %1, metadata !2681, metadata !DIExpression()), !dbg !14407
  call void @llvm.dbg.value(metadata i32 %2, metadata !2682, metadata !DIExpression()), !dbg !14407
  call void @llvm.dbg.value(metadata i32 0, metadata !2683, metadata !DIExpression()), !dbg !14407
  call void @llvm.dbg.value(metadata i8 undef, metadata !2685, metadata !DIExpression()), !dbg !14407
  %4 = icmp eq i8* %1, null, !dbg !14408
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !14410
  br i1 %6, label %46, label %7, !dbg !14410

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14411
  %9 = load i8, i8* %8, align 1, !dbg !14411
  call void @llvm.dbg.value(metadata i8 %9, metadata !2685, metadata !DIExpression()), !dbg !14407
  %10 = add i32 %2, -1, !dbg !14412
  call void @llvm.dbg.value(metadata i32 %10, metadata !2682, metadata !DIExpression()), !dbg !14407
  call void @llvm.dbg.value(metadata i8 0, metadata !2686, metadata !DIExpression()), !dbg !14413
  call void @llvm.dbg.value(metadata i8 %9, metadata !2685, metadata !DIExpression()), !dbg !14407
  call void @llvm.dbg.value(metadata i32 0, metadata !2683, metadata !DIExpression()), !dbg !14407
  %11 = icmp eq i8 %9, 0, !dbg !14414
  br i1 %11, label %12, label %15, !dbg !14416

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !14417
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !14418
  store i8 0, i8* %14, align 1, !dbg !14419
  br label %46, !dbg !14420

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !2686, metadata !DIExpression()), !dbg !14413
  call void @llvm.dbg.value(metadata i8 %17, metadata !2685, metadata !DIExpression()), !dbg !14407
  call void @llvm.dbg.value(metadata i32 %18, metadata !2683, metadata !DIExpression()), !dbg !14407
  %19 = zext i8 %17 to i32, !dbg !14421
  %20 = zext i8 %16 to i32, !dbg !14422
  %21 = shl nuw i32 1, %20, !dbg !14422
  call void @llvm.dbg.value(metadata i32 %21, metadata !2684, metadata !DIExpression()), !dbg !14407
  %22 = and i32 %21, %19, !dbg !14424
  %23 = icmp eq i32 %22, 0, !dbg !14426
  br i1 %23, label %42, label %24, !dbg !14427

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !14428
  %26 = sub i32 %10, %18, !dbg !14429
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !14430
  %28 = load i8*, i8** %27, align 4, !dbg !14430
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !14431
  %30 = load i32, i32* %29, align 4, !dbg !14431
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #24, !dbg !14432
  %32 = add i32 %31, %18, !dbg !14433
  call void @llvm.dbg.value(metadata i32 %32, metadata !2683, metadata !DIExpression()), !dbg !14407
  %33 = trunc i32 %21 to i8, !dbg !14434
  %34 = xor i8 %33, -1, !dbg !14434
  %35 = and i8 %17, %34, !dbg !14434
  call void @llvm.dbg.value(metadata i8 %35, metadata !2685, metadata !DIExpression()), !dbg !14407
  %36 = icmp eq i8 %35, 0, !dbg !14435
  br i1 %36, label %12, label %37, !dbg !14437

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !14438
  %39 = sub i32 %10, %32, !dbg !14440
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.213, i32 0, i32 0), i32 noundef 1) #24, !dbg !14441
  %41 = add i32 %40, %32, !dbg !14442
  call void @llvm.dbg.value(metadata i32 %41, metadata !2683, metadata !DIExpression()), !dbg !14407
  br label %42, !dbg !14443

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !14407
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !14407
  call void @llvm.dbg.value(metadata i8 %44, metadata !2685, metadata !DIExpression()), !dbg !14407
  call void @llvm.dbg.value(metadata i32 %43, metadata !2683, metadata !DIExpression()), !dbg !14407
  %45 = add i8 %16, 1, !dbg !14444
  call void @llvm.dbg.value(metadata i8 %45, metadata !2686, metadata !DIExpression()), !dbg !14413
  br label %15, !dbg !14416

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.214, i32 0, i32 0), %3 ], !dbg !14407
  ret i8* %47, !dbg !14445
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !14446 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14450, metadata !DIExpression()), !dbg !14455
  call void @llvm.dbg.value(metadata i32 %1, metadata !14451, metadata !DIExpression()), !dbg !14455
  call void @llvm.dbg.value(metadata i8* %2, metadata !14452, metadata !DIExpression()), !dbg !14455
  call void @llvm.dbg.value(metadata i32 %3, metadata !14453, metadata !DIExpression()), !dbg !14455
  %5 = icmp ult i32 %1, %3, !dbg !14456
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !14456
  call void @llvm.dbg.value(metadata i32 %6, metadata !14454, metadata !DIExpression()), !dbg !14455
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #25, !dbg !14457
  ret i32 %6, !dbg !14458
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14459 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14463, metadata !DIExpression()), !dbg !14464
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #25, !dbg !14465
  ret void, !dbg !14466
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* nocapture readnone %9) local_unnamed_addr #1 !dbg !14467 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14476, metadata !DIExpression()), !dbg !14487
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !14477, metadata !DIExpression()), !dbg !14487
  call void @llvm.dbg.value(metadata i32 %2, metadata !14478, metadata !DIExpression()), !dbg !14487
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !14479, metadata !DIExpression()), !dbg !14487
  call void @llvm.dbg.value(metadata i8* %4, metadata !14480, metadata !DIExpression()), !dbg !14487
  call void @llvm.dbg.value(metadata i8* %5, metadata !14481, metadata !DIExpression()), !dbg !14487
  call void @llvm.dbg.value(metadata i8* %6, metadata !14482, metadata !DIExpression()), !dbg !14487
  call void @llvm.dbg.value(metadata i32 %7, metadata !14483, metadata !DIExpression()), !dbg !14487
  call void @llvm.dbg.value(metadata i32 %8, metadata !14484, metadata !DIExpression()), !dbg !14487
  call void @llvm.dbg.value(metadata i8* undef, metadata !14485, metadata !DIExpression()), !dbg !14487
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !14488
  tail call fastcc void @z_waitq_init(%struct._wait_q_t* noundef nonnull %11) #24, !dbg !14489
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !14490
  tail call void @z_init_thread_base(%struct._thread_base* noundef %12, i32 noundef %7, i32 noundef 4, i32 noundef %8) #24, !dbg !14491
  %13 = tail call fastcc i8* @setup_thread_stack(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) #24, !dbg !14492
  call void @llvm.dbg.value(metadata i8* %13, metadata !14486, metadata !DIExpression()), !dbg !14487
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %13, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #25, !dbg !14493
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !14494
  store i8* null, i8** %14, align 4, !dbg !14495
  %15 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14496
  %16 = icmp eq %struct.k_thread* %15, null, !dbg !14496
  br i1 %16, label %20, label %17, !dbg !14498

17:                                               ; preds = %10
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %15, i32 0, i32 6, !dbg !14499
  %19 = load %struct.k_heap*, %struct.k_heap** %18, align 8, !dbg !14499
  br label %20, !dbg !14500

20:                                               ; preds = %10, %17
  %21 = phi %struct.k_heap* [ %19, %17 ], [ null, %10 ], !dbg !14487
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !14501
  store %struct.k_heap* %21, %struct.k_heap** %22, align 8, !dbg !14503
  ret i8* %13, !dbg !14504
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%struct._wait_q_t* noundef %0) unnamed_addr #6 !dbg !14505 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !14510, metadata !DIExpression()), !dbg !14511
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !14512
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #24, !dbg !14513
  ret void, !dbg !14514
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #6 !dbg !14515 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !14520, metadata !DIExpression()), !dbg !14524
  call void @llvm.dbg.value(metadata i32 %1, metadata !14521, metadata !DIExpression()), !dbg !14524
  call void @llvm.dbg.value(metadata i32 %2, metadata !14522, metadata !DIExpression()), !dbg !14524
  call void @llvm.dbg.value(metadata i32 %3, metadata !14523, metadata !DIExpression()), !dbg !14524
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !14525
  store %struct._wait_q_t* null, %struct._wait_q_t** %5, align 8, !dbg !14526
  %6 = trunc i32 %3 to i8, !dbg !14527
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !14528
  store i8 %6, i8* %7, align 4, !dbg !14529
  %8 = trunc i32 %2 to i8, !dbg !14530
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !14531
  store i8 %8, i8* %9, align 1, !dbg !14532
  %10 = trunc i32 %1 to i8, !dbg !14533
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !14534
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !14534
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !14534
  store i8 %10, i8* %13, align 2, !dbg !14535
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !14536
  store i8 0, i8* %14, align 1, !dbg !14537
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #24, !dbg !14538
  ret void, !dbg !14539
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc i8* @setup_thread_stack(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) unnamed_addr #6 !dbg !14540 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14544, metadata !DIExpression()), !dbg !14552
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !14545, metadata !DIExpression()), !dbg !14552
  call void @llvm.dbg.value(metadata i32 %2, metadata !14546, metadata !DIExpression()), !dbg !14552
  call void @llvm.dbg.value(metadata i32 0, metadata !14551, metadata !DIExpression()), !dbg !14552
  %4 = add i32 %2, 7, !dbg !14553
  %5 = and i32 %4, -8, !dbg !14553
  %6 = add i32 %5, 64, !dbg !14553
  call void @llvm.dbg.value(metadata i32 %6, metadata !14547, metadata !DIExpression()), !dbg !14552
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER.224(%struct.z_thread_stack_element* noundef %1) #24, !dbg !14555
  call void @llvm.dbg.value(metadata i8* %7, metadata !14550, metadata !DIExpression()), !dbg !14552
  call void @llvm.dbg.value(metadata i32 %5, metadata !14548, metadata !DIExpression()), !dbg !14552
  %8 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %1, i32 %6, i32 0, !dbg !14556
  call void @llvm.dbg.value(metadata i8* %8, metadata !14549, metadata !DIExpression()), !dbg !14552
  call void @llvm.dbg.value(metadata i32 0, metadata !14551, metadata !DIExpression()), !dbg !14552
  %9 = ptrtoint i8* %7 to i32, !dbg !14557
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !14558
  store i32 %9, i32* %10, align 4, !dbg !14559
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !14560
  store i32 %5, i32* %11, align 4, !dbg !14561
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 2, !dbg !14562
  store i32 0, i32* %12, align 4, !dbg !14563
  call void @llvm.dbg.value(metadata i8* %8, metadata !14549, metadata !DIExpression()), !dbg !14552
  ret i8* %8, !dbg !14564
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER.224(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #4 !dbg !14565 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !14569, metadata !DIExpression()), !dbg !14570
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !14571
  ret i8* %2, !dbg !14572
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #6 !dbg !14573 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !14578, metadata !DIExpression()), !dbg !14579
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !14580
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #24, !dbg !14581
  ret void, !dbg !14582
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #6 !dbg !14583 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14585, metadata !DIExpression()), !dbg !14586
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14587
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #24, !dbg !14588
  ret void, !dbg !14589
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #6 !dbg !14590 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14594, metadata !DIExpression()), !dbg !14595
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14596
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !14597
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14598
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !14599
  ret void, !dbg !14600
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #6 !dbg !14601 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14606, metadata !DIExpression()), !dbg !14607
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14608
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !14609
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14610
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !14611
  ret void, !dbg !14612
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !14613 {
  %11 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %11, metadata !14630, metadata !DIExpression()), !dbg !14631
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14621, metadata !DIExpression()), !dbg !14631
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !14622, metadata !DIExpression()), !dbg !14631
  call void @llvm.dbg.value(metadata i32 %2, metadata !14623, metadata !DIExpression()), !dbg !14631
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !14624, metadata !DIExpression()), !dbg !14631
  call void @llvm.dbg.value(metadata i8* %4, metadata !14625, metadata !DIExpression()), !dbg !14631
  call void @llvm.dbg.value(metadata i8* %5, metadata !14626, metadata !DIExpression()), !dbg !14631
  call void @llvm.dbg.value(metadata i8* %6, metadata !14627, metadata !DIExpression()), !dbg !14631
  call void @llvm.dbg.value(metadata i32 %7, metadata !14628, metadata !DIExpression()), !dbg !14631
  call void @llvm.dbg.value(metadata i32 %8, metadata !14629, metadata !DIExpression()), !dbg !14631
  %12 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* undef) #24, !dbg !14632
  %13 = icmp eq i64 %11, -1, !dbg !14633
  br i1 %13, label %15, label %14, !dbg !14635

14:                                               ; preds = %10
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #24, !dbg !14636
  br label %15, !dbg !14638

15:                                               ; preds = %14, %10
  ret %struct.k_thread* %0, !dbg !14639
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14640 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !14645, metadata !DIExpression()), !dbg !14646
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14644, metadata !DIExpression()), !dbg !14646
  %4 = icmp eq i64 %3, 0, !dbg !14647
  br i1 %4, label %5, label %6, !dbg !14649

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start(%struct.k_thread* noundef %0) #24, !dbg !14650
  br label %7, !dbg !14652

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #24, !dbg !14653
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !14655
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14656 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14660, metadata !DIExpression()), !dbg !14661
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !14662, !srcloc !14664
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #24, !dbg !14665
  ret void, !dbg !14666
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14667 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14670, metadata !DIExpression()), !dbg !14671
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14669, metadata !DIExpression()), !dbg !14671
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14672
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #25, !dbg !14673
  ret void, !dbg !14674
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !14675 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !14677, metadata !DIExpression()), !dbg !14697
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %2, label %28, !dbg !14698

1:                                                ; preds = %2
  tail call void @k_sched_lock() #25, !dbg !14699
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !14695, metadata !DIExpression()), !dbg !14700
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %30, label %29, !dbg !14701

2:                                                ; preds = %0, %2
  %3 = phi %struct._static_thread_data* [ %26, %2 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !14677, metadata !DIExpression()), !dbg !14697
  %4 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !14702
  %5 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !14702
  %6 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !14705
  %7 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %6, align 4, !dbg !14705
  %8 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !14706
  %9 = load i32, i32* %8, align 4, !dbg !14706
  %10 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !14707
  %11 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %10, align 4, !dbg !14707
  %12 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !14708
  %13 = load i8*, i8** %12, align 4, !dbg !14708
  %14 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !14709
  %15 = load i8*, i8** %14, align 4, !dbg !14709
  %16 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !14710
  %17 = load i8*, i8** %16, align 4, !dbg !14710
  %18 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !14711
  %19 = load i32, i32* %18, align 4, !dbg !14711
  %20 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !14712
  %21 = load i32, i32* %20, align 4, !dbg !14712
  %22 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %5, %struct.z_thread_stack_element* noundef %7, i32 noundef %9, void (i8*, i8*, i8*)* noundef %11, i8* noundef %13, i8* noundef %15, i8* noundef %17, i32 noundef %19, i32 noundef %21, i8* undef) #24, !dbg !14713
  %23 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !14714
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %23, i32 0, i32 2, !dbg !14715
  %25 = bitcast i8** %24 to %struct._static_thread_data**, !dbg !14716
  store %struct._static_thread_data* %3, %struct._static_thread_data** %25, align 4, !dbg !14716
  %26 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !14717
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %26, metadata !14677, metadata !DIExpression()), !dbg !14697
  %27 = icmp ult %struct._static_thread_data* %26, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14718
  br i1 %27, label %2, label %1, !dbg !14698, !llvm.loop !14720

28:                                               ; preds = %0
  tail call void @k_sched_lock() #25, !dbg !14699
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !14695, metadata !DIExpression()), !dbg !14700
  br label %29, !dbg !14701

29:                                               ; preds = %43, %28, %1
  tail call void @k_sched_unlock() #25, !dbg !14722
  ret void, !dbg !14723

30:                                               ; preds = %1, %43
  %31 = phi %struct._static_thread_data* [ %44, %43 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %31, metadata !14695, metadata !DIExpression()), !dbg !14700
  %32 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 9, !dbg !14724
  %33 = load i32, i32* %32, align 4, !dbg !14724
  %34 = icmp eq i32 %33, -1, !dbg !14728
  br i1 %34, label %43, label %35, !dbg !14729

35:                                               ; preds = %30
  %36 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 0, !dbg !14730
  %37 = load %struct.k_thread*, %struct.k_thread** %36, align 4, !dbg !14730
  %38 = icmp sgt i32 %33, 0, !dbg !14732
  %39 = select i1 %38, i32 %33, i32 0, !dbg !14732
  %40 = zext i32 %39 to i64, !dbg !14732
  %41 = tail call fastcc i64 @k_ms_to_ticks_ceil64.227(i64 noundef %40) #24, !dbg !14732
  %42 = insertvalue [1 x i64] poison, i64 %41, 0, !dbg !14733
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %37, [1 x i64] %42) #24, !dbg !14733
  br label %43, !dbg !14734

43:                                               ; preds = %30, %35
  %44 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 1, !dbg !14735
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %44, metadata !14695, metadata !DIExpression()), !dbg !14700
  %45 = icmp ult %struct._static_thread_data* %44, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14736
  br i1 %45, label %30, label %29, !dbg !14701, !llvm.loop !14738
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64.227(i64 noundef %0) unnamed_addr #4 !dbg !14740 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !14742, metadata !DIExpression()), !dbg !14743
  call void @llvm.dbg.value(metadata i64 %0, metadata !14744, metadata !DIExpression()), !dbg !14759
  call void @llvm.dbg.value(metadata i32 1000, metadata !14747, metadata !DIExpression()), !dbg !14759
  call void @llvm.dbg.value(metadata i32 10000, metadata !14748, metadata !DIExpression()), !dbg !14759
  call void @llvm.dbg.value(metadata i8 1, metadata !14749, metadata !DIExpression()), !dbg !14759
  call void @llvm.dbg.value(metadata i8 0, metadata !14750, metadata !DIExpression()), !dbg !14759
  call void @llvm.dbg.value(metadata i8 1, metadata !14751, metadata !DIExpression()), !dbg !14759
  call void @llvm.dbg.value(metadata i8 0, metadata !14752, metadata !DIExpression()), !dbg !14759
  call void @llvm.dbg.value(metadata i8 1, metadata !14753, metadata !DIExpression()), !dbg !14759
  call void @llvm.dbg.value(metadata i8 0, metadata !14754, metadata !DIExpression()), !dbg !14759
  call void @llvm.dbg.value(metadata i64 0, metadata !14755, metadata !DIExpression()), !dbg !14759
  call void @llvm.dbg.value(metadata i64 0, metadata !14755, metadata !DIExpression()), !dbg !14759
  %2 = mul i64 %0, 10, !dbg !14761
  ret i64 %2, !dbg !14767
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #2 !dbg !14768 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !14770, metadata !DIExpression()), !dbg !14774
  call void @llvm.dbg.value(metadata i8* %1, metadata !14771, metadata !DIExpression()), !dbg !14774
  call void @llvm.dbg.value(metadata i8* %2, metadata !14772, metadata !DIExpression()), !dbg !14774
  call void @llvm.dbg.value(metadata i8* %3, metadata !14773, metadata !DIExpression()), !dbg !14774
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14775
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !14776
  %7 = load i8, i8* %6, align 4, !dbg !14777
  %8 = or i8 %7, 4, !dbg !14777
  store i8 %8, i8* %6, align 4, !dbg !14777
  tail call void @z_thread_essential_clear() #24, !dbg !14778
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #27, !dbg !14779
  unreachable, !dbg !14779
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #4 !dbg !14780 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14784, metadata !DIExpression()), !dbg !14785
  ret i32 -134, !dbg !14786
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #4 !dbg !14787 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14791, metadata !DIExpression()), !dbg !14793
  call void @llvm.dbg.value(metadata i32 %1, metadata !14792, metadata !DIExpression()), !dbg !14793
  ret i32 -134, !dbg !14794
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct.k_spinlock* noundef readnone %1) local_unnamed_addr #4 !dbg !14795 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14802, metadata !DIExpression()), !dbg !14804
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %1, metadata !14803, metadata !DIExpression()), !dbg !14804
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !14805
  %4 = icmp eq %struct.k_spinlock* %1, null
  %5 = or i1 %3, %4, !dbg !14807
  %6 = select i1 %5, i32 -22, i32 0, !dbg !14804
  ret i32 %6, !dbg !14808
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct.k_spinlock* noundef readnone %0) local_unnamed_addr #4 !dbg !14809 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14813, metadata !DIExpression()), !dbg !14814
  %2 = icmp eq %struct.k_spinlock* %0, null, !dbg !14815
  %3 = select i1 %2, i32 -22, i32 0, !dbg !14814
  ret i32 %3, !dbg !14817
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !14818 {
  tail call void @sys_clock_idle_exit() #25, !dbg !14820
  ret void, !dbg !14821
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #2 !dbg !14822 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14824, metadata !DIExpression()), !dbg !14827
  call void @llvm.dbg.value(metadata i8* %1, metadata !14825, metadata !DIExpression()), !dbg !14827
  call void @llvm.dbg.value(metadata i8* %2, metadata !14826, metadata !DIExpression()), !dbg !14827
  br label %4, !dbg !14828

4:                                                ; preds = %3, %4
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14829, !srcloc !14836
  call void @llvm.dbg.value(metadata i32 undef, metadata !14832, metadata !DIExpression()) #23, !dbg !14837
  call void @llvm.dbg.value(metadata i32 undef, metadata !14833, metadata !DIExpression()) #23, !dbg !14837
  tail call fastcc void @k_cpu_idle() #24, !dbg !14838
  br label %4, !dbg !14828, !llvm.loop !14839
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !14841 {
  tail call void @arch_cpu_idle() #25, !dbg !14842
  ret void, !dbg !14843
}

; Function Attrs: optsize
declare !dbg !14844 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #10 !dbg !14845 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14849, metadata !DIExpression()), !dbg !14853
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14850, metadata !DIExpression()), !dbg !14853
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !14854
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !14854
  %5 = load i8, i8* %4, align 2, !dbg !14854
  call void @llvm.dbg.value(metadata i8 %5, metadata !14851, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !14853
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !14855
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !14855
  %8 = load i8, i8* %7, align 2, !dbg !14855
  call void @llvm.dbg.value(metadata i8 %8, metadata !14852, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !14853
  %9 = icmp eq i8 %8, %5, !dbg !14856
  %10 = sext i8 %5 to i32, !dbg !14858
  %11 = sext i8 %8 to i32, !dbg !14858
  %12 = sub nsw i32 %11, %10, !dbg !14858
  %13 = select i1 %9, i32 0, i32 %12, !dbg !14858
  ret i32 %13, !dbg !14859
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !14860 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !14864, metadata !DIExpression()), !dbg !14865
  %2 = tail call fastcc i32 @slice_time() #24, !dbg !14866
  %3 = icmp eq i32 %2, 0, !dbg !14868
  br i1 %3, label %8, label %4, !dbg !14869

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #25, !dbg !14870
  %6 = add i32 %5, %2, !dbg !14872
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14873
  %7 = tail call fastcc i32 @slice_time() #24, !dbg !14874
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #25, !dbg !14875
  br label %8, !dbg !14876

8:                                                ; preds = %4, %1
  ret void, !dbg !14877
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #10 !dbg !14878 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !14882, metadata !DIExpression()), !dbg !14884
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !14885
  call void @llvm.dbg.value(metadata i32 %1, metadata !14883, metadata !DIExpression()), !dbg !14884
  ret i32 %1, !dbg !14886
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !14887 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14891, metadata !DIExpression()), !dbg !14900
  call void @llvm.dbg.value(metadata i32 %1, metadata !14892, metadata !DIExpression()), !dbg !14900
  call void @llvm.dbg.value(metadata i32 0, metadata !14893, metadata !DIExpression()), !dbg !14901
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14902, metadata !DIExpression()) #23, !dbg !14909
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14911, !srcloc !14917
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !14911
  call void @llvm.dbg.value(metadata i32 %4, metadata !14914, metadata !DIExpression()) #23, !dbg !14918
  call void @llvm.dbg.value(metadata i32 undef, metadata !14915, metadata !DIExpression()) #23, !dbg !14918
  call void @llvm.dbg.value(metadata i32 %4, metadata !14908, metadata !DIExpression()) #23, !dbg !14909
  call void @llvm.dbg.value(metadata i32 %4, metadata !14899, metadata !DIExpression()), !dbg !14901
  call void @llvm.dbg.value(metadata i32 undef, metadata !14893, metadata !DIExpression()), !dbg !14901
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14919
  %5 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #24, !dbg !14922
  %6 = icmp sgt i32 %0, 0, !dbg !14923
  %7 = icmp sgt i32 %5, 2, !dbg !14925
  %8 = select i1 %7, i32 %5, i32 2, !dbg !14925
  %9 = select i1 %6, i32 %8, i32 %5, !dbg !14925
  store i32 %9, i32* @slice_ticks, align 4, !dbg !14926
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !14927
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !14928
  call void @llvm.dbg.value(metadata i32 %4, metadata !14929, metadata !DIExpression()) #23, !dbg !14935
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14934, metadata !DIExpression()) #23, !dbg !14935
  call void @llvm.dbg.value(metadata i32 %4, metadata !14937, metadata !DIExpression()) #23, !dbg !14940
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !14942, !srcloc !14943
  call void @llvm.dbg.value(metadata i32 1, metadata !14893, metadata !DIExpression()), !dbg !14901
  call void @llvm.dbg.value(metadata i32 undef, metadata !14893, metadata !DIExpression()), !dbg !14901
  ret void, !dbg !14944
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #4 !dbg !14945 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14947, metadata !DIExpression()), !dbg !14948
  call void @llvm.dbg.value(metadata i32 %0, metadata !14949, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14964
  call void @llvm.dbg.value(metadata i32 1000, metadata !14952, metadata !DIExpression()), !dbg !14964
  call void @llvm.dbg.value(metadata i32 10000, metadata !14953, metadata !DIExpression()), !dbg !14964
  call void @llvm.dbg.value(metadata i8 1, metadata !14954, metadata !DIExpression()), !dbg !14964
  call void @llvm.dbg.value(metadata i1 true, metadata !14955, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14964
  call void @llvm.dbg.value(metadata i1 true, metadata !14956, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14964
  call void @llvm.dbg.value(metadata i8 0, metadata !14957, metadata !DIExpression()), !dbg !14964
  call void @llvm.dbg.value(metadata i1 true, metadata !14958, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14964
  call void @llvm.dbg.value(metadata i1 false, metadata !14959, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14964
  call void @llvm.dbg.value(metadata i64 0, metadata !14960, metadata !DIExpression()), !dbg !14964
  call void @llvm.dbg.value(metadata i64 0, metadata !14960, metadata !DIExpression()), !dbg !14964
  %2 = mul i32 %0, 10, !dbg !14966
  ret i32 %2, !dbg !14972
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !14973 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14975, metadata !DIExpression()), !dbg !14977
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14902, metadata !DIExpression()) #23, !dbg !14978
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14980, !srcloc !14917
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14980
  call void @llvm.dbg.value(metadata i32 %3, metadata !14914, metadata !DIExpression()) #23, !dbg !14982
  call void @llvm.dbg.value(metadata i32 undef, metadata !14915, metadata !DIExpression()) #23, !dbg !14982
  call void @llvm.dbg.value(metadata i32 %3, metadata !14908, metadata !DIExpression()) #23, !dbg !14978
  call void @llvm.dbg.value(metadata i32 %3, metadata !14976, metadata !DIExpression()), !dbg !14977
  %4 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !14983
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14985
  %6 = icmp eq %struct.k_thread* %4, %5, !dbg !14986
  br i1 %6, label %7, label %8, !dbg !14987

7:                                                ; preds = %1
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !14988
  call void @llvm.dbg.value(metadata i32 %3, metadata !14929, metadata !DIExpression()) #23, !dbg !14990
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14934, metadata !DIExpression()) #23, !dbg !14990
  call void @llvm.dbg.value(metadata i32 %3, metadata !14937, metadata !DIExpression()) #23, !dbg !14992
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !14994, !srcloc !14943
  br label %24, !dbg !14995

8:                                                ; preds = %1
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !14996
  %9 = tail call fastcc i32 @slice_time() #24, !dbg !14997
  %10 = icmp eq i32 %9, 0, !dbg !14997
  br i1 %10, label %21, label %11, !dbg !14999

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %5) #24, !dbg !15000
  br i1 %12, label %13, label %21, !dbg !15001

13:                                               ; preds = %11
  %14 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !15002
  %15 = icmp sgt i32 %14, %0, !dbg !15005
  br i1 %15, label %19, label %16, !dbg !15006

16:                                               ; preds = %13
  %17 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !15007
  %18 = tail call fastcc i32 @slice_expired_locked([1 x i32] %17) #24, !dbg !15007
  call void @llvm.dbg.value(metadata i32 %18, metadata !14976, metadata !DIExpression()), !dbg !14977
  br label %22, !dbg !15009

19:                                               ; preds = %13
  %20 = sub nsw i32 %14, %0, !dbg !15010
  store i32 %20, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !15010
  br label %22

21:                                               ; preds = %11, %8
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !15012
  br label %22

22:                                               ; preds = %16, %19, %21
  %23 = phi i32 [ %18, %16 ], [ %3, %19 ], [ %3, %21 ], !dbg !14977
  call void @llvm.dbg.value(metadata i32 %23, metadata !14976, metadata !DIExpression()), !dbg !14977
  call void @llvm.dbg.value(metadata i32 %23, metadata !14929, metadata !DIExpression()) #23, !dbg !15014
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14934, metadata !DIExpression()) #23, !dbg !15014
  call void @llvm.dbg.value(metadata i32 %23, metadata !14937, metadata !DIExpression()) #23, !dbg !15016
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %23) #23, !dbg !15018, !srcloc !14943
  br label %24, !dbg !15019

24:                                               ; preds = %22, %7
  ret void, !dbg !15019
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #10 !dbg !15020 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15024, metadata !DIExpression()), !dbg !15026
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #24, !dbg !15027
  %3 = icmp eq i32 %2, 0, !dbg !15027
  br i1 %3, label %16, label %4, !dbg !15028

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #24, !dbg !15029
  br i1 %5, label %16, label %6, !dbg !15030

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !15031
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !15031
  %9 = load i8, i8* %8, align 2, !dbg !15031
  %10 = sext i8 %9 to i32, !dbg !15032
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !15033
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %10, i32 noundef %11) #24, !dbg !15034
  br i1 %12, label %16, label %13, !dbg !15035

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #24, !dbg !15036
  %15 = xor i1 %14, true, !dbg !15037
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !15026
  call void @llvm.dbg.value(metadata i1 %17, metadata !15025, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15026
  ret i1 %17, !dbg !15038
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !15039 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !15043, metadata !DIExpression()), !dbg !15045
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15046
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15044, metadata !DIExpression()), !dbg !15045
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #24, !dbg !15047
  br i1 %3, label %5, label %4, !dbg !15049

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #24, !dbg !15050
  br label %5, !dbg !15052

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !15043, metadata !DIExpression()), !dbg !15045
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !15053
  ret i32 %6, !dbg !15054
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !15055 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15057, metadata !DIExpression()), !dbg !15059
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15060
  %3 = load i8, i8* %2, align 1, !dbg !15060
  call void @llvm.dbg.value(metadata i8 %3, metadata !15058, metadata !DIExpression()), !dbg !15059
  %4 = and i8 %3, 31, !dbg !15061
  %5 = icmp ne i8 %4, 0, !dbg !15062
  ret i1 %5, !dbg !15063
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15064 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15066, metadata !DIExpression()), !dbg !15067
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !15068
  br i1 %2, label %3, label %7, !dbg !15070

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15071, metadata !DIExpression()) #23, !dbg !15074
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15077
  %5 = load i8, i8* %4, align 1, !dbg !15078
  %6 = and i8 %5, 127, !dbg !15078
  store i8 %6, i8* %4, align 1, !dbg !15078
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15079, metadata !DIExpression()) #23, !dbg !15082
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !15086
  br label %7, !dbg !15087

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15088, metadata !DIExpression()) #23, !dbg !15091
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15093
  %9 = load i8, i8* %8, align 1, !dbg !15094
  %10 = or i8 %9, -128, !dbg !15094
  store i8 %10, i8* %8, align 1, !dbg !15094
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15095, metadata !DIExpression()) #23, !dbg !15098
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !15102, metadata !DIExpression()) #23, !dbg !15110
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15108, metadata !DIExpression()) #23, !dbg !15110
  %11 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !15112
  call void @llvm.dbg.value(metadata %struct._dnode* %11, metadata !15109, metadata !DIExpression()) #23, !dbg !15110
  %12 = icmp eq %struct._dnode* %11, null, !dbg !15114
  br i1 %12, label %23, label %13, !dbg !15112

13:                                               ; preds = %7, %20
  %14 = phi %struct._dnode* [ %21, %20 ], [ %11, %7 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %14, metadata !15109, metadata !DIExpression()) #23, !dbg !15110
  %15 = bitcast %struct._dnode* %14 to %struct.k_thread*, !dbg !15116
  call void @llvm.dbg.value(metadata %struct.k_thread* %15, metadata !15109, metadata !DIExpression()) #23, !dbg !15110
  %16 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %15) #25, !dbg !15117
  %17 = icmp sgt i32 %16, 0, !dbg !15120
  br i1 %17, label %18, label %20, !dbg !15121

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15122
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %14, %struct._dnode* noundef %19) #25, !dbg !15124
  br label %25, !dbg !15125

20:                                               ; preds = %13
  %21 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %14) #25, !dbg !15114
  call void @llvm.dbg.value(metadata %struct._dnode* %21, metadata !15109, metadata !DIExpression()) #23, !dbg !15110
  %22 = icmp eq %struct._dnode* %21, null, !dbg !15114
  br i1 %22, label %23, label %13, !dbg !15112, !llvm.loop !15126

23:                                               ; preds = %20, %7
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15128
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %24) #25, !dbg !15129
  br label %25, !dbg !15130

25:                                               ; preds = %18, %23
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15131
  %27 = icmp eq %struct.k_thread* %26, %0, !dbg !15132
  %28 = zext i1 %27 to i32, !dbg !15132
  tail call fastcc void @update_cache(i32 noundef %28) #24, !dbg !15133
  ret void, !dbg !15134
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !15135 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15137, metadata !DIExpression()), !dbg !15138
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0) #24, !dbg !15139
  ret i1 %2, !dbg !15140
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* nocapture noundef %1) local_unnamed_addr #11 !dbg !15141 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !15143, metadata !DIExpression()), !dbg !15145
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15144, metadata !DIExpression()), !dbg !15145
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !15146
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %3) #24, !dbg !15147
  ret void, !dbg !15148
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #10 !dbg !15149 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15153, metadata !DIExpression()), !dbg !15154
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #24, !dbg !15155
  br i1 %2, label %6, label %3, !dbg !15155

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15156
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !15156
  br label %6, !dbg !15155

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !15155
  ret %struct._dnode* %7, !dbg !15157
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #11 !dbg !15158 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15162, metadata !DIExpression()), !dbg !15166
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15163, metadata !DIExpression()), !dbg !15166
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15167
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !15167
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !15164, metadata !DIExpression()), !dbg !15166
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !15168
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !15169
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !15170
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !15171
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !15172
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !15173
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !15174
  ret void, !dbg !15175
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #10 !dbg !15176 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15180, metadata !DIExpression()), !dbg !15182
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15181, metadata !DIExpression()), !dbg !15182
  %3 = icmp eq %struct._dnode* %1, null, !dbg !15183
  br i1 %3, label %6, label %4, !dbg !15184

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #24, !dbg !15185
  br label %6, !dbg !15184

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !15184
  ret %struct._dnode* %7, !dbg !15186
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #11 !dbg !15187 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15191, metadata !DIExpression()), !dbg !15194
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15192, metadata !DIExpression()), !dbg !15194
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15195
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !15195
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !15193, metadata !DIExpression()), !dbg !15194
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !15196
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !15197
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !15198
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !15199
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !15200
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !15201
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !15202
  ret void, !dbg !15203
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !15204 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15206, metadata !DIExpression()), !dbg !15208
  %2 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !15209
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15216, metadata !DIExpression()) #23, !dbg !15218
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !15219
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !15220
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %2, !dbg !15220
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !15207, metadata !DIExpression()), !dbg !15208
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !15221, metadata !DIExpression()) #23, !dbg !15227
  call void @llvm.dbg.value(metadata i32 %0, metadata !15226, metadata !DIExpression()) #23, !dbg !15227
  %6 = icmp eq i32 %0, 0, !dbg !15230
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15232
  br i1 %6, label %8, label %15, !dbg !15233

8:                                                ; preds = %1
  %9 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %7) #25, !dbg !15234
  br i1 %9, label %15, label %10, !dbg !15236

10:                                               ; preds = %8
  %11 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %5) #25, !dbg !15237
  br i1 %11, label %15, label %12, !dbg !15239

12:                                               ; preds = %10
  %13 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %7) #25, !dbg !15240
  %14 = icmp eq i32 %13, 0, !dbg !15240
  br i1 %14, label %18, label %15, !dbg !15242

15:                                               ; preds = %1, %10, %8, %12
  %16 = icmp eq %struct.k_thread* %5, %7, !dbg !15243
  br i1 %16, label %18, label %17, !dbg !15246

17:                                               ; preds = %15
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !15247
  br label %18, !dbg !15249

18:                                               ; preds = %12, %15, %17
  %19 = phi %struct.k_thread* [ %5, %17 ], [ %5, %15 ], [ %7, %12 ], !dbg !15232
  store %struct.k_thread* %19, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !15232
  ret void, !dbg !15250
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #10 !dbg !15251 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15255, metadata !DIExpression()), !dbg !15258
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15256, metadata !DIExpression()), !dbg !15258
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) #24, !dbg !15259
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !15257, metadata !DIExpression()), !dbg !15258
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !15256, metadata !DIExpression()), !dbg !15258
  ret %struct.k_thread* %3, !dbg !15260
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !15261 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15263, metadata !DIExpression()), !dbg !15264
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15265
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #24, !dbg !15266
  %4 = xor i1 %3, true, !dbg !15267
  ret i1 %4, !dbg !15268
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !15269 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15271, metadata !DIExpression()), !dbg !15272
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !15273
  %3 = load i16, i16* %2, align 2, !dbg !15273
  %4 = icmp ult i16 %3, 128, !dbg !15274
  %5 = zext i1 %4 to i32, !dbg !15274
  ret i32 %5, !dbg !15275
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #10 !dbg !15276 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15282, metadata !DIExpression()), !dbg !15283
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !15284
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #24, !dbg !15285
  %4 = xor i1 %3, true, !dbg !15286
  ret i1 %4, !dbg !15287
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #10 !dbg !15288 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15294, metadata !DIExpression()), !dbg !15295
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15296
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15296
  %4 = icmp ne %struct._dnode* %3, null, !dbg !15297
  ret i1 %4, !dbg !15298
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #10 !dbg !15299 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15301, metadata !DIExpression()), !dbg !15303
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15302, metadata !DIExpression()), !dbg !15303
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15304
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !15304
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !15305
  br i1 %5, label %9, label %6, !dbg !15306

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !15307
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !15307
  br label %9, !dbg !15306

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !15306
  ret %struct._dnode* %10, !dbg !15308
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #10 !dbg !15309 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15313, metadata !DIExpression()), !dbg !15314
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15315
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15315
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !15316
  ret i1 %4, !dbg !15317
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #11 !dbg !15318 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15322, metadata !DIExpression()), !dbg !15325
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15326
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15326
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !15323, metadata !DIExpression()), !dbg !15325
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15327
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !15327
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !15324, metadata !DIExpression()), !dbg !15325
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !15328
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !15329
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !15330
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !15331
  tail call fastcc void @sys_dnode_init.230(%struct._dnode* noundef %0) #24, !dbg !15332
  ret void, !dbg !15333
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.230(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #6 !dbg !15334 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15336, metadata !DIExpression()), !dbg !15337
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15338
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !15339
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15340
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !15341
  ret void, !dbg !15342
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !15343 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15347, metadata !DIExpression()), !dbg !15349
  call void @llvm.dbg.value(metadata i32 128, metadata !15348, metadata !DIExpression()), !dbg !15349
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15350
  %3 = load i8, i8* %2, align 1, !dbg !15350
  %4 = icmp slt i8 %3, 0, !dbg !15351
  ret i1 %4, !dbg !15352
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !15353 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15357, metadata !DIExpression()), !dbg !15359
  call void @llvm.dbg.value(metadata i32 %1, metadata !15358, metadata !DIExpression()), !dbg !15359
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #24, !dbg !15360
  ret i1 %3, !dbg !15361
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #4 !dbg !15362 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15364, metadata !DIExpression()), !dbg !15365
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !15366
  ret i1 %2, !dbg !15367
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !15368 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15370, metadata !DIExpression()), !dbg !15372
  call void @llvm.dbg.value(metadata i32 %1, metadata !15371, metadata !DIExpression()), !dbg !15372
  %3 = icmp slt i32 %0, %1, !dbg !15373
  ret i1 %3, !dbg !15374
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15375 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15377, metadata !DIExpression()), !dbg !15381
  call void @llvm.dbg.value(metadata i32 0, metadata !15378, metadata !DIExpression()), !dbg !15382
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14902, metadata !DIExpression()) #23, !dbg !15383
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15385, !srcloc !14917
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15385
  call void @llvm.dbg.value(metadata i32 %3, metadata !14914, metadata !DIExpression()) #23, !dbg !15387
  call void @llvm.dbg.value(metadata i32 undef, metadata !14915, metadata !DIExpression()) #23, !dbg !15387
  call void @llvm.dbg.value(metadata i32 %3, metadata !14908, metadata !DIExpression()) #23, !dbg !15383
  call void @llvm.dbg.value(metadata i32 %3, metadata !15380, metadata !DIExpression()), !dbg !15382
  call void @llvm.dbg.value(metadata i32 undef, metadata !15378, metadata !DIExpression()), !dbg !15382
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !15388
  call void @llvm.dbg.value(metadata i32 %3, metadata !14929, metadata !DIExpression()) #23, !dbg !15393
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14934, metadata !DIExpression()) #23, !dbg !15393
  call void @llvm.dbg.value(metadata i32 %3, metadata !14937, metadata !DIExpression()) #23, !dbg !15395
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !15397, !srcloc !14943
  call void @llvm.dbg.value(metadata i32 1, metadata !15378, metadata !DIExpression()), !dbg !15382
  call void @llvm.dbg.value(metadata i32 undef, metadata !15378, metadata !DIExpression()), !dbg !15382
  ret void, !dbg !15398
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15399 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15401, metadata !DIExpression()), !dbg !15402
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !15403
  br i1 %2, label %24, label %3, !dbg !15405

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #24, !dbg !15406
  br i1 %4, label %5, label %24, !dbg !15407

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15088, metadata !DIExpression()) #23, !dbg !15408
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15411
  %7 = load i8, i8* %6, align 1, !dbg !15412
  %8 = or i8 %7, -128, !dbg !15412
  store i8 %8, i8* %6, align 1, !dbg !15412
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15095, metadata !DIExpression()) #23, !dbg !15413
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !15102, metadata !DIExpression()) #23, !dbg !15415
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15108, metadata !DIExpression()) #23, !dbg !15415
  %9 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !15417
  call void @llvm.dbg.value(metadata %struct._dnode* %9, metadata !15109, metadata !DIExpression()) #23, !dbg !15415
  %10 = icmp eq %struct._dnode* %9, null, !dbg !15418
  br i1 %10, label %21, label %11, !dbg !15417

11:                                               ; preds = %5, %18
  %12 = phi %struct._dnode* [ %19, %18 ], [ %9, %5 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %12, metadata !15109, metadata !DIExpression()) #23, !dbg !15415
  %13 = bitcast %struct._dnode* %12 to %struct.k_thread*, !dbg !15419
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !15109, metadata !DIExpression()) #23, !dbg !15415
  %14 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %13) #25, !dbg !15420
  %15 = icmp sgt i32 %14, 0, !dbg !15421
  br i1 %15, label %16, label %18, !dbg !15422

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15423
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %12, %struct._dnode* noundef %17) #25, !dbg !15424
  br label %23, !dbg !15425

18:                                               ; preds = %11
  %19 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %12) #25, !dbg !15418
  call void @llvm.dbg.value(metadata %struct._dnode* %19, metadata !15109, metadata !DIExpression()) #23, !dbg !15415
  %20 = icmp eq %struct._dnode* %19, null, !dbg !15418
  br i1 %20, label %21, label %11, !dbg !15417, !llvm.loop !15426

21:                                               ; preds = %18, %5
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15428
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %22) #25, !dbg !15429
  br label %23, !dbg !15430

23:                                               ; preds = %16, %21
  tail call fastcc void @update_cache(i32 noundef 0) #24, !dbg !15431
  br label %24, !dbg !15432

24:                                               ; preds = %23, %3, %1
  ret void, !dbg !15433
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !15434 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15436, metadata !DIExpression()), !dbg !15437
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #24, !dbg !15438
  br i1 %2, label %6, label %3, !dbg !15439

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #24, !dbg !15440
  %5 = xor i1 %4, true, !dbg !15439
  br label %6, !dbg !15439

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !15441
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15442 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15444, metadata !DIExpression()), !dbg !15448
  call void @llvm.dbg.value(metadata i32 0, metadata !15445, metadata !DIExpression()), !dbg !15449
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14902, metadata !DIExpression()) #23, !dbg !15450
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15452, !srcloc !14917
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15452
  call void @llvm.dbg.value(metadata i32 %3, metadata !14914, metadata !DIExpression()) #23, !dbg !15454
  call void @llvm.dbg.value(metadata i32 undef, metadata !14915, metadata !DIExpression()) #23, !dbg !15454
  call void @llvm.dbg.value(metadata i32 %3, metadata !14908, metadata !DIExpression()) #23, !dbg !15450
  call void @llvm.dbg.value(metadata i32 %3, metadata !15447, metadata !DIExpression()), !dbg !15449
  call void @llvm.dbg.value(metadata i32 undef, metadata !15445, metadata !DIExpression()), !dbg !15449
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #24, !dbg !15455
  call void @llvm.dbg.value(metadata i32 %3, metadata !14929, metadata !DIExpression()) #23, !dbg !15458
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14934, metadata !DIExpression()) #23, !dbg !15458
  call void @llvm.dbg.value(metadata i32 %3, metadata !14937, metadata !DIExpression()) #23, !dbg !15460
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !15462, !srcloc !14943
  call void @llvm.dbg.value(metadata i32 1, metadata !15445, metadata !DIExpression()), !dbg !15449
  call void @llvm.dbg.value(metadata i32 undef, metadata !15445, metadata !DIExpression()), !dbg !15449
  ret void, !dbg !15463
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15464 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15466, metadata !DIExpression()), !dbg !15468
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14902, metadata !DIExpression()) #23, !dbg !15469
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15471, !srcloc !14917
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15471
  call void @llvm.dbg.value(metadata i32 %3, metadata !14914, metadata !DIExpression()) #23, !dbg !15473
  call void @llvm.dbg.value(metadata i32 undef, metadata !14915, metadata !DIExpression()) #23, !dbg !15473
  call void @llvm.dbg.value(metadata i32 %3, metadata !14908, metadata !DIExpression()) #23, !dbg !15469
  call void @llvm.dbg.value(metadata i32 %3, metadata !15467, metadata !DIExpression()), !dbg !15468
  %4 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #24, !dbg !15474
  br i1 %4, label %5, label %6, !dbg !15476

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !14929, metadata !DIExpression()) #23, !dbg !15477
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14934, metadata !DIExpression()) #23, !dbg !15477
  call void @llvm.dbg.value(metadata i32 %3, metadata !14937, metadata !DIExpression()) #23, !dbg !15480
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !15482, !srcloc !14943
  br label %8, !dbg !15483

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_started.235(%struct.k_thread* noundef %0) #24, !dbg !15484
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !15485
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !15486
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #24, !dbg !15486
  br label %8, !dbg !15487

8:                                                ; preds = %6, %5
  ret void, !dbg !15487
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !15488 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15490, metadata !DIExpression()), !dbg !15491
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15492
  %3 = load i8, i8* %2, align 1, !dbg !15492
  %4 = and i8 %3, 4, !dbg !15493
  %5 = icmp eq i8 %4, 0, !dbg !15494
  ret i1 %5, !dbg !15495
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.235(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !15496 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15498, metadata !DIExpression()), !dbg !15499
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15500
  %3 = load i8, i8* %2, align 1, !dbg !15501
  %4 = and i8 %3, -5, !dbg !15501
  store i8 %4, i8* %2, align 1, !dbg !15501
  ret void, !dbg !15502
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !15503 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !15506, metadata !DIExpression()), !dbg !15507
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15505, metadata !DIExpression()), !dbg !15507
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #24, !dbg !15508
  br i1 %4, label %5, label %9, !dbg !15510

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #24, !dbg !15511
  br i1 %6, label %7, label %9, !dbg !15512

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 %3, metadata !15513, metadata !DIExpression()) #23, !dbg !15519
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15518, metadata !DIExpression()) #23, !dbg !15519
  %8 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #25, !dbg !15522
  br label %10, !dbg !15523

9:                                                ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 %3, metadata !14929, metadata !DIExpression()) #23, !dbg !15524
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14934, metadata !DIExpression()) #23, !dbg !15524
  call void @llvm.dbg.value(metadata i32 %3, metadata !14937, metadata !DIExpression()) #23, !dbg !15527
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !15529, !srcloc !14943
  br label %10

10:                                               ; preds = %9, %7
  ret void, !dbg !15530
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !15531 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15535, metadata !DIExpression()), !dbg !15536
  call void @llvm.dbg.value(metadata i32 %0, metadata !15537, metadata !DIExpression()), !dbg !15542
  %2 = icmp eq i32 %0, 0, !dbg !15544
  br i1 %2, label %3, label %6, !dbg !15545

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15546, !srcloc !15553
  call void @llvm.dbg.value(metadata i32 %4, metadata !15549, metadata !DIExpression()) #23, !dbg !15554
  %5 = icmp eq i32 %4, 0, !dbg !15555
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !15536
  ret i1 %7, !dbg !15556
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #10 !dbg !15557 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !15560
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15559, metadata !DIExpression()), !dbg !15561
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15562
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !15563
  ret i1 %3, !dbg !15564
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !15565 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15567, metadata !DIExpression()), !dbg !15569
  %2 = tail call i32 @arch_swap(i32 noundef %0) #25, !dbg !15570
  call void @llvm.dbg.value(metadata i32 %2, metadata !15568, metadata !DIExpression()), !dbg !15569
  ret i32 %2, !dbg !15571
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15572 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15574, metadata !DIExpression()), !dbg !15578
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !15579
  call void @llvm.dbg.value(metadata i32 0, metadata !15575, metadata !DIExpression()), !dbg !15580
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14902, metadata !DIExpression()) #23, !dbg !15581
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15583, !srcloc !14917
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !15583
  call void @llvm.dbg.value(metadata i32 %4, metadata !14914, metadata !DIExpression()) #23, !dbg !15585
  call void @llvm.dbg.value(metadata i32 undef, metadata !14915, metadata !DIExpression()) #23, !dbg !15585
  call void @llvm.dbg.value(metadata i32 %4, metadata !14908, metadata !DIExpression()) #23, !dbg !15581
  call void @llvm.dbg.value(metadata i32 %4, metadata !15577, metadata !DIExpression()), !dbg !15580
  call void @llvm.dbg.value(metadata i32 undef, metadata !15575, metadata !DIExpression()), !dbg !15580
  %5 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !15586
  br i1 %5, label %6, label %10, !dbg !15590

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15071, metadata !DIExpression()) #23, !dbg !15591
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15594
  %8 = load i8, i8* %7, align 1, !dbg !15595
  %9 = and i8 %8, 127, !dbg !15595
  store i8 %9, i8* %7, align 1, !dbg !15595
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15079, metadata !DIExpression()) #23, !dbg !15596
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !15598
  br label %10, !dbg !15599

10:                                               ; preds = %6, %1
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #24, !dbg !15600
  %11 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15601
  %12 = icmp eq %struct.k_thread* %11, %0, !dbg !15602
  %13 = zext i1 %12 to i32, !dbg !15602
  tail call fastcc void @update_cache(i32 noundef %13) #24, !dbg !15603
  call void @llvm.dbg.value(metadata i32 %4, metadata !14929, metadata !DIExpression()) #23, !dbg !15604
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14934, metadata !DIExpression()) #23, !dbg !15604
  call void @llvm.dbg.value(metadata i32 %4, metadata !14937, metadata !DIExpression()) #23, !dbg !15606
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !15608, !srcloc !14943
  call void @llvm.dbg.value(metadata i32 1, metadata !15575, metadata !DIExpression()), !dbg !15580
  call void @llvm.dbg.value(metadata i32 undef, metadata !15575, metadata !DIExpression()), !dbg !15580
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15609
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !15611
  br i1 %15, label %16, label %17, !dbg !15612

16:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !15613
  br label %17, !dbg !15615

17:                                               ; preds = %16, %10
  ret void, !dbg !15616
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15617 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15619, metadata !DIExpression()), !dbg !15620
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15621
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #25, !dbg !15622
  ret i32 %3, !dbg !15623
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !15624 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15626, metadata !DIExpression()), !dbg !15627
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15628
  %3 = load i8, i8* %2, align 1, !dbg !15629
  %4 = or i8 %3, 16, !dbg !15629
  store i8 %4, i8* %2, align 1, !dbg !15629
  ret void, !dbg !15630
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !15631 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15632, !srcloc !14917
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !15632
  call void @llvm.dbg.value(metadata i32 %2, metadata !14914, metadata !DIExpression()) #23, !dbg !15634
  call void @llvm.dbg.value(metadata i32 undef, metadata !14915, metadata !DIExpression()) #23, !dbg !15634
  tail call void @z_reschedule_irqlock(i32 noundef %2) #24, !dbg !15635
  ret void, !dbg !15636
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !15637 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15639, metadata !DIExpression()), !dbg !15640
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #24, !dbg !15641
  br i1 %2, label %3, label %5, !dbg !15643

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #24, !dbg !15644
  br label %6, !dbg !15646

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !14937, metadata !DIExpression()) #23, !dbg !15647
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #23, !dbg !15650, !srcloc !14943
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !15651
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15652 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15654, metadata !DIExpression()), !dbg !15656
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14902, metadata !DIExpression()) #23, !dbg !15657
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15659, !srcloc !14917
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15659
  call void @llvm.dbg.value(metadata i32 %3, metadata !14914, metadata !DIExpression()) #23, !dbg !15661
  call void @llvm.dbg.value(metadata i32 undef, metadata !14915, metadata !DIExpression()) #23, !dbg !15661
  call void @llvm.dbg.value(metadata i32 %3, metadata !14908, metadata !DIExpression()) #23, !dbg !15657
  call void @llvm.dbg.value(metadata i32 %3, metadata !15655, metadata !DIExpression()), !dbg !15656
  %4 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #24, !dbg !15662
  br i1 %4, label %6, label %5, !dbg !15664

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !14929, metadata !DIExpression()) #23, !dbg !15665
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14934, metadata !DIExpression()) #23, !dbg !15665
  call void @llvm.dbg.value(metadata i32 %3, metadata !14937, metadata !DIExpression()) #23, !dbg !15668
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !15670, !srcloc !14943
  br label %8, !dbg !15671

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #24, !dbg !15672
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !15673
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !15674
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #24, !dbg !15674
  br label %8, !dbg !15675

8:                                                ; preds = %6, %5
  ret void, !dbg !15675
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !15676 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15678, metadata !DIExpression()), !dbg !15679
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15680
  %3 = load i8, i8* %2, align 1, !dbg !15680
  %4 = and i8 %3, 16, !dbg !15681
  %5 = icmp ne i8 %4, 0, !dbg !15682
  ret i1 %5, !dbg !15683
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !15684 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15686, metadata !DIExpression()), !dbg !15687
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15688
  %3 = load i8, i8* %2, align 1, !dbg !15689
  %4 = and i8 %3, -17, !dbg !15689
  store i8 %4, i8* %2, align 1, !dbg !15689
  ret void, !dbg !15690
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15691 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15701, metadata !DIExpression()), !dbg !15705
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15699, metadata !DIExpression()), !dbg !15705
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !15700, metadata !DIExpression()), !dbg !15705
  call void @llvm.dbg.value(metadata i32 0, metadata !15702, metadata !DIExpression()), !dbg !15706
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14902, metadata !DIExpression()) #23, !dbg !15707
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15709, !srcloc !14917
  %5 = extractvalue { i32, i32 } %4, 0, !dbg !15709
  call void @llvm.dbg.value(metadata i32 %5, metadata !14914, metadata !DIExpression()) #23, !dbg !15711
  call void @llvm.dbg.value(metadata i32 undef, metadata !14915, metadata !DIExpression()) #23, !dbg !15711
  call void @llvm.dbg.value(metadata i32 %5, metadata !14908, metadata !DIExpression()) #23, !dbg !15707
  call void @llvm.dbg.value(metadata i32 %5, metadata !15704, metadata !DIExpression()), !dbg !15706
  call void @llvm.dbg.value(metadata i32 undef, metadata !15702, metadata !DIExpression()), !dbg !15706
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) #24, !dbg !15712
  call void @llvm.dbg.value(metadata i32 %5, metadata !14929, metadata !DIExpression()) #23, !dbg !15715
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14934, metadata !DIExpression()) #23, !dbg !15715
  call void @llvm.dbg.value(metadata i32 %5, metadata !14937, metadata !DIExpression()) #23, !dbg !15717
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %5) #23, !dbg !15719, !srcloc !14943
  call void @llvm.dbg.value(metadata i32 1, metadata !15702, metadata !DIExpression()), !dbg !15706
  call void @llvm.dbg.value(metadata i32 undef, metadata !15702, metadata !DIExpression()), !dbg !15706
  ret void, !dbg !15720
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !15721 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15725, metadata !DIExpression()), !dbg !15726
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15723, metadata !DIExpression()), !dbg !15726
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !15724, metadata !DIExpression()), !dbg !15726
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1) #24, !dbg !15727
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #24, !dbg !15728
  ret void, !dbg !15729
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1) unnamed_addr #1 !dbg !15730 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15734, metadata !DIExpression()), !dbg !15736
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !15735, metadata !DIExpression()), !dbg !15736
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #24, !dbg !15737
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #24, !dbg !15738
  %3 = icmp eq %struct._wait_q_t* %1, null, !dbg !15739
  br i1 %3, label %21, label %4, !dbg !15741

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15742
  store %struct._wait_q_t* %1, %struct._wait_q_t** %5, align 8, !dbg !15744
  %6 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %1, i32 0, i32 0, !dbg !15745
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !15102, metadata !DIExpression()) #23, !dbg !15746
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15108, metadata !DIExpression()) #23, !dbg !15746
  %7 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef nonnull %6) #25, !dbg !15748
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !15109, metadata !DIExpression()) #23, !dbg !15746
  %8 = icmp eq %struct._dnode* %7, null, !dbg !15749
  br i1 %8, label %19, label %9, !dbg !15748

9:                                                ; preds = %4, %16
  %10 = phi %struct._dnode* [ %17, %16 ], [ %7, %4 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !15109, metadata !DIExpression()) #23, !dbg !15746
  %11 = bitcast %struct._dnode* %10 to %struct.k_thread*, !dbg !15750
  call void @llvm.dbg.value(metadata %struct.k_thread* %11, metadata !15109, metadata !DIExpression()) #23, !dbg !15746
  %12 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %11) #25, !dbg !15751
  %13 = icmp sgt i32 %12, 0, !dbg !15752
  br i1 %13, label %14, label %16, !dbg !15753

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15754
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %10, %struct._dnode* noundef %15) #25, !dbg !15755
  br label %21, !dbg !15756

16:                                               ; preds = %9
  %17 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %10) #25, !dbg !15749
  call void @llvm.dbg.value(metadata %struct._dnode* %17, metadata !15109, metadata !DIExpression()) #23, !dbg !15746
  %18 = icmp eq %struct._dnode* %17, null, !dbg !15749
  br i1 %18, label %19, label %9, !dbg !15748, !llvm.loop !15757

19:                                               ; preds = %16, %4
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15759
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %20) #25, !dbg !15760
  br label %21, !dbg !15761

21:                                               ; preds = %19, %14, %2
  ret void, !dbg !15762
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !15763 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !15768, metadata !DIExpression()), !dbg !15769
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15767, metadata !DIExpression()), !dbg !15769
  %4 = icmp eq i64 %3, -1, !dbg !15770
  br i1 %4, label %6, label %5, !dbg !15772

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.236(%struct.k_thread* noundef %0, [1 x i64] %1) #24, !dbg !15773
  br label %6, !dbg !15775

6:                                                ; preds = %5, %2
  ret void, !dbg !15776
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.236(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !15777 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15780, metadata !DIExpression()), !dbg !15781
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15779, metadata !DIExpression()), !dbg !15781
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15782
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #25, !dbg !15783
  ret void, !dbg !15784
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !15785 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15787, metadata !DIExpression()), !dbg !15795
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !15796
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !15796
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !15788, metadata !DIExpression()), !dbg !15795
  call void @llvm.dbg.value(metadata i32 0, metadata !15789, metadata !DIExpression()), !dbg !15797
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14902, metadata !DIExpression()) #23, !dbg !15798
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15800, !srcloc !14917
  call void @llvm.dbg.value(metadata i32 undef, metadata !14914, metadata !DIExpression()) #23, !dbg !15802
  call void @llvm.dbg.value(metadata i32 undef, metadata !14915, metadata !DIExpression()) #23, !dbg !15802
  call void @llvm.dbg.value(metadata i32 undef, metadata !14908, metadata !DIExpression()) #23, !dbg !15798
  call void @llvm.dbg.value(metadata i32 undef, metadata !15791, metadata !DIExpression()), !dbg !15797
  call void @llvm.dbg.value(metadata i32 undef, metadata !15789, metadata !DIExpression()), !dbg !15797
  %5 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !15803
  %6 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %5, i32 0, i32 3, !dbg !15804
  %7 = load i8, i8* %6, align 1, !dbg !15804
  %8 = and i8 %7, 40, !dbg !15805
  %9 = icmp eq i8 %8, 0, !dbg !15805
  call void @llvm.dbg.value(metadata i1 %9, metadata !15792, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15806
  br i1 %9, label %10, label %17, !dbg !15807

10:                                               ; preds = %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !15808
  %12 = bitcast void (%struct._timeout*)** %11 to %struct._wait_q_t**, !dbg !15808
  %13 = load %struct._wait_q_t*, %struct._wait_q_t** %12, align 8, !dbg !15808
  %14 = icmp eq %struct._wait_q_t* %13, null, !dbg !15812
  br i1 %14, label %16, label %15, !dbg !15813

15:                                               ; preds = %10
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #24, !dbg !15814
  br label %16, !dbg !15816

16:                                               ; preds = %15, %10
  tail call fastcc void @z_mark_thread_as_started.235(%struct.k_thread* noundef nonnull %3) #24, !dbg !15817
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #24, !dbg !15818
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #24, !dbg !15819
  br label %17, !dbg !15820

17:                                               ; preds = %16, %1
  %18 = extractvalue { i32, i32 } %4, 0, !dbg !15800
  call void @llvm.dbg.value(metadata i32 %18, metadata !14914, metadata !DIExpression()) #23, !dbg !15802
  call void @llvm.dbg.value(metadata i32 %18, metadata !14908, metadata !DIExpression()) #23, !dbg !15798
  call void @llvm.dbg.value(metadata i32 %18, metadata !15791, metadata !DIExpression()), !dbg !15797
  call void @llvm.dbg.value(metadata i32 undef, metadata !14929, metadata !DIExpression()) #23, !dbg !15821
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14934, metadata !DIExpression()) #23, !dbg !15821
  call void @llvm.dbg.value(metadata i32 undef, metadata !14937, metadata !DIExpression()) #23, !dbg !15823
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #23, !dbg !15825, !srcloc !14943
  call void @llvm.dbg.value(metadata i32 1, metadata !15789, metadata !DIExpression()), !dbg !15797
  call void @llvm.dbg.value(metadata i32 undef, metadata !15789, metadata !DIExpression()), !dbg !15797
  ret void, !dbg !15826
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !15827 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15829, metadata !DIExpression()), !dbg !15830
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #24, !dbg !15831
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #24, !dbg !15832
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15833
  store %struct._wait_q_t* null, %struct._wait_q_t** %2, align 8, !dbg !15834
  ret void, !dbg !15835
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !15836 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15838, metadata !DIExpression()), !dbg !15839
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15840
  %3 = load i8, i8* %2, align 1, !dbg !15841
  %4 = and i8 %3, -3, !dbg !15841
  store i8 %4, i8* %2, align 1, !dbg !15841
  ret void, !dbg !15842
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15843 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15845, metadata !DIExpression()), !dbg !15846
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !15847
  br i1 %2, label %3, label %7, !dbg !15849

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15071, metadata !DIExpression()) #23, !dbg !15850
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15853
  %5 = load i8, i8* %4, align 1, !dbg !15854
  %6 = and i8 %5, 127, !dbg !15854
  store i8 %6, i8* %4, align 1, !dbg !15854
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15079, metadata !DIExpression()) #23, !dbg !15855
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !15857
  br label %7, !dbg !15858

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15859
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !15860
  %10 = zext i1 %9 to i32, !dbg !15860
  tail call fastcc void @update_cache(i32 noundef %10) #24, !dbg !15861
  ret void, !dbg !15862
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !15863 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15865, metadata !DIExpression()), !dbg !15866
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15867
  %3 = load i8, i8* %2, align 1, !dbg !15868
  %4 = or i8 %3, 2, !dbg !15868
  store i8 %4, i8* %2, align 1, !dbg !15868
  ret void, !dbg !15869
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) local_unnamed_addr #22 !dbg !15870 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15872, metadata !DIExpression()), !dbg !15876
  call void @llvm.dbg.value(metadata i32 0, metadata !15873, metadata !DIExpression()), !dbg !15877
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14902, metadata !DIExpression()) #23, !dbg !15878
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15880, !srcloc !14917
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15880
  call void @llvm.dbg.value(metadata i32 %3, metadata !14914, metadata !DIExpression()) #23, !dbg !15882
  call void @llvm.dbg.value(metadata i32 undef, metadata !14915, metadata !DIExpression()) #23, !dbg !15882
  call void @llvm.dbg.value(metadata i32 %3, metadata !14908, metadata !DIExpression()) #23, !dbg !15878
  call void @llvm.dbg.value(metadata i32 %3, metadata !15875, metadata !DIExpression()), !dbg !15877
  call void @llvm.dbg.value(metadata i32 undef, metadata !15873, metadata !DIExpression()), !dbg !15877
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #24, !dbg !15883
  call void @llvm.dbg.value(metadata i32 %3, metadata !14929, metadata !DIExpression()) #23, !dbg !15886
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14934, metadata !DIExpression()) #23, !dbg !15886
  call void @llvm.dbg.value(metadata i32 %3, metadata !14937, metadata !DIExpression()) #23, !dbg !15888
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !15890, !srcloc !14943
  call void @llvm.dbg.value(metadata i32 1, metadata !15873, metadata !DIExpression()), !dbg !15877
  call void @llvm.dbg.value(metadata i32 undef, metadata !15873, metadata !DIExpression()), !dbg !15877
  ret void, !dbg !15891
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15892 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15898, metadata !DIExpression()), !dbg !15903
  call void @llvm.dbg.value(metadata i32 %0, metadata !15896, metadata !DIExpression()), !dbg !15903
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !15897, metadata !DIExpression()), !dbg !15903
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15904
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %struct._wait_q_t* noundef %1, [1 x i64] %2) #24, !dbg !15905
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15906
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !15907
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #24, !dbg !15908
  call void @llvm.dbg.value(metadata i32 %6, metadata !15899, metadata !DIExpression()), !dbg !15903
  call void @llvm.dbg.value(metadata i32 0, metadata !15900, metadata !DIExpression()), !dbg !15909
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14902, metadata !DIExpression()) #23, !dbg !15910
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15912, !srcloc !14917
  call void @llvm.dbg.value(metadata i32 undef, metadata !14914, metadata !DIExpression()) #23, !dbg !15914
  call void @llvm.dbg.value(metadata i32 undef, metadata !14915, metadata !DIExpression()) #23, !dbg !15914
  call void @llvm.dbg.value(metadata i32 undef, metadata !14908, metadata !DIExpression()) #23, !dbg !15910
  call void @llvm.dbg.value(metadata i32 undef, metadata !15902, metadata !DIExpression()), !dbg !15909
  call void @llvm.dbg.value(metadata i32 undef, metadata !15900, metadata !DIExpression()), !dbg !15909
  %8 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !15915
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15919
  %10 = icmp eq %struct.k_thread* %8, %9, !dbg !15920
  br i1 %10, label %11, label %12, !dbg !15921

11:                                               ; preds = %3
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !15922
  br label %12, !dbg !15924

12:                                               ; preds = %3, %11
  %13 = extractvalue { i32, i32 } %7, 0, !dbg !15912
  call void @llvm.dbg.value(metadata i32 %13, metadata !14914, metadata !DIExpression()) #23, !dbg !15914
  call void @llvm.dbg.value(metadata i32 %13, metadata !14908, metadata !DIExpression()) #23, !dbg !15910
  call void @llvm.dbg.value(metadata i32 %13, metadata !15902, metadata !DIExpression()), !dbg !15909
  call void @llvm.dbg.value(metadata i32 undef, metadata !14929, metadata !DIExpression()) #23, !dbg !15925
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14934, metadata !DIExpression()) #23, !dbg !15925
  call void @llvm.dbg.value(metadata i32 undef, metadata !14937, metadata !DIExpression()) #23, !dbg !15927
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #23, !dbg !15929, !srcloc !14943
  call void @llvm.dbg.value(metadata i32 1, metadata !15900, metadata !DIExpression()), !dbg !15909
  call void @llvm.dbg.value(metadata i32 undef, metadata !15900, metadata !DIExpression()), !dbg !15909
  ret i32 %6, !dbg !15930
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !15931 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !15936, metadata !DIExpression()), !dbg !15939
  call void @llvm.dbg.value(metadata i64 undef, metadata !15938, metadata !DIExpression()), !dbg !15939
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15935, metadata !DIExpression()), !dbg !15939
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %2, metadata !15937, metadata !DIExpression()), !dbg !15939
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15940
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !15941
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14902, metadata !DIExpression()) #23, !dbg !15942
  %6 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15944, !srcloc !14917
  call void @llvm.dbg.value(metadata i32 undef, metadata !14914, metadata !DIExpression()) #23, !dbg !15946
  call void @llvm.dbg.value(metadata i32 undef, metadata !14915, metadata !DIExpression()) #23, !dbg !15946
  call void @llvm.dbg.value(metadata i32 undef, metadata !14908, metadata !DIExpression()) #23, !dbg !15942
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15947
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %7, %struct._wait_q_t* noundef %2, [1 x i64] %3) #24, !dbg !15948
  %8 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %8, metadata !15513, metadata !DIExpression()) #23, !dbg !15949
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15518, metadata !DIExpression()) #23, !dbg !15949
  %9 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %8) #25, !dbg !15951
  ret i32 %9, !dbg !15952
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !15953 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15957, metadata !DIExpression()), !dbg !15962
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15958, metadata !DIExpression()), !dbg !15962
  call void @llvm.dbg.value(metadata i32 0, metadata !15959, metadata !DIExpression()), !dbg !15963
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14902, metadata !DIExpression()) #23, !dbg !15964
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15966, !srcloc !14917
  call void @llvm.dbg.value(metadata i32 undef, metadata !14914, metadata !DIExpression()) #23, !dbg !15968
  call void @llvm.dbg.value(metadata i32 undef, metadata !14915, metadata !DIExpression()) #23, !dbg !15968
  call void @llvm.dbg.value(metadata i32 undef, metadata !14908, metadata !DIExpression()) #23, !dbg !15964
  call void @llvm.dbg.value(metadata i32 undef, metadata !15961, metadata !DIExpression()), !dbg !15963
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15958, metadata !DIExpression()), !dbg !15962
  call void @llvm.dbg.value(metadata i32 undef, metadata !15959, metadata !DIExpression()), !dbg !15963
  %3 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #24, !dbg !15969
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15958, metadata !DIExpression()), !dbg !15962
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !15972
  br i1 %5, label %7, label %6, !dbg !15974

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #24, !dbg !15975
  br label %7, !dbg !15977

7:                                                ; preds = %1, %6
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !15966
  call void @llvm.dbg.value(metadata i32 %8, metadata !14914, metadata !DIExpression()) #23, !dbg !15968
  call void @llvm.dbg.value(metadata i32 %8, metadata !14908, metadata !DIExpression()) #23, !dbg !15964
  call void @llvm.dbg.value(metadata i32 %8, metadata !15961, metadata !DIExpression()), !dbg !15963
  call void @llvm.dbg.value(metadata i32 undef, metadata !14929, metadata !DIExpression()) #23, !dbg !15978
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14934, metadata !DIExpression()) #23, !dbg !15978
  call void @llvm.dbg.value(metadata i32 undef, metadata !14937, metadata !DIExpression()) #23, !dbg !15980
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #23, !dbg !15982, !srcloc !14943
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15958, metadata !DIExpression()), !dbg !15962
  call void @llvm.dbg.value(metadata i32 undef, metadata !15959, metadata !DIExpression()), !dbg !15963
  ret %struct.k_thread* %4, !dbg !15983
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !15984 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15986, metadata !DIExpression()), !dbg !15991
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15987, metadata !DIExpression()), !dbg !15991
  call void @llvm.dbg.value(metadata i32 0, metadata !15988, metadata !DIExpression()), !dbg !15992
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14902, metadata !DIExpression()) #23, !dbg !15993
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15995, !srcloc !14917
  call void @llvm.dbg.value(metadata i32 undef, metadata !14914, metadata !DIExpression()) #23, !dbg !15997
  call void @llvm.dbg.value(metadata i32 undef, metadata !14915, metadata !DIExpression()) #23, !dbg !15997
  call void @llvm.dbg.value(metadata i32 undef, metadata !14908, metadata !DIExpression()) #23, !dbg !15993
  call void @llvm.dbg.value(metadata i32 undef, metadata !15990, metadata !DIExpression()), !dbg !15992
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15987, metadata !DIExpression()), !dbg !15991
  call void @llvm.dbg.value(metadata i32 undef, metadata !15988, metadata !DIExpression()), !dbg !15992
  %3 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #24, !dbg !15998
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15987, metadata !DIExpression()), !dbg !15991
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !16001
  br i1 %5, label %8, label %6, !dbg !16003

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #24, !dbg !16004
  %7 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %4) #24, !dbg !16006
  br label %8, !dbg !16007

8:                                                ; preds = %1, %6
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !15995
  call void @llvm.dbg.value(metadata i32 %9, metadata !14914, metadata !DIExpression()) #23, !dbg !15997
  call void @llvm.dbg.value(metadata i32 %9, metadata !14908, metadata !DIExpression()) #23, !dbg !15993
  call void @llvm.dbg.value(metadata i32 %9, metadata !15990, metadata !DIExpression()), !dbg !15992
  call void @llvm.dbg.value(metadata i32 undef, metadata !14929, metadata !DIExpression()) #23, !dbg !16008
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14934, metadata !DIExpression()) #23, !dbg !16008
  call void @llvm.dbg.value(metadata i32 undef, metadata !14937, metadata !DIExpression()) #23, !dbg !16010
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !16012, !srcloc !14943
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15987, metadata !DIExpression()), !dbg !15991
  call void @llvm.dbg.value(metadata i32 undef, metadata !15988, metadata !DIExpression()), !dbg !15992
  ret %struct.k_thread* %4, !dbg !16013
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16014 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16016, metadata !DIExpression()), !dbg !16017
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15872, metadata !DIExpression()) #23, !dbg !16018
  call void @llvm.dbg.value(metadata i32 0, metadata !15873, metadata !DIExpression()) #23, !dbg !16020
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14902, metadata !DIExpression()) #23, !dbg !16021
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16023, !srcloc !14917
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16023
  call void @llvm.dbg.value(metadata i32 %3, metadata !14914, metadata !DIExpression()) #23, !dbg !16025
  call void @llvm.dbg.value(metadata i32 undef, metadata !14915, metadata !DIExpression()) #23, !dbg !16025
  call void @llvm.dbg.value(metadata i32 %3, metadata !14908, metadata !DIExpression()) #23, !dbg !16021
  call void @llvm.dbg.value(metadata i32 %3, metadata !15875, metadata !DIExpression()) #23, !dbg !16020
  call void @llvm.dbg.value(metadata i32 undef, metadata !15873, metadata !DIExpression()) #23, !dbg !16020
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #25, !dbg !16026
  call void @llvm.dbg.value(metadata i32 %3, metadata !14929, metadata !DIExpression()) #23, !dbg !16027
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14934, metadata !DIExpression()) #23, !dbg !16027
  call void @llvm.dbg.value(metadata i32 %3, metadata !14937, metadata !DIExpression()) #23, !dbg !16029
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !16031, !srcloc !14943
  call void @llvm.dbg.value(metadata i32 1, metadata !15873, metadata !DIExpression()) #23, !dbg !16020
  call void @llvm.dbg.value(metadata i32 undef, metadata !15873, metadata !DIExpression()) #23, !dbg !16020
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !16032
  ret void, !dbg !16033
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !16034 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16036, metadata !DIExpression()), !dbg !16042
  call void @llvm.dbg.value(metadata i32 %1, metadata !16037, metadata !DIExpression()), !dbg !16042
  call void @llvm.dbg.value(metadata i8 0, metadata !16038, metadata !DIExpression()), !dbg !16042
  call void @llvm.dbg.value(metadata i32 0, metadata !16039, metadata !DIExpression()), !dbg !16043
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14902, metadata !DIExpression()) #23, !dbg !16044
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16046, !srcloc !14917
  call void @llvm.dbg.value(metadata i32 undef, metadata !14914, metadata !DIExpression()) #23, !dbg !16048
  call void @llvm.dbg.value(metadata i32 undef, metadata !14915, metadata !DIExpression()) #23, !dbg !16048
  call void @llvm.dbg.value(metadata i32 undef, metadata !14908, metadata !DIExpression()) #23, !dbg !16044
  call void @llvm.dbg.value(metadata i32 undef, metadata !16041, metadata !DIExpression()), !dbg !16043
  call void @llvm.dbg.value(metadata i8 poison, metadata !16038, metadata !DIExpression()), !dbg !16042
  call void @llvm.dbg.value(metadata i32 undef, metadata !16039, metadata !DIExpression()), !dbg !16043
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0
  %6 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #24, !dbg !16049
  call void @llvm.dbg.value(metadata i1 %6, metadata !16038, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16042
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %8 = bitcast %union.anon.2* %7 to i8*
  %9 = trunc i32 %1 to i8
  br i1 %6, label %10, label %28, !dbg !16052

10:                                               ; preds = %2
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15071, metadata !DIExpression()) #23, !dbg !16053
  %11 = load i8, i8* %4, align 1, !dbg !16059
  %12 = and i8 %11, 127, !dbg !16059
  store i8 %12, i8* %4, align 1, !dbg !16059
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15079, metadata !DIExpression()) #23, !dbg !16060
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !16062
  store i8 %9, i8* %8, align 2, !dbg !16063
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15088, metadata !DIExpression()) #23, !dbg !16064
  %13 = load i8, i8* %4, align 1, !dbg !16066
  %14 = or i8 %13, -128, !dbg !16066
  store i8 %14, i8* %4, align 1, !dbg !16066
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15095, metadata !DIExpression()) #23, !dbg !16067
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !15102, metadata !DIExpression()) #23, !dbg !16069
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15108, metadata !DIExpression()) #23, !dbg !16069
  %15 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !16071
  call void @llvm.dbg.value(metadata %struct._dnode* %15, metadata !15109, metadata !DIExpression()) #23, !dbg !16069
  %16 = icmp eq %struct._dnode* %15, null, !dbg !16072
  br i1 %16, label %26, label %17, !dbg !16071

17:                                               ; preds = %10, %23
  %18 = phi %struct._dnode* [ %24, %23 ], [ %15, %10 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %18, metadata !15109, metadata !DIExpression()) #23, !dbg !16069
  %19 = bitcast %struct._dnode* %18 to %struct.k_thread*, !dbg !16073
  call void @llvm.dbg.value(metadata %struct.k_thread* %19, metadata !15109, metadata !DIExpression()) #23, !dbg !16069
  %20 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %19) #25, !dbg !16074
  %21 = icmp sgt i32 %20, 0, !dbg !16075
  br i1 %21, label %22, label %23, !dbg !16076

22:                                               ; preds = %17
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %18, %struct._dnode* noundef %5) #25, !dbg !16077
  br label %27, !dbg !16078

23:                                               ; preds = %17
  %24 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %18) #25, !dbg !16072
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !15109, metadata !DIExpression()) #23, !dbg !16069
  %25 = icmp eq %struct._dnode* %24, null, !dbg !16072
  br i1 %25, label %26, label %17, !dbg !16071, !llvm.loop !16079

26:                                               ; preds = %23, %10
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %5) #25, !dbg !16081
  br label %27, !dbg !16082

27:                                               ; preds = %22, %26
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !16083
  br label %29, !dbg !16084

28:                                               ; preds = %2
  store i8 %9, i8* %8, align 2, !dbg !16085
  br label %29

29:                                               ; preds = %27, %28
  %30 = extractvalue { i32, i32 } %3, 0, !dbg !16046
  call void @llvm.dbg.value(metadata i32 %30, metadata !14914, metadata !DIExpression()) #23, !dbg !16048
  call void @llvm.dbg.value(metadata i32 %30, metadata !14908, metadata !DIExpression()) #23, !dbg !16044
  call void @llvm.dbg.value(metadata i32 %30, metadata !16041, metadata !DIExpression()), !dbg !16043
  call void @llvm.dbg.value(metadata i32 undef, metadata !14929, metadata !DIExpression()) #23, !dbg !16087
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14934, metadata !DIExpression()) #23, !dbg !16087
  call void @llvm.dbg.value(metadata i32 undef, metadata !14937, metadata !DIExpression()) #23, !dbg !16089
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %30) #23, !dbg !16091, !srcloc !14943
  call void @llvm.dbg.value(metadata i8 poison, metadata !16038, metadata !DIExpression()), !dbg !16042
  call void @llvm.dbg.value(metadata i32 undef, metadata !16039, metadata !DIExpression()), !dbg !16043
  ret i1 %6, !dbg !16092
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !16093 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16097, metadata !DIExpression()), !dbg !16100
  call void @llvm.dbg.value(metadata i32 %1, metadata !16098, metadata !DIExpression()), !dbg !16100
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #24, !dbg !16101
  call void @llvm.dbg.value(metadata i1 %3, metadata !16099, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16100
  br i1 %3, label %4, label %12, !dbg !16102

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16104
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !16105
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !16105
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !16105
  %9 = load i8, i8* %8, align 1, !dbg !16105
  %10 = icmp eq i8 %9, 0, !dbg !16106
  br i1 %10, label %11, label %12, !dbg !16107

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !16108
  br label %12, !dbg !16110

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !16111
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !16112 {
  call void @llvm.dbg.value(metadata i32 0, metadata !16114, metadata !DIExpression()), !dbg !16117
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14902, metadata !DIExpression()) #23, !dbg !16118
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16120, !srcloc !14917
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !16120
  call void @llvm.dbg.value(metadata i32 %2, metadata !14914, metadata !DIExpression()) #23, !dbg !16122
  call void @llvm.dbg.value(metadata i32 undef, metadata !14915, metadata !DIExpression()) #23, !dbg !16122
  call void @llvm.dbg.value(metadata i32 %2, metadata !14908, metadata !DIExpression()) #23, !dbg !16118
  call void @llvm.dbg.value(metadata i32 %2, metadata !16116, metadata !DIExpression()), !dbg !16117
  call void @llvm.dbg.value(metadata i32 undef, metadata !16114, metadata !DIExpression()), !dbg !16117
  tail call fastcc void @z_sched_lock() #24, !dbg !16123
  call void @llvm.dbg.value(metadata i32 %2, metadata !14929, metadata !DIExpression()) #23, !dbg !16126
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14934, metadata !DIExpression()) #23, !dbg !16126
  call void @llvm.dbg.value(metadata i32 %2, metadata !14937, metadata !DIExpression()) #23, !dbg !16128
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !16130, !srcloc !14943
  call void @llvm.dbg.value(metadata i32 1, metadata !16114, metadata !DIExpression()), !dbg !16117
  call void @llvm.dbg.value(metadata i32 undef, metadata !16114, metadata !DIExpression()), !dbg !16117
  ret void, !dbg !16131
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !16132 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16133
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !16134
  %3 = bitcast %union.anon.2* %2 to %struct.device_state*, !dbg !16134
  %4 = getelementptr inbounds %struct.device_state, %struct.device_state* %3, i32 0, i32 1, !dbg !16134
  %5 = load i8, i8* %4, align 1, !dbg !16135
  %6 = add i8 %5, -1, !dbg !16135
  store i8 %6, i8* %4, align 1, !dbg !16135
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !16136, !srcloc !16138
  ret void, !dbg !16139
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !16140 {
  call void @llvm.dbg.value(metadata i32 0, metadata !16142, metadata !DIExpression()), !dbg !16145
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14902, metadata !DIExpression()) #23, !dbg !16146
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16148, !srcloc !14917
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !16148
  call void @llvm.dbg.value(metadata i32 %2, metadata !14914, metadata !DIExpression()) #23, !dbg !16150
  call void @llvm.dbg.value(metadata i32 undef, metadata !14915, metadata !DIExpression()) #23, !dbg !16150
  call void @llvm.dbg.value(metadata i32 %2, metadata !14908, metadata !DIExpression()) #23, !dbg !16146
  call void @llvm.dbg.value(metadata i32 %2, metadata !16144, metadata !DIExpression()), !dbg !16145
  call void @llvm.dbg.value(metadata i32 undef, metadata !16142, metadata !DIExpression()), !dbg !16145
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16151
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 0, i32 4, !dbg !16154
  %5 = bitcast %union.anon.2* %4 to %struct.device_state*, !dbg !16154
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !16154
  %7 = load i8, i8* %6, align 1, !dbg !16155
  %8 = add i8 %7, 1, !dbg !16155
  store i8 %8, i8* %6, align 1, !dbg !16155
  tail call fastcc void @update_cache(i32 noundef 0) #24, !dbg !16156
  call void @llvm.dbg.value(metadata i32 %2, metadata !14929, metadata !DIExpression()) #23, !dbg !16157
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14934, metadata !DIExpression()) #23, !dbg !16157
  call void @llvm.dbg.value(metadata i32 %2, metadata !14937, metadata !DIExpression()) #23, !dbg !16159
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !16161, !srcloc !14943
  call void @llvm.dbg.value(metadata i32 1, metadata !16142, metadata !DIExpression()), !dbg !16145
  call void @llvm.dbg.value(metadata i32 undef, metadata !16142, metadata !DIExpression()), !dbg !16145
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !16162
  ret void, !dbg !16163
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #10 !dbg !16164 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !16165
  ret %struct.k_thread* %1, !dbg !16166
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) local_unnamed_addr #10 !dbg !16167 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !16171, metadata !DIExpression()), !dbg !16176
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !16172, metadata !DIExpression()), !dbg !16176
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !16177
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !16173, metadata !DIExpression()), !dbg !16176
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !16178
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16174, metadata !DIExpression()), !dbg !16176
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #24, !dbg !16179
  call void @llvm.dbg.value(metadata i32 %5, metadata !16175, metadata !DIExpression()), !dbg !16176
  %6 = icmp sgt i32 %5, 0, !dbg !16180
  br i1 %6, label %17, label %7, !dbg !16182

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !16183
  br i1 %8, label %17, label %9, !dbg !16185

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !16186
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !16186
  %12 = load i32, i32* %11, align 8, !dbg !16186
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !16188
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !16188
  %15 = load i32, i32* %14, align 8, !dbg !16188
  %16 = icmp ult i32 %12, %15, !dbg !16189
  br label %17, !dbg !16190

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !16191
  ret i1 %18, !dbg !16192
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !16193 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !16210, metadata !DIExpression()), !dbg !16225
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16211, metadata !DIExpression()), !dbg !16225
  %4 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !16226
  %5 = load i32, i32* %4, align 4, !dbg !16227
  %6 = add nsw i32 %5, 1, !dbg !16227
  store i32 %6, i32* %4, align 4, !dbg !16227
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !16228
  store i32 %5, i32* %7, align 8, !dbg !16229
  %8 = load i32, i32* %4, align 4, !dbg !16230
  %9 = icmp eq i32 %8, 0, !dbg !16231
  br i1 %9, label %10, label %32, !dbg !16232

10:                                               ; preds = %2
  %11 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !16233
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %11) #23, !dbg !16233
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !16213, metadata !DIExpression()), !dbg !16233
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16233
  %13 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !16233
  %14 = load i32, i32* %13, align 4, !dbg !16233
  %15 = shl i32 %14, 2, !dbg !16233
  %16 = alloca i8, i32 %15, align 8, !dbg !16233
  %17 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !16233
  store i8* %16, i8** %17, align 4, !dbg !16233
  %18 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !16233
  %19 = alloca i8, i32 %14, align 8, !dbg !16233
  store i8* %19, i8** %18, align 4, !dbg !16233
  %20 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !16233
  store i32 -1, i32* %20, align 4, !dbg !16233
  %21 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #25, !dbg !16234
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !16222, metadata !DIExpression()), !dbg !16235
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !16212, metadata !DIExpression()), !dbg !16225
  %22 = icmp eq %struct.rbnode* %21, null, !dbg !16236
  br i1 %22, label %23, label %24, !dbg !16233

23:                                               ; preds = %24, %10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %11) #23, !dbg !16236
  br label %32, !dbg !16237

24:                                               ; preds = %10, %24
  %25 = phi %struct.rbnode* [ %30, %24 ], [ %21, %10 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %25, metadata !16212, metadata !DIExpression()), !dbg !16225
  %26 = load i32, i32* %4, align 4, !dbg !16238
  %27 = add nsw i32 %26, 1, !dbg !16238
  store i32 %27, i32* %4, align 4, !dbg !16238
  %28 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %25, i32 2, !dbg !16240
  %29 = bitcast %struct.rbnode* %28 to i32*, !dbg !16240
  store i32 %26, i32* %29, align 8, !dbg !16241
  %30 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #25, !dbg !16234
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !16222, metadata !DIExpression()), !dbg !16235
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !16212, metadata !DIExpression()), !dbg !16225
  %31 = icmp eq %struct.rbnode* %30, null, !dbg !16236
  br i1 %31, label %23, label %24, !dbg !16233, !llvm.loop !16242

32:                                               ; preds = %23, %2
  %33 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16244
  %34 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !16245
  call void @rb_insert(%struct.rbtree* noundef %33, %struct.rbnode* noundef %34) #25, !dbg !16246
  ret void, !dbg !16247
}

; Function Attrs: optsize
declare !dbg !16248 dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !16253 dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !16256 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !16258, metadata !DIExpression()), !dbg !16260
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16259, metadata !DIExpression()), !dbg !16260
  %3 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16261
  %4 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !16262
  tail call void @rb_remove(%struct.rbtree* noundef %3, %struct.rbnode* noundef %4) #25, !dbg !16263
  %5 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !16264
  %6 = load %struct.rbnode*, %struct.rbnode** %5, align 4, !dbg !16264
  %7 = icmp eq %struct.rbnode* %6, null, !dbg !16266
  br i1 %7, label %8, label %10, !dbg !16267

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !16268
  store i32 0, i32* %9, align 4, !dbg !16270
  br label %10, !dbg !16271

10:                                               ; preds = %8, %2
  ret void, !dbg !16272
}

; Function Attrs: optsize
declare !dbg !16273 dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !16274 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !16278, metadata !DIExpression()), !dbg !16281
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16279, metadata !DIExpression()), !dbg !16281
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16282
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #24, !dbg !16283
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !16280, metadata !DIExpression()), !dbg !16281
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16279, metadata !DIExpression()), !dbg !16281
  ret %struct.k_thread* %4, !dbg !16284
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !16285 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !16289, metadata !DIExpression()), !dbg !16290
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #25, !dbg !16291
  ret %struct.rbnode* %2, !dbg !16292
}

; Function Attrs: optsize
declare !dbg !16293 dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #16 !dbg !16296 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !16308, metadata !DIExpression()), !dbg !16312
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !16313
  %3 = load i32, i32* %2, align 4, !dbg !16313
  %4 = icmp eq i32 %3, 0, !dbg !16315
  br i1 %4, label %10, label %5, !dbg !16316

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16309, metadata !DIExpression()), !dbg !16312
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !16317, !range !8357
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !16318
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !16310, metadata !DIExpression()), !dbg !16312
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %7) #24, !dbg !16319
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !16311, metadata !DIExpression()), !dbg !16312
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16309, metadata !DIExpression()), !dbg !16312
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !16312
  ret %struct.k_thread* %11, !dbg !16320
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #3

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !16321 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !16325, metadata !DIExpression()), !dbg !16328
  call void @llvm.dbg.value(metadata i32 0, metadata !16326, metadata !DIExpression()), !dbg !16328
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef %0) #24, !dbg !16329
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !16327, metadata !DIExpression()), !dbg !16328
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !16330
  br i1 %3, label %8, label %4, !dbg !16331

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !16332
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !16334
  call void @llvm.dbg.value(metadata i32 1, metadata !16326, metadata !DIExpression()), !dbg !16328
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef %0) #24, !dbg !16329
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !16327, metadata !DIExpression()), !dbg !16328
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !16330
  br i1 %7, label %8, label %4, !dbg !16331, !llvm.loop !16335

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !16328
  ret i32 %9, !dbg !16337
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef readonly %0) unnamed_addr #10 !dbg !16338 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !16340, metadata !DIExpression()), !dbg !16341
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !16342
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #24, !dbg !16343
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !16344
  ret %struct.k_thread* %4, !dbg !16345
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) local_unnamed_addr #6 !dbg !16346 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !16355, metadata !DIExpression()), !dbg !16356
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, !dbg !16357
  tail call fastcc void @sys_dlist_init.243(%struct._dnode* noundef nonnull %2) #24, !dbg !16358
  ret void, !dbg !16359
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.243(%struct._dnode* noundef %0) unnamed_addr #6 !dbg !16360 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16364, metadata !DIExpression()), !dbg !16365
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16366
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !16367
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16368
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !16369
  ret void, !dbg !16370
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !16371 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #24, !dbg !16372
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #24, !dbg !16373
  ret void, !dbg !16374
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #10 !dbg !16375 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16380, metadata !DIExpression()), !dbg !16381
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !16382
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !16382
  %4 = load i8, i8* %3, align 2, !dbg !16382
  %5 = sext i8 %4 to i32, !dbg !16383
  ret i32 %5, !dbg !16384
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !16385 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16389, metadata !DIExpression()), !dbg !16392
  call void @llvm.dbg.value(metadata i32 %1, metadata !16390, metadata !DIExpression()), !dbg !16392
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16391, metadata !DIExpression()), !dbg !16392
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #24, !dbg !16393
  ret void, !dbg !16394
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !16395 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #24, !dbg !16396
  br i1 %1, label %8, label %2, !dbg !16397

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #25, !dbg !16398
  br i1 %3, label %8, label %4, !dbg !16399

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16400
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #24, !dbg !16401
  %7 = xor i1 %6, true, !dbg !16399
  br label %8, !dbg !16399

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !16402
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #10 !dbg !16403 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !16404, !range !7546
  %2 = icmp eq i8 %1, 0, !dbg !16404
  ret i1 %2, !dbg !16405
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !16406 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14902, metadata !DIExpression()) #23, !dbg !16409
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16411, !srcloc !14917
  call void @llvm.dbg.value(metadata i32 undef, metadata !14914, metadata !DIExpression()) #23, !dbg !16413
  call void @llvm.dbg.value(metadata i32 undef, metadata !14915, metadata !DIExpression()) #23, !dbg !16413
  call void @llvm.dbg.value(metadata i32 undef, metadata !14908, metadata !DIExpression()) #23, !dbg !16409
  call void @llvm.dbg.value(metadata i32 undef, metadata !16408, metadata !DIExpression()), !dbg !16414
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16415
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15071, metadata !DIExpression()) #23, !dbg !16418
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 0, i32 3, !dbg !16420
  %4 = load i8, i8* %3, align 1, !dbg !16421
  %5 = and i8 %4, 127, !dbg !16421
  store i8 %5, i8* %3, align 1, !dbg !16421
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15079, metadata !DIExpression()) #23, !dbg !16422
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %2) #25, !dbg !16424
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16425
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !15088, metadata !DIExpression()) #23, !dbg !16426
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 3, !dbg !16428
  %8 = load i8, i8* %7, align 1, !dbg !16429
  %9 = or i8 %8, -128, !dbg !16429
  store i8 %9, i8* %7, align 1, !dbg !16429
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !15095, metadata !DIExpression()) #23, !dbg !16430
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !15102, metadata !DIExpression()) #23, !dbg !16432
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !15108, metadata !DIExpression()) #23, !dbg !16432
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !16434
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !15109, metadata !DIExpression()) #23, !dbg !16432
  %11 = icmp eq %struct._dnode* %10, null, !dbg !16435
  br i1 %11, label %22, label %12, !dbg !16434

12:                                               ; preds = %0, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %0 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !15109, metadata !DIExpression()) #23, !dbg !16432
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !16436
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !15109, metadata !DIExpression()) #23, !dbg !16432
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %6, %struct.k_thread* noundef nonnull %14) #25, !dbg !16437
  %16 = icmp sgt i32 %15, 0, !dbg !16438
  br i1 %16, label %17, label %19, !dbg !16439

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !16440
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #25, !dbg !16441
  br label %24, !dbg !16442

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %13) #25, !dbg !16435
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !15109, metadata !DIExpression()) #23, !dbg !16432
  %21 = icmp eq %struct._dnode* %20, null, !dbg !16435
  br i1 %21, label %22, label %12, !dbg !16434, !llvm.loop !16443

22:                                               ; preds = %19, %0
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !16445
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %23) #25, !dbg !16446
  br label %24, !dbg !16447

24:                                               ; preds = %17, %22
  %25 = extractvalue { i32, i32 } %1, 0, !dbg !16411
  call void @llvm.dbg.value(metadata i32 %25, metadata !14914, metadata !DIExpression()) #23, !dbg !16413
  call void @llvm.dbg.value(metadata i32 %25, metadata !14908, metadata !DIExpression()) #23, !dbg !16409
  call void @llvm.dbg.value(metadata i32 %25, metadata !16408, metadata !DIExpression()), !dbg !16414
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !16448
  call void @llvm.dbg.value(metadata i32 undef, metadata !15513, metadata !DIExpression()) #23, !dbg !16449
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15518, metadata !DIExpression()) #23, !dbg !16449
  %26 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %25) #25, !dbg !16451
  ret void, !dbg !16452
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !16453 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !16457, metadata !DIExpression()), !dbg !16460
  %3 = icmp eq i64 %2, -1, !dbg !16461
  br i1 %3, label %4, label %6, !dbg !16463

4:                                                ; preds = %1
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16464
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %5) #24, !dbg !16466
  br label %11, !dbg !16467

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !16458, metadata !DIExpression()), !dbg !16460
  %7 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #24, !dbg !16468
  %8 = sext i32 %7 to i64, !dbg !16468
  call void @llvm.dbg.value(metadata i64 %8, metadata !16458, metadata !DIExpression()), !dbg !16460
  %9 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %8) #24, !dbg !16469
  %10 = trunc i64 %9 to i32, !dbg !16469
  call void @llvm.dbg.value(metadata i32 %10, metadata !16459, metadata !DIExpression()), !dbg !16460
  br label %11

11:                                               ; preds = %6, %4
  %12 = phi i32 [ -1, %4 ], [ %10, %6 ], !dbg !16460
  ret i32 %12, !dbg !16470
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16471 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16475, metadata !DIExpression()), !dbg !16476
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !16477, !srcloc !16479
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #24, !dbg !16480
  ret void, !dbg !16481
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !16482 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16486, metadata !DIExpression()), !dbg !16490
  %2 = icmp eq i64 %0, 0, !dbg !16491
  br i1 %2, label %3, label %4, !dbg !16493

3:                                                ; preds = %1
  tail call fastcc void @k_yield.250() #24, !dbg !16494
  br label %29, !dbg !16496

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %0, metadata !16488, metadata !DIExpression()), !dbg !16490
  %5 = icmp sgt i64 %0, -3, !dbg !16497
  br i1 %5, label %6, label %10, !dbg !16499

6:                                                ; preds = %4
  %7 = tail call i32 @sys_clock_tick_get_32() #25, !dbg !16500
  %8 = trunc i64 %0 to i32, !dbg !16502
  %9 = add i32 %7, %8, !dbg !16502
  call void @llvm.dbg.value(metadata i32 %9, metadata !16487, metadata !DIExpression()), !dbg !16490
  br label %13, !dbg !16503

10:                                               ; preds = %4
  %11 = trunc i64 %0 to i32, !dbg !16504
  %12 = sub i32 -2, %11, !dbg !16504
  call void @llvm.dbg.value(metadata i32 %12, metadata !16487, metadata !DIExpression()), !dbg !16490
  br label %13

13:                                               ; preds = %10, %6
  %14 = phi i32 [ %9, %6 ], [ %12, %10 ], !dbg !16506
  call void @llvm.dbg.value(metadata i32 %14, metadata !16487, metadata !DIExpression()), !dbg !16490
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14902, metadata !DIExpression()) #23, !dbg !16507
  %15 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16509, !srcloc !14917
  %16 = extractvalue { i32, i32 } %15, 0, !dbg !16509
  call void @llvm.dbg.value(metadata i32 %16, metadata !14914, metadata !DIExpression()) #23, !dbg !16511
  call void @llvm.dbg.value(metadata i32 undef, metadata !14915, metadata !DIExpression()) #23, !dbg !16511
  call void @llvm.dbg.value(metadata i32 %16, metadata !14908, metadata !DIExpression()) #23, !dbg !16507
  call void @llvm.dbg.value(metadata i32 %16, metadata !16489, metadata !DIExpression()), !dbg !16490
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16512
  store %struct.k_thread* %17, %struct.k_thread** @pending_current, align 4, !dbg !16513
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %17) #24, !dbg !16514
  %18 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16515
  %19 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !16516
  tail call fastcc void @z_add_thread_timeout.236(%struct.k_thread* noundef %18, [1 x i64] %19) #24, !dbg !16516
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16517
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %20) #24, !dbg !16518
  call void @llvm.dbg.value(metadata i32 %16, metadata !15513, metadata !DIExpression()) #23, !dbg !16519
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15518, metadata !DIExpression()) #23, !dbg !16519
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %16) #25, !dbg !16521
  %22 = zext i32 %14 to i64, !dbg !16522
  %23 = tail call i32 @sys_clock_tick_get_32() #25, !dbg !16523
  %24 = zext i32 %23 to i64, !dbg !16523
  %25 = sub nsw i64 %22, %24, !dbg !16524
  call void @llvm.dbg.value(metadata i64 %25, metadata !16486, metadata !DIExpression()), !dbg !16490
  %26 = icmp sgt i64 %25, 0, !dbg !16525
  %27 = select i1 %26, i64 %25, i64 0, !dbg !16525
  %28 = trunc i64 %27 to i32, !dbg !16525
  br label %29

29:                                               ; preds = %13, %3
  %30 = phi i32 [ 0, %3 ], [ %28, %13 ], !dbg !16490
  ret i32 %30, !dbg !16526
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #4 !dbg !16527 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16529, metadata !DIExpression()), !dbg !16530
  call void @llvm.dbg.value(metadata i64 %0, metadata !14949, metadata !DIExpression()), !dbg !16531
  call void @llvm.dbg.value(metadata i32 10000, metadata !14952, metadata !DIExpression()), !dbg !16531
  call void @llvm.dbg.value(metadata i32 1000, metadata !14953, metadata !DIExpression()), !dbg !16531
  call void @llvm.dbg.value(metadata i8 1, metadata !14954, metadata !DIExpression()), !dbg !16531
  call void @llvm.dbg.value(metadata i1 false, metadata !14955, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16531
  call void @llvm.dbg.value(metadata i1 false, metadata !14956, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16531
  call void @llvm.dbg.value(metadata i8 0, metadata !14957, metadata !DIExpression()), !dbg !16531
  call void @llvm.dbg.value(metadata i1 false, metadata !14958, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16531
  call void @llvm.dbg.value(metadata i1 true, metadata !14959, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16531
  call void @llvm.dbg.value(metadata i64 0, metadata !14960, metadata !DIExpression()), !dbg !16531
  call void @llvm.dbg.value(metadata i64 0, metadata !14960, metadata !DIExpression()), !dbg !16531
  call void @llvm.dbg.value(metadata i64 %0, metadata !14949, metadata !DIExpression()), !dbg !16531
  %2 = udiv i64 %0, 10, !dbg !16533
  ret i64 %2, !dbg !16537
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield.250() unnamed_addr #1 !dbg !16538 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !16539, !srcloc !16541
  tail call void @z_impl_k_yield() #24, !dbg !16542
  ret void, !dbg !16543
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !16544 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16548, metadata !DIExpression()), !dbg !16550
  %2 = sext i32 %0 to i64, !dbg !16551
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #24, !dbg !16552
  call void @llvm.dbg.value(metadata i64 %3, metadata !16549, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16550
  %4 = shl i64 %3, 32, !dbg !16553
  %5 = ashr exact i64 %4, 32, !dbg !16553
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #24, !dbg !16554
  call void @llvm.dbg.value(metadata i32 %6, metadata !16549, metadata !DIExpression()), !dbg !16550
  %7 = sext i32 %6 to i64, !dbg !16555
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #24, !dbg !16556
  %9 = trunc i64 %8 to i32, !dbg !16556
  ret i32 %9, !dbg !16557
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #4 !dbg !16558 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16560, metadata !DIExpression()), !dbg !16561
  call void @llvm.dbg.value(metadata i64 %0, metadata !14949, metadata !DIExpression()), !dbg !16562
  call void @llvm.dbg.value(metadata i32 1000000, metadata !14952, metadata !DIExpression()), !dbg !16562
  call void @llvm.dbg.value(metadata i32 10000, metadata !14953, metadata !DIExpression()), !dbg !16562
  call void @llvm.dbg.value(metadata i8 1, metadata !14954, metadata !DIExpression()), !dbg !16562
  call void @llvm.dbg.value(metadata i1 false, metadata !14955, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16562
  call void @llvm.dbg.value(metadata i1 true, metadata !14956, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16562
  call void @llvm.dbg.value(metadata i8 0, metadata !14957, metadata !DIExpression()), !dbg !16562
  call void @llvm.dbg.value(metadata i1 false, metadata !14958, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16562
  call void @llvm.dbg.value(metadata i1 true, metadata !14959, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16562
  call void @llvm.dbg.value(metadata i64 0, metadata !14960, metadata !DIExpression()), !dbg !16562
  call void @llvm.dbg.value(metadata i64 0, metadata !14960, metadata !DIExpression()), !dbg !16562
  %2 = add i64 %0, 99, !dbg !16564
  call void @llvm.dbg.value(metadata i64 %2, metadata !14949, metadata !DIExpression()), !dbg !16562
  %3 = udiv i64 %2, 100, !dbg !16565
  ret i64 %3, !dbg !16566
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #4 !dbg !16567 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16569, metadata !DIExpression()), !dbg !16570
  call void @llvm.dbg.value(metadata i64 %0, metadata !14949, metadata !DIExpression()), !dbg !16571
  call void @llvm.dbg.value(metadata i32 10000, metadata !14952, metadata !DIExpression()), !dbg !16571
  call void @llvm.dbg.value(metadata i32 1000000, metadata !14953, metadata !DIExpression()), !dbg !16571
  call void @llvm.dbg.value(metadata i8 1, metadata !14954, metadata !DIExpression()), !dbg !16571
  call void @llvm.dbg.value(metadata i1 false, metadata !14955, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16571
  call void @llvm.dbg.value(metadata i1 false, metadata !14956, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16571
  call void @llvm.dbg.value(metadata i8 0, metadata !14957, metadata !DIExpression()), !dbg !16571
  call void @llvm.dbg.value(metadata i1 true, metadata !14958, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16571
  call void @llvm.dbg.value(metadata i1 false, metadata !14959, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16571
  call void @llvm.dbg.value(metadata i64 0, metadata !14960, metadata !DIExpression()), !dbg !16571
  call void @llvm.dbg.value(metadata i64 0, metadata !14960, metadata !DIExpression()), !dbg !16571
  %2 = mul i64 %0, 100, !dbg !16573
  ret i64 %2, !dbg !16575
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16576 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16578, metadata !DIExpression()), !dbg !16579
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #24, !dbg !16580
  br i1 %2, label %14, label %3, !dbg !16582

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !16583
  %5 = icmp slt i32 %4, 0, !dbg !16585
  br i1 %5, label %6, label %10, !dbg !16586

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16587
  %8 = load i8, i8* %7, align 1, !dbg !16587
  %9 = icmp eq i8 %8, 16, !dbg !16590
  br i1 %9, label %10, label %14, !dbg !16591

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #24, !dbg !16592
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #24, !dbg !16593
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16594, !srcloc !15553
  call void @llvm.dbg.value(metadata i32 %11, metadata !15549, metadata !DIExpression()) #23, !dbg !16598
  %12 = icmp eq i32 %11, 0, !dbg !16599
  br i1 %12, label %13, label %14, !dbg !16600

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !16601
  br label %14, !dbg !16603

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !16604
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !16605 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16607, metadata !DIExpression()), !dbg !16608
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16609
  %3 = load i8, i8* %2, align 1, !dbg !16609
  %4 = and i8 %3, 2, !dbg !16610
  %5 = icmp ne i8 %4, 0, !dbg !16611
  ret i1 %5, !dbg !16612
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #10 !dbg !16613 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16618
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16617, metadata !DIExpression()), !dbg !16619
  ret %struct.k_thread* %1, !dbg !16620
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !16621 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16622, !srcloc !15553
  call void @llvm.dbg.value(metadata i32 %1, metadata !15549, metadata !DIExpression()) #23, !dbg !16625
  %2 = icmp eq i32 %1, 0, !dbg !16626
  br i1 %2, label %3, label %8, !dbg !16627

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16628
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #24, !dbg !16629
  %6 = icmp ne i32 %5, 0, !dbg !16627
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !16630
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16631 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16633, metadata !DIExpression()), !dbg !16635
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14902, metadata !DIExpression()) #23, !dbg !16636
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16638, !srcloc !14917
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16638
  call void @llvm.dbg.value(metadata i32 %3, metadata !14914, metadata !DIExpression()) #23, !dbg !16640
  call void @llvm.dbg.value(metadata i32 undef, metadata !14915, metadata !DIExpression()) #23, !dbg !16640
  call void @llvm.dbg.value(metadata i32 %3, metadata !14908, metadata !DIExpression()) #23, !dbg !16636
  call void @llvm.dbg.value(metadata i32 %3, metadata !16634, metadata !DIExpression()), !dbg !16635
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !16641
  %5 = load i8, i8* %4, align 4, !dbg !16641
  %6 = and i8 %5, 1, !dbg !16643
  %7 = icmp eq i8 %6, 0, !dbg !16644
  br i1 %7, label %9, label %8, !dbg !16645

8:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !14929, metadata !DIExpression()) #23, !dbg !16646
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14934, metadata !DIExpression()) #23, !dbg !16646
  call void @llvm.dbg.value(metadata i32 %3, metadata !14937, metadata !DIExpression()) #23, !dbg !16649
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !16651, !srcloc !14943
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #23, !dbg !16652, !srcloc !16654
  br label %24, !dbg !16655

9:                                                ; preds = %1
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16656
  %11 = load i8, i8* %10, align 1, !dbg !16656
  %12 = and i8 %11, 8, !dbg !16658
  %13 = icmp eq i8 %12, 0, !dbg !16659
  br i1 %13, label %15, label %14, !dbg !16660

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %3, metadata !14929, metadata !DIExpression()) #23, !dbg !16661
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14934, metadata !DIExpression()) #23, !dbg !16661
  call void @llvm.dbg.value(metadata i32 %3, metadata !14937, metadata !DIExpression()) #23, !dbg !16664
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !16666, !srcloc !14943
  br label %24, !dbg !16667

15:                                               ; preds = %9
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #24, !dbg !16668
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16669
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !16671
  br i1 %17, label %18, label %23, !dbg !16672

18:                                               ; preds = %15
  %19 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16673, !srcloc !15553
  call void @llvm.dbg.value(metadata i32 %19, metadata !15549, metadata !DIExpression()) #23, !dbg !16676
  %20 = icmp eq i32 %19, 0, !dbg !16677
  br i1 %20, label %21, label %23, !dbg !16678

21:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 %3, metadata !15513, metadata !DIExpression()) #23, !dbg !16679
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15518, metadata !DIExpression()) #23, !dbg !16679
  %22 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #25, !dbg !16682
  br label %23, !dbg !16683

23:                                               ; preds = %21, %18, %15
  call void @llvm.dbg.value(metadata i32 %3, metadata !14929, metadata !DIExpression()) #23, !dbg !16684
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14934, metadata !DIExpression()) #23, !dbg !16684
  call void @llvm.dbg.value(metadata i32 %3, metadata !14937, metadata !DIExpression()) #23, !dbg !16686
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !16688, !srcloc !14943
  br label %24, !dbg !16689

24:                                               ; preds = %23, %14, %8
  ret void, !dbg !16689
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16690 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16692, metadata !DIExpression()), !dbg !16693
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16694
  %3 = load i8, i8* %2, align 1, !dbg !16694
  %4 = and i8 %3, 8, !dbg !16696
  %5 = icmp eq i8 %4, 0, !dbg !16697
  br i1 %5, label %6, label %20, !dbg !16698

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !16699
  %8 = or i8 %7, 8, !dbg !16699
  store i8 %8, i8* %2, align 1, !dbg !16699
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #24, !dbg !16701
  br i1 %9, label %10, label %12, !dbg !16703

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15071, metadata !DIExpression()) #23, !dbg !16704
  %11 = and i8 %8, 95, !dbg !16707
  store i8 %11, i8* %2, align 1, !dbg !16707
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15079, metadata !DIExpression()) #23, !dbg !16708
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef nonnull %0) #25, !dbg !16710
  br label %12, !dbg !16711

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16712
  %14 = load %struct._wait_q_t*, %struct._wait_q_t** %13, align 8, !dbg !16712
  %15 = icmp eq %struct._wait_q_t* %14, null, !dbg !16714
  br i1 %15, label %17, label %16, !dbg !16715

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #24, !dbg !16716
  br label %17, !dbg !16718

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #24, !dbg !16719
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !16720
  tail call fastcc void @unpend_all(%struct._wait_q_t* noundef nonnull %19) #24, !dbg !16721
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !16722
  br label %20, !dbg !16723

20:                                               ; preds = %17, %1
  ret void, !dbg !16724
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%struct._wait_q_t* noundef %0) unnamed_addr #1 !dbg !16725 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !16729, metadata !DIExpression()), !dbg !16731
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef %0) #24, !dbg !16732
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !16730, metadata !DIExpression()), !dbg !16731
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !16733
  br i1 %3, label %10, label %4, !dbg !16734

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #24, !dbg !16735
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #24, !dbg !16737
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !16738, metadata !DIExpression()), !dbg !16744
  call void @llvm.dbg.value(metadata i32 0, metadata !16743, metadata !DIExpression()), !dbg !16744
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 7, i32 1, !dbg !16746
  store i32 0, i32* %7, align 4, !dbg !16747
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !16748
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef %0) #24, !dbg !16732
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !16730, metadata !DIExpression()), !dbg !16731
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !16733
  br i1 %9, label %10, label %4, !dbg !16734, !llvm.loop !16749

10:                                               ; preds = %4, %1
  ret void, !dbg !16751
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !16752 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16757, metadata !DIExpression()), !dbg !16760
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16756, metadata !DIExpression()), !dbg !16760
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14902, metadata !DIExpression()) #23, !dbg !16761
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16763, !srcloc !14917
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !16763
  call void @llvm.dbg.value(metadata i32 %4, metadata !14914, metadata !DIExpression()) #23, !dbg !16765
  call void @llvm.dbg.value(metadata i32 undef, metadata !14915, metadata !DIExpression()) #23, !dbg !16765
  call void @llvm.dbg.value(metadata i32 %4, metadata !14908, metadata !DIExpression()) #23, !dbg !16761
  call void @llvm.dbg.value(metadata i32 %4, metadata !16758, metadata !DIExpression()), !dbg !16760
  call void @llvm.dbg.value(metadata i32 0, metadata !16759, metadata !DIExpression()), !dbg !16760
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16766
  %6 = load i8, i8* %5, align 1, !dbg !16766
  %7 = and i8 %6, 8, !dbg !16768
  %8 = icmp eq i8 %7, 0, !dbg !16769
  br i1 %8, label %9, label %24, !dbg !16770

9:                                                ; preds = %2
  %10 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %10, metadata !16757, metadata !DIExpression()), !dbg !16760
  %11 = icmp eq i64 %10, 0, !dbg !16771
  br i1 %11, label %24, label %12, !dbg !16773

12:                                               ; preds = %9
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16774
  %14 = icmp eq %struct.k_thread* %13, %0, !dbg !16776
  br i1 %14, label %24, label %15, !dbg !16777

15:                                               ; preds = %12
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16778
  %17 = load %struct._wait_q_t*, %struct._wait_q_t** %16, align 8, !dbg !16778
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 3, !dbg !16779
  %19 = icmp eq %struct._wait_q_t* %17, %18, !dbg !16780
  br i1 %19, label %24, label %20, !dbg !16781

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !16782
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %13, %struct._wait_q_t* noundef nonnull %21) #24, !dbg !16784
  %22 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16785
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %22, [1 x i64] %1) #24, !dbg !16786
  call void @llvm.dbg.value(metadata i32 %4, metadata !15513, metadata !DIExpression()) #23, !dbg !16787
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15518, metadata !DIExpression()) #23, !dbg !16787
  %23 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %4) #25, !dbg !16789
  call void @llvm.dbg.value(metadata i32 %23, metadata !16759, metadata !DIExpression()), !dbg !16760
  br label %26, !dbg !16790

24:                                               ; preds = %12, %15, %9, %2
  %25 = phi i32 [ 0, %2 ], [ -16, %9 ], [ -45, %15 ], [ -45, %12 ], !dbg !16791
  call void @llvm.dbg.value(metadata i32 %25, metadata !16759, metadata !DIExpression()), !dbg !16760
  call void @llvm.dbg.value(metadata i32 %4, metadata !14929, metadata !DIExpression()) #23, !dbg !16792
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14934, metadata !DIExpression()) #23, !dbg !16792
  call void @llvm.dbg.value(metadata i32 %4, metadata !14937, metadata !DIExpression()) #23, !dbg !16794
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !16796, !srcloc !14943
  br label %26, !dbg !16797

26:                                               ; preds = %24, %20
  %27 = phi i32 [ %25, %24 ], [ %23, %20 ], !dbg !16760
  ret i32 %27, !dbg !16798
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%struct._wait_q_t* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !16799 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !16803, metadata !DIExpression()), !dbg !16811
  call void @llvm.dbg.value(metadata i32 %1, metadata !16804, metadata !DIExpression()), !dbg !16811
  call void @llvm.dbg.value(metadata i8* %2, metadata !16805, metadata !DIExpression()), !dbg !16811
  call void @llvm.dbg.value(metadata i8 0, metadata !16807, metadata !DIExpression()), !dbg !16811
  call void @llvm.dbg.value(metadata i32 0, metadata !16808, metadata !DIExpression()), !dbg !16812
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14902, metadata !DIExpression()) #23, !dbg !16813
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16815, !srcloc !14917
  call void @llvm.dbg.value(metadata i32 undef, metadata !14914, metadata !DIExpression()) #23, !dbg !16817
  call void @llvm.dbg.value(metadata i32 undef, metadata !14915, metadata !DIExpression()) #23, !dbg !16817
  call void @llvm.dbg.value(metadata i32 undef, metadata !14908, metadata !DIExpression()) #23, !dbg !16813
  call void @llvm.dbg.value(metadata i32 undef, metadata !16810, metadata !DIExpression()), !dbg !16812
  call void @llvm.dbg.value(metadata i8 poison, metadata !16807, metadata !DIExpression()), !dbg !16811
  call void @llvm.dbg.value(metadata i32 undef, metadata !16808, metadata !DIExpression()), !dbg !16812
  %5 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %6 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %5) #24, !dbg !16818
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !16806, metadata !DIExpression()), !dbg !16811
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !16821
  br i1 %7, label %12, label %8, !dbg !16823

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !16824, metadata !DIExpression()), !dbg !16832
  call void @llvm.dbg.value(metadata i32 %1, metadata !16830, metadata !DIExpression()), !dbg !16832
  call void @llvm.dbg.value(metadata i8* %2, metadata !16831, metadata !DIExpression()), !dbg !16832
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !16738, metadata !DIExpression()), !dbg !16835
  call void @llvm.dbg.value(metadata i32 %1, metadata !16743, metadata !DIExpression()), !dbg !16835
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 7, i32 1, !dbg !16837
  store i32 %1, i32* %9, align 4, !dbg !16838
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 6, !dbg !16839
  store i8* %2, i8** %10, align 4, !dbg !16840
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %6) #24, !dbg !16841
  %11 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %6) #24, !dbg !16842
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %6) #24, !dbg !16843
  call void @llvm.dbg.value(metadata i8 1, metadata !16807, metadata !DIExpression()), !dbg !16811
  br label %12, !dbg !16844

12:                                               ; preds = %3, %8
  %13 = xor i1 %7, true, !dbg !16815
  %14 = extractvalue { i32, i32 } %4, 0, !dbg !16815
  call void @llvm.dbg.value(metadata i32 %14, metadata !14914, metadata !DIExpression()) #23, !dbg !16817
  call void @llvm.dbg.value(metadata i32 %14, metadata !14908, metadata !DIExpression()) #23, !dbg !16813
  call void @llvm.dbg.value(metadata i32 %14, metadata !16810, metadata !DIExpression()), !dbg !16812
  call void @llvm.dbg.value(metadata i8 poison, metadata !16807, metadata !DIExpression()), !dbg !16811
  call void @llvm.dbg.value(metadata i32 undef, metadata !14929, metadata !DIExpression()) #23, !dbg !16845
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14934, metadata !DIExpression()) #23, !dbg !16845
  call void @llvm.dbg.value(metadata i32 undef, metadata !14937, metadata !DIExpression()) #23, !dbg !16847
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #23, !dbg !16849, !srcloc !14943
  call void @llvm.dbg.value(metadata i32 undef, metadata !16808, metadata !DIExpression()), !dbg !16812
  ret i1 %13, !dbg !16850
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct.k_spinlock* nocapture noundef readnone %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !16851 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !16857, metadata !DIExpression()), !dbg !16862
  call void @llvm.dbg.value(metadata i64 undef, metadata !16859, metadata !DIExpression()), !dbg !16862
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !16856, metadata !DIExpression()), !dbg !16862
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %2, metadata !16858, metadata !DIExpression()), !dbg !16862
  call void @llvm.dbg.value(metadata i8** %4, metadata !16860, metadata !DIExpression()), !dbg !16862
  %6 = tail call i32 @z_pend_curr(%struct.k_spinlock* undef, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3) #24, !dbg !16863
  call void @llvm.dbg.value(metadata i32 %6, metadata !16861, metadata !DIExpression()), !dbg !16862
  %7 = icmp eq i8** %4, null, !dbg !16864
  br i1 %7, label %12, label %8, !dbg !16866

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16867
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !16869
  %11 = load i8*, i8** %10, align 4, !dbg !16869
  store i8* %11, i8** %4, align 4, !dbg !16870
  br label %12, !dbg !16871

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !16872
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !16873 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #25, !dbg !16875
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #25, !dbg !16876
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ccm_data_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ccm_data_rom_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__ccm_data_end to i32), i32 ptrtoint ([0 x i8]* @__ccm_data_start to i32))) #25, !dbg !16877
  ret void, !dbg !16878
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !16879 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !16889, metadata !DIExpression()), !dbg !16906
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16887, metadata !DIExpression()), !dbg !16906
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !16888, metadata !DIExpression()), !dbg !16906
  %5 = icmp eq i64 %4, -1, !dbg !16907
  br i1 %5, label %55, label %6, !dbg !16909

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !16910
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %7, align 8, !dbg !16911
  call void @llvm.dbg.value(metadata i32 0, metadata !16890, metadata !DIExpression()), !dbg !16912
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16913, metadata !DIExpression()) #23, !dbg !16920
  %8 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16922, !srcloc !16928
  %9 = extractvalue { i32, i32 } %8, 0, !dbg !16922
  call void @llvm.dbg.value(metadata i32 %9, metadata !16925, metadata !DIExpression()) #23, !dbg !16929
  call void @llvm.dbg.value(metadata i32 undef, metadata !16926, metadata !DIExpression()) #23, !dbg !16929
  call void @llvm.dbg.value(metadata i32 %9, metadata !16919, metadata !DIExpression()) #23, !dbg !16920
  call void @llvm.dbg.value(metadata i32 %9, metadata !16896, metadata !DIExpression()), !dbg !16912
  call void @llvm.dbg.value(metadata i32 undef, metadata !16890, metadata !DIExpression()), !dbg !16912
  %10 = icmp slt i64 %4, -1, !dbg !16930
  br i1 %10, label %11, label %17, !dbg !16931

11:                                               ; preds = %6
  %12 = load i64, i64* @curr_tick, align 8, !dbg !16932
  %13 = add i64 %4, %12, !dbg !16933
  %14 = sub i64 -2, %13, !dbg !16933
  call void @llvm.dbg.value(metadata i64 %14, metadata !16900, metadata !DIExpression()), !dbg !16934
  %15 = icmp sgt i64 %14, 1, !dbg !16935
  %16 = select i1 %15, i64 %14, i64 1, !dbg !16935
  br label %22, !dbg !16936

17:                                               ; preds = %6
  %18 = add nuw nsw i64 %4, 1, !dbg !16937
  %19 = tail call fastcc i32 @elapsed.259() #24, !dbg !16939
  %20 = sext i32 %19 to i64, !dbg !16939
  %21 = add nsw i64 %18, %20, !dbg !16940
  br label %22

22:                                               ; preds = %17, %11
  %23 = phi i64 [ %16, %11 ], [ %21, %17 ], !dbg !16941
  %24 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !16942
  store i64 %23, i64* %24, align 8, !dbg !16943
  %25 = tail call fastcc %struct._timeout* @first() #24, !dbg !16944
  call void @llvm.dbg.value(metadata %struct._timeout* %25, metadata !16897, metadata !DIExpression()), !dbg !16946
  %26 = icmp eq %struct._timeout* %25, null, !dbg !16947
  br i1 %26, label %42, label %27, !dbg !16947

27:                                               ; preds = %22, %38
  %28 = phi i64 [ %39, %38 ], [ %23, %22 ], !dbg !16948
  %29 = phi %struct._timeout* [ %40, %38 ], [ %25, %22 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %29, metadata !16897, metadata !DIExpression()), !dbg !16946
  %30 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !16952
  %31 = load i64, i64* %30, align 8, !dbg !16952
  %32 = icmp slt i64 %28, %31, !dbg !16953
  br i1 %32, label %33, label %38, !dbg !16954

33:                                               ; preds = %27
  %34 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !16952
  %35 = sub nsw i64 %31, %28, !dbg !16955
  store i64 %35, i64* %34, align 8, !dbg !16955
  %36 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 0, !dbg !16957
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16958
  tail call fastcc void @sys_dlist_insert.260(%struct._dnode* noundef nonnull %36, %struct._dnode* noundef %37) #24, !dbg !16959
  br label %44, !dbg !16960

38:                                               ; preds = %27
  %39 = sub nsw i64 %28, %31, !dbg !16961
  store i64 %39, i64* %24, align 8, !dbg !16961
  %40 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %29) #24, !dbg !16962
  call void @llvm.dbg.value(metadata %struct._timeout* %40, metadata !16897, metadata !DIExpression()), !dbg !16946
  %41 = icmp eq %struct._timeout* %40, null, !dbg !16947
  br i1 %41, label %42, label %27, !dbg !16947, !llvm.loop !16963

42:                                               ; preds = %38, %22
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16965
  tail call fastcc void @sys_dlist_append.261(%struct._dnode* noundef %43) #24, !dbg !16968
  br label %44, !dbg !16969

44:                                               ; preds = %33, %42
  %45 = tail call fastcc %struct._timeout* @first() #24, !dbg !16970
  %46 = icmp eq %struct._timeout* %45, %0, !dbg !16971
  br i1 %46, label %47, label %54, !dbg !16972

47:                                               ; preds = %44
  %48 = tail call fastcc i32 @next_timeout() #24, !dbg !16973
  call void @llvm.dbg.value(metadata i32 %48, metadata !16903, metadata !DIExpression()), !dbg !16974
  %49 = icmp ne i32 %48, 0, !dbg !16975
  %50 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4
  %51 = icmp eq i32 %50, %48
  %52 = select i1 %49, i1 %51, i1 false, !dbg !16977
  br i1 %52, label %54, label %53, !dbg !16977

53:                                               ; preds = %47
  tail call void @sys_clock_set_timeout(i32 noundef %48, i1 noundef zeroext false) #25, !dbg !16978
  br label %54, !dbg !16980

54:                                               ; preds = %53, %47, %44
  call void @llvm.dbg.value(metadata i32 %9, metadata !16981, metadata !DIExpression()) #23, !dbg !16987
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16986, metadata !DIExpression()) #23, !dbg !16987
  call void @llvm.dbg.value(metadata i32 %9, metadata !16989, metadata !DIExpression()) #23, !dbg !16992
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !16994, !srcloc !16995
  call void @llvm.dbg.value(metadata i32 undef, metadata !16890, metadata !DIExpression()), !dbg !16912
  br label %55

55:                                               ; preds = %3, %54
  ret void, !dbg !16996
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.259() unnamed_addr #1 !dbg !16997 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !17000
  %2 = icmp eq i32 %1, 0, !dbg !17001
  br i1 %2, label %3, label %5, !dbg !17000

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #25, !dbg !17002
  br label %5, !dbg !17000

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !17000
  ret i32 %6, !dbg !17003
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #10 !dbg !17004 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.264() #24, !dbg !17010
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !17008, metadata !DIExpression()), !dbg !17011
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !17012
  ret %struct._timeout* %2, !dbg !17013
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.260(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #11 !dbg !17014 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17018, metadata !DIExpression()), !dbg !17022
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !17019, metadata !DIExpression()), !dbg !17022
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17023
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !17023
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !17020, metadata !DIExpression()), !dbg !17022
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !17024
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !17025
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !17026
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !17027
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !17028
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !17029
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !17030
  ret void, !dbg !17031
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #10 !dbg !17032 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17036, metadata !DIExpression()), !dbg !17038
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17039
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.262(%struct._dnode* noundef %2) #24, !dbg !17040
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !17037, metadata !DIExpression()), !dbg !17038
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !17041
  ret %struct._timeout* %4, !dbg !17042
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.261(%struct._dnode* noundef %0) unnamed_addr #11 !dbg !17043 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17048, metadata !DIExpression()), !dbg !17051
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17049, metadata !DIExpression()), !dbg !17051
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !17052
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !17050, metadata !DIExpression()), !dbg !17051
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17053
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !17054
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17055
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !17056
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !17057
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !17058
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !17059
  ret void, !dbg !17060
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !17061 {
  %1 = tail call fastcc %struct._timeout* @first() #24, !dbg !17066
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !17063, metadata !DIExpression()), !dbg !17067
  %2 = tail call fastcc i32 @elapsed.259() #24, !dbg !17068
  call void @llvm.dbg.value(metadata i32 %2, metadata !17064, metadata !DIExpression()), !dbg !17067
  %3 = icmp eq %struct._timeout* %1, null, !dbg !17069
  br i1 %3, label %14, label %4, !dbg !17071

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !17072
  %6 = load i64, i64* %5, align 8, !dbg !17072
  %7 = sext i32 %2 to i64, !dbg !17073
  %8 = sub nsw i64 %6, %7, !dbg !17074
  %9 = icmp sgt i64 %8, 2147483647, !dbg !17075
  br i1 %9, label %14, label %10, !dbg !17076

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !17077
  %12 = select i1 %11, i64 %8, i64 0, !dbg !17077
  %13 = trunc i64 %12 to i32, !dbg !17077
  call void @llvm.dbg.value(metadata i32 %13, metadata !17065, metadata !DIExpression()), !dbg !17067
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !17079
  call void @llvm.dbg.value(metadata i32 %15, metadata !17065, metadata !DIExpression()), !dbg !17067
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !17080
  %17 = icmp ne i32 %16, 0, !dbg !17082
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !17083
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !17083
  call void @llvm.dbg.value(metadata i32 %20, metadata !17065, metadata !DIExpression()), !dbg !17067
  ret i32 %20, !dbg !17084
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.262(%struct._dnode* noundef readonly %0) unnamed_addr #10 !dbg !17085 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17089, metadata !DIExpression()), !dbg !17091
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17090, metadata !DIExpression()), !dbg !17091
  %2 = icmp eq %struct._dnode* %0, null, !dbg !17092
  br i1 %2, label %5, label %3, !dbg !17093

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.263(%struct._dnode* noundef nonnull %0) #24, !dbg !17094
  br label %5, !dbg !17093

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !17093
  ret %struct._dnode* %6, !dbg !17095
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.263(%struct._dnode* noundef readonly %0) unnamed_addr #10 !dbg !17096 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17098, metadata !DIExpression()), !dbg !17100
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17099, metadata !DIExpression()), !dbg !17100
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !17101
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !17102
  br i1 %3, label %7, label %4, !dbg !17103

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17104
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !17104
  br label %7, !dbg !17103

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !17103
  ret %struct._dnode* %8, !dbg !17105
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.264() unnamed_addr #10 !dbg !17106 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17110, metadata !DIExpression()), !dbg !17111
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.265() #24, !dbg !17112
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !17112
  ret %struct._dnode* %3, !dbg !17113
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.265() unnamed_addr #10 !dbg !17114 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17118, metadata !DIExpression()), !dbg !17119
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !17120
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !17121
  ret i1 %2, !dbg !17122
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !17123 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17127, metadata !DIExpression()), !dbg !17132
  call void @llvm.dbg.value(metadata i32 -22, metadata !17128, metadata !DIExpression()), !dbg !17132
  call void @llvm.dbg.value(metadata i32 0, metadata !17129, metadata !DIExpression()), !dbg !17133
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16913, metadata !DIExpression()) #23, !dbg !17134
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17136, !srcloc !16928
  call void @llvm.dbg.value(metadata i32 undef, metadata !16925, metadata !DIExpression()) #23, !dbg !17138
  call void @llvm.dbg.value(metadata i32 undef, metadata !16926, metadata !DIExpression()) #23, !dbg !17138
  call void @llvm.dbg.value(metadata i32 undef, metadata !16919, metadata !DIExpression()) #23, !dbg !17134
  call void @llvm.dbg.value(metadata i32 undef, metadata !17131, metadata !DIExpression()), !dbg !17133
  call void @llvm.dbg.value(metadata i32 -22, metadata !17128, metadata !DIExpression()), !dbg !17132
  call void @llvm.dbg.value(metadata i32 undef, metadata !17129, metadata !DIExpression()), !dbg !17133
  %3 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !17128, metadata !DIExpression()), !dbg !17132
  %4 = tail call fastcc zeroext i1 @sys_dnode_is_linked.268(%struct._dnode* noundef %3) #24, !dbg !17139
  br i1 %4, label %5, label %6, !dbg !17143

5:                                                ; preds = %1
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #24, !dbg !17144
  call void @llvm.dbg.value(metadata i32 0, metadata !17128, metadata !DIExpression()), !dbg !17132
  br label %6, !dbg !17146

6:                                                ; preds = %1, %5
  %7 = phi i32 [ 0, %5 ], [ -22, %1 ], !dbg !17132
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !17136
  call void @llvm.dbg.value(metadata i32 %8, metadata !16925, metadata !DIExpression()) #23, !dbg !17138
  call void @llvm.dbg.value(metadata i32 %8, metadata !16919, metadata !DIExpression()) #23, !dbg !17134
  call void @llvm.dbg.value(metadata i32 %8, metadata !17131, metadata !DIExpression()), !dbg !17133
  call void @llvm.dbg.value(metadata i32 %7, metadata !17128, metadata !DIExpression()), !dbg !17132
  call void @llvm.dbg.value(metadata i32 undef, metadata !16981, metadata !DIExpression()) #23, !dbg !17147
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16986, metadata !DIExpression()) #23, !dbg !17147
  call void @llvm.dbg.value(metadata i32 undef, metadata !16989, metadata !DIExpression()) #23, !dbg !17149
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #23, !dbg !17151, !srcloc !16995
  call void @llvm.dbg.value(metadata i32 undef, metadata !17129, metadata !DIExpression()), !dbg !17133
  ret i32 %7, !dbg !17152
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.268(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #10 !dbg !17153 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17159, metadata !DIExpression()), !dbg !17160
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17161
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !17161
  %4 = icmp ne %struct._dnode* %3, null, !dbg !17162
  ret i1 %4, !dbg !17163
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #11 !dbg !17164 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17166, metadata !DIExpression()), !dbg !17167
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #24, !dbg !17168
  %3 = icmp eq %struct._timeout* %2, null, !dbg !17170
  br i1 %3, label %10, label %4, !dbg !17171

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !17172
  %6 = load i64, i64* %5, align 8, !dbg !17172
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !17174
  %8 = load i64, i64* %7, align 8, !dbg !17175
  %9 = add nsw i64 %8, %6, !dbg !17175
  store i64 %9, i64* %7, align 8, !dbg !17175
  br label %10, !dbg !17176

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17177
  tail call fastcc void @sys_dlist_remove.269(%struct._dnode* noundef %11) #24, !dbg !17178
  ret void, !dbg !17179
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.269(%struct._dnode* nocapture noundef %0) unnamed_addr #11 !dbg !17180 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17184, metadata !DIExpression()), !dbg !17187
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17188
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !17188
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !17185, metadata !DIExpression()), !dbg !17187
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17189
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !17189
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !17186, metadata !DIExpression()), !dbg !17187
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !17190
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !17191
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !17192
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !17193
  tail call fastcc void @sys_dnode_init.270(%struct._dnode* noundef %0) #24, !dbg !17194
  ret void, !dbg !17195
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.270(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #6 !dbg !17196 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17198, metadata !DIExpression()), !dbg !17199
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17200
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !17201
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17202
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !17203
  ret void, !dbg !17204
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !17205 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17211, metadata !DIExpression()), !dbg !17216
  call void @llvm.dbg.value(metadata i64 0, metadata !17212, metadata !DIExpression()), !dbg !17216
  call void @llvm.dbg.value(metadata i32 0, metadata !17213, metadata !DIExpression()), !dbg !17217
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16913, metadata !DIExpression()) #23, !dbg !17218
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17220, !srcloc !16928
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !17220
  call void @llvm.dbg.value(metadata i32 %3, metadata !16925, metadata !DIExpression()) #23, !dbg !17222
  call void @llvm.dbg.value(metadata i32 undef, metadata !16926, metadata !DIExpression()) #23, !dbg !17222
  call void @llvm.dbg.value(metadata i32 %3, metadata !16919, metadata !DIExpression()) #23, !dbg !17218
  call void @llvm.dbg.value(metadata i32 %3, metadata !17215, metadata !DIExpression()), !dbg !17217
  call void @llvm.dbg.value(metadata i64 0, metadata !17212, metadata !DIExpression()), !dbg !17216
  call void @llvm.dbg.value(metadata i32 undef, metadata !17213, metadata !DIExpression()), !dbg !17217
  %4 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #24, !dbg !17223
  call void @llvm.dbg.value(metadata i64 %4, metadata !17212, metadata !DIExpression()), !dbg !17216
  call void @llvm.dbg.value(metadata i32 %3, metadata !16981, metadata !DIExpression()) #23, !dbg !17226
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16986, metadata !DIExpression()) #23, !dbg !17226
  call void @llvm.dbg.value(metadata i32 %3, metadata !16989, metadata !DIExpression()) #23, !dbg !17228
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !17230, !srcloc !16995
  call void @llvm.dbg.value(metadata i32 undef, metadata !17213, metadata !DIExpression()), !dbg !17217
  ret i64 %4, !dbg !17231
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !17232 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17234, metadata !DIExpression()), !dbg !17238
  call void @llvm.dbg.value(metadata i64 0, metadata !17235, metadata !DIExpression()), !dbg !17238
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.271(%struct._timeout* noundef %0) #24, !dbg !17239
  br i1 %2, label %21, label %3, !dbg !17241

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #24, !dbg !17242
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !17236, metadata !DIExpression()), !dbg !17243
  call void @llvm.dbg.value(metadata i64 0, metadata !17235, metadata !DIExpression()), !dbg !17238
  %5 = icmp eq %struct._timeout* %4, null, !dbg !17244
  br i1 %5, label %16, label %6, !dbg !17246

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !17236, metadata !DIExpression()), !dbg !17243
  call void @llvm.dbg.value(metadata i64 %8, metadata !17235, metadata !DIExpression()), !dbg !17238
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !17247
  %10 = load i64, i64* %9, align 8, !dbg !17247
  %11 = add nsw i64 %10, %8, !dbg !17249
  call void @llvm.dbg.value(metadata i64 %11, metadata !17235, metadata !DIExpression()), !dbg !17238
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !17250
  br i1 %12, label %16, label %13, !dbg !17252

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #24, !dbg !17253
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !17236, metadata !DIExpression()), !dbg !17243
  call void @llvm.dbg.value(metadata i64 %11, metadata !17235, metadata !DIExpression()), !dbg !17238
  %15 = icmp eq %struct._timeout* %14, null, !dbg !17244
  br i1 %15, label %16, label %6, !dbg !17246, !llvm.loop !17254

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !17238
  call void @llvm.dbg.value(metadata i64 %17, metadata !17235, metadata !DIExpression()), !dbg !17238
  %18 = tail call fastcc i32 @elapsed.259() #24, !dbg !17256
  %19 = sext i32 %18 to i64, !dbg !17256
  %20 = sub nsw i64 %17, %19, !dbg !17257
  br label %21, !dbg !17258

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !17238
  ret i64 %22, !dbg !17259
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.271(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #10 !dbg !17260 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17264, metadata !DIExpression()), !dbg !17265
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17266
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.268(%struct._dnode* noundef %2) #24, !dbg !17267
  %4 = xor i1 %3, true, !dbg !17268
  ret i1 %4, !dbg !17269
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !17270 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17272, metadata !DIExpression()), !dbg !17277
  call void @llvm.dbg.value(metadata i64 0, metadata !17273, metadata !DIExpression()), !dbg !17277
  call void @llvm.dbg.value(metadata i32 0, metadata !17274, metadata !DIExpression()), !dbg !17278
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16913, metadata !DIExpression()) #23, !dbg !17279
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17281, !srcloc !16928
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !17281
  call void @llvm.dbg.value(metadata i32 %3, metadata !16925, metadata !DIExpression()) #23, !dbg !17283
  call void @llvm.dbg.value(metadata i32 undef, metadata !16926, metadata !DIExpression()) #23, !dbg !17283
  call void @llvm.dbg.value(metadata i32 %3, metadata !16919, metadata !DIExpression()) #23, !dbg !17279
  call void @llvm.dbg.value(metadata i32 %3, metadata !17276, metadata !DIExpression()), !dbg !17278
  call void @llvm.dbg.value(metadata i64 0, metadata !17273, metadata !DIExpression()), !dbg !17277
  call void @llvm.dbg.value(metadata i32 undef, metadata !17274, metadata !DIExpression()), !dbg !17278
  %4 = load i64, i64* @curr_tick, align 8, !dbg !17284
  %5 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #24, !dbg !17287
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i64 %4), metadata !17273, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !17277
  call void @llvm.dbg.value(metadata i32 %3, metadata !16981, metadata !DIExpression()) #23, !dbg !17288
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16986, metadata !DIExpression()) #23, !dbg !17288
  call void @llvm.dbg.value(metadata i32 %3, metadata !16989, metadata !DIExpression()) #23, !dbg !17290
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !17292, !srcloc !16995
  call void @llvm.dbg.value(metadata i32 undef, metadata !17274, metadata !DIExpression()), !dbg !17278
  %6 = add i64 %5, %4, !dbg !17293
  ret i64 %6, !dbg !17294
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !17295 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !17297, metadata !DIExpression()), !dbg !17301
  call void @llvm.dbg.value(metadata i32 0, metadata !17298, metadata !DIExpression()), !dbg !17302
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16913, metadata !DIExpression()) #23, !dbg !17303
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17305, !srcloc !16928
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !17305
  call void @llvm.dbg.value(metadata i32 %2, metadata !16925, metadata !DIExpression()) #23, !dbg !17307
  call void @llvm.dbg.value(metadata i32 undef, metadata !16926, metadata !DIExpression()) #23, !dbg !17307
  call void @llvm.dbg.value(metadata i32 %2, metadata !16919, metadata !DIExpression()) #23, !dbg !17303
  call void @llvm.dbg.value(metadata i32 %2, metadata !17300, metadata !DIExpression()), !dbg !17302
  call void @llvm.dbg.value(metadata i32 -1, metadata !17297, metadata !DIExpression()), !dbg !17301
  call void @llvm.dbg.value(metadata i32 undef, metadata !17298, metadata !DIExpression()), !dbg !17302
  %3 = tail call fastcc i32 @next_timeout() #24, !dbg !17308
  call void @llvm.dbg.value(metadata i32 %3, metadata !17297, metadata !DIExpression()), !dbg !17301
  call void @llvm.dbg.value(metadata i32 %2, metadata !16981, metadata !DIExpression()) #23, !dbg !17311
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16986, metadata !DIExpression()) #23, !dbg !17311
  call void @llvm.dbg.value(metadata i32 %2, metadata !16989, metadata !DIExpression()) #23, !dbg !17313
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !17315, !srcloc !16995
  call void @llvm.dbg.value(metadata i32 undef, metadata !17298, metadata !DIExpression()), !dbg !17302
  ret i32 %3, !dbg !17316
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !17317 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17319, metadata !DIExpression()), !dbg !17329
  call void @llvm.dbg.value(metadata i1 %1, metadata !17320, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17329
  call void @llvm.dbg.value(metadata i32 0, metadata !17321, metadata !DIExpression()), !dbg !17330
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16913, metadata !DIExpression()) #23, !dbg !17331
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17333, !srcloc !16928
  call void @llvm.dbg.value(metadata i32 undef, metadata !16925, metadata !DIExpression()) #23, !dbg !17335
  call void @llvm.dbg.value(metadata i32 undef, metadata !16926, metadata !DIExpression()) #23, !dbg !17335
  call void @llvm.dbg.value(metadata i32 undef, metadata !16919, metadata !DIExpression()) #23, !dbg !17331
  call void @llvm.dbg.value(metadata i32 undef, metadata !17323, metadata !DIExpression()), !dbg !17330
  call void @llvm.dbg.value(metadata i32 undef, metadata !17321, metadata !DIExpression()), !dbg !17330
  %4 = tail call fastcc i32 @next_timeout() #24, !dbg !17336
  call void @llvm.dbg.value(metadata i32 %4, metadata !17324, metadata !DIExpression()), !dbg !17337
  call void @llvm.dbg.value(metadata i1 undef, metadata !17327, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17337
  %5 = icmp slt i32 %4, 2, !dbg !17338
  call void @llvm.dbg.value(metadata i1 %5, metadata !17328, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17337
  %6 = icmp slt i32 %4, %0
  %7 = or i1 %5, %6, !dbg !17339
  call void @llvm.dbg.value(metadata i1 %6, metadata !17327, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17337
  br i1 %7, label %11, label %8, !dbg !17339

8:                                                ; preds = %2
  %9 = icmp sgt i32 %4, %0, !dbg !17341
  %10 = select i1 %9, i32 %0, i32 %4, !dbg !17341
  tail call void @sys_clock_set_timeout(i32 noundef %10, i1 noundef zeroext %1) #25, !dbg !17343
  br label %11, !dbg !17344

11:                                               ; preds = %8, %2
  %12 = extractvalue { i32, i32 } %3, 0, !dbg !17333
  call void @llvm.dbg.value(metadata i32 %12, metadata !16925, metadata !DIExpression()) #23, !dbg !17335
  call void @llvm.dbg.value(metadata i32 %12, metadata !16919, metadata !DIExpression()) #23, !dbg !17331
  call void @llvm.dbg.value(metadata i32 %12, metadata !17323, metadata !DIExpression()), !dbg !17330
  call void @llvm.dbg.value(metadata i32 undef, metadata !16981, metadata !DIExpression()) #23, !dbg !17345
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16986, metadata !DIExpression()) #23, !dbg !17345
  call void @llvm.dbg.value(metadata i32 undef, metadata !16989, metadata !DIExpression()) #23, !dbg !17347
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #23, !dbg !17349, !srcloc !16995
  call void @llvm.dbg.value(metadata i32 1, metadata !17321, metadata !DIExpression()), !dbg !17330
  call void @llvm.dbg.value(metadata i32 undef, metadata !17321, metadata !DIExpression()), !dbg !17330
  ret void, !dbg !17350
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !17351 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17355, metadata !DIExpression()), !dbg !17360
  tail call void @z_time_slice(i32 noundef %0) #25, !dbg !17361
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16913, metadata !DIExpression()) #23, !dbg !17362
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17364, !srcloc !16928
  call void @llvm.dbg.value(metadata i32 undef, metadata !16925, metadata !DIExpression()) #23, !dbg !17366
  call void @llvm.dbg.value(metadata i32 undef, metadata !16926, metadata !DIExpression()) #23, !dbg !17366
  call void @llvm.dbg.value(metadata i32 undef, metadata !16919, metadata !DIExpression()) #23, !dbg !17362
  call void @llvm.dbg.value(metadata i32 undef, metadata !17356, metadata !DIExpression()), !dbg !17360
  store i32 %0, i32* @announce_remaining, align 4, !dbg !17360
  call void @llvm.dbg.value(metadata i32 undef, metadata !17356, metadata !DIExpression()), !dbg !17360
  %3 = tail call fastcc %struct._timeout* @first() #24, !dbg !17367
  %4 = icmp eq %struct._timeout* %3, null, !dbg !17368
  br i1 %4, label %28, label %5, !dbg !17369

5:                                                ; preds = %1, %13
  %6 = phi %struct._timeout* [ %24, %13 ], [ %3, %1 ]
  %7 = phi { i32, i32 } [ %21, %13 ], [ %2, %1 ]
  %8 = phi i32 [ %23, %13 ], [ %0, %1 ]
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 2, !dbg !17370
  %10 = load i64, i64* %9, align 8, !dbg !17370
  %11 = sext i32 %8 to i64, !dbg !17371
  %12 = icmp sgt i64 %10, %11, !dbg !17372
  br i1 %12, label %26, label %13, !dbg !17373

13:                                               ; preds = %5
  %14 = extractvalue { i32, i32 } %7, 0, !dbg !17360
  call void @llvm.dbg.value(metadata %struct._timeout* %6, metadata !17357, metadata !DIExpression()), !dbg !17374
  %15 = trunc i64 %10 to i32, !dbg !17375
  call void @llvm.dbg.value(metadata i32 %15, metadata !17359, metadata !DIExpression()), !dbg !17374
  %16 = sext i32 %15 to i64, !dbg !17376
  %17 = load i64, i64* @curr_tick, align 8, !dbg !17377
  %18 = add i64 %17, %16, !dbg !17377
  store i64 %18, i64* @curr_tick, align 8, !dbg !17377
  store i64 0, i64* %9, align 8, !dbg !17378
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %6) #24, !dbg !17379
  call void @llvm.dbg.value(metadata i32 %14, metadata !16981, metadata !DIExpression()) #23, !dbg !17380
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16986, metadata !DIExpression()) #23, !dbg !17380
  call void @llvm.dbg.value(metadata i32 %14, metadata !16989, metadata !DIExpression()) #23, !dbg !17382
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #23, !dbg !17384, !srcloc !16995
  %19 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 1, !dbg !17385
  %20 = load void (%struct._timeout*)*, void (%struct._timeout*)** %19, align 8, !dbg !17385
  tail call void %20(%struct._timeout* noundef nonnull %6) #25, !dbg !17386
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16913, metadata !DIExpression()) #23, !dbg !17387
  %21 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17389, !srcloc !16928
  call void @llvm.dbg.value(metadata i32 undef, metadata !16925, metadata !DIExpression()) #23, !dbg !17391
  call void @llvm.dbg.value(metadata i32 undef, metadata !16926, metadata !DIExpression()) #23, !dbg !17391
  call void @llvm.dbg.value(metadata i32 undef, metadata !16919, metadata !DIExpression()) #23, !dbg !17387
  call void @llvm.dbg.value(metadata i32 undef, metadata !17356, metadata !DIExpression()), !dbg !17360
  %22 = load i32, i32* @announce_remaining, align 4, !dbg !17392
  %23 = sub nsw i32 %22, %15, !dbg !17392
  store i32 %23, i32* @announce_remaining, align 4, !dbg !17360
  call void @llvm.dbg.value(metadata i32 undef, metadata !17356, metadata !DIExpression()), !dbg !17360
  %24 = tail call fastcc %struct._timeout* @first() #24, !dbg !17367
  %25 = icmp eq %struct._timeout* %24, null, !dbg !17368
  br i1 %25, label %28, label %5, !dbg !17369, !llvm.loop !17393

26:                                               ; preds = %5
  %27 = sub nsw i64 %10, %11, !dbg !17395
  store i64 %27, i64* %9, align 8, !dbg !17395
  br label %32, !dbg !17398

28:                                               ; preds = %13, %1
  %29 = phi { i32, i32 } [ %2, %1 ], [ %21, %13 ]
  %30 = phi i32 [ %0, %1 ], [ %23, %13 ], !dbg !17360
  %31 = sext i32 %30 to i64, !dbg !17399
  br label %32, !dbg !17399

32:                                               ; preds = %28, %26
  %33 = phi i64 [ %31, %28 ], [ %11, %26 ], !dbg !17399
  %34 = phi { i32, i32 } [ %29, %28 ], [ %7, %26 ]
  %35 = extractvalue { i32, i32 } %34, 0, !dbg !17360
  %36 = load i64, i64* @curr_tick, align 8, !dbg !17400
  %37 = add i64 %36, %33, !dbg !17400
  store i64 %37, i64* @curr_tick, align 8, !dbg !17400
  store i32 0, i32* @announce_remaining, align 4, !dbg !17401
  %38 = tail call fastcc i32 @next_timeout() #24, !dbg !17402
  tail call void @sys_clock_set_timeout(i32 noundef %38, i1 noundef zeroext false) #25, !dbg !17403
  call void @llvm.dbg.value(metadata i32 %35, metadata !16981, metadata !DIExpression()) #23, !dbg !17404
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16986, metadata !DIExpression()) #23, !dbg !17404
  call void @llvm.dbg.value(metadata i32 %35, metadata !16989, metadata !DIExpression()) #23, !dbg !17406
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %35) #23, !dbg !17408, !srcloc !16995
  ret void, !dbg !17409
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !17410 {
  call void @llvm.dbg.value(metadata i64 0, metadata !17414, metadata !DIExpression()), !dbg !17418
  call void @llvm.dbg.value(metadata i32 0, metadata !17415, metadata !DIExpression()), !dbg !17419
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16913, metadata !DIExpression()) #23, !dbg !17420
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17422, !srcloc !16928
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !17422
  call void @llvm.dbg.value(metadata i32 %2, metadata !16925, metadata !DIExpression()) #23, !dbg !17424
  call void @llvm.dbg.value(metadata i32 undef, metadata !16926, metadata !DIExpression()) #23, !dbg !17424
  call void @llvm.dbg.value(metadata i32 %2, metadata !16919, metadata !DIExpression()) #23, !dbg !17420
  call void @llvm.dbg.value(metadata i32 %2, metadata !17417, metadata !DIExpression()), !dbg !17419
  call void @llvm.dbg.value(metadata i64 0, metadata !17414, metadata !DIExpression()), !dbg !17418
  call void @llvm.dbg.value(metadata i32 undef, metadata !17415, metadata !DIExpression()), !dbg !17419
  %3 = load i64, i64* @curr_tick, align 8, !dbg !17425
  %4 = tail call fastcc i32 @elapsed.259() #24, !dbg !17428
  call void @llvm.dbg.value(metadata !DIArgList(i32 %4, i64 %3), metadata !17414, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !17418
  call void @llvm.dbg.value(metadata i32 %2, metadata !16981, metadata !DIExpression()) #23, !dbg !17429
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16986, metadata !DIExpression()) #23, !dbg !17429
  call void @llvm.dbg.value(metadata i32 %2, metadata !16989, metadata !DIExpression()) #23, !dbg !17431
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !17433, !srcloc !16995
  call void @llvm.dbg.value(metadata i32 undef, metadata !17415, metadata !DIExpression()), !dbg !17419
  %5 = sext i32 %4 to i64, !dbg !17428
  %6 = add i64 %3, %5, !dbg !17434
  ret i64 %6, !dbg !17435
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !17436 {
  %1 = tail call i64 @sys_clock_tick_get() #24, !dbg !17437
  %2 = trunc i64 %1 to i32, !dbg !17438
  ret i32 %2, !dbg !17439
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !17440 {
  %1 = tail call i64 @sys_clock_tick_get() #24, !dbg !17441
  ret i64 %1, !dbg !17442
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !17443 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17445, metadata !DIExpression()), !dbg !17452
  %2 = icmp eq i32 %0, 0, !dbg !17453
  br i1 %2, label %10, label %3, !dbg !17455

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32() #24, !dbg !17456
  call void @llvm.dbg.value(metadata i32 %4, metadata !17446, metadata !DIExpression()), !dbg !17452
  %5 = mul i32 %0, 168, !dbg !17457
  call void @llvm.dbg.value(metadata i32 %5, metadata !17447, metadata !DIExpression()), !dbg !17452
  br label %6, !dbg !17458

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32() #24, !dbg !17459
  call void @llvm.dbg.value(metadata i32 %7, metadata !17448, metadata !DIExpression()), !dbg !17460
  %8 = sub i32 %7, %4, !dbg !17461
  %9 = icmp ult i32 %8, %5, !dbg !17463
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !17464
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !17465 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #24, !dbg !17466
  ret i32 %1, !dbg !17467
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !17468 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #25, !dbg !17470
  ret i32 %1, !dbg !17471
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !17472 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !17476, metadata !DIExpression()), !dbg !17478
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !17479

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #24, !dbg !17480
  br label %14, !dbg !17484

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !17477, metadata !DIExpression()), !dbg !17478
  %6 = icmp slt i64 %2, -1, !dbg !17485
  br i1 %6, label %7, label %9, !dbg !17488

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !17489
  br label %14, !dbg !17490

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #24, !dbg !17492
  %11 = icmp ugt i64 %2, 1, !dbg !17493
  %12 = select i1 %11, i64 %2, i64 1, !dbg !17493
  %13 = add nsw i64 %10, %12, !dbg !17494
  br label %14, !dbg !17495

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !17496
  ret i64 %15, !dbg !17497
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_timer_expiration_handler(%struct._timeout* noundef %0) #1 !dbg !17498 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17500, metadata !DIExpression()), !dbg !17511
  %2 = bitcast %struct._timeout* %0 to %struct.k_timer*, !dbg !17512
  call void @llvm.dbg.value(metadata %struct.k_timer* %2, metadata !17501, metadata !DIExpression()), !dbg !17511
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17513, metadata !DIExpression()) #23, !dbg !17520
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17522, !srcloc !17528
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !17522
  call void @llvm.dbg.value(metadata i32 %4, metadata !17525, metadata !DIExpression()) #23, !dbg !17529
  call void @llvm.dbg.value(metadata i32 undef, metadata !17526, metadata !DIExpression()) #23, !dbg !17529
  call void @llvm.dbg.value(metadata i32 %4, metadata !17519, metadata !DIExpression()) #23, !dbg !17520
  call void @llvm.dbg.value(metadata i32 %4, metadata !17503, metadata !DIExpression()), !dbg !17511
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 1, i32 2, !dbg !17530
  %6 = load i64, i64* %5, align 8, !dbg !17530
  switch i64 %6, label %7 [
    i64 0, label %21
    i64 -1, label %21
  ], !dbg !17531

7:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 undef, metadata !17508, metadata !DIExpression()), !dbg !17532
  %8 = tail call fastcc i64 @k_uptime_ticks() #24, !dbg !17533
  %9 = add nsw i64 %8, 1, !dbg !17533
  %10 = load i64, i64* %5, align 8, !dbg !17533
  %11 = add nsw i64 %9, %10, !dbg !17533
  %12 = icmp sgt i64 %11, 0, !dbg !17533
  br i1 %12, label %13, label %18, !dbg !17533

13:                                               ; preds = %7
  %14 = tail call fastcc i64 @k_uptime_ticks() #24, !dbg !17533
  %15 = load i64, i64* %5, align 8, !dbg !17533
  %16 = add i64 %14, %15, !dbg !17533
  %17 = sub i64 -3, %16, !dbg !17533
  br label %18, !dbg !17533

18:                                               ; preds = %7, %13
  %19 = phi i64 [ %17, %13 ], [ -2, %7 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !17508, metadata !DIExpression()), !dbg !17532
  %20 = insertvalue [1 x i64] poison, i64 %19, 0, !dbg !17534
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %0, void (%struct._timeout*)* noundef nonnull @z_timer_expiration_handler, [1 x i64] %20) #25, !dbg !17534
  br label %21, !dbg !17535

21:                                               ; preds = %1, %1, %18
  %22 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 2, !dbg !17536
  %23 = bitcast %struct._timeout* %22 to i32*, !dbg !17536
  %24 = load i32, i32* %23, align 8, !dbg !17537
  %25 = add i32 %24, 1, !dbg !17537
  store i32 %25, i32* %23, align 8, !dbg !17537
  %26 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 1, i32 1, !dbg !17538
  %27 = bitcast void (%struct._timeout*)** %26 to void (%struct.k_timer*)**, !dbg !17538
  %28 = load void (%struct.k_timer*)*, void (%struct.k_timer*)** %27, align 8, !dbg !17538
  %29 = icmp eq void (%struct.k_timer*)* %28, null, !dbg !17540
  br i1 %29, label %34, label %30, !dbg !17541

30:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 %4, metadata !17542, metadata !DIExpression()) #23, !dbg !17548
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17547, metadata !DIExpression()) #23, !dbg !17548
  call void @llvm.dbg.value(metadata i32 %4, metadata !17551, metadata !DIExpression()) #23, !dbg !17554
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !17556, !srcloc !17557
  %31 = load void (%struct.k_timer*)*, void (%struct.k_timer*)** %27, align 8, !dbg !17558
  tail call void %31(%struct.k_timer* noundef nonnull %2) #25, !dbg !17559
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17513, metadata !DIExpression()) #23, !dbg !17560
  %32 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17562, !srcloc !17528
  %33 = extractvalue { i32, i32 } %32, 0, !dbg !17562
  call void @llvm.dbg.value(metadata i32 %33, metadata !17525, metadata !DIExpression()) #23, !dbg !17564
  call void @llvm.dbg.value(metadata i32 undef, metadata !17526, metadata !DIExpression()) #23, !dbg !17564
  call void @llvm.dbg.value(metadata i32 %33, metadata !17519, metadata !DIExpression()) #23, !dbg !17560
  call void @llvm.dbg.value(metadata i32 %33, metadata !17503, metadata !DIExpression()), !dbg !17511
  br label %34, !dbg !17565

34:                                               ; preds = %30, %21
  %35 = phi i32 [ %33, %30 ], [ %4, %21 ], !dbg !17511
  call void @llvm.dbg.value(metadata i32 %35, metadata !17503, metadata !DIExpression()), !dbg !17511
  %36 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 1, !dbg !17566
  %37 = bitcast %struct._timeout* %36 to %struct._wait_q_t*, !dbg !17566
  %38 = tail call fastcc %struct.k_thread* @z_waitq_head.278(%struct._wait_q_t* noundef nonnull %37) #24, !dbg !17567
  call void @llvm.dbg.value(metadata %struct.k_thread* %38, metadata !17502, metadata !DIExpression()), !dbg !17511
  %39 = icmp eq %struct.k_thread* %38, null, !dbg !17568
  br i1 %39, label %40, label %41, !dbg !17570

40:                                               ; preds = %34
  call void @llvm.dbg.value(metadata i32 %35, metadata !17542, metadata !DIExpression()) #23, !dbg !17571
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17547, metadata !DIExpression()) #23, !dbg !17571
  call void @llvm.dbg.value(metadata i32 %35, metadata !17551, metadata !DIExpression()) #23, !dbg !17574
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %35) #23, !dbg !17576, !srcloc !17557
  br label %43, !dbg !17577

41:                                               ; preds = %34
  tail call void @z_unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %38) #25, !dbg !17578
  call void @llvm.dbg.value(metadata %struct.k_thread* %38, metadata !17579, metadata !DIExpression()), !dbg !17585
  call void @llvm.dbg.value(metadata i32 0, metadata !17584, metadata !DIExpression()), !dbg !17585
  %42 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %38, i32 0, i32 7, i32 1, !dbg !17587
  store i32 0, i32* %42, align 4, !dbg !17588
  call void @llvm.dbg.value(metadata i32 %35, metadata !17542, metadata !DIExpression()) #23, !dbg !17589
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17547, metadata !DIExpression()) #23, !dbg !17589
  call void @llvm.dbg.value(metadata i32 %35, metadata !17551, metadata !DIExpression()) #23, !dbg !17591
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %35) #23, !dbg !17593, !srcloc !17557
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %38) #25, !dbg !17594
  br label %43, !dbg !17595

43:                                               ; preds = %41, %40
  ret void, !dbg !17595
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @k_uptime_ticks() unnamed_addr #1 !dbg !17596 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !17597, !srcloc !17599
  %1 = tail call i64 @z_impl_k_uptime_ticks() #25, !dbg !17600
  ret i64 %1, !dbg !17601
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head.278(%struct._wait_q_t* noundef readonly %0) unnamed_addr #10 !dbg !17602 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !17606, metadata !DIExpression()), !dbg !17607
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !17608
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.279(%struct._dnode* noundef %2) #24, !dbg !17609
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !17610
  ret %struct.k_thread* %4, !dbg !17611
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.279(%struct._dnode* noundef %0) unnamed_addr #10 !dbg !17612 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17617, metadata !DIExpression()), !dbg !17618
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty.280(%struct._dnode* noundef %0) #24, !dbg !17619
  br i1 %2, label %6, label %3, !dbg !17619

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17620
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !17620
  br label %6, !dbg !17619

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !17619
  ret %struct._dnode* %7, !dbg !17621
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.280(%struct._dnode* noundef readonly %0) unnamed_addr #10 !dbg !17622 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17626, metadata !DIExpression()), !dbg !17627
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17628
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !17628
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !17629
  ret i1 %4, !dbg !17630
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @k_timer_init(%struct.k_timer* noundef %0, void (%struct.k_timer*)* noundef %1, void (%struct.k_timer*)* noundef %2) local_unnamed_addr #6 !dbg !17631 {
  call void @llvm.dbg.value(metadata %struct.k_timer* %0, metadata !17637, metadata !DIExpression()), !dbg !17640
  call void @llvm.dbg.value(metadata void (%struct.k_timer*)* %1, metadata !17638, metadata !DIExpression()), !dbg !17640
  call void @llvm.dbg.value(metadata void (%struct.k_timer*)* %2, metadata !17639, metadata !DIExpression()), !dbg !17640
  %4 = getelementptr inbounds %struct.k_timer, %struct.k_timer* %0, i32 0, i32 2, !dbg !17641
  store void (%struct.k_timer*)* %1, void (%struct.k_timer*)** %4, align 8, !dbg !17642
  %5 = getelementptr inbounds %struct.k_timer, %struct.k_timer* %0, i32 0, i32 3, !dbg !17643
  store void (%struct.k_timer*)* %2, void (%struct.k_timer*)** %5, align 4, !dbg !17644
  %6 = getelementptr inbounds %struct.k_timer, %struct.k_timer* %0, i32 0, i32 5, !dbg !17645
  store i32 0, i32* %6, align 8, !dbg !17646
  %7 = getelementptr inbounds %struct.k_timer, %struct.k_timer* %0, i32 0, i32 1, !dbg !17647
  tail call fastcc void @z_waitq_init.283(%struct._wait_q_t* noundef nonnull %7) #24, !dbg !17650
  %8 = getelementptr inbounds %struct.k_timer, %struct.k_timer* %0, i32 0, i32 0, !dbg !17651
  tail call fastcc void @z_init_timeout.284(%struct._timeout* noundef %8) #24, !dbg !17652
  %9 = getelementptr inbounds %struct.k_timer, %struct.k_timer* %0, i32 0, i32 6, !dbg !17653
  store i8* null, i8** %9, align 4, !dbg !17654
  ret void, !dbg !17655
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.283(%struct._wait_q_t* noundef %0) unnamed_addr #6 !dbg !17656 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !17660, metadata !DIExpression()), !dbg !17661
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !17662
  tail call fastcc void @sys_dlist_init.286(%struct._dnode* noundef %2) #24, !dbg !17663
  ret void, !dbg !17664
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout.284(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #6 !dbg !17665 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17667, metadata !DIExpression()), !dbg !17668
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17669
  tail call fastcc void @sys_dnode_init.285(%struct._dnode* noundef %2) #24, !dbg !17670
  ret void, !dbg !17671
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.285(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #6 !dbg !17672 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17676, metadata !DIExpression()), !dbg !17677
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17678
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !17679
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17680
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !17681
  ret void, !dbg !17682
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.286(%struct._dnode* noundef %0) unnamed_addr #6 !dbg !17683 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17687, metadata !DIExpression()), !dbg !17688
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17689
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !17690
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17691
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !17692
  ret void, !dbg !17693
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_timer_start(%struct.k_timer* noundef %0, [1 x i64] %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !17694 {
  %4 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !17699, metadata !DIExpression()), !dbg !17701
  %5 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %5, metadata !17700, metadata !DIExpression()), !dbg !17701
  call void @llvm.dbg.value(metadata %struct.k_timer* %0, metadata !17698, metadata !DIExpression()), !dbg !17701
  %6 = icmp eq i64 %4, -1, !dbg !17702
  br i1 %6, label %23, label %7, !dbg !17704

7:                                                ; preds = %3
  %8 = icmp sgt i64 %5, 0, !dbg !17705
  %9 = icmp sgt i64 %5, 2, !dbg !17705
  %10 = select i1 %9, i64 %5, i64 2, !dbg !17705
  %11 = add nsw i64 %10, -1, !dbg !17705
  %12 = select i1 %8, i64 %11, i64 %5, !dbg !17705
  call void @llvm.dbg.value(metadata i64 %12, metadata !17700, metadata !DIExpression()), !dbg !17701
  %13 = icmp sgt i64 %4, -2, !dbg !17707
  %14 = icmp sgt i64 %4, 1, !dbg !17709
  %15 = select i1 %14, i64 %4, i64 1, !dbg !17709
  %16 = add nsw i64 %15, -1, !dbg !17709
  %17 = select i1 %13, i64 %16, i64 %4, !dbg !17709
  call void @llvm.dbg.value(metadata i64 %17, metadata !17699, metadata !DIExpression()), !dbg !17701
  %18 = getelementptr inbounds %struct.k_timer, %struct.k_timer* %0, i32 0, i32 0, !dbg !17710
  %19 = tail call i32 @z_abort_timeout(%struct._timeout* noundef %18) #25, !dbg !17711
  %20 = getelementptr inbounds %struct.k_timer, %struct.k_timer* %0, i32 0, i32 4, i32 0, !dbg !17712
  store i64 %12, i64* %20, align 8, !dbg !17712
  %21 = getelementptr inbounds %struct.k_timer, %struct.k_timer* %0, i32 0, i32 5, !dbg !17713
  store i32 0, i32* %21, align 8, !dbg !17714
  %22 = insertvalue [1 x i64] poison, i64 %17, 0, !dbg !17715
  tail call void @z_add_timeout(%struct._timeout* noundef %18, void (%struct._timeout*)* noundef nonnull @z_timer_expiration_handler, [1 x i64] %22) #25, !dbg !17715
  br label %23, !dbg !17716

23:                                               ; preds = %3, %7
  ret void, !dbg !17716
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_timer_stop(%struct.k_timer* noundef %0) local_unnamed_addr #1 !dbg !17717 {
  call void @llvm.dbg.value(metadata %struct.k_timer* %0, metadata !17719, metadata !DIExpression()), !dbg !17724
  %2 = getelementptr inbounds %struct.k_timer, %struct.k_timer* %0, i32 0, i32 0, !dbg !17725
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef %2) #25, !dbg !17726
  %4 = icmp eq i32 %3, 0, !dbg !17727
  call void @llvm.dbg.value(metadata i1 %4, metadata !17720, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17724
  br i1 %4, label %5, label %15, !dbg !17728

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.k_timer, %struct.k_timer* %0, i32 0, i32 3, !dbg !17729
  %7 = load void (%struct.k_timer*)*, void (%struct.k_timer*)** %6, align 4, !dbg !17729
  %8 = icmp eq void (%struct.k_timer*)* %7, null, !dbg !17731
  br i1 %8, label %10, label %9, !dbg !17732

9:                                                ; preds = %5
  tail call void %7(%struct.k_timer* noundef nonnull %0) #25, !dbg !17733
  br label %10, !dbg !17735

10:                                               ; preds = %9, %5
  %11 = getelementptr inbounds %struct.k_timer, %struct.k_timer* %0, i32 0, i32 1, !dbg !17736
  %12 = tail call %struct.k_thread* @z_unpend1_no_timeout(%struct._wait_q_t* noundef nonnull %11) #25, !dbg !17737
  call void @llvm.dbg.value(metadata %struct.k_thread* %12, metadata !17721, metadata !DIExpression()), !dbg !17738
  %13 = icmp eq %struct.k_thread* %12, null, !dbg !17739
  br i1 %13, label %15, label %14, !dbg !17741

14:                                               ; preds = %10
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %12) #25, !dbg !17742
  tail call fastcc void @z_reschedule_unlocked.289() #24, !dbg !17744
  br label %15, !dbg !17745

15:                                               ; preds = %10, %14, %1
  ret void, !dbg !17746
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked.289() unnamed_addr #1 !dbg !17747 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17748, !srcloc !17528
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !17748
  call void @llvm.dbg.value(metadata i32 %2, metadata !17525, metadata !DIExpression()) #23, !dbg !17750
  call void @llvm.dbg.value(metadata i32 undef, metadata !17526, metadata !DIExpression()) #23, !dbg !17750
  tail call void @z_reschedule_irqlock(i32 noundef %2) #25, !dbg !17751
  ret void, !dbg !17752
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_timer_status_get(%struct.k_timer* nocapture noundef %0) local_unnamed_addr #1 !dbg !17753 {
  call void @llvm.dbg.value(metadata %struct.k_timer* %0, metadata !17757, metadata !DIExpression()), !dbg !17760
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17513, metadata !DIExpression()) #23, !dbg !17761
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17763, !srcloc !17528
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !17763
  call void @llvm.dbg.value(metadata i32 %3, metadata !17525, metadata !DIExpression()) #23, !dbg !17765
  call void @llvm.dbg.value(metadata i32 undef, metadata !17526, metadata !DIExpression()) #23, !dbg !17765
  call void @llvm.dbg.value(metadata i32 %3, metadata !17519, metadata !DIExpression()) #23, !dbg !17761
  call void @llvm.dbg.value(metadata i32 %3, metadata !17758, metadata !DIExpression()), !dbg !17760
  %4 = getelementptr inbounds %struct.k_timer, %struct.k_timer* %0, i32 0, i32 5, !dbg !17766
  %5 = load i32, i32* %4, align 8, !dbg !17766
  call void @llvm.dbg.value(metadata i32 %5, metadata !17759, metadata !DIExpression()), !dbg !17760
  store i32 0, i32* %4, align 8, !dbg !17767
  call void @llvm.dbg.value(metadata i32 %3, metadata !17542, metadata !DIExpression()) #23, !dbg !17768
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17547, metadata !DIExpression()) #23, !dbg !17768
  call void @llvm.dbg.value(metadata i32 %3, metadata !17551, metadata !DIExpression()) #23, !dbg !17770
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !17772, !srcloc !17557
  ret i32 %5, !dbg !17773
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_timer_status_sync(%struct.k_timer* noundef %0) local_unnamed_addr #1 !dbg !17774 {
  call void @llvm.dbg.value(metadata %struct.k_timer* %0, metadata !17776, metadata !DIExpression()), !dbg !17779
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17513, metadata !DIExpression()) #23, !dbg !17780
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17782, !srcloc !17528
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !17782
  call void @llvm.dbg.value(metadata i32 %3, metadata !17525, metadata !DIExpression()) #23, !dbg !17784
  call void @llvm.dbg.value(metadata i32 undef, metadata !17526, metadata !DIExpression()) #23, !dbg !17784
  call void @llvm.dbg.value(metadata i32 %3, metadata !17519, metadata !DIExpression()) #23, !dbg !17780
  call void @llvm.dbg.value(metadata i32 %3, metadata !17777, metadata !DIExpression()), !dbg !17779
  %4 = getelementptr inbounds %struct.k_timer, %struct.k_timer* %0, i32 0, i32 5, !dbg !17785
  %5 = load i32, i32* %4, align 8, !dbg !17785
  call void @llvm.dbg.value(metadata i32 %5, metadata !17778, metadata !DIExpression()), !dbg !17779
  %6 = icmp eq i32 %5, 0, !dbg !17786
  br i1 %6, label %7, label %17, !dbg !17788

7:                                                ; preds = %1
  %8 = getelementptr inbounds %struct.k_timer, %struct.k_timer* %0, i32 0, i32 0, !dbg !17789
  %9 = tail call fastcc zeroext i1 @z_is_inactive_timeout.290(%struct._timeout* noundef %8) #24, !dbg !17792
  br i1 %9, label %17, label %10, !dbg !17793

10:                                               ; preds = %7
  %11 = getelementptr inbounds %struct.k_timer, %struct.k_timer* %0, i32 0, i32 1, !dbg !17794
  %12 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !17796
  %13 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull @lock, [1 x i32] %12, %struct._wait_q_t* noundef nonnull %11, [1 x i64] [i64 -1]) #25, !dbg !17796
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17513, metadata !DIExpression()) #23, !dbg !17797
  %14 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17799, !srcloc !17528
  %15 = extractvalue { i32, i32 } %14, 0, !dbg !17799
  call void @llvm.dbg.value(metadata i32 %15, metadata !17525, metadata !DIExpression()) #23, !dbg !17801
  call void @llvm.dbg.value(metadata i32 undef, metadata !17526, metadata !DIExpression()) #23, !dbg !17801
  call void @llvm.dbg.value(metadata i32 %15, metadata !17519, metadata !DIExpression()) #23, !dbg !17797
  call void @llvm.dbg.value(metadata i32 %15, metadata !17777, metadata !DIExpression()), !dbg !17779
  %16 = load i32, i32* %4, align 8, !dbg !17802
  call void @llvm.dbg.value(metadata i32 %16, metadata !17778, metadata !DIExpression()), !dbg !17779
  br label %17, !dbg !17803

17:                                               ; preds = %1, %10, %7
  %18 = phi i32 [ 0, %7 ], [ %16, %10 ], [ %5, %1 ], !dbg !17779
  %19 = phi i32 [ %3, %7 ], [ %15, %10 ], [ %3, %1 ], !dbg !17779
  call void @llvm.dbg.value(metadata i32 %19, metadata !17777, metadata !DIExpression()), !dbg !17779
  call void @llvm.dbg.value(metadata i32 %18, metadata !17778, metadata !DIExpression()), !dbg !17779
  store i32 0, i32* %4, align 8, !dbg !17804
  call void @llvm.dbg.value(metadata i32 %19, metadata !17542, metadata !DIExpression()) #23, !dbg !17805
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17547, metadata !DIExpression()) #23, !dbg !17805
  call void @llvm.dbg.value(metadata i32 %19, metadata !17551, metadata !DIExpression()) #23, !dbg !17807
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %19) #23, !dbg !17809, !srcloc !17557
  ret i32 %18, !dbg !17810
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.290(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #10 !dbg !17811 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17817, metadata !DIExpression()), !dbg !17818
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17819
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.291(%struct._dnode* noundef %2) #24, !dbg !17820
  %4 = xor i1 %3, true, !dbg !17821
  ret i1 %4, !dbg !17822
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.291(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #10 !dbg !17823 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17829, metadata !DIExpression()), !dbg !17830
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17831
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !17831
  %4 = icmp ne %struct._dnode* %3, null, !dbg !17832
  ret i1 %4, !dbg !17833
}

; Function Attrs: noinline nounwind optsize
define dso_local void @boot_banner() local_unnamed_addr #1 !dbg !17834 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.294, i32 0, i32 0)) #25, !dbg !17836
  ret void, !dbg !17837
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #3 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #4 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #5 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #6 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #7 = { argmemonly nofree nosync nounwind willreturn }
attributes #8 = { nofree nosync nounwind willreturn }
attributes #9 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #13 = { argmemonly nofree nounwind willreturn writeonly }
attributes #14 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #15 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { mustprogress nofree noinline nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { mustprogress nofree noinline nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { nounwind }
attributes #24 = { nobuiltin optsize "no-builtins" }
attributes #25 = { nobuiltin nounwind optsize "no-builtins" }
attributes #26 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #27 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #28 = { nounwind readnone }
attributes #29 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!496, !2, !2968, !27, !260, !544, !565, !2970, !2972, !3006, !575, !618, !3008, !3011, !3022, !3068, !3070, !3098, !3126, !3169, !3241, !3286, !647, !797, !3314, !833, !843, !868, !879, !996, !1196, !3319, !1333, !1399, !1738, !2040, !3358, !2153, !2243, !3360, !3446, !3511, !2294, !3514, !2301, !2671, !3532, !2691, !3534, !2806, !2845, !3537}
!llvm.ident = !{!3539, !3539, !3539, !3539, !3539, !3539, !3539, !3539, !3539, !3539, !3539, !3539, !3539, !3539, !3539, !3539, !3539, !3539, !3539, !3539, !3539, !3539, !3539, !3539, !3539, !3539, !3539, !3539, !3539, !3539, !3539, !3539, !3539, !3539, !3539, !3539, !3539, !3539, !3539, !3539, !3539, !3539, !3539, !3539, !3539, !3539, !3539, !3539, !3539, !3539, !3539, !3539}
!llvm.module.flags = !{!3540, !3541, !3542, !3543, !3544, !3545, !3546, !3547, !3548}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/sensor_batch_processing/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/sensor_batch_processing")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 103, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/sensor_batch_processing")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 5824, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 91)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 2912, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "log_const_main", scope: !27, file: !119, line: 12, type: !252, isLocal: false, isDefinition: true)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !103, globals: !116, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/subsys/rtio/sensor_batch_processing/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/sensor_batch_processing")
!29 = !{!30}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !31, line: 27, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102}
!34 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!35 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!36 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!37 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!38 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!39 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!40 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!41 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!42 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!43 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!44 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!45 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!46 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!47 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!48 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!49 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!50 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!51 = !DIEnumerator(name: "K_OBJ_RTIO", value: 17)
!52 = !DIEnumerator(name: "K_OBJ_RTIO_IODEV", value: 18)
!53 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 19)
!54 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 20)
!55 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 21)
!56 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 22)
!57 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 23)
!58 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 24)
!59 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 25)
!60 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 26)
!61 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 27)
!62 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 28)
!63 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 29)
!64 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 30)
!65 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 31)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 32)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 33)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 34)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 35)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 36)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 37)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 38)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 39)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 40)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 41)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 42)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 43)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 44)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 45)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 46)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 47)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 48)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 49)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 50)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 51)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 52)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 53)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 54)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 55)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 56)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 57)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 58)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 59)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 60)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 61)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 62)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 63)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 64)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 65)
!100 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 66)
!101 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 67)
!102 = !DIEnumerator(name: "K_OBJ_LAST", value: 68)
!103 = !{!104, !105, !108, !109, !113, !114}
!104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !106, size: 32)
!106 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !107)
!107 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!108 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!109 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !110, line: 46, baseType: !111)
!110 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!111 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !112)
!112 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!113 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!114 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !115)
!115 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!116 = !{!25, !117, !227, !229, !235, !237, !245}
!117 = !DIGlobalVariableExpression(var: !118, expr: !DIExpression())
!118 = distinct !DIGlobalVariable(name: "simple_exec", scope: !27, file: !119, line: 24, type: !120, isLocal: false, isDefinition: true)
!119 = !DIFile(filename: "zephyr/samples/subsys/rtio/sensor_batch_processing/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!120 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_simple_executor", file: !121, line: 57, size: 32, elements: !122)
!121 = !DIFile(filename: "zephyr/include/zephyr/rtio/rtio_executor_simple.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!122 = !{!123}
!123 = !DIDerivedType(tag: DW_TAG_member, name: "ctx", scope: !120, file: !121, line: 58, baseType: !124, size: 32)
!124 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_executor", file: !125, line: 210, size: 32, elements: !126)
!125 = !DIFile(filename: "zephyr/include/zephyr/rtio/rtio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!126 = !{!127}
!127 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !124, file: !125, line: 211, baseType: !128, size: 32)
!128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !129, size: 32)
!129 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !130)
!130 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_executor_api", file: !125, line: 168, size: 96, elements: !131)
!131 = !{!132, !222, !226}
!132 = !DIDerivedType(tag: DW_TAG_member, name: "submit", scope: !130, file: !125, line: 177, baseType: !133, size: 32)
!133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !134, size: 32)
!134 = !DISubroutineType(types: !135)
!135 = !{!108, !136}
!136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !137, size: 32)
!137 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio", file: !125, line: 222, size: 128, elements: !138)
!138 = !{!139, !141, !145, !210}
!139 = !DIDerivedType(tag: DW_TAG_member, name: "executor", scope: !137, file: !125, line: 228, baseType: !140, size: 32)
!140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !124, size: 32)
!141 = !DIDerivedType(tag: DW_TAG_member, name: "xcqcnt", scope: !137, file: !125, line: 251, baseType: !142, size: 32, offset: 32)
!142 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !143, line: 22, baseType: !144)
!143 = !DIFile(filename: "zephyr/include/zephyr/sys/atomic.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!144 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!145 = !DIDerivedType(tag: DW_TAG_member, name: "sq", scope: !137, file: !125, line: 254, baseType: !146, size: 32, offset: 64)
!146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !147, size: 32)
!147 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_sq", file: !125, line: 142, size: 160, elements: !148)
!148 = !{!149, !159}
!149 = !DIDerivedType(tag: DW_TAG_member, name: "_spsc", scope: !147, file: !125, line: 143, baseType: !150, size: 160)
!150 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_spsc", file: !151, line: 58, size: 160, elements: !152)
!151 = !DIFile(filename: "zephyr/include/zephyr/rtio/rtio_spsc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!152 = !{!153, !154, !155, !156, !157}
!153 = !DIDerivedType(tag: DW_TAG_member, name: "acquire", scope: !150, file: !151, line: 60, baseType: !24, size: 32)
!154 = !DIDerivedType(tag: DW_TAG_member, name: "consume", scope: !150, file: !151, line: 63, baseType: !24, size: 32, offset: 32)
!155 = !DIDerivedType(tag: DW_TAG_member, name: "in", scope: !150, file: !151, line: 66, baseType: !142, size: 32, offset: 64)
!156 = !DIDerivedType(tag: DW_TAG_member, name: "out", scope: !150, file: !151, line: 69, baseType: !142, size: 32, offset: 96)
!157 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !150, file: !151, line: 72, baseType: !158, size: 32, offset: 128)
!158 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !24)
!159 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !147, file: !125, line: 144, baseType: !160, offset: 160)
!160 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, elements: !197)
!161 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_sqe", file: !125, line: 109, size: 160, elements: !162)
!162 = !{!163, !166, !167, !170, !200, !201}
!163 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !161, file: !125, line: 110, baseType: !164, size: 8)
!164 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !165)
!165 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!166 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !161, file: !125, line: 112, baseType: !164, size: 8, offset: 8)
!167 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !161, file: !125, line: 114, baseType: !168, size: 16, offset: 16)
!168 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !169)
!169 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!170 = !DIDerivedType(tag: DW_TAG_member, name: "iodev", scope: !161, file: !125, line: 116, baseType: !171, size: 32, offset: 32)
!171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !172, size: 32)
!172 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !173)
!173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_iodev", file: !125, line: 306, size: 96, elements: !174)
!174 = !{!175, !186, !199}
!175 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !173, file: !125, line: 308, baseType: !176, size: 32)
!176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !177, size: 32)
!177 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !178)
!178 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_iodev_api", file: !125, line: 263, size: 32, elements: !179)
!179 = !{!180}
!180 = !DIDerivedType(tag: DW_TAG_member, name: "submit", scope: !178, file: !125, line: 271, baseType: !181, size: 32)
!181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !182, size: 32)
!182 = !DISubroutineType(types: !183)
!183 = !{null, !184, !136}
!184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !185, size: 32)
!185 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !161)
!186 = !DIDerivedType(tag: DW_TAG_member, name: "iodev_sq", scope: !173, file: !125, line: 311, baseType: !187, size: 32, offset: 32)
!187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !188, size: 32)
!188 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_iodev_sq", file: !125, line: 298, size: 160, elements: !189)
!189 = !{!190, !191}
!190 = !DIDerivedType(tag: DW_TAG_member, name: "_spsc", scope: !188, file: !125, line: 299, baseType: !150, size: 160)
!191 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !188, file: !125, line: 300, baseType: !192, offset: 160)
!192 = !DICompositeType(tag: DW_TAG_array_type, baseType: !193, elements: !197)
!193 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_iodev_sqe", file: !125, line: 288, size: 64, elements: !194)
!194 = !{!195, !196}
!195 = !DIDerivedType(tag: DW_TAG_member, name: "sqe", scope: !193, file: !125, line: 289, baseType: !184, size: 32)
!196 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !193, file: !125, line: 290, baseType: !136, size: 32, offset: 32)
!197 = !{!198}
!198 = !DISubrange(count: -1)
!199 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !173, file: !125, line: 314, baseType: !104, size: 32, offset: 64)
!200 = !DIDerivedType(tag: DW_TAG_member, name: "userdata", scope: !161, file: !125, line: 125, baseType: !104, size: 32, offset: 64)
!201 = !DIDerivedType(tag: DW_TAG_member, scope: !161, file: !125, line: 127, baseType: !202, size: 64, offset: 96)
!202 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !161, file: !125, line: 127, size: 64, elements: !203)
!203 = !{!204}
!204 = !DIDerivedType(tag: DW_TAG_member, scope: !202, file: !125, line: 128, baseType: !205, size: 64)
!205 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !202, file: !125, line: 128, size: 64, elements: !206)
!206 = !{!207, !208}
!207 = !DIDerivedType(tag: DW_TAG_member, name: "buf_len", scope: !205, file: !125, line: 129, baseType: !113, size: 32)
!208 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !205, file: !125, line: 131, baseType: !209, size: 32, offset: 32)
!209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !164, size: 32)
!210 = !DIDerivedType(tag: DW_TAG_member, name: "cq", scope: !137, file: !125, line: 257, baseType: !211, size: 32, offset: 96)
!211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !212, size: 32)
!212 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_cq", file: !125, line: 161, size: 160, elements: !213)
!213 = !{!214, !215}
!214 = !DIDerivedType(tag: DW_TAG_member, name: "_spsc", scope: !212, file: !125, line: 162, baseType: !150, size: 160)
!215 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !212, file: !125, line: 163, baseType: !216, offset: 160)
!216 = !DICompositeType(tag: DW_TAG_array_type, baseType: !217, elements: !197)
!217 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_cqe", file: !125, line: 150, size: 64, elements: !218)
!218 = !{!219, !221}
!219 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !217, file: !125, line: 151, baseType: !220, size: 32)
!220 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !108)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "userdata", scope: !217, file: !125, line: 152, baseType: !104, size: 32, offset: 32)
!222 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !130, file: !125, line: 182, baseType: !223, size: 32, offset: 32)
!223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !224, size: 32)
!224 = !DISubroutineType(types: !225)
!225 = !{null, !136, !184, !108}
!226 = !DIDerivedType(tag: DW_TAG_member, name: "err", scope: !130, file: !125, line: 187, baseType: !223, size: 32, offset: 64)
!227 = !DIGlobalVariableExpression(var: !228, expr: !DIExpression())
!228 = distinct !DIGlobalVariable(name: "ez_io", scope: !27, file: !119, line: 25, type: !137, isLocal: false, isDefinition: true, align: 32)
!229 = !DIGlobalVariableExpression(var: !230, expr: !DIExpression())
!230 = distinct !DIGlobalVariable(name: "bufs", scope: !27, file: !119, line: 27, type: !231, isLocal: true, isDefinition: true)
!231 = !DICompositeType(tag: DW_TAG_array_type, baseType: !164, size: 1024, elements: !232)
!232 = !{!233, !234}
!233 = !DISubrange(count: 8)
!234 = !DISubrange(count: 16)
!235 = !DIGlobalVariableExpression(var: !236, expr: !DIExpression())
!236 = distinct !DIGlobalVariable(name: "z_rtio_simple_api", scope: !27, file: !121, line: 64, type: !129, isLocal: true, isDefinition: true)
!237 = !DIGlobalVariableExpression(var: !238, expr: !DIExpression())
!238 = distinct !DIGlobalVariable(name: "_sq_ez_io", scope: !27, file: !119, line: 25, type: !239, isLocal: true, isDefinition: true)
!239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_spsc__sq_ez_io", file: !119, line: 25, size: 1440, elements: !240)
!240 = !{!241, !242}
!241 = !DIDerivedType(tag: DW_TAG_member, name: "_spsc", scope: !239, file: !119, line: 25, baseType: !150, size: 160)
!242 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !239, file: !119, line: 25, baseType: !243, size: 1280, offset: 160)
!243 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 1280, elements: !244)
!244 = !{!233}
!245 = !DIGlobalVariableExpression(var: !246, expr: !DIExpression())
!246 = distinct !DIGlobalVariable(name: "_cq_ez_io", scope: !27, file: !119, line: 25, type: !247, isLocal: true, isDefinition: true)
!247 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_spsc__cq_ez_io", file: !119, line: 25, size: 672, elements: !248)
!248 = !{!249, !250}
!249 = !DIDerivedType(tag: DW_TAG_member, name: "_spsc", scope: !247, file: !119, line: 25, baseType: !150, size: 160)
!250 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !247, file: !119, line: 25, baseType: !251, size: 512, offset: 160)
!251 = !DICompositeType(tag: DW_TAG_array_type, baseType: !217, size: 512, elements: !244)
!252 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !253)
!253 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !254, line: 16, size: 64, elements: !255)
!254 = !DIFile(filename: "zephyr/include/zephyr/logging/log_instance.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!255 = !{!256, !257}
!256 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !253, file: !254, line: 17, baseType: !105, size: 32)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !253, file: !254, line: 18, baseType: !164, size: 8, offset: 32)
!258 = !DIGlobalVariableExpression(var: !259, expr: !DIExpression())
!259 = distinct !DIGlobalVariable(name: "log_const_vnd_sensor", scope: !260, file: !265, line: 14, type: !489, isLocal: false, isDefinition: true)
!260 = distinct !DICompileUnit(language: DW_LANG_C99, file: !261, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !262, globals: !450, splitDebugInlining: false, nameTableKind: None)
!261 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/subsys/rtio/sensor_batch_processing/src/vnd_sensor.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/sensor_batch_processing")
!262 = !{!104, !108, !263, !109, !443, !113, !114}
!263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !264, size: 32)
!264 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vnd_sensor_data", file: !265, line: 21, size: 960, elements: !266)
!265 = !DIFile(filename: "zephyr/samples/subsys/rtio/sensor_batch_processing/src/vnd_sensor.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!266 = !{!267, !357, !407, !430, !449}
!267 = !DIDerivedType(tag: DW_TAG_member, name: "iodev", scope: !264, file: !265, line: 22, baseType: !268, size: 96)
!268 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_iodev", file: !125, line: 306, size: 96, elements: !269)
!269 = !{!270, !345, !356}
!270 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !268, file: !125, line: 308, baseType: !271, size: 32)
!271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !272, size: 32)
!272 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !273)
!273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_iodev_api", file: !125, line: 263, size: 32, elements: !274)
!274 = !{!275}
!275 = !DIDerivedType(tag: DW_TAG_member, name: "submit", scope: !273, file: !125, line: 271, baseType: !276, size: 32)
!276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !277, size: 32)
!277 = !DISubroutineType(types: !278)
!278 = !{null, !279, !298}
!279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !280, size: 32)
!280 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !281)
!281 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_sqe", file: !125, line: 109, size: 160, elements: !282)
!282 = !{!283, !284, !285, !286, !289, !290}
!283 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !281, file: !125, line: 110, baseType: !164, size: 8)
!284 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !281, file: !125, line: 112, baseType: !164, size: 8, offset: 8)
!285 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !281, file: !125, line: 114, baseType: !168, size: 16, offset: 16)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "iodev", scope: !281, file: !125, line: 116, baseType: !287, size: 32, offset: 32)
!287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !288, size: 32)
!288 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !268)
!289 = !DIDerivedType(tag: DW_TAG_member, name: "userdata", scope: !281, file: !125, line: 125, baseType: !104, size: 32, offset: 64)
!290 = !DIDerivedType(tag: DW_TAG_member, scope: !281, file: !125, line: 127, baseType: !291, size: 64, offset: 96)
!291 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !281, file: !125, line: 127, size: 64, elements: !292)
!292 = !{!293}
!293 = !DIDerivedType(tag: DW_TAG_member, scope: !291, file: !125, line: 128, baseType: !294, size: 64)
!294 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !291, file: !125, line: 128, size: 64, elements: !295)
!295 = !{!296, !297}
!296 = !DIDerivedType(tag: DW_TAG_member, name: "buf_len", scope: !294, file: !125, line: 129, baseType: !113, size: 32)
!297 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !294, file: !125, line: 131, baseType: !209, size: 32, offset: 32)
!298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !299, size: 32)
!299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio", file: !125, line: 222, size: 128, elements: !300)
!300 = !{!301, !319, !320, !334}
!301 = !DIDerivedType(tag: DW_TAG_member, name: "executor", scope: !299, file: !125, line: 228, baseType: !302, size: 32)
!302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !303, size: 32)
!303 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_executor", file: !125, line: 210, size: 32, elements: !304)
!304 = !{!305}
!305 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !303, file: !125, line: 211, baseType: !306, size: 32)
!306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !307, size: 32)
!307 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !308)
!308 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_executor_api", file: !125, line: 168, size: 96, elements: !309)
!309 = !{!310, !314, !318}
!310 = !DIDerivedType(tag: DW_TAG_member, name: "submit", scope: !308, file: !125, line: 177, baseType: !311, size: 32)
!311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !312, size: 32)
!312 = !DISubroutineType(types: !313)
!313 = !{!108, !298}
!314 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !308, file: !125, line: 182, baseType: !315, size: 32, offset: 32)
!315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !316, size: 32)
!316 = !DISubroutineType(types: !317)
!317 = !{null, !298, !279, !108}
!318 = !DIDerivedType(tag: DW_TAG_member, name: "err", scope: !308, file: !125, line: 187, baseType: !315, size: 32, offset: 64)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "xcqcnt", scope: !299, file: !125, line: 251, baseType: !142, size: 32, offset: 32)
!320 = !DIDerivedType(tag: DW_TAG_member, name: "sq", scope: !299, file: !125, line: 254, baseType: !321, size: 32, offset: 64)
!321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !322, size: 32)
!322 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_sq", file: !125, line: 142, size: 160, elements: !323)
!323 = !{!324, !332}
!324 = !DIDerivedType(tag: DW_TAG_member, name: "_spsc", scope: !322, file: !125, line: 143, baseType: !325, size: 160)
!325 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_spsc", file: !151, line: 58, size: 160, elements: !326)
!326 = !{!327, !328, !329, !330, !331}
!327 = !DIDerivedType(tag: DW_TAG_member, name: "acquire", scope: !325, file: !151, line: 60, baseType: !24, size: 32)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "consume", scope: !325, file: !151, line: 63, baseType: !24, size: 32, offset: 32)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "in", scope: !325, file: !151, line: 66, baseType: !142, size: 32, offset: 64)
!330 = !DIDerivedType(tag: DW_TAG_member, name: "out", scope: !325, file: !151, line: 69, baseType: !142, size: 32, offset: 96)
!331 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !325, file: !151, line: 72, baseType: !158, size: 32, offset: 128)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !322, file: !125, line: 144, baseType: !333, offset: 160)
!333 = !DICompositeType(tag: DW_TAG_array_type, baseType: !281, elements: !197)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "cq", scope: !299, file: !125, line: 257, baseType: !335, size: 32, offset: 96)
!335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !336, size: 32)
!336 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_cq", file: !125, line: 161, size: 160, elements: !337)
!337 = !{!338, !339}
!338 = !DIDerivedType(tag: DW_TAG_member, name: "_spsc", scope: !336, file: !125, line: 162, baseType: !325, size: 160)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !336, file: !125, line: 163, baseType: !340, offset: 160)
!340 = !DICompositeType(tag: DW_TAG_array_type, baseType: !341, elements: !197)
!341 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_cqe", file: !125, line: 150, size: 64, elements: !342)
!342 = !{!343, !344}
!343 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !341, file: !125, line: 151, baseType: !220, size: 32)
!344 = !DIDerivedType(tag: DW_TAG_member, name: "userdata", scope: !341, file: !125, line: 152, baseType: !104, size: 32, offset: 32)
!345 = !DIDerivedType(tag: DW_TAG_member, name: "iodev_sq", scope: !268, file: !125, line: 311, baseType: !346, size: 32, offset: 32)
!346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !347, size: 32)
!347 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_iodev_sq", file: !125, line: 298, size: 160, elements: !348)
!348 = !{!349, !350}
!349 = !DIDerivedType(tag: DW_TAG_member, name: "_spsc", scope: !347, file: !125, line: 299, baseType: !325, size: 160)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !347, file: !125, line: 300, baseType: !351, offset: 160)
!351 = !DICompositeType(tag: DW_TAG_array_type, baseType: !352, elements: !197)
!352 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_iodev_sqe", file: !125, line: 288, size: 64, elements: !353)
!353 = !{!354, !355}
!354 = !DIDerivedType(tag: DW_TAG_member, name: "sqe", scope: !352, file: !125, line: 289, baseType: !279, size: 32)
!355 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !352, file: !125, line: 290, baseType: !298, size: 32, offset: 32)
!356 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !268, file: !125, line: 314, baseType: !104, size: 32, offset: 64)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !264, file: !265, line: 23, baseType: !358, size: 448, offset: 128)
!358 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_timer", file: !359, line: 1318, size: 448, elements: !360)
!359 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!360 = !{!361, !388, !394, !399, !400, !405, !406}
!361 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !358, file: !359, line: 1324, baseType: !362, size: 192)
!362 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !363, line: 244, size: 192, elements: !364)
!363 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!364 = !{!365, !381, !387}
!365 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !362, file: !363, line: 245, baseType: !366, size: 64)
!366 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !367, line: 49, baseType: !368)
!367 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!368 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !367, line: 37, size: 64, elements: !369)
!369 = !{!370, !376}
!370 = !DIDerivedType(tag: DW_TAG_member, scope: !368, file: !367, line: 38, baseType: !371, size: 32)
!371 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !368, file: !367, line: 38, size: 32, elements: !372)
!372 = !{!373, !375}
!373 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !371, file: !367, line: 39, baseType: !374, size: 32)
!374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !368, size: 32)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !371, file: !367, line: 40, baseType: !374, size: 32)
!376 = !DIDerivedType(tag: DW_TAG_member, scope: !368, file: !367, line: 42, baseType: !377, size: 32, offset: 32)
!377 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !368, file: !367, line: 42, size: 32, elements: !378)
!378 = !{!379, !380}
!379 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !377, file: !367, line: 43, baseType: !374, size: 32)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !377, file: !367, line: 44, baseType: !374, size: 32)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !362, file: !363, line: 246, baseType: !382, size: 32, offset: 64)
!382 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !363, line: 242, baseType: !383)
!383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !384, size: 32)
!384 = !DISubroutineType(types: !385)
!385 = !{null, !386}
!386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !362, size: 32)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !362, file: !363, line: 249, baseType: !111, size: 64, offset: 128)
!388 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !358, file: !359, line: 1327, baseType: !389, size: 64, offset: 192)
!389 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !363, line: 233, baseType: !390)
!390 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !363, line: 231, size: 64, elements: !391)
!391 = !{!392}
!392 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !390, file: !363, line: 232, baseType: !393, size: 64)
!393 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !367, line: 48, baseType: !368)
!394 = !DIDerivedType(tag: DW_TAG_member, name: "expiry_fn", scope: !358, file: !359, line: 1330, baseType: !395, size: 32, offset: 256)
!395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !396, size: 32)
!396 = !DISubroutineType(types: !397)
!397 = !{null, !398}
!398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !358, size: 32)
!399 = !DIDerivedType(tag: DW_TAG_member, name: "stop_fn", scope: !358, file: !359, line: 1333, baseType: !395, size: 32, offset: 288)
!400 = !DIDerivedType(tag: DW_TAG_member, name: "period", scope: !358, file: !359, line: 1336, baseType: !401, size: 64, offset: 320)
!401 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !110, line: 67, baseType: !402)
!402 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !110, line: 65, size: 64, elements: !403)
!403 = !{!404}
!404 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !402, file: !110, line: 66, baseType: !109, size: 64)
!405 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !358, file: !359, line: 1339, baseType: !113, size: 32, offset: 384)
!406 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !358, file: !359, line: 1342, baseType: !104, size: 32, offset: 416)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !264, file: !265, line: 24, baseType: !408, size: 32, offset: 576)
!408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !409, size: 32)
!409 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !410)
!410 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !411, line: 378, size: 192, elements: !412)
!411 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!412 = !{!413, !414, !415, !416, !423, !424}
!413 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !410, file: !411, line: 380, baseType: !105, size: 32)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !410, file: !411, line: 382, baseType: !13, size: 32, offset: 32)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !410, file: !411, line: 384, baseType: !13, size: 32, offset: 64)
!416 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !410, file: !411, line: 386, baseType: !417, size: 32, offset: 96)
!417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !418, size: 32)
!418 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !411, line: 351, size: 16, elements: !419)
!419 = !{!420, !421}
!420 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !418, file: !411, line: 359, baseType: !164, size: 8)
!421 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !418, file: !411, line: 364, baseType: !422, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!422 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !410, file: !411, line: 388, baseType: !104, size: 32, offset: 128)
!424 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !410, file: !411, line: 396, baseType: !425, size: 32, offset: 160)
!425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !426, size: 32)
!426 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !427)
!427 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !411, line: 43, baseType: !428)
!428 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !429)
!429 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!430 = !DIDerivedType(tag: DW_TAG_member, name: "msgq", scope: !264, file: !265, line: 25, baseType: !431, size: 320, offset: 608)
!431 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq", file: !359, line: 4204, size: 320, elements: !432)
!432 = !{!433, !434, !438, !441, !442, !444, !445, !446, !447, !448}
!433 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !431, file: !359, line: 4206, baseType: !389, size: 64)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !431, file: !359, line: 4208, baseType: !435, offset: 64)
!435 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !436, line: 43, elements: !437)
!436 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!437 = !{}
!438 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !431, file: !359, line: 4210, baseType: !439, size: 32, offset: 64)
!439 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !440, line: 214, baseType: !32)
!440 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!441 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !431, file: !359, line: 4212, baseType: !113, size: 32, offset: 96)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !431, file: !359, line: 4214, baseType: !443, size: 32, offset: 128)
!443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !107, size: 32)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !431, file: !359, line: 4216, baseType: !443, size: 32, offset: 160)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "read_ptr", scope: !431, file: !359, line: 4218, baseType: !443, size: 32, offset: 192)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "write_ptr", scope: !431, file: !359, line: 4220, baseType: !443, size: 32, offset: 224)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !431, file: !359, line: 4222, baseType: !113, size: 32, offset: 256)
!448 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !431, file: !359, line: 4227, baseType: !164, size: 8, offset: 288)
!449 = !DIDerivedType(tag: DW_TAG_member, name: "sample_number", scope: !264, file: !265, line: 26, baseType: !113, size: 32, offset: 928)
!450 = !{!258, !451, !458, !463, !465, !476, !478, !485, !487}
!451 = !DIGlobalVariableExpression(var: !452, expr: !DIExpression())
!452 = distinct !DIGlobalVariable(name: "vnd_sensor_iodev_sq_0", scope: !260, file: !265, line: 152, type: !453, isLocal: false, isDefinition: true)
!453 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_spsc_vnd_sensor_iodev_sq_0", file: !265, line: 152, size: 672, elements: !454)
!454 = !{!455, !456}
!455 = !DIDerivedType(tag: DW_TAG_member, name: "_spsc", scope: !453, file: !265, line: 152, baseType: !325, size: 160)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !453, file: !265, line: 152, baseType: !457, size: 512, offset: 160)
!457 = !DICompositeType(tag: DW_TAG_array_type, baseType: !352, size: 512, elements: !244)
!458 = !DIGlobalVariableExpression(var: !459, expr: !DIExpression())
!459 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_19", scope: !260, file: !265, line: 152, type: !460, isLocal: false, isDefinition: true, align: 16)
!460 = !DICompositeType(tag: DW_TAG_array_type, baseType: !426, size: 64, elements: !461)
!461 = !{!462}
!462 = !DISubrange(count: 4)
!463 = !DIGlobalVariableExpression(var: !464, expr: !DIExpression())
!464 = distinct !DIGlobalVariable(name: "__device_dts_ord_19", scope: !260, file: !265, line: 152, type: !409, isLocal: false, isDefinition: true, align: 32)
!465 = !DIGlobalVariableExpression(var: !466, expr: !DIExpression())
!466 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_19", scope: !260, file: !265, line: 152, type: !467, isLocal: true, isDefinition: true, align: 32)
!467 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !468)
!468 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !469, line: 51, size: 64, elements: !470)
!469 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!470 = !{!471, !475}
!471 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !468, file: !469, line: 60, baseType: !472, size: 32)
!472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !473, size: 32)
!473 = !DISubroutineType(types: !474)
!474 = !{!108, !408}
!475 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !468, file: !469, line: 65, baseType: !408, size: 32, offset: 32)
!476 = !DIGlobalVariableExpression(var: !477, expr: !DIExpression())
!477 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_19", scope: !260, file: !265, line: 152, type: !418, isLocal: true, isDefinition: true, align: 8)
!478 = !DIGlobalVariableExpression(var: !479, expr: !DIExpression())
!479 = distinct !DIGlobalVariable(name: "vnd_sensor_config_0", scope: !260, file: !265, line: 152, type: !480, isLocal: true, isDefinition: true)
!480 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !481)
!481 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vnd_sensor_config", file: !265, line: 16, size: 64, elements: !482)
!482 = !{!483, !484}
!483 = !DIDerivedType(tag: DW_TAG_member, name: "sample_period", scope: !481, file: !265, line: 17, baseType: !113, size: 32)
!484 = !DIDerivedType(tag: DW_TAG_member, name: "sample_size", scope: !481, file: !265, line: 18, baseType: !439, size: 32, offset: 32)
!485 = !DIGlobalVariableExpression(var: !486, expr: !DIExpression())
!486 = distinct !DIGlobalVariable(name: "vnd_sensor_data_0", scope: !260, file: !265, line: 152, type: !264, isLocal: true, isDefinition: true)
!487 = !DIGlobalVariableExpression(var: !488, expr: !DIExpression())
!488 = distinct !DIGlobalVariable(name: "vnd_sensor_iodev_api", scope: !260, file: !265, line: 127, type: !272, isLocal: true, isDefinition: true)
!489 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !490)
!490 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !254, line: 16, size: 64, elements: !491)
!491 = !{!492, !493}
!492 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !490, file: !254, line: 17, baseType: !105, size: 32)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !490, file: !254, line: 18, baseType: !164, size: 8, offset: 32)
!494 = !DIGlobalVariableExpression(var: !495, expr: !DIExpression())
!495 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_19", scope: !496, file: !501, line: 146, type: !507, isLocal: false, isDefinition: true, align: 16)
!496 = distinct !DICompileUnit(language: DW_LANG_C99, file: !497, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !498, splitDebugInlining: false, nameTableKind: None)
!497 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/sensor_batch_processing/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/sensor_batch_processing")
!498 = !{!499, !505, !510, !512, !514, !516, !518, !520, !522, !524, !526, !528, !530, !532, !534, !536, !538, !540, !494}
!499 = !DIGlobalVariableExpression(var: !500, expr: !DIExpression())
!500 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !496, file: !501, line: 24, type: !502, isLocal: false, isDefinition: true, align: 16)
!501 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/sensor_batch_processing")
!502 = !DICompositeType(tag: DW_TAG_array_type, baseType: !426, size: 304, elements: !503)
!503 = !{!504}
!504 = !DISubrange(count: 19)
!505 = !DIGlobalVariableExpression(var: !506, expr: !DIExpression())
!506 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_45", scope: !496, file: !501, line: 29, type: !507, isLocal: false, isDefinition: true, align: 16)
!507 = !DICompositeType(tag: DW_TAG_array_type, baseType: !426, size: 48, elements: !508)
!508 = !{!509}
!509 = !DISubrange(count: 3)
!510 = !DIGlobalVariableExpression(var: !511, expr: !DIExpression())
!511 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_109", scope: !496, file: !501, line: 36, type: !460, isLocal: false, isDefinition: true, align: 16)
!512 = !DIGlobalVariableExpression(var: !513, expr: !DIExpression())
!513 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_108", scope: !496, file: !501, line: 43, type: !460, isLocal: false, isDefinition: true, align: 16)
!514 = !DIGlobalVariableExpression(var: !515, expr: !DIExpression())
!515 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_107", scope: !496, file: !501, line: 50, type: !460, isLocal: false, isDefinition: true, align: 16)
!516 = !DIGlobalVariableExpression(var: !517, expr: !DIExpression())
!517 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_106", scope: !496, file: !501, line: 57, type: !460, isLocal: false, isDefinition: true, align: 16)
!518 = !DIGlobalVariableExpression(var: !519, expr: !DIExpression())
!519 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_105", scope: !496, file: !501, line: 64, type: !460, isLocal: false, isDefinition: true, align: 16)
!520 = !DIGlobalVariableExpression(var: !521, expr: !DIExpression())
!521 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_104", scope: !496, file: !501, line: 71, type: !460, isLocal: false, isDefinition: true, align: 16)
!522 = !DIGlobalVariableExpression(var: !523, expr: !DIExpression())
!523 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_27", scope: !496, file: !501, line: 78, type: !460, isLocal: false, isDefinition: true, align: 16)
!524 = !DIGlobalVariableExpression(var: !525, expr: !DIExpression())
!525 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_103", scope: !496, file: !501, line: 85, type: !460, isLocal: false, isDefinition: true, align: 16)
!526 = !DIGlobalVariableExpression(var: !527, expr: !DIExpression())
!527 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_102", scope: !496, file: !501, line: 92, type: !460, isLocal: false, isDefinition: true, align: 16)
!528 = !DIGlobalVariableExpression(var: !529, expr: !DIExpression())
!529 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_101", scope: !496, file: !501, line: 99, type: !460, isLocal: false, isDefinition: true, align: 16)
!530 = !DIGlobalVariableExpression(var: !531, expr: !DIExpression())
!531 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_100", scope: !496, file: !501, line: 106, type: !460, isLocal: false, isDefinition: true, align: 16)
!532 = !DIGlobalVariableExpression(var: !533, expr: !DIExpression())
!533 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_63", scope: !496, file: !501, line: 113, type: !460, isLocal: false, isDefinition: true, align: 16)
!534 = !DIGlobalVariableExpression(var: !535, expr: !DIExpression())
!535 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_60", scope: !496, file: !501, line: 120, type: !460, isLocal: false, isDefinition: true, align: 16)
!536 = !DIGlobalVariableExpression(var: !537, expr: !DIExpression())
!537 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_55", scope: !496, file: !501, line: 127, type: !460, isLocal: false, isDefinition: true, align: 16)
!538 = !DIGlobalVariableExpression(var: !539, expr: !DIExpression())
!539 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_52", scope: !496, file: !501, line: 134, type: !460, isLocal: false, isDefinition: true, align: 16)
!540 = !DIGlobalVariableExpression(var: !541, expr: !DIExpression())
!541 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_66", scope: !496, file: !501, line: 141, type: !460, isLocal: false, isDefinition: true, align: 16)
!542 = !DIGlobalVariableExpression(var: !543, expr: !DIExpression())
!543 = distinct !DIGlobalVariable(name: "log_const_cbprintf_package", scope: !544, file: !557, line: 18, type: !558, isLocal: false, isDefinition: true)
!544 = distinct !DICompileUnit(language: DW_LANG_C99, file: !545, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !546, globals: !556, splitDebugInlining: false, nameTableKind: None)
!545 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/sensor_batch_processing")
!546 = !{!22, !104, !24, !547, !549, !551, !439, !108, !552, !553, !554, !555, !443, !209, !168, !105}
!547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !548, size: 32)
!548 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !550, size: 32)
!550 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !105, size: 32)
!552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !108, size: 32)
!553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !144, size: 32)
!554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !112, size: 32)
!555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !443, size: 32)
!556 = !{!542}
!557 = !DIFile(filename: "zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!558 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !559)
!559 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !254, line: 16, size: 64, elements: !560)
!560 = !{!561, !562}
!561 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !559, file: !254, line: 17, baseType: !105, size: 32)
!562 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !559, file: !254, line: 18, baseType: !164, size: 8, offset: 32)
!563 = !DIGlobalVariableExpression(var: !564, expr: !DIExpression())
!564 = distinct !DIGlobalVariable(name: "_char_out", scope: !565, file: !569, line: 54, type: !570, isLocal: false, isDefinition: true)
!565 = distinct !DICompileUnit(language: DW_LANG_C99, file: !566, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !567, globals: !568, splitDebugInlining: false, nameTableKind: None)
!566 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/sensor_batch_processing")
!567 = !{!104, !108}
!568 = !{!563}
!569 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !571, size: 32)
!571 = !DISubroutineType(types: !572)
!572 = !{!108, !108}
!573 = !DIGlobalVariableExpression(var: !574, expr: !DIExpression())
!574 = distinct !DIGlobalVariable(name: "__init_st_stm32f4_init", scope: !575, file: !592, line: 56, type: !593, isLocal: true, isDefinition: true, align: 32)
!575 = distinct !DICompileUnit(language: DW_LANG_C99, file: !576, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !577, globals: !591, splitDebugInlining: false, nameTableKind: None)
!576 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/sensor_batch_processing")
!577 = !{!578}
!578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !579, size: 32)
!579 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !580, line: 501, baseType: !581)
!580 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f427xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!581 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !580, line: 492, size: 224, elements: !582)
!582 = !{!583, !585, !586, !587, !588, !589, !590}
!583 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !581, file: !580, line: 494, baseType: !584, size: 32)
!584 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !113)
!585 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !581, file: !580, line: 495, baseType: !584, size: 32, offset: 32)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !581, file: !580, line: 496, baseType: !584, size: 32, offset: 64)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !581, file: !580, line: 497, baseType: !584, size: 32, offset: 96)
!588 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !581, file: !580, line: 498, baseType: !584, size: 32, offset: 128)
!589 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !581, file: !580, line: 499, baseType: !584, size: 32, offset: 160)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !581, file: !580, line: 500, baseType: !584, size: 32, offset: 192)
!591 = !{!573}
!592 = !DIFile(filename: "zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!593 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !594)
!594 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !469, line: 51, size: 64, elements: !595)
!595 = !{!596, !615}
!596 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !594, file: !469, line: 60, baseType: !597, size: 32)
!597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !598, size: 32)
!598 = !DISubroutineType(types: !599)
!599 = !{!108, !600}
!600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !601, size: 32)
!601 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !602)
!602 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !411, line: 378, size: 192, elements: !603)
!603 = !{!604, !605, !606, !607, !613, !614}
!604 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !602, file: !411, line: 380, baseType: !105, size: 32)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !602, file: !411, line: 382, baseType: !13, size: 32, offset: 32)
!606 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !602, file: !411, line: 384, baseType: !13, size: 32, offset: 64)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !602, file: !411, line: 386, baseType: !608, size: 32, offset: 96)
!608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !609, size: 32)
!609 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !411, line: 351, size: 16, elements: !610)
!610 = !{!611, !612}
!611 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !609, file: !411, line: 359, baseType: !164, size: 8)
!612 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !609, file: !411, line: 364, baseType: !422, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!613 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !602, file: !411, line: 388, baseType: !104, size: 32, offset: 128)
!614 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !602, file: !411, line: 396, baseType: !425, size: 32, offset: 160)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !594, file: !469, line: 65, baseType: !600, size: 32, offset: 32)
!616 = !DIGlobalVariableExpression(var: !617, expr: !DIExpression())
!617 = distinct !DIGlobalVariable(name: "__init_st_stm32_common_config", scope: !618, file: !621, line: 71, type: !622, isLocal: true, isDefinition: true, align: 32)
!618 = distinct !DICompileUnit(language: DW_LANG_C99, file: !619, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !620, splitDebugInlining: false, nameTableKind: None)
!619 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/sensor_batch_processing")
!620 = !{!616}
!621 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!622 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !623)
!623 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !469, line: 51, size: 64, elements: !624)
!624 = !{!625, !644}
!625 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !623, file: !469, line: 60, baseType: !626, size: 32)
!626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !627, size: 32)
!627 = !DISubroutineType(types: !628)
!628 = !{!108, !629}
!629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !630, size: 32)
!630 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !631)
!631 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !411, line: 378, size: 192, elements: !632)
!632 = !{!633, !634, !635, !636, !642, !643}
!633 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !631, file: !411, line: 380, baseType: !105, size: 32)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !631, file: !411, line: 382, baseType: !13, size: 32, offset: 32)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !631, file: !411, line: 384, baseType: !13, size: 32, offset: 64)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !631, file: !411, line: 386, baseType: !637, size: 32, offset: 96)
!637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !638, size: 32)
!638 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !411, line: 351, size: 16, elements: !639)
!639 = !{!640, !641}
!640 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !638, file: !411, line: 359, baseType: !164, size: 8)
!641 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !638, file: !411, line: 364, baseType: !422, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!642 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !631, file: !411, line: 388, baseType: !104, size: 32, offset: 128)
!643 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !631, file: !411, line: 396, baseType: !425, size: 32, offset: 160)
!644 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !623, file: !469, line: 65, baseType: !629, size: 32, offset: 32)
!645 = !DIGlobalVariableExpression(var: !646, expr: !DIExpression())
!646 = distinct !DIGlobalVariable(name: "log_const_mpu", scope: !647, file: !654, line: 17, type: !790, isLocal: false, isDefinition: true)
!647 = distinct !DICompileUnit(language: DW_LANG_C99, file: !648, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !649, globals: !650, splitDebugInlining: false, nameTableKind: None)
!648 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/sensor_batch_processing")
!649 = !{!439, !108, !113, !104}
!650 = !{!645, !651, !786}
!651 = !DIGlobalVariableExpression(var: !652, expr: !DIExpression())
!652 = distinct !DIGlobalVariable(name: "dynamic_regions", scope: !653, file: !654, line: 198, type: !772, isLocal: true, isDefinition: true)
!653 = distinct !DISubprogram(name: "z_arm_configure_dynamic_mpu_regions", scope: !654, file: !654, line: 175, type: !655, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !647, retainedNodes: !767)
!654 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!655 = !DISubroutineType(types: !656)
!656 = !{null, !657}
!657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !658, size: 32)
!658 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !659, line: 245, size: 1024, elements: !660)
!659 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!660 = !{!661, !724, !737, !738, !739, !740, !746, !762}
!661 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !658, file: !659, line: 247, baseType: !662, size: 384)
!662 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !659, line: 57, size: 384, elements: !663)
!663 = !{!664, !691, !698, !699, !700, !711, !712, !713}
!664 = !DIDerivedType(tag: DW_TAG_member, scope: !662, file: !659, line: 60, baseType: !665, size: 64)
!665 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !662, file: !659, line: 60, size: 64, elements: !666)
!666 = !{!667, !682}
!667 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !665, file: !659, line: 61, baseType: !668, size: 64)
!668 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !367, line: 49, baseType: !669)
!669 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !367, line: 37, size: 64, elements: !670)
!670 = !{!671, !677}
!671 = !DIDerivedType(tag: DW_TAG_member, scope: !669, file: !367, line: 38, baseType: !672, size: 32)
!672 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !669, file: !367, line: 38, size: 32, elements: !673)
!673 = !{!674, !676}
!674 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !672, file: !367, line: 39, baseType: !675, size: 32)
!675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !669, size: 32)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !672, file: !367, line: 40, baseType: !675, size: 32)
!677 = !DIDerivedType(tag: DW_TAG_member, scope: !669, file: !367, line: 42, baseType: !678, size: 32, offset: 32)
!678 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !669, file: !367, line: 42, size: 32, elements: !679)
!679 = !{!680, !681}
!680 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !678, file: !367, line: 43, baseType: !675, size: 32)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !678, file: !367, line: 44, baseType: !675, size: 32)
!682 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !665, file: !659, line: 62, baseType: !683, size: 64)
!683 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !684, line: 49, size: 64, elements: !685)
!684 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!685 = !{!686}
!686 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !683, file: !684, line: 50, baseType: !687, size: 64)
!687 = !DICompositeType(tag: DW_TAG_array_type, baseType: !688, size: 64, elements: !689)
!688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !683, size: 32)
!689 = !{!690}
!690 = !DISubrange(count: 2)
!691 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !662, file: !659, line: 68, baseType: !692, size: 32, offset: 64)
!692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !693, size: 32)
!693 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !363, line: 233, baseType: !694)
!694 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !363, line: 231, size: 64, elements: !695)
!695 = !{!696}
!696 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !694, file: !363, line: 232, baseType: !697, size: 64)
!697 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !367, line: 48, baseType: !669)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !662, file: !659, line: 71, baseType: !164, size: 8, offset: 96)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !662, file: !659, line: 74, baseType: !164, size: 8, offset: 104)
!700 = !DIDerivedType(tag: DW_TAG_member, scope: !662, file: !659, line: 90, baseType: !701, size: 16, offset: 112)
!701 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !662, file: !659, line: 90, size: 16, elements: !702)
!702 = !{!703, !710}
!703 = !DIDerivedType(tag: DW_TAG_member, scope: !701, file: !659, line: 91, baseType: !704, size: 16)
!704 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !701, file: !659, line: 91, size: 16, elements: !705)
!705 = !{!706, !709}
!706 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !704, file: !659, line: 96, baseType: !707, size: 8)
!707 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !708)
!708 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !704, file: !659, line: 97, baseType: !164, size: 8, offset: 8)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !701, file: !659, line: 100, baseType: !168, size: 16)
!711 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !662, file: !659, line: 107, baseType: !113, size: 32, offset: 128)
!712 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !662, file: !659, line: 127, baseType: !104, size: 32, offset: 160)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !662, file: !659, line: 131, baseType: !714, size: 192, offset: 192)
!714 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !363, line: 244, size: 192, elements: !715)
!715 = !{!716, !717, !723}
!716 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !714, file: !363, line: 245, baseType: !668, size: 64)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !714, file: !363, line: 246, baseType: !718, size: 32, offset: 64)
!718 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !363, line: 242, baseType: !719)
!719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !720, size: 32)
!720 = !DISubroutineType(types: !721)
!721 = !{null, !722}
!722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !714, size: 32)
!723 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !714, file: !363, line: 249, baseType: !111, size: 64, offset: 128)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !658, file: !659, line: 250, baseType: !725, size: 288, offset: 384)
!725 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !726, line: 25, size: 288, elements: !727)
!726 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!727 = !{!728, !729, !730, !731, !732, !733, !734, !735, !736}
!728 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !725, file: !726, line: 26, baseType: !113, size: 32)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !725, file: !726, line: 27, baseType: !113, size: 32, offset: 32)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !725, file: !726, line: 28, baseType: !113, size: 32, offset: 64)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !725, file: !726, line: 29, baseType: !113, size: 32, offset: 96)
!732 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !725, file: !726, line: 30, baseType: !113, size: 32, offset: 128)
!733 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !725, file: !726, line: 31, baseType: !113, size: 32, offset: 160)
!734 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !725, file: !726, line: 32, baseType: !113, size: 32, offset: 192)
!735 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !725, file: !726, line: 33, baseType: !113, size: 32, offset: 224)
!736 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !725, file: !726, line: 34, baseType: !113, size: 32, offset: 256)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !658, file: !659, line: 253, baseType: !104, size: 32, offset: 672)
!738 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !658, file: !659, line: 256, baseType: !693, size: 64, offset: 704)
!739 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !658, file: !659, line: 294, baseType: !108, size: 32, offset: 768)
!740 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !658, file: !659, line: 300, baseType: !741, size: 96, offset: 800)
!741 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !659, line: 149, size: 96, elements: !742)
!742 = !{!743, !744, !745}
!743 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !741, file: !659, line: 153, baseType: !22, size: 32)
!744 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !741, file: !659, line: 162, baseType: !439, size: 32, offset: 32)
!745 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !741, file: !659, line: 168, baseType: !439, size: 32, offset: 64)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !658, file: !659, line: 325, baseType: !747, size: 32, offset: 896)
!747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !748, size: 32)
!748 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !359, line: 5073, size: 160, elements: !749)
!749 = !{!750, !759, !760}
!750 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !748, file: !359, line: 5074, baseType: !751, size: 96)
!751 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !752, line: 56, size: 96, elements: !753)
!752 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!753 = !{!754, !757, !758}
!754 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !751, file: !752, line: 57, baseType: !755, size: 32)
!755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !756, size: 32)
!756 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !752, line: 57, flags: DIFlagFwdDecl)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !751, file: !752, line: 58, baseType: !104, size: 32, offset: 32)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !751, file: !752, line: 59, baseType: !439, size: 32, offset: 64)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !748, file: !359, line: 5075, baseType: !693, size: 64, offset: 96)
!760 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !748, file: !359, line: 5076, baseType: !761, offset: 160)
!761 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !436, line: 43, elements: !437)
!762 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !658, file: !659, line: 343, baseType: !763, size: 64, offset: 928)
!763 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !726, line: 60, size: 64, elements: !764)
!764 = !{!765, !766}
!765 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !763, file: !726, line: 63, baseType: !113, size: 32)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !763, file: !726, line: 66, baseType: !113, size: 32, offset: 32)
!767 = !{!768, !769, !770, !771}
!768 = !DILocalVariable(name: "thread", arg: 1, scope: !653, file: !654, line: 175, type: !657)
!769 = !DILocalVariable(name: "region_num", scope: !653, file: !654, line: 200, type: !164)
!770 = !DILocalVariable(name: "guard_start", scope: !653, file: !654, line: 265, type: !22)
!771 = !DILocalVariable(name: "guard_size", scope: !653, file: !654, line: 266, type: !439)
!772 = !DICompositeType(tag: DW_TAG_array_type, baseType: !773, size: 96, elements: !784)
!773 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !774, line: 52, size: 96, elements: !775)
!774 = !DIFile(filename: "zephyr/arch/arm/include/kernel_arch_data.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!775 = !{!776, !777, !778}
!776 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !773, file: !774, line: 53, baseType: !22, size: 32)
!777 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !773, file: !774, line: 54, baseType: !439, size: 32, offset: 32)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !773, file: !774, line: 55, baseType: !779, size: 32, offset: 64)
!779 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !780, line: 151, baseType: !781)
!780 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu_v7m.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!781 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !780, line: 149, size: 32, elements: !782)
!782 = !{!783}
!783 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !781, file: !780, line: 150, baseType: !113, size: 32)
!784 = !{!785}
!785 = !DISubrange(count: 1)
!786 = !DIGlobalVariableExpression(var: !787, expr: !DIExpression())
!787 = distinct !DIGlobalVariable(name: "static_regions", scope: !647, file: !654, line: 62, type: !788, isLocal: true, isDefinition: true)
!788 = !DICompositeType(tag: DW_TAG_array_type, baseType: !789, size: 96, elements: !784)
!789 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !773)
!790 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !791)
!791 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !254, line: 16, size: 64, elements: !792)
!792 = !{!793, !794}
!793 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !791, file: !254, line: 17, baseType: !105, size: 32)
!794 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !791, file: !254, line: 18, baseType: !164, size: 8, offset: 32)
!795 = !DIGlobalVariableExpression(var: !796, expr: !DIExpression())
!796 = distinct !DIGlobalVariable(name: "static_regions_num", scope: !797, file: !830, line: 39, type: !164, isLocal: true, isDefinition: true)
!797 = distinct !DICompileUnit(language: DW_LANG_C99, file: !798, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !799, globals: !829, splitDebugInlining: false, nameTableKind: None)
!798 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/sensor_batch_processing")
!799 = !{!800, !104, !108, !817, !164}
!800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !801, size: 32)
!801 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPU_Type", file: !802, line: 1226, baseType: !803)
!802 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!803 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !802, line: 1213, size: 352, elements: !804)
!804 = !{!805, !807, !808, !809, !810, !811, !812, !813, !814, !815, !816}
!805 = !DIDerivedType(tag: DW_TAG_member, name: "TYPE", scope: !803, file: !802, line: 1215, baseType: !806, size: 32)
!806 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !584)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !803, file: !802, line: 1216, baseType: !584, size: 32, offset: 32)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "RNR", scope: !803, file: !802, line: 1217, baseType: !584, size: 32, offset: 64)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR", scope: !803, file: !802, line: 1218, baseType: !584, size: 32, offset: 96)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "RASR", scope: !803, file: !802, line: 1219, baseType: !584, size: 32, offset: 128)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A1", scope: !803, file: !802, line: 1220, baseType: !584, size: 32, offset: 160)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A1", scope: !803, file: !802, line: 1221, baseType: !584, size: 32, offset: 192)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A2", scope: !803, file: !802, line: 1222, baseType: !584, size: 32, offset: 224)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A2", scope: !803, file: !802, line: 1223, baseType: !584, size: 32, offset: 256)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A3", scope: !803, file: !802, line: 1224, baseType: !584, size: 32, offset: 288)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A3", scope: !803, file: !802, line: 1225, baseType: !584, size: 32, offset: 320)
!817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !818, size: 32)
!818 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !819)
!819 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !820, line: 27, size: 96, elements: !821)
!820 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!821 = !{!822, !823, !824}
!822 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !819, file: !820, line: 29, baseType: !113, size: 32)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !819, file: !820, line: 31, baseType: !105, size: 32, offset: 32)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !819, file: !820, line: 37, baseType: !825, size: 32, offset: 64)
!825 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !780, line: 146, baseType: !826)
!826 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !780, line: 141, size: 32, elements: !827)
!827 = !{!828}
!828 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !826, file: !780, line: 143, baseType: !113, size: 32)
!829 = !{!795}
!830 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!831 = !DIGlobalVariableExpression(var: !832, expr: !DIExpression())
!832 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !833, file: !840, line: 21, type: !570, isLocal: true, isDefinition: true)
!833 = distinct !DICompileUnit(language: DW_LANG_C99, file: !834, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !835, globals: !839, splitDebugInlining: false, nameTableKind: None)
!834 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/sensor_batch_processing")
!835 = !{!836, !108, !104}
!836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !837, size: 32)
!837 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !838, line: 22, baseType: !108)
!838 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!839 = !{!831}
!840 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!841 = !DIGlobalVariableExpression(var: !842, expr: !DIExpression())
!842 = distinct !DIGlobalVariable(name: "mpu_regions", scope: !843, file: !848, line: 13, type: !865, isLocal: true, isDefinition: true)
!843 = distinct !DICompileUnit(language: DW_LANG_C99, file: !844, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !845, splitDebugInlining: false, nameTableKind: None)
!844 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/sensor_batch_processing")
!845 = !{!846, !841}
!846 = !DIGlobalVariableExpression(var: !847, expr: !DIExpression())
!847 = distinct !DIGlobalVariable(name: "mpu_config", scope: !843, file: !848, line: 37, type: !849, isLocal: false, isDefinition: true)
!848 = !DIFile(filename: "zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!849 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !850)
!850 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_config", file: !820, line: 41, size: 64, elements: !851)
!851 = !{!852, !853}
!852 = !DIDerivedType(tag: DW_TAG_member, name: "num_regions", scope: !850, file: !820, line: 43, baseType: !113, size: 32)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "mpu_regions", scope: !850, file: !820, line: 45, baseType: !854, size: 32, offset: 32)
!854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !855, size: 32)
!855 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !856)
!856 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !820, line: 27, size: 96, elements: !857)
!857 = !{!858, !859, !860}
!858 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !856, file: !820, line: 29, baseType: !113, size: 32)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !856, file: !820, line: 31, baseType: !105, size: 32, offset: 32)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !856, file: !820, line: 37, baseType: !861, size: 32, offset: 64)
!861 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !780, line: 146, baseType: !862)
!862 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !780, line: 141, size: 32, elements: !863)
!863 = !{!864}
!864 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !862, file: !780, line: 143, baseType: !113, size: 32)
!865 = !DICompositeType(tag: DW_TAG_array_type, baseType: !855, size: 192, elements: !689)
!866 = !DIGlobalVariableExpression(var: !867, expr: !DIExpression())
!867 = distinct !DIGlobalVariable(name: "log_const_rtio_executor_simple", scope: !868, file: !871, line: 12, type: !872, isLocal: false, isDefinition: true)
!868 = distinct !DICompileUnit(language: DW_LANG_C99, file: !869, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !567, globals: !870, splitDebugInlining: false, nameTableKind: None)
!869 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/rtio/rtio_executor_simple.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/sensor_batch_processing")
!870 = !{!866}
!871 = !DIFile(filename: "zephyr/subsys/rtio/rtio_executor_simple.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!872 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !873)
!873 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !254, line: 16, size: 64, elements: !874)
!874 = !{!875, !876}
!875 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !873, file: !254, line: 17, baseType: !105, size: 32)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !873, file: !254, line: 18, baseType: !164, size: 8, offset: 32)
!877 = !DIGlobalVariableExpression(var: !878, expr: !DIExpression())
!878 = distinct !DIGlobalVariable(name: "log_const_rtio_executor_concurrent", scope: !879, file: !988, line: 13, type: !989, isLocal: false, isDefinition: true)
!879 = distinct !DICompileUnit(language: DW_LANG_C99, file: !880, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !881, globals: !987, splitDebugInlining: false, nameTableKind: None)
!880 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/rtio/rtio_executor_concurrent.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/sensor_batch_processing")
!881 = !{!882, !104, !108}
!882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !883, size: 32)
!883 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_concurrent_executor", file: !884, line: 61, size: 224, elements: !885)
!884 = !DIFile(filename: "zephyr/include/zephyr/rtio/rtio_executor_concurrent.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!885 = !{!886, !976, !978, !979, !980, !981, !983, !984, !985}
!886 = !DIDerivedType(tag: DW_TAG_member, name: "ctx", scope: !883, file: !884, line: 62, baseType: !887, size: 32)
!887 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_executor", file: !125, line: 210, size: 32, elements: !888)
!888 = !{!889}
!889 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !887, file: !125, line: 211, baseType: !890, size: 32)
!890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !891, size: 32)
!891 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !892)
!892 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_executor_api", file: !125, line: 168, size: 96, elements: !893)
!893 = !{!894, !971, !975}
!894 = !DIDerivedType(tag: DW_TAG_member, name: "submit", scope: !892, file: !125, line: 177, baseType: !895, size: 32)
!895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !896, size: 32)
!896 = !DISubroutineType(types: !897)
!897 = !{!108, !898}
!898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !899, size: 32)
!899 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio", file: !125, line: 222, size: 128, elements: !900)
!900 = !{!901, !903, !904, !960}
!901 = !DIDerivedType(tag: DW_TAG_member, name: "executor", scope: !899, file: !125, line: 228, baseType: !902, size: 32)
!902 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !887, size: 32)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "xcqcnt", scope: !899, file: !125, line: 251, baseType: !142, size: 32, offset: 32)
!904 = !DIDerivedType(tag: DW_TAG_member, name: "sq", scope: !899, file: !125, line: 254, baseType: !905, size: 32, offset: 64)
!905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !906, size: 32)
!906 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_sq", file: !125, line: 142, size: 160, elements: !907)
!907 = !{!908, !916}
!908 = !DIDerivedType(tag: DW_TAG_member, name: "_spsc", scope: !906, file: !125, line: 143, baseType: !909, size: 160)
!909 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_spsc", file: !151, line: 58, size: 160, elements: !910)
!910 = !{!911, !912, !913, !914, !915}
!911 = !DIDerivedType(tag: DW_TAG_member, name: "acquire", scope: !909, file: !151, line: 60, baseType: !24, size: 32)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "consume", scope: !909, file: !151, line: 63, baseType: !24, size: 32, offset: 32)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "in", scope: !909, file: !151, line: 66, baseType: !142, size: 32, offset: 64)
!914 = !DIDerivedType(tag: DW_TAG_member, name: "out", scope: !909, file: !151, line: 69, baseType: !142, size: 32, offset: 96)
!915 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !909, file: !151, line: 72, baseType: !158, size: 32, offset: 128)
!916 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !906, file: !125, line: 144, baseType: !917, offset: 160)
!917 = !DICompositeType(tag: DW_TAG_array_type, baseType: !918, elements: !197)
!918 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_sqe", file: !125, line: 109, size: 160, elements: !919)
!919 = !{!920, !921, !922, !923, !951, !952}
!920 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !918, file: !125, line: 110, baseType: !164, size: 8)
!921 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !918, file: !125, line: 112, baseType: !164, size: 8, offset: 8)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !918, file: !125, line: 114, baseType: !168, size: 16, offset: 16)
!923 = !DIDerivedType(tag: DW_TAG_member, name: "iodev", scope: !918, file: !125, line: 116, baseType: !924, size: 32, offset: 32)
!924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !925, size: 32)
!925 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !926)
!926 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_iodev", file: !125, line: 306, size: 96, elements: !927)
!927 = !{!928, !939, !950}
!928 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !926, file: !125, line: 308, baseType: !929, size: 32)
!929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !930, size: 32)
!930 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !931)
!931 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_iodev_api", file: !125, line: 263, size: 32, elements: !932)
!932 = !{!933}
!933 = !DIDerivedType(tag: DW_TAG_member, name: "submit", scope: !931, file: !125, line: 271, baseType: !934, size: 32)
!934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !935, size: 32)
!935 = !DISubroutineType(types: !936)
!936 = !{null, !937, !898}
!937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !938, size: 32)
!938 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !918)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "iodev_sq", scope: !926, file: !125, line: 311, baseType: !940, size: 32, offset: 32)
!940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !941, size: 32)
!941 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_iodev_sq", file: !125, line: 298, size: 160, elements: !942)
!942 = !{!943, !944}
!943 = !DIDerivedType(tag: DW_TAG_member, name: "_spsc", scope: !941, file: !125, line: 299, baseType: !909, size: 160)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !941, file: !125, line: 300, baseType: !945, offset: 160)
!945 = !DICompositeType(tag: DW_TAG_array_type, baseType: !946, elements: !197)
!946 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_iodev_sqe", file: !125, line: 288, size: 64, elements: !947)
!947 = !{!948, !949}
!948 = !DIDerivedType(tag: DW_TAG_member, name: "sqe", scope: !946, file: !125, line: 289, baseType: !937, size: 32)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !946, file: !125, line: 290, baseType: !898, size: 32, offset: 32)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !926, file: !125, line: 314, baseType: !104, size: 32, offset: 64)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "userdata", scope: !918, file: !125, line: 125, baseType: !104, size: 32, offset: 64)
!952 = !DIDerivedType(tag: DW_TAG_member, scope: !918, file: !125, line: 127, baseType: !953, size: 64, offset: 96)
!953 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !918, file: !125, line: 127, size: 64, elements: !954)
!954 = !{!955}
!955 = !DIDerivedType(tag: DW_TAG_member, scope: !953, file: !125, line: 128, baseType: !956, size: 64)
!956 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !953, file: !125, line: 128, size: 64, elements: !957)
!957 = !{!958, !959}
!958 = !DIDerivedType(tag: DW_TAG_member, name: "buf_len", scope: !956, file: !125, line: 129, baseType: !113, size: 32)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !956, file: !125, line: 131, baseType: !209, size: 32, offset: 32)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "cq", scope: !899, file: !125, line: 257, baseType: !961, size: 32, offset: 96)
!961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !962, size: 32)
!962 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_cq", file: !125, line: 161, size: 160, elements: !963)
!963 = !{!964, !965}
!964 = !DIDerivedType(tag: DW_TAG_member, name: "_spsc", scope: !962, file: !125, line: 162, baseType: !909, size: 160)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !962, file: !125, line: 163, baseType: !966, offset: 160)
!966 = !DICompositeType(tag: DW_TAG_array_type, baseType: !967, elements: !197)
!967 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_cqe", file: !125, line: 150, size: 64, elements: !968)
!968 = !{!969, !970}
!969 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !967, file: !125, line: 151, baseType: !220, size: 32)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "userdata", scope: !967, file: !125, line: 152, baseType: !104, size: 32, offset: 32)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !892, file: !125, line: 182, baseType: !972, size: 32, offset: 32)
!972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !973, size: 32)
!973 = !DISubroutineType(types: !974)
!974 = !{null, !898, !937, !108}
!975 = !DIDerivedType(tag: DW_TAG_member, name: "err", scope: !892, file: !125, line: 187, baseType: !972, size: 32, offset: 64)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !883, file: !884, line: 65, baseType: !977, offset: 32)
!977 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !436, line: 43, elements: !437)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "task_in", scope: !883, file: !884, line: 68, baseType: !168, size: 16, offset: 32)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "task_out", scope: !883, file: !884, line: 68, baseType: !168, size: 16, offset: 48)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "task_mask", scope: !883, file: !884, line: 68, baseType: !168, size: 16, offset: 64)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "pending_sqe", scope: !883, file: !884, line: 71, baseType: !982, size: 32, offset: 96)
!982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !918, size: 32)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "last_sqe", scope: !883, file: !884, line: 74, baseType: !982, size: 32, offset: 128)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "task_status", scope: !883, file: !884, line: 77, baseType: !209, size: 32, offset: 160)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "task_cur", scope: !883, file: !884, line: 80, baseType: !986, size: 32, offset: 192)
!986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !982, size: 32)
!987 = !{!877}
!988 = !DIFile(filename: "zephyr/subsys/rtio/rtio_executor_concurrent.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!989 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !990)
!990 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !254, line: 16, size: 64, elements: !991)
!991 = !{!992, !993}
!992 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !990, file: !254, line: 17, baseType: !105, size: 32)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !990, file: !254, line: 18, baseType: !164, size: 8, offset: 32)
!994 = !DIGlobalVariableExpression(var: !995, expr: !DIExpression())
!995 = distinct !DIGlobalVariable(name: "exti_irq_table", scope: !996, file: !1111, line: 72, type: !1191, isLocal: true, isDefinition: true)
!996 = distinct !DICompileUnit(language: DW_LANG_C99, file: !997, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !998, retainedTypes: !1097, globals: !1108, splitDebugInlining: false, nameTableKind: None)
!997 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/sensor_batch_processing")
!998 = !{!30, !999}
!999 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !580, line: 65, baseType: !108, size: 32, elements: !1000)
!1000 = !{!1001, !1002, !1003, !1004, !1005, !1006, !1007, !1008, !1009, !1010, !1011, !1012, !1013, !1014, !1015, !1016, !1017, !1018, !1019, !1020, !1021, !1022, !1023, !1024, !1025, !1026, !1027, !1028, !1029, !1030, !1031, !1032, !1033, !1034, !1035, !1036, !1037, !1038, !1039, !1040, !1041, !1042, !1043, !1044, !1045, !1046, !1047, !1048, !1049, !1050, !1051, !1052, !1053, !1054, !1055, !1056, !1057, !1058, !1059, !1060, !1061, !1062, !1063, !1064, !1065, !1066, !1067, !1068, !1069, !1070, !1071, !1072, !1073, !1074, !1075, !1076, !1077, !1078, !1079, !1080, !1081, !1082, !1083, !1084, !1085, !1086, !1087, !1088, !1089, !1090, !1091, !1092, !1093, !1094, !1095, !1096}
!1001 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!1002 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!1003 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!1004 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!1005 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!1006 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!1007 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!1008 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!1009 = !DIEnumerator(name: "WWDG_IRQn", value: 0)
!1010 = !DIEnumerator(name: "PVD_IRQn", value: 1)
!1011 = !DIEnumerator(name: "TAMP_STAMP_IRQn", value: 2)
!1012 = !DIEnumerator(name: "RTC_WKUP_IRQn", value: 3)
!1013 = !DIEnumerator(name: "FLASH_IRQn", value: 4)
!1014 = !DIEnumerator(name: "RCC_IRQn", value: 5)
!1015 = !DIEnumerator(name: "EXTI0_IRQn", value: 6)
!1016 = !DIEnumerator(name: "EXTI1_IRQn", value: 7)
!1017 = !DIEnumerator(name: "EXTI2_IRQn", value: 8)
!1018 = !DIEnumerator(name: "EXTI3_IRQn", value: 9)
!1019 = !DIEnumerator(name: "EXTI4_IRQn", value: 10)
!1020 = !DIEnumerator(name: "DMA1_Stream0_IRQn", value: 11)
!1021 = !DIEnumerator(name: "DMA1_Stream1_IRQn", value: 12)
!1022 = !DIEnumerator(name: "DMA1_Stream2_IRQn", value: 13)
!1023 = !DIEnumerator(name: "DMA1_Stream3_IRQn", value: 14)
!1024 = !DIEnumerator(name: "DMA1_Stream4_IRQn", value: 15)
!1025 = !DIEnumerator(name: "DMA1_Stream5_IRQn", value: 16)
!1026 = !DIEnumerator(name: "DMA1_Stream6_IRQn", value: 17)
!1027 = !DIEnumerator(name: "ADC_IRQn", value: 18)
!1028 = !DIEnumerator(name: "CAN1_TX_IRQn", value: 19)
!1029 = !DIEnumerator(name: "CAN1_RX0_IRQn", value: 20)
!1030 = !DIEnumerator(name: "CAN1_RX1_IRQn", value: 21)
!1031 = !DIEnumerator(name: "CAN1_SCE_IRQn", value: 22)
!1032 = !DIEnumerator(name: "EXTI9_5_IRQn", value: 23)
!1033 = !DIEnumerator(name: "TIM1_BRK_TIM9_IRQn", value: 24)
!1034 = !DIEnumerator(name: "TIM1_UP_TIM10_IRQn", value: 25)
!1035 = !DIEnumerator(name: "TIM1_TRG_COM_TIM11_IRQn", value: 26)
!1036 = !DIEnumerator(name: "TIM1_CC_IRQn", value: 27)
!1037 = !DIEnumerator(name: "TIM2_IRQn", value: 28)
!1038 = !DIEnumerator(name: "TIM3_IRQn", value: 29)
!1039 = !DIEnumerator(name: "TIM4_IRQn", value: 30)
!1040 = !DIEnumerator(name: "I2C1_EV_IRQn", value: 31)
!1041 = !DIEnumerator(name: "I2C1_ER_IRQn", value: 32)
!1042 = !DIEnumerator(name: "I2C2_EV_IRQn", value: 33)
!1043 = !DIEnumerator(name: "I2C2_ER_IRQn", value: 34)
!1044 = !DIEnumerator(name: "SPI1_IRQn", value: 35)
!1045 = !DIEnumerator(name: "SPI2_IRQn", value: 36)
!1046 = !DIEnumerator(name: "USART1_IRQn", value: 37)
!1047 = !DIEnumerator(name: "USART2_IRQn", value: 38)
!1048 = !DIEnumerator(name: "USART3_IRQn", value: 39)
!1049 = !DIEnumerator(name: "EXTI15_10_IRQn", value: 40)
!1050 = !DIEnumerator(name: "RTC_Alarm_IRQn", value: 41)
!1051 = !DIEnumerator(name: "OTG_FS_WKUP_IRQn", value: 42)
!1052 = !DIEnumerator(name: "TIM8_BRK_TIM12_IRQn", value: 43)
!1053 = !DIEnumerator(name: "TIM8_UP_TIM13_IRQn", value: 44)
!1054 = !DIEnumerator(name: "TIM8_TRG_COM_TIM14_IRQn", value: 45)
!1055 = !DIEnumerator(name: "TIM8_CC_IRQn", value: 46)
!1056 = !DIEnumerator(name: "DMA1_Stream7_IRQn", value: 47)
!1057 = !DIEnumerator(name: "FMC_IRQn", value: 48)
!1058 = !DIEnumerator(name: "SDIO_IRQn", value: 49)
!1059 = !DIEnumerator(name: "TIM5_IRQn", value: 50)
!1060 = !DIEnumerator(name: "SPI3_IRQn", value: 51)
!1061 = !DIEnumerator(name: "UART4_IRQn", value: 52)
!1062 = !DIEnumerator(name: "UART5_IRQn", value: 53)
!1063 = !DIEnumerator(name: "TIM6_DAC_IRQn", value: 54)
!1064 = !DIEnumerator(name: "TIM7_IRQn", value: 55)
!1065 = !DIEnumerator(name: "DMA2_Stream0_IRQn", value: 56)
!1066 = !DIEnumerator(name: "DMA2_Stream1_IRQn", value: 57)
!1067 = !DIEnumerator(name: "DMA2_Stream2_IRQn", value: 58)
!1068 = !DIEnumerator(name: "DMA2_Stream3_IRQn", value: 59)
!1069 = !DIEnumerator(name: "DMA2_Stream4_IRQn", value: 60)
!1070 = !DIEnumerator(name: "ETH_IRQn", value: 61)
!1071 = !DIEnumerator(name: "ETH_WKUP_IRQn", value: 62)
!1072 = !DIEnumerator(name: "CAN2_TX_IRQn", value: 63)
!1073 = !DIEnumerator(name: "CAN2_RX0_IRQn", value: 64)
!1074 = !DIEnumerator(name: "CAN2_RX1_IRQn", value: 65)
!1075 = !DIEnumerator(name: "CAN2_SCE_IRQn", value: 66)
!1076 = !DIEnumerator(name: "OTG_FS_IRQn", value: 67)
!1077 = !DIEnumerator(name: "DMA2_Stream5_IRQn", value: 68)
!1078 = !DIEnumerator(name: "DMA2_Stream6_IRQn", value: 69)
!1079 = !DIEnumerator(name: "DMA2_Stream7_IRQn", value: 70)
!1080 = !DIEnumerator(name: "USART6_IRQn", value: 71)
!1081 = !DIEnumerator(name: "I2C3_EV_IRQn", value: 72)
!1082 = !DIEnumerator(name: "I2C3_ER_IRQn", value: 73)
!1083 = !DIEnumerator(name: "OTG_HS_EP1_OUT_IRQn", value: 74)
!1084 = !DIEnumerator(name: "OTG_HS_EP1_IN_IRQn", value: 75)
!1085 = !DIEnumerator(name: "OTG_HS_WKUP_IRQn", value: 76)
!1086 = !DIEnumerator(name: "OTG_HS_IRQn", value: 77)
!1087 = !DIEnumerator(name: "DCMI_IRQn", value: 78)
!1088 = !DIEnumerator(name: "HASH_RNG_IRQn", value: 80)
!1089 = !DIEnumerator(name: "FPU_IRQn", value: 81)
!1090 = !DIEnumerator(name: "UART7_IRQn", value: 82)
!1091 = !DIEnumerator(name: "UART8_IRQn", value: 83)
!1092 = !DIEnumerator(name: "SPI4_IRQn", value: 84)
!1093 = !DIEnumerator(name: "SPI5_IRQn", value: 85)
!1094 = !DIEnumerator(name: "SPI6_IRQn", value: 86)
!1095 = !DIEnumerator(name: "SAI1_IRQn", value: 87)
!1096 = !DIEnumerator(name: "DMA2D_IRQn", value: 90)
!1097 = !{!439, !108, !104, !1098}
!1098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1099, size: 32)
!1099 = !DIDerivedType(tag: DW_TAG_typedef, name: "EXTI_TypeDef", file: !580, line: 486, baseType: !1100)
!1100 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !580, line: 478, size: 192, elements: !1101)
!1101 = !{!1102, !1103, !1104, !1105, !1106, !1107}
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !1100, file: !580, line: 480, baseType: !584, size: 32)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "EMR", scope: !1100, file: !580, line: 481, baseType: !584, size: 32, offset: 32)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "RTSR", scope: !1100, file: !580, line: 482, baseType: !584, size: 32, offset: 64)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "FTSR", scope: !1100, file: !580, line: 483, baseType: !584, size: 32, offset: 96)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "SWIER", scope: !1100, file: !580, line: 484, baseType: !584, size: 32, offset: 128)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !1100, file: !580, line: 485, baseType: !584, size: 32, offset: 160)
!1108 = !{!1109, !1112, !1128, !1139, !1156, !994, !1158, !1171, !1173, !1175, !1177, !1179, !1181, !1183, !1185, !1187, !1189}
!1109 = !DIGlobalVariableExpression(var: !1110, expr: !DIExpression())
!1110 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_45", scope: !996, file: !1111, line: 424, type: !460, isLocal: false, isDefinition: true, align: 16)
!1111 = !DIFile(filename: "zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1112 = !DIGlobalVariableExpression(var: !1113, expr: !DIExpression())
!1113 = distinct !DIGlobalVariable(name: "__device_dts_ord_45", scope: !996, file: !1111, line: 424, type: !1114, isLocal: false, isDefinition: true, align: 32)
!1114 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1115)
!1115 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !411, line: 378, size: 192, elements: !1116)
!1116 = !{!1117, !1118, !1119, !1120, !1126, !1127}
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1115, file: !411, line: 380, baseType: !105, size: 32)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1115, file: !411, line: 382, baseType: !13, size: 32, offset: 32)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1115, file: !411, line: 384, baseType: !13, size: 32, offset: 64)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1115, file: !411, line: 386, baseType: !1121, size: 32, offset: 96)
!1121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1122, size: 32)
!1122 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !411, line: 351, size: 16, elements: !1123)
!1123 = !{!1124, !1125}
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1122, file: !411, line: 359, baseType: !164, size: 8)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1122, file: !411, line: 364, baseType: !422, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1115, file: !411, line: 388, baseType: !104, size: 32, offset: 128)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1115, file: !411, line: 396, baseType: !425, size: 32, offset: 160)
!1128 = !DIGlobalVariableExpression(var: !1129, expr: !DIExpression())
!1129 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_45", scope: !996, file: !1111, line: 424, type: !1130, isLocal: true, isDefinition: true, align: 32)
!1130 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1131)
!1131 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !469, line: 51, size: 64, elements: !1132)
!1132 = !{!1133, !1138}
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1131, file: !469, line: 60, baseType: !1134, size: 32)
!1134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1135, size: 32)
!1135 = !DISubroutineType(types: !1136)
!1136 = !{!108, !1137}
!1137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1114, size: 32)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1131, file: !469, line: 65, baseType: !1137, size: 32, offset: 32)
!1139 = !DIGlobalVariableExpression(var: !1140, expr: !DIExpression())
!1140 = distinct !DIGlobalVariable(name: "exti_data", scope: !996, file: !1111, line: 423, type: !1141, isLocal: true, isDefinition: true)
!1141 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_exti_data", file: !1111, line: 107, size: 1472, elements: !1142)
!1142 = !{!1143}
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1141, file: !1111, line: 109, baseType: !1144, size: 1472)
!1144 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1145, size: 1472, elements: !1154)
!1145 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exti_cb", file: !1111, line: 101, size: 64, elements: !1146)
!1146 = !{!1147, !1153}
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1145, file: !1111, line: 102, baseType: !1148, size: 32)
!1148 = !DIDerivedType(tag: DW_TAG_typedef, name: "stm32_exti_callback_t", file: !1149, line: 63, baseType: !1150)
!1149 = !DIFile(filename: "zephyr/include/zephyr/drivers/interrupt_controller/exti_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1151, size: 32)
!1151 = !DISubroutineType(types: !1152)
!1152 = !{null, !108, !104}
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1145, file: !1111, line: 103, baseType: !104, size: 32, offset: 32)
!1154 = !{!1155}
!1155 = !DISubrange(count: 23)
!1156 = !DIGlobalVariableExpression(var: !1157, expr: !DIExpression())
!1157 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_45", scope: !996, file: !1111, line: 424, type: !1122, isLocal: true, isDefinition: true, align: 8)
!1158 = !DIGlobalVariableExpression(var: !1159, expr: !DIExpression())
!1159 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_0_irq_0", scope: !1160, file: !1111, line: 493, type: !1165, isLocal: true, isDefinition: true, align: 32)
!1160 = distinct !DISubprogram(name: "__stm32_exti_connect_irqs", scope: !1111, file: !1111, line: 460, type: !1161, scopeLine: 461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !996, retainedNodes: !1163)
!1161 = !DISubroutineType(types: !1162)
!1162 = !{null, !1137}
!1163 = !{!1164}
!1164 = !DILocalVariable(name: "dev", arg: 1, scope: !1160, file: !1111, line: 460, type: !1137)
!1165 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !1166)
!1166 = !{!1167, !1168, !1169, !1170}
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !1165, file: !10, line: 55, baseType: !220, size: 32)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1165, file: !10, line: 57, baseType: !220, size: 32, offset: 32)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1165, file: !10, line: 59, baseType: !104, size: 32, offset: 64)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !1165, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!1171 = !DIGlobalVariableExpression(var: !1172, expr: !DIExpression())
!1172 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_1_irq_1", scope: !1160, file: !1111, line: 497, type: !1165, isLocal: true, isDefinition: true, align: 32)
!1173 = !DIGlobalVariableExpression(var: !1174, expr: !DIExpression())
!1174 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_2_irq_2", scope: !1160, file: !1111, line: 507, type: !1165, isLocal: true, isDefinition: true, align: 32)
!1175 = !DIGlobalVariableExpression(var: !1176, expr: !DIExpression())
!1176 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_3_irq_3", scope: !1160, file: !1111, line: 512, type: !1165, isLocal: true, isDefinition: true, align: 32)
!1177 = !DIGlobalVariableExpression(var: !1178, expr: !DIExpression())
!1178 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_4_irq_4", scope: !1160, file: !1111, line: 516, type: !1165, isLocal: true, isDefinition: true, align: 32)
!1179 = !DIGlobalVariableExpression(var: !1180, expr: !DIExpression())
!1180 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_9_5_irq_5", scope: !1160, file: !1111, line: 523, type: !1165, isLocal: true, isDefinition: true, align: 32)
!1181 = !DIGlobalVariableExpression(var: !1182, expr: !DIExpression())
!1182 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_15_10_irq_6", scope: !1160, file: !1111, line: 527, type: !1165, isLocal: true, isDefinition: true, align: 32)
!1183 = !DIGlobalVariableExpression(var: !1184, expr: !DIExpression())
!1184 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_16_irq_7", scope: !1160, file: !1111, line: 581, type: !1165, isLocal: true, isDefinition: true, align: 32)
!1185 = !DIGlobalVariableExpression(var: !1186, expr: !DIExpression())
!1186 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_18_irq_8", scope: !1160, file: !1111, line: 586, type: !1165, isLocal: true, isDefinition: true, align: 32)
!1187 = !DIGlobalVariableExpression(var: !1188, expr: !DIExpression())
!1188 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_21_irq_9", scope: !1160, file: !1111, line: 591, type: !1165, isLocal: true, isDefinition: true, align: 32)
!1189 = !DIGlobalVariableExpression(var: !1190, expr: !DIExpression())
!1190 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_22_irq_10", scope: !1160, file: !1111, line: 595, type: !1165, isLocal: true, isDefinition: true, align: 32)
!1191 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1192, size: 736, elements: !1154)
!1192 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1193)
!1193 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !580, line: 165, baseType: !999)
!1194 = !DIGlobalVariableExpression(var: !1195, expr: !DIExpression())
!1195 = distinct !DIGlobalVariable(name: "stm32_clock_control_api", scope: !1196, file: !1259, line: 398, type: !1292, isLocal: true, isDefinition: true)
!1196 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1197, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1198, retainedTypes: !1211, globals: !1256, splitDebugInlining: false, nameTableKind: None)
!1197 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/sensor_batch_processing")
!1198 = !{!1199, !30, !1204}
!1199 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1200, line: 197, baseType: !32, size: 32, elements: !1201)
!1200 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f4xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1201 = !{!1202, !1203}
!1202 = !DIEnumerator(name: "SUCCESS", value: 0)
!1203 = !DIEnumerator(name: "ERROR", value: 1)
!1204 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "clock_control_status", file: !1205, line: 44, baseType: !32, size: 32, elements: !1206)
!1205 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1206 = !{!1207, !1208, !1209, !1210}
!1207 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_STARTING", value: 0)
!1208 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_OFF", value: 1)
!1209 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_ON", value: 2)
!1210 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_UNKNOWN", value: 3)
!1211 = !{!104, !108, !113, !1212, !1249, !1255}
!1212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1213, size: 32)
!1213 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !580, line: 677, baseType: !1214)
!1214 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !580, line: 643, size: 1152, elements: !1215)
!1215 = !{!1216, !1217, !1218, !1219, !1220, !1221, !1222, !1223, !1224, !1225, !1226, !1228, !1229, !1230, !1231, !1232, !1233, !1234, !1235, !1236, !1237, !1238, !1239, !1240, !1241, !1242, !1243, !1244, !1245, !1246, !1247, !1248}
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !1214, file: !580, line: 645, baseType: !584, size: 32)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !1214, file: !580, line: 646, baseType: !584, size: 32, offset: 32)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1214, file: !580, line: 647, baseType: !584, size: 32, offset: 64)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !1214, file: !580, line: 648, baseType: !584, size: 32, offset: 96)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !1214, file: !580, line: 649, baseType: !584, size: 32, offset: 128)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !1214, file: !580, line: 650, baseType: !584, size: 32, offset: 160)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !1214, file: !580, line: 651, baseType: !584, size: 32, offset: 192)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1214, file: !580, line: 652, baseType: !113, size: 32, offset: 224)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !1214, file: !580, line: 653, baseType: !584, size: 32, offset: 256)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !1214, file: !580, line: 654, baseType: !584, size: 32, offset: 288)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1214, file: !580, line: 655, baseType: !1227, size: 64, offset: 320)
!1227 = !DICompositeType(tag: DW_TAG_array_type, baseType: !113, size: 64, elements: !689)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !1214, file: !580, line: 656, baseType: !584, size: 32, offset: 384)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !1214, file: !580, line: 657, baseType: !584, size: 32, offset: 416)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !1214, file: !580, line: 658, baseType: !584, size: 32, offset: 448)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1214, file: !580, line: 659, baseType: !113, size: 32, offset: 480)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !1214, file: !580, line: 660, baseType: !584, size: 32, offset: 512)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !1214, file: !580, line: 661, baseType: !584, size: 32, offset: 544)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1214, file: !580, line: 662, baseType: !1227, size: 64, offset: 576)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !1214, file: !580, line: 663, baseType: !584, size: 32, offset: 640)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !1214, file: !580, line: 664, baseType: !584, size: 32, offset: 672)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !1214, file: !580, line: 665, baseType: !584, size: 32, offset: 704)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1214, file: !580, line: 666, baseType: !113, size: 32, offset: 736)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !1214, file: !580, line: 667, baseType: !584, size: 32, offset: 768)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !1214, file: !580, line: 668, baseType: !584, size: 32, offset: 800)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1214, file: !580, line: 669, baseType: !1227, size: 64, offset: 832)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !1214, file: !580, line: 670, baseType: !584, size: 32, offset: 896)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !1214, file: !580, line: 671, baseType: !584, size: 32, offset: 928)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !1214, file: !580, line: 672, baseType: !1227, size: 64, offset: 960)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !1214, file: !580, line: 673, baseType: !584, size: 32, offset: 1024)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !1214, file: !580, line: 674, baseType: !584, size: 32, offset: 1056)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !1214, file: !580, line: 675, baseType: !584, size: 32, offset: 1088)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !1214, file: !580, line: 676, baseType: !584, size: 32, offset: 1120)
!1249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1250, size: 32)
!1250 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !1251, line: 343, size: 64, elements: !1252)
!1251 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control/stm32_clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1252 = !{!1253, !1254}
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1250, file: !1251, line: 344, baseType: !113, size: 32)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1250, file: !1251, line: 345, baseType: !113, size: 32, offset: 32)
!1255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !113, size: 32)
!1256 = !{!1257, !1263, !1279, !1290, !1194}
!1257 = !DIGlobalVariableExpression(var: !1258, expr: !DIExpression())
!1258 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !1196, file: !1259, line: 752, type: !1260, isLocal: false, isDefinition: true, align: 16)
!1259 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1260 = !DICompositeType(tag: DW_TAG_array_type, baseType: !426, size: 1024, elements: !1261)
!1261 = !{!1262}
!1262 = !DISubrange(count: 64)
!1263 = !DIGlobalVariableExpression(var: !1264, expr: !DIExpression())
!1264 = distinct !DIGlobalVariable(name: "__device_dts_ord_8", scope: !1196, file: !1259, line: 752, type: !1265, isLocal: false, isDefinition: true, align: 32)
!1265 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1266)
!1266 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !411, line: 378, size: 192, elements: !1267)
!1267 = !{!1268, !1269, !1270, !1271, !1277, !1278}
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1266, file: !411, line: 380, baseType: !105, size: 32)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1266, file: !411, line: 382, baseType: !13, size: 32, offset: 32)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1266, file: !411, line: 384, baseType: !13, size: 32, offset: 64)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1266, file: !411, line: 386, baseType: !1272, size: 32, offset: 96)
!1272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1273, size: 32)
!1273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !411, line: 351, size: 16, elements: !1274)
!1274 = !{!1275, !1276}
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1273, file: !411, line: 359, baseType: !164, size: 8)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1273, file: !411, line: 364, baseType: !422, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1266, file: !411, line: 388, baseType: !104, size: 32, offset: 128)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1266, file: !411, line: 396, baseType: !425, size: 32, offset: 160)
!1279 = !DIGlobalVariableExpression(var: !1280, expr: !DIExpression())
!1280 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_8", scope: !1196, file: !1259, line: 752, type: !1281, isLocal: true, isDefinition: true, align: 32)
!1281 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1282)
!1282 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !469, line: 51, size: 64, elements: !1283)
!1283 = !{!1284, !1289}
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1282, file: !469, line: 60, baseType: !1285, size: 32)
!1285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1286, size: 32)
!1286 = !DISubroutineType(types: !1287)
!1287 = !{!108, !1288}
!1288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1265, size: 32)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1282, file: !469, line: 65, baseType: !1288, size: 32, offset: 32)
!1290 = !DIGlobalVariableExpression(var: !1291, expr: !DIExpression())
!1291 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_8", scope: !1196, file: !1259, line: 752, type: !1273, isLocal: true, isDefinition: true, align: 8)
!1292 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !1205, line: 100, size: 224, elements: !1293)
!1293 = !{!1294, !1300, !1301, !1310, !1315, !1320, !1326}
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1292, file: !1205, line: 101, baseType: !1295, size: 32)
!1295 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !1205, line: 76, baseType: !1296)
!1296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1297, size: 32)
!1297 = !DISubroutineType(types: !1298)
!1298 = !{!108, !1288, !1299}
!1299 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_t", file: !1205, line: 56, baseType: !104)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1292, file: !1205, line: 102, baseType: !1295, size: 32, offset: 32)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1292, file: !1205, line: 103, baseType: !1302, size: 32, offset: 64)
!1302 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !1205, line: 83, baseType: !1303)
!1303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1304, size: 32)
!1304 = !DISubroutineType(types: !1305)
!1305 = !{!108, !1288, !1299, !1306, !104}
!1306 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !1205, line: 72, baseType: !1307)
!1307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1308, size: 32)
!1308 = !DISubroutineType(types: !1309)
!1309 = !{null, !1288, !1299, !104}
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1292, file: !1205, line: 104, baseType: !1311, size: 32, offset: 96)
!1311 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !1205, line: 79, baseType: !1312)
!1312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1313, size: 32)
!1313 = !DISubroutineType(types: !1314)
!1314 = !{!108, !1288, !1299, !1255}
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1292, file: !1205, line: 105, baseType: !1316, size: 32, offset: 128)
!1316 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !1205, line: 88, baseType: !1317)
!1317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1318, size: 32)
!1318 = !DISubroutineType(types: !1319)
!1319 = !{!1204, !1288, !1299}
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1292, file: !1205, line: 106, baseType: !1321, size: 32, offset: 160)
!1321 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !1205, line: 92, baseType: !1322)
!1322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1323, size: 32)
!1323 = !DISubroutineType(types: !1324)
!1324 = !{!108, !1288, !1299, !1325}
!1325 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_rate_t", file: !1205, line: 64, baseType: !104)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1292, file: !1205, line: 107, baseType: !1327, size: 32, offset: 192)
!1327 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !1205, line: 96, baseType: !1328)
!1328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1329, size: 32)
!1329 = !DISubroutineType(types: !1330)
!1330 = !{!108, !1288, !1299, !104}
!1331 = !DIGlobalVariableExpression(var: !1332, expr: !DIExpression())
!1332 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !1333, file: !1390, line: 603, type: !1392, isLocal: true, isDefinition: true, align: 32)
!1333 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1334, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !1335, globals: !1387, splitDebugInlining: false, nameTableKind: None)
!1334 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/sensor_batch_processing")
!1335 = !{!104, !108, !1336}
!1336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1337, size: 32)
!1337 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1338)
!1338 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !1339, line: 336, size: 160, elements: !1340)
!1339 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1340 = !{!1341, !1361, !1365, !1369, !1382}
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1338, file: !1339, line: 365, baseType: !1342, size: 32)
!1342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1343, size: 32)
!1343 = !DISubroutineType(types: !1344)
!1344 = !{!108, !1345, !1360}
!1345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1346, size: 32)
!1346 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1347)
!1347 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !411, line: 378, size: 192, elements: !1348)
!1348 = !{!1349, !1350, !1351, !1352, !1358, !1359}
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1347, file: !411, line: 380, baseType: !105, size: 32)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1347, file: !411, line: 382, baseType: !13, size: 32, offset: 32)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1347, file: !411, line: 384, baseType: !13, size: 32, offset: 64)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1347, file: !411, line: 386, baseType: !1353, size: 32, offset: 96)
!1353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1354, size: 32)
!1354 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !411, line: 351, size: 16, elements: !1355)
!1355 = !{!1356, !1357}
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1354, file: !411, line: 359, baseType: !164, size: 8)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1354, file: !411, line: 364, baseType: !422, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1347, file: !411, line: 388, baseType: !104, size: 32, offset: 128)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1347, file: !411, line: 396, baseType: !425, size: 32, offset: 160)
!1360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !165, size: 32)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1338, file: !1339, line: 366, baseType: !1362, size: 32, offset: 32)
!1362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1363, size: 32)
!1363 = !DISubroutineType(types: !1364)
!1364 = !{null, !1345, !165}
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1338, file: !1339, line: 374, baseType: !1366, size: 32, offset: 64)
!1366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1367, size: 32)
!1367 = !DISubroutineType(types: !1368)
!1368 = !{!108, !1345}
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1338, file: !1339, line: 377, baseType: !1370, size: 32, offset: 96)
!1370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1371, size: 32)
!1371 = !DISubroutineType(types: !1372)
!1372 = !{!108, !1345, !1373}
!1373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1374, size: 32)
!1374 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1375)
!1375 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !1339, line: 122, size: 64, elements: !1376)
!1376 = !{!1377, !1378, !1379, !1380, !1381}
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1375, file: !1339, line: 123, baseType: !113, size: 32)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1375, file: !1339, line: 124, baseType: !164, size: 8, offset: 32)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1375, file: !1339, line: 125, baseType: !164, size: 8, offset: 40)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1375, file: !1339, line: 126, baseType: !164, size: 8, offset: 48)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1375, file: !1339, line: 127, baseType: !164, size: 8, offset: 56)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1338, file: !1339, line: 379, baseType: !1383, size: 32, offset: 128)
!1383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1384, size: 32)
!1384 = !DISubroutineType(types: !1385)
!1385 = !{!108, !1345, !1386}
!1386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1375, size: 32)
!1387 = !{!1331, !1388}
!1388 = !DIGlobalVariableExpression(var: !1389, expr: !DIExpression())
!1389 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !1333, file: !1390, line: 38, type: !1391, isLocal: true, isDefinition: true)
!1390 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1391 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1345)
!1392 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1393)
!1393 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !469, line: 51, size: 64, elements: !1394)
!1394 = !{!1395, !1396}
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1393, file: !469, line: 60, baseType: !1366, size: 32)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1393, file: !469, line: 65, baseType: !1345, size: 32, offset: 32)
!1397 = !DIGlobalVariableExpression(var: !1398, expr: !DIExpression())
!1398 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_a", scope: !1399, file: !1568, line: 762, type: !1707, isLocal: true, isDefinition: true)
!1399 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1400, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1401, retainedTypes: !1419, globals: !1565, splitDebugInlining: false, nameTableKind: None)
!1400 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/sensor_batch_processing")
!1401 = !{!30, !1402, !1408, !1413, !1204}
!1402 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_mode", file: !1403, line: 506, baseType: !32, size: 32, elements: !1404)
!1403 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1404 = !{!1405, !1406, !1407}
!1405 = !DIEnumerator(name: "GPIO_INT_MODE_DISABLED", value: 2097152)
!1406 = !DIEnumerator(name: "GPIO_INT_MODE_LEVEL", value: 4194304)
!1407 = !DIEnumerator(name: "GPIO_INT_MODE_EDGE", value: 20971520)
!1408 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_trig", file: !1403, line: 512, baseType: !32, size: 32, elements: !1409)
!1409 = !{!1410, !1411, !1412}
!1410 = !DIEnumerator(name: "GPIO_INT_TRIG_LOW", value: 33554432)
!1411 = !DIEnumerator(name: "GPIO_INT_TRIG_HIGH", value: 67108864)
!1412 = !DIEnumerator(name: "GPIO_INT_TRIG_BOTH", value: 100663296)
!1413 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stm32_exti_trigger", file: !1149, line: 43, baseType: !32, size: 32, elements: !1414)
!1414 = !{!1415, !1416, !1417, !1418}
!1415 = !DIEnumerator(name: "STM32_EXTI_TRIG_NONE", value: 0)
!1416 = !DIEnumerator(name: "STM32_EXTI_TRIG_RISING", value: 1)
!1417 = !DIEnumerator(name: "STM32_EXTI_TRIG_FALLING", value: 2)
!1418 = !DIEnumerator(name: "STM32_EXTI_TRIG_BOTH", value: 3)
!1419 = !{!104, !108, !1420, !1490, !1495, !1455, !1408, !1402, !1500, !1501, !113, !1515, !1470, !443, !1525, !1526}
!1420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1421, size: 32)
!1421 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1422)
!1422 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1403, line: 523, size: 288, elements: !1423)
!1423 = !{!1424, !1445, !1451, !1456, !1460, !1461, !1462, !1466, !1486}
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1422, file: !1403, line: 524, baseType: !1425, size: 32)
!1425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1426, size: 32)
!1426 = !DISubroutineType(types: !1427)
!1427 = !{!108, !1428, !1443, !1444}
!1428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1429, size: 32)
!1429 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1430)
!1430 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !411, line: 378, size: 192, elements: !1431)
!1431 = !{!1432, !1433, !1434, !1435, !1441, !1442}
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1430, file: !411, line: 380, baseType: !105, size: 32)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1430, file: !411, line: 382, baseType: !13, size: 32, offset: 32)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1430, file: !411, line: 384, baseType: !13, size: 32, offset: 64)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1430, file: !411, line: 386, baseType: !1436, size: 32, offset: 96)
!1436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1437, size: 32)
!1437 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !411, line: 351, size: 16, elements: !1438)
!1438 = !{!1439, !1440}
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1437, file: !411, line: 359, baseType: !164, size: 8)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1437, file: !411, line: 364, baseType: !422, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1430, file: !411, line: 388, baseType: !104, size: 32, offset: 128)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1430, file: !411, line: 396, baseType: !425, size: 32, offset: 160)
!1443 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_t", file: !1403, line: 237, baseType: !164)
!1444 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_flags_t", file: !1403, line: 257, baseType: !113)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1422, file: !1403, line: 530, baseType: !1446, size: 32, offset: 32)
!1446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1447, size: 32)
!1447 = !DISubroutineType(types: !1448)
!1448 = !{!108, !1428, !1449}
!1449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1450, size: 32)
!1450 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_value_t", file: !1403, line: 229, baseType: !113)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1422, file: !1403, line: 532, baseType: !1452, size: 32, offset: 64)
!1452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1453, size: 32)
!1453 = !DISubroutineType(types: !1454)
!1454 = !{!108, !1428, !1455, !1450}
!1455 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_pins_t", file: !1403, line: 216, baseType: !113)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1422, file: !1403, line: 535, baseType: !1457, size: 32, offset: 96)
!1457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1458, size: 32)
!1458 = !DISubroutineType(types: !1459)
!1459 = !{!108, !1428, !1455}
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1422, file: !1403, line: 537, baseType: !1457, size: 32, offset: 128)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1422, file: !1403, line: 539, baseType: !1457, size: 32, offset: 160)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1422, file: !1403, line: 541, baseType: !1463, size: 32, offset: 192)
!1463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1464, size: 32)
!1464 = !DISubroutineType(types: !1465)
!1465 = !{!108, !1428, !1443, !1402, !1408}
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1422, file: !1403, line: 544, baseType: !1467, size: 32, offset: 224)
!1467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1468, size: 32)
!1468 = !DISubroutineType(types: !1469)
!1469 = !{!108, !1428, !1470, !422}
!1470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1471, size: 32)
!1471 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1403, line: 478, size: 96, elements: !1472)
!1472 = !{!1473, !1480, !1485}
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1471, file: !1403, line: 482, baseType: !1474, size: 32)
!1474 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1475, line: 33, baseType: !1476)
!1475 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1476 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1475, line: 29, size: 32, elements: !1477)
!1477 = !{!1478}
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1476, file: !1475, line: 30, baseType: !1479, size: 32)
!1479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1476, size: 32)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1471, file: !1403, line: 485, baseType: !1481, size: 32, offset: 32)
!1481 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1403, line: 464, baseType: !1482)
!1482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1483, size: 32)
!1483 = !DISubroutineType(types: !1484)
!1484 = !{null, !1428, !1470, !1455}
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1471, file: !1403, line: 493, baseType: !1455, size: 32, offset: 64)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1422, file: !1403, line: 547, baseType: !1487, size: 32, offset: 256)
!1487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1488, size: 32)
!1488 = !DISubroutineType(types: !1489)
!1489 = !{!113, !1428}
!1490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1491, size: 32)
!1491 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1492)
!1492 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1403, line: 428, size: 32, elements: !1493)
!1493 = !{!1494}
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1492, file: !1403, line: 434, baseType: !1455, size: 32)
!1495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1496, size: 32)
!1496 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1497)
!1497 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1403, line: 441, size: 32, elements: !1498)
!1498 = !{!1499}
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1497, file: !1403, line: 447, baseType: !1455, size: 32)
!1500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1497, size: 32)
!1501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1502, size: 32)
!1502 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !580, line: 583, baseType: !1503)
!1503 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !580, line: 572, size: 320, elements: !1504)
!1504 = !{!1505, !1506, !1507, !1508, !1509, !1510, !1511, !1512, !1513}
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !1503, file: !580, line: 574, baseType: !584, size: 32)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !1503, file: !580, line: 575, baseType: !584, size: 32, offset: 32)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !1503, file: !580, line: 576, baseType: !584, size: 32, offset: 64)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !1503, file: !580, line: 577, baseType: !584, size: 32, offset: 96)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !1503, file: !580, line: 578, baseType: !584, size: 32, offset: 128)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !1503, file: !580, line: 579, baseType: !584, size: 32, offset: 160)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !1503, file: !580, line: 580, baseType: !584, size: 32, offset: 192)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !1503, file: !580, line: 581, baseType: !584, size: 32, offset: 224)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !1503, file: !580, line: 582, baseType: !1514, size: 64, offset: 256)
!1514 = !DICompositeType(tag: DW_TAG_array_type, baseType: !584, size: 64, elements: !689)
!1515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1516, size: 32)
!1516 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCFG_TypeDef", file: !580, line: 596, baseType: !1517)
!1517 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !580, line: 589, size: 288, elements: !1518)
!1518 = !{!1519, !1520, !1521, !1523, !1524}
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "MEMRMP", scope: !1517, file: !580, line: 591, baseType: !584, size: 32)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "PMC", scope: !1517, file: !580, line: 592, baseType: !584, size: 32, offset: 32)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "EXTICR", scope: !1517, file: !580, line: 593, baseType: !1522, size: 128, offset: 64)
!1522 = !DICompositeType(tag: DW_TAG_array_type, baseType: !584, size: 128, elements: !461)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED", scope: !1517, file: !580, line: 594, baseType: !1227, size: 64, offset: 192)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "CMPCR", scope: !1517, file: !580, line: 595, baseType: !584, size: 32, offset: 256)
!1525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1299, size: 32)
!1526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1527, size: 32)
!1527 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1528)
!1528 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !1205, line: 100, size: 224, elements: !1529)
!1529 = !{!1530, !1535, !1536, !1545, !1550, !1555, !1560}
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1528, file: !1205, line: 101, baseType: !1531, size: 32)
!1531 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !1205, line: 76, baseType: !1532)
!1532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1533, size: 32)
!1533 = !DISubroutineType(types: !1534)
!1534 = !{!108, !1428, !1299}
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1528, file: !1205, line: 102, baseType: !1531, size: 32, offset: 32)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1528, file: !1205, line: 103, baseType: !1537, size: 32, offset: 64)
!1537 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !1205, line: 83, baseType: !1538)
!1538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1539, size: 32)
!1539 = !DISubroutineType(types: !1540)
!1540 = !{!108, !1428, !1299, !1541, !104}
!1541 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !1205, line: 72, baseType: !1542)
!1542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1543, size: 32)
!1543 = !DISubroutineType(types: !1544)
!1544 = !{null, !1428, !1299, !104}
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1528, file: !1205, line: 104, baseType: !1546, size: 32, offset: 96)
!1546 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !1205, line: 79, baseType: !1547)
!1547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1548, size: 32)
!1548 = !DISubroutineType(types: !1549)
!1549 = !{!108, !1428, !1299, !1255}
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1528, file: !1205, line: 105, baseType: !1551, size: 32, offset: 128)
!1551 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !1205, line: 88, baseType: !1552)
!1552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1553, size: 32)
!1553 = !DISubroutineType(types: !1554)
!1554 = !{!1204, !1428, !1299}
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1528, file: !1205, line: 106, baseType: !1556, size: 32, offset: 160)
!1556 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !1205, line: 92, baseType: !1557)
!1557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1558, size: 32)
!1558 = !DISubroutineType(types: !1559)
!1559 = !{!108, !1428, !1299, !1325}
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1528, file: !1205, line: 107, baseType: !1561, size: 32, offset: 192)
!1561 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !1205, line: 96, baseType: !1562)
!1562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1563, size: 32)
!1563 = !DISubroutineType(types: !1564)
!1564 = !{!108, !1428, !1299, !104}
!1565 = !{!1566, !1572, !1574, !1584, !1586, !1588, !1590, !1592, !1594, !1596, !1598, !1600, !1602, !1607, !1609, !1611, !1613, !1615, !1617, !1619, !1621, !1623, !1625, !1627, !1629, !1631, !1633, !1635, !1637, !1639, !1641, !1643, !1645, !1647, !1661, !1663, !1665, !1667, !1669, !1671, !1673, !1675, !1677, !1679, !1681, !1683, !1685, !1687, !1689, !1691, !1693, !1695, !1697, !1699, !1701, !1397, !1703, !1705, !1718, !1720, !1722, !1724, !1726, !1728, !1730, !1732, !1734}
!1566 = !DIGlobalVariableExpression(var: !1567, expr: !DIExpression())
!1567 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_100", scope: !1399, file: !1568, line: 762, type: !1569, isLocal: false, isDefinition: true, align: 16)
!1568 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1569 = !DICompositeType(tag: DW_TAG_array_type, baseType: !426, size: 80, elements: !1570)
!1570 = !{!1571}
!1571 = !DISubrange(count: 5)
!1572 = !DIGlobalVariableExpression(var: !1573, expr: !DIExpression())
!1573 = distinct !DIGlobalVariable(name: "__device_dts_ord_100", scope: !1399, file: !1568, line: 762, type: !1429, isLocal: false, isDefinition: true, align: 32)
!1574 = !DIGlobalVariableExpression(var: !1575, expr: !DIExpression())
!1575 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_100", scope: !1399, file: !1568, line: 762, type: !1576, isLocal: true, isDefinition: true, align: 32)
!1576 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1577)
!1577 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !469, line: 51, size: 64, elements: !1578)
!1578 = !{!1579, !1583}
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1577, file: !469, line: 60, baseType: !1580, size: 32)
!1580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1581, size: 32)
!1581 = !DISubroutineType(types: !1582)
!1582 = !{!108, !1428}
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1577, file: !469, line: 65, baseType: !1428, size: 32, offset: 32)
!1584 = !DIGlobalVariableExpression(var: !1585, expr: !DIExpression())
!1585 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_101", scope: !1399, file: !1568, line: 766, type: !1569, isLocal: false, isDefinition: true, align: 16)
!1586 = !DIGlobalVariableExpression(var: !1587, expr: !DIExpression())
!1587 = distinct !DIGlobalVariable(name: "__device_dts_ord_101", scope: !1399, file: !1568, line: 766, type: !1429, isLocal: false, isDefinition: true, align: 32)
!1588 = !DIGlobalVariableExpression(var: !1589, expr: !DIExpression())
!1589 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_101", scope: !1399, file: !1568, line: 766, type: !1576, isLocal: true, isDefinition: true, align: 32)
!1590 = !DIGlobalVariableExpression(var: !1591, expr: !DIExpression())
!1591 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_102", scope: !1399, file: !1568, line: 770, type: !1569, isLocal: false, isDefinition: true, align: 16)
!1592 = !DIGlobalVariableExpression(var: !1593, expr: !DIExpression())
!1593 = distinct !DIGlobalVariable(name: "__device_dts_ord_102", scope: !1399, file: !1568, line: 770, type: !1429, isLocal: false, isDefinition: true, align: 32)
!1594 = !DIGlobalVariableExpression(var: !1595, expr: !DIExpression())
!1595 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_102", scope: !1399, file: !1568, line: 770, type: !1576, isLocal: true, isDefinition: true, align: 32)
!1596 = !DIGlobalVariableExpression(var: !1597, expr: !DIExpression())
!1597 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_103", scope: !1399, file: !1568, line: 774, type: !1569, isLocal: false, isDefinition: true, align: 16)
!1598 = !DIGlobalVariableExpression(var: !1599, expr: !DIExpression())
!1599 = distinct !DIGlobalVariable(name: "__device_dts_ord_103", scope: !1399, file: !1568, line: 774, type: !1429, isLocal: false, isDefinition: true, align: 32)
!1600 = !DIGlobalVariableExpression(var: !1601, expr: !DIExpression())
!1601 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_103", scope: !1399, file: !1568, line: 774, type: !1576, isLocal: true, isDefinition: true, align: 32)
!1602 = !DIGlobalVariableExpression(var: !1603, expr: !DIExpression())
!1603 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_27", scope: !1399, file: !1568, line: 778, type: !1604, isLocal: false, isDefinition: true, align: 16)
!1604 = !DICompositeType(tag: DW_TAG_array_type, baseType: !426, size: 112, elements: !1605)
!1605 = !{!1606}
!1606 = !DISubrange(count: 7)
!1607 = !DIGlobalVariableExpression(var: !1608, expr: !DIExpression())
!1608 = distinct !DIGlobalVariable(name: "__device_dts_ord_27", scope: !1399, file: !1568, line: 778, type: !1429, isLocal: false, isDefinition: true, align: 32)
!1609 = !DIGlobalVariableExpression(var: !1610, expr: !DIExpression())
!1610 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_27", scope: !1399, file: !1568, line: 778, type: !1576, isLocal: true, isDefinition: true, align: 32)
!1611 = !DIGlobalVariableExpression(var: !1612, expr: !DIExpression())
!1612 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_104", scope: !1399, file: !1568, line: 782, type: !1569, isLocal: false, isDefinition: true, align: 16)
!1613 = !DIGlobalVariableExpression(var: !1614, expr: !DIExpression())
!1614 = distinct !DIGlobalVariable(name: "__device_dts_ord_104", scope: !1399, file: !1568, line: 782, type: !1429, isLocal: false, isDefinition: true, align: 32)
!1615 = !DIGlobalVariableExpression(var: !1616, expr: !DIExpression())
!1616 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_104", scope: !1399, file: !1568, line: 782, type: !1576, isLocal: true, isDefinition: true, align: 32)
!1617 = !DIGlobalVariableExpression(var: !1618, expr: !DIExpression())
!1618 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_105", scope: !1399, file: !1568, line: 786, type: !1569, isLocal: false, isDefinition: true, align: 16)
!1619 = !DIGlobalVariableExpression(var: !1620, expr: !DIExpression())
!1620 = distinct !DIGlobalVariable(name: "__device_dts_ord_105", scope: !1399, file: !1568, line: 786, type: !1429, isLocal: false, isDefinition: true, align: 32)
!1621 = !DIGlobalVariableExpression(var: !1622, expr: !DIExpression())
!1622 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_105", scope: !1399, file: !1568, line: 786, type: !1576, isLocal: true, isDefinition: true, align: 32)
!1623 = !DIGlobalVariableExpression(var: !1624, expr: !DIExpression())
!1624 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_106", scope: !1399, file: !1568, line: 790, type: !1569, isLocal: false, isDefinition: true, align: 16)
!1625 = !DIGlobalVariableExpression(var: !1626, expr: !DIExpression())
!1626 = distinct !DIGlobalVariable(name: "__device_dts_ord_106", scope: !1399, file: !1568, line: 790, type: !1429, isLocal: false, isDefinition: true, align: 32)
!1627 = !DIGlobalVariableExpression(var: !1628, expr: !DIExpression())
!1628 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_106", scope: !1399, file: !1568, line: 790, type: !1576, isLocal: true, isDefinition: true, align: 32)
!1629 = !DIGlobalVariableExpression(var: !1630, expr: !DIExpression())
!1630 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_107", scope: !1399, file: !1568, line: 794, type: !1569, isLocal: false, isDefinition: true, align: 16)
!1631 = !DIGlobalVariableExpression(var: !1632, expr: !DIExpression())
!1632 = distinct !DIGlobalVariable(name: "__device_dts_ord_107", scope: !1399, file: !1568, line: 794, type: !1429, isLocal: false, isDefinition: true, align: 32)
!1633 = !DIGlobalVariableExpression(var: !1634, expr: !DIExpression())
!1634 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_107", scope: !1399, file: !1568, line: 794, type: !1576, isLocal: true, isDefinition: true, align: 32)
!1635 = !DIGlobalVariableExpression(var: !1636, expr: !DIExpression())
!1636 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_108", scope: !1399, file: !1568, line: 798, type: !1569, isLocal: false, isDefinition: true, align: 16)
!1637 = !DIGlobalVariableExpression(var: !1638, expr: !DIExpression())
!1638 = distinct !DIGlobalVariable(name: "__device_dts_ord_108", scope: !1399, file: !1568, line: 798, type: !1429, isLocal: false, isDefinition: true, align: 32)
!1639 = !DIGlobalVariableExpression(var: !1640, expr: !DIExpression())
!1640 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_108", scope: !1399, file: !1568, line: 798, type: !1576, isLocal: true, isDefinition: true, align: 32)
!1641 = !DIGlobalVariableExpression(var: !1642, expr: !DIExpression())
!1642 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_109", scope: !1399, file: !1568, line: 802, type: !1569, isLocal: false, isDefinition: true, align: 16)
!1643 = !DIGlobalVariableExpression(var: !1644, expr: !DIExpression())
!1644 = distinct !DIGlobalVariable(name: "__device_dts_ord_109", scope: !1399, file: !1568, line: 802, type: !1429, isLocal: false, isDefinition: true, align: 32)
!1645 = !DIGlobalVariableExpression(var: !1646, expr: !DIExpression())
!1646 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_109", scope: !1399, file: !1568, line: 802, type: !1576, isLocal: true, isDefinition: true, align: 32)
!1647 = !DIGlobalVariableExpression(var: !1648, expr: !DIExpression())
!1648 = distinct !DIGlobalVariable(name: "gpio_stm32_data_a", scope: !1399, file: !1568, line: 762, type: !1649, isLocal: true, isDefinition: true)
!1649 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_data", file: !1650, line: 237, size: 128, elements: !1651)
!1650 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1651 = !{!1652, !1653, !1654}
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1649, file: !1650, line: 239, baseType: !1497, size: 32)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1649, file: !1650, line: 241, baseType: !1428, size: 32, offset: 32)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1649, file: !1650, line: 243, baseType: !1655, size: 64, offset: 64)
!1655 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !1475, line: 40, baseType: !1656)
!1656 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !1475, line: 35, size: 64, elements: !1657)
!1657 = !{!1658, !1660}
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1656, file: !1475, line: 36, baseType: !1659, size: 32)
!1659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1474, size: 32)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1656, file: !1475, line: 37, baseType: !1659, size: 32, offset: 32)
!1661 = !DIGlobalVariableExpression(var: !1662, expr: !DIExpression())
!1662 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_100", scope: !1399, file: !1568, line: 762, type: !1437, isLocal: true, isDefinition: true, align: 8)
!1663 = !DIGlobalVariableExpression(var: !1664, expr: !DIExpression())
!1664 = distinct !DIGlobalVariable(name: "gpio_stm32_data_b", scope: !1399, file: !1568, line: 766, type: !1649, isLocal: true, isDefinition: true)
!1665 = !DIGlobalVariableExpression(var: !1666, expr: !DIExpression())
!1666 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_101", scope: !1399, file: !1568, line: 766, type: !1437, isLocal: true, isDefinition: true, align: 8)
!1667 = !DIGlobalVariableExpression(var: !1668, expr: !DIExpression())
!1668 = distinct !DIGlobalVariable(name: "gpio_stm32_data_c", scope: !1399, file: !1568, line: 770, type: !1649, isLocal: true, isDefinition: true)
!1669 = !DIGlobalVariableExpression(var: !1670, expr: !DIExpression())
!1670 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_102", scope: !1399, file: !1568, line: 770, type: !1437, isLocal: true, isDefinition: true, align: 8)
!1671 = !DIGlobalVariableExpression(var: !1672, expr: !DIExpression())
!1672 = distinct !DIGlobalVariable(name: "gpio_stm32_data_d", scope: !1399, file: !1568, line: 774, type: !1649, isLocal: true, isDefinition: true)
!1673 = !DIGlobalVariableExpression(var: !1674, expr: !DIExpression())
!1674 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_103", scope: !1399, file: !1568, line: 774, type: !1437, isLocal: true, isDefinition: true, align: 8)
!1675 = !DIGlobalVariableExpression(var: !1676, expr: !DIExpression())
!1676 = distinct !DIGlobalVariable(name: "gpio_stm32_data_e", scope: !1399, file: !1568, line: 778, type: !1649, isLocal: true, isDefinition: true)
!1677 = !DIGlobalVariableExpression(var: !1678, expr: !DIExpression())
!1678 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_27", scope: !1399, file: !1568, line: 778, type: !1437, isLocal: true, isDefinition: true, align: 8)
!1679 = !DIGlobalVariableExpression(var: !1680, expr: !DIExpression())
!1680 = distinct !DIGlobalVariable(name: "gpio_stm32_data_f", scope: !1399, file: !1568, line: 782, type: !1649, isLocal: true, isDefinition: true)
!1681 = !DIGlobalVariableExpression(var: !1682, expr: !DIExpression())
!1682 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_104", scope: !1399, file: !1568, line: 782, type: !1437, isLocal: true, isDefinition: true, align: 8)
!1683 = !DIGlobalVariableExpression(var: !1684, expr: !DIExpression())
!1684 = distinct !DIGlobalVariable(name: "gpio_stm32_data_g", scope: !1399, file: !1568, line: 786, type: !1649, isLocal: true, isDefinition: true)
!1685 = !DIGlobalVariableExpression(var: !1686, expr: !DIExpression())
!1686 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_105", scope: !1399, file: !1568, line: 786, type: !1437, isLocal: true, isDefinition: true, align: 8)
!1687 = !DIGlobalVariableExpression(var: !1688, expr: !DIExpression())
!1688 = distinct !DIGlobalVariable(name: "gpio_stm32_data_h", scope: !1399, file: !1568, line: 790, type: !1649, isLocal: true, isDefinition: true)
!1689 = !DIGlobalVariableExpression(var: !1690, expr: !DIExpression())
!1690 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_106", scope: !1399, file: !1568, line: 790, type: !1437, isLocal: true, isDefinition: true, align: 8)
!1691 = !DIGlobalVariableExpression(var: !1692, expr: !DIExpression())
!1692 = distinct !DIGlobalVariable(name: "gpio_stm32_data_i", scope: !1399, file: !1568, line: 794, type: !1649, isLocal: true, isDefinition: true)
!1693 = !DIGlobalVariableExpression(var: !1694, expr: !DIExpression())
!1694 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_107", scope: !1399, file: !1568, line: 794, type: !1437, isLocal: true, isDefinition: true, align: 8)
!1695 = !DIGlobalVariableExpression(var: !1696, expr: !DIExpression())
!1696 = distinct !DIGlobalVariable(name: "gpio_stm32_data_j", scope: !1399, file: !1568, line: 798, type: !1649, isLocal: true, isDefinition: true)
!1697 = !DIGlobalVariableExpression(var: !1698, expr: !DIExpression())
!1698 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_108", scope: !1399, file: !1568, line: 798, type: !1437, isLocal: true, isDefinition: true, align: 8)
!1699 = !DIGlobalVariableExpression(var: !1700, expr: !DIExpression())
!1700 = distinct !DIGlobalVariable(name: "gpio_stm32_data_k", scope: !1399, file: !1568, line: 802, type: !1649, isLocal: true, isDefinition: true)
!1701 = !DIGlobalVariableExpression(var: !1702, expr: !DIExpression())
!1702 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_109", scope: !1399, file: !1568, line: 802, type: !1437, isLocal: true, isDefinition: true, align: 8)
!1703 = !DIGlobalVariableExpression(var: !1704, expr: !DIExpression())
!1704 = distinct !DIGlobalVariable(name: "gpio_stm32_driver", scope: !1399, file: !1568, line: 656, type: !1421, isLocal: true, isDefinition: true)
!1705 = !DIGlobalVariableExpression(var: !1706, expr: !DIExpression())
!1706 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_b", scope: !1399, file: !1568, line: 766, type: !1707, isLocal: true, isDefinition: true)
!1707 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1708)
!1708 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_config", file: !1650, line: 224, size: 160, elements: !1709)
!1709 = !{!1710, !1711, !1712, !1713}
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1708, file: !1650, line: 226, baseType: !1492, size: 32)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1708, file: !1650, line: 228, baseType: !1255, size: 32, offset: 32)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !1708, file: !1650, line: 230, baseType: !108, size: 32, offset: 64)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1708, file: !1650, line: 231, baseType: !1714, size: 64, offset: 96)
!1714 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !1251, line: 343, size: 64, elements: !1715)
!1715 = !{!1716, !1717}
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1714, file: !1251, line: 344, baseType: !113, size: 32)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1714, file: !1251, line: 345, baseType: !113, size: 32, offset: 32)
!1718 = !DIGlobalVariableExpression(var: !1719, expr: !DIExpression())
!1719 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_c", scope: !1399, file: !1568, line: 770, type: !1707, isLocal: true, isDefinition: true)
!1720 = !DIGlobalVariableExpression(var: !1721, expr: !DIExpression())
!1721 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_d", scope: !1399, file: !1568, line: 774, type: !1707, isLocal: true, isDefinition: true)
!1722 = !DIGlobalVariableExpression(var: !1723, expr: !DIExpression())
!1723 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_e", scope: !1399, file: !1568, line: 778, type: !1707, isLocal: true, isDefinition: true)
!1724 = !DIGlobalVariableExpression(var: !1725, expr: !DIExpression())
!1725 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_f", scope: !1399, file: !1568, line: 782, type: !1707, isLocal: true, isDefinition: true)
!1726 = !DIGlobalVariableExpression(var: !1727, expr: !DIExpression())
!1727 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_g", scope: !1399, file: !1568, line: 786, type: !1707, isLocal: true, isDefinition: true)
!1728 = !DIGlobalVariableExpression(var: !1729, expr: !DIExpression())
!1729 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_h", scope: !1399, file: !1568, line: 790, type: !1707, isLocal: true, isDefinition: true)
!1730 = !DIGlobalVariableExpression(var: !1731, expr: !DIExpression())
!1731 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_i", scope: !1399, file: !1568, line: 794, type: !1707, isLocal: true, isDefinition: true)
!1732 = !DIGlobalVariableExpression(var: !1733, expr: !DIExpression())
!1733 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_j", scope: !1399, file: !1568, line: 798, type: !1707, isLocal: true, isDefinition: true)
!1734 = !DIGlobalVariableExpression(var: !1735, expr: !DIExpression())
!1735 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_k", scope: !1399, file: !1568, line: 802, type: !1707, isLocal: true, isDefinition: true)
!1736 = !DIGlobalVariableExpression(var: !1737, expr: !DIExpression())
!1737 = distinct !DIGlobalVariable(name: "log_const_uart_stm32", scope: !1738, file: !1877, line: 44, type: !2033, isLocal: false, isDefinition: true)
!1738 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1739, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1740, retainedTypes: !1773, globals: !1874, splitDebugInlining: false, nameTableKind: None)
!1739 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/sensor_batch_processing")
!1740 = !{!30, !1741, !1748, !1755, !1762, !1768, !1204}
!1741 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_rx_stop_reason", file: !1339, line: 47, baseType: !32, size: 32, elements: !1742)
!1742 = !{!1743, !1744, !1745, !1746, !1747}
!1743 = !DIEnumerator(name: "UART_ERROR_OVERRUN", value: 1)
!1744 = !DIEnumerator(name: "UART_ERROR_PARITY", value: 2)
!1745 = !DIEnumerator(name: "UART_ERROR_FRAMING", value: 4)
!1746 = !DIEnumerator(name: "UART_BREAK", value: 8)
!1747 = !DIEnumerator(name: "UART_ERROR_COLLISION", value: 16)
!1748 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_parity", file: !1339, line: 75, baseType: !32, size: 32, elements: !1749)
!1749 = !{!1750, !1751, !1752, !1753, !1754}
!1750 = !DIEnumerator(name: "UART_CFG_PARITY_NONE", value: 0)
!1751 = !DIEnumerator(name: "UART_CFG_PARITY_ODD", value: 1)
!1752 = !DIEnumerator(name: "UART_CFG_PARITY_EVEN", value: 2)
!1753 = !DIEnumerator(name: "UART_CFG_PARITY_MARK", value: 3)
!1754 = !DIEnumerator(name: "UART_CFG_PARITY_SPACE", value: 4)
!1755 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_data_bits", file: !1339, line: 92, baseType: !32, size: 32, elements: !1756)
!1756 = !{!1757, !1758, !1759, !1760, !1761}
!1757 = !DIEnumerator(name: "UART_CFG_DATA_BITS_5", value: 0)
!1758 = !DIEnumerator(name: "UART_CFG_DATA_BITS_6", value: 1)
!1759 = !DIEnumerator(name: "UART_CFG_DATA_BITS_7", value: 2)
!1760 = !DIEnumerator(name: "UART_CFG_DATA_BITS_8", value: 3)
!1761 = !DIEnumerator(name: "UART_CFG_DATA_BITS_9", value: 4)
!1762 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_stop_bits", file: !1339, line: 84, baseType: !32, size: 32, elements: !1763)
!1763 = !{!1764, !1765, !1766, !1767}
!1764 = !DIEnumerator(name: "UART_CFG_STOP_BITS_0_5", value: 0)
!1765 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1", value: 1)
!1766 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1_5", value: 2)
!1767 = !DIEnumerator(name: "UART_CFG_STOP_BITS_2", value: 3)
!1768 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_flow_control", file: !1339, line: 107, baseType: !32, size: 32, elements: !1769)
!1769 = !{!1770, !1771, !1772}
!1770 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_NONE", value: 0)
!1771 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_RTS_CTS", value: 1)
!1772 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_DTR_DSR", value: 2)
!1773 = !{!104, !108, !1774, !165, !164, !1823, !113, !1299, !1834, !168, !114, !1873}
!1774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1775, size: 32)
!1775 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1776)
!1776 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !1339, line: 336, size: 160, elements: !1777)
!1777 = !{!1778, !1797, !1801, !1805, !1818}
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1776, file: !1339, line: 365, baseType: !1779, size: 32)
!1779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1780, size: 32)
!1780 = !DISubroutineType(types: !1781)
!1781 = !{!108, !1782, !1360}
!1782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1783, size: 32)
!1783 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1784)
!1784 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !411, line: 378, size: 192, elements: !1785)
!1785 = !{!1786, !1787, !1788, !1789, !1795, !1796}
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1784, file: !411, line: 380, baseType: !105, size: 32)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1784, file: !411, line: 382, baseType: !13, size: 32, offset: 32)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1784, file: !411, line: 384, baseType: !13, size: 32, offset: 64)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1784, file: !411, line: 386, baseType: !1790, size: 32, offset: 96)
!1790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1791, size: 32)
!1791 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !411, line: 351, size: 16, elements: !1792)
!1792 = !{!1793, !1794}
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1791, file: !411, line: 359, baseType: !164, size: 8)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1791, file: !411, line: 364, baseType: !422, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1784, file: !411, line: 388, baseType: !104, size: 32, offset: 128)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1784, file: !411, line: 396, baseType: !425, size: 32, offset: 160)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1776, file: !1339, line: 366, baseType: !1798, size: 32, offset: 32)
!1798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1799, size: 32)
!1799 = !DISubroutineType(types: !1800)
!1800 = !{null, !1782, !165}
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1776, file: !1339, line: 374, baseType: !1802, size: 32, offset: 64)
!1802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1803, size: 32)
!1803 = !DISubroutineType(types: !1804)
!1804 = !{!108, !1782}
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1776, file: !1339, line: 377, baseType: !1806, size: 32, offset: 96)
!1806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1807, size: 32)
!1807 = !DISubroutineType(types: !1808)
!1808 = !{!108, !1782, !1809}
!1809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1810, size: 32)
!1810 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1811)
!1811 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !1339, line: 122, size: 64, elements: !1812)
!1812 = !{!1813, !1814, !1815, !1816, !1817}
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1811, file: !1339, line: 123, baseType: !113, size: 32)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1811, file: !1339, line: 124, baseType: !164, size: 8, offset: 32)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1811, file: !1339, line: 125, baseType: !164, size: 8, offset: 40)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1811, file: !1339, line: 126, baseType: !164, size: 8, offset: 48)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1811, file: !1339, line: 127, baseType: !164, size: 8, offset: 56)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1776, file: !1339, line: 379, baseType: !1819, size: 32, offset: 128)
!1819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1820, size: 32)
!1820 = !DISubroutineType(types: !1821)
!1821 = !{!108, !1782, !1822}
!1822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1811, size: 32)
!1823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1824, size: 32)
!1824 = !DIDerivedType(tag: DW_TAG_typedef, name: "USART_TypeDef", file: !580, line: 836, baseType: !1825)
!1825 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !580, line: 827, size: 224, elements: !1826)
!1826 = !{!1827, !1828, !1829, !1830, !1831, !1832, !1833}
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !1825, file: !580, line: 829, baseType: !584, size: 32)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !1825, file: !580, line: 830, baseType: !584, size: 32, offset: 32)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !1825, file: !580, line: 831, baseType: !584, size: 32, offset: 64)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "CR1", scope: !1825, file: !580, line: 832, baseType: !584, size: 32, offset: 96)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "CR2", scope: !1825, file: !580, line: 833, baseType: !584, size: 32, offset: 128)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "CR3", scope: !1825, file: !580, line: 834, baseType: !584, size: 32, offset: 160)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "GTPR", scope: !1825, file: !580, line: 835, baseType: !584, size: 32, offset: 192)
!1834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1835, size: 32)
!1835 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1836)
!1836 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !1205, line: 100, size: 224, elements: !1837)
!1837 = !{!1838, !1843, !1844, !1853, !1858, !1863, !1868}
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1836, file: !1205, line: 101, baseType: !1839, size: 32)
!1839 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !1205, line: 76, baseType: !1840)
!1840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1841, size: 32)
!1841 = !DISubroutineType(types: !1842)
!1842 = !{!108, !1782, !1299}
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1836, file: !1205, line: 102, baseType: !1839, size: 32, offset: 32)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1836, file: !1205, line: 103, baseType: !1845, size: 32, offset: 64)
!1845 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !1205, line: 83, baseType: !1846)
!1846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1847, size: 32)
!1847 = !DISubroutineType(types: !1848)
!1848 = !{!108, !1782, !1299, !1849, !104}
!1849 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !1205, line: 72, baseType: !1850)
!1850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1851, size: 32)
!1851 = !DISubroutineType(types: !1852)
!1852 = !{null, !1782, !1299, !104}
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1836, file: !1205, line: 104, baseType: !1854, size: 32, offset: 96)
!1854 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !1205, line: 79, baseType: !1855)
!1855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1856, size: 32)
!1856 = !DISubroutineType(types: !1857)
!1857 = !{!108, !1782, !1299, !1255}
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1836, file: !1205, line: 105, baseType: !1859, size: 32, offset: 128)
!1859 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !1205, line: 88, baseType: !1860)
!1860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1861, size: 32)
!1861 = !DISubroutineType(types: !1862)
!1862 = !{!1204, !1782, !1299}
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1836, file: !1205, line: 106, baseType: !1864, size: 32, offset: 160)
!1864 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !1205, line: 92, baseType: !1865)
!1865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1866, size: 32)
!1866 = !DISubroutineType(types: !1867)
!1867 = !{!108, !1782, !1299, !1325}
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1836, file: !1205, line: 107, baseType: !1869, size: 32, offset: 192)
!1869 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !1205, line: 96, baseType: !1870)
!1870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1871, size: 32)
!1871 = !DISubroutineType(types: !1872)
!1872 = !{!108, !1782, !1299, !104}
!1873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !584, size: 32)
!1874 = !{!1736, !1875, !1879, !1881, !1888, !1890, !1892, !1894, !1896, !1898, !1900, !1902, !1904, !1906, !1908, !1910, !1912, !1914, !1916, !1918, !1920, !1922, !1966, !1969, !1971, !1974, !1977, !1979, !1985, !1987, !1989, !1991, !1993, !1995, !1997, !1999, !2001, !2003, !2005, !2007, !2009, !2011, !2013, !2015, !2017, !2019, !2021, !2023, !2025, !2027, !2029, !2031}
!1875 = !DIGlobalVariableExpression(var: !1876, expr: !DIExpression())
!1876 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_66", scope: !1738, file: !1877, line: 1914, type: !1878, isLocal: false, isDefinition: true, align: 16)
!1877 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1878 = !DICompositeType(tag: DW_TAG_array_type, baseType: !426, size: 128, elements: !244)
!1879 = !DIGlobalVariableExpression(var: !1880, expr: !DIExpression())
!1880 = distinct !DIGlobalVariable(name: "__device_dts_ord_66", scope: !1738, file: !1877, line: 1914, type: !1783, isLocal: false, isDefinition: true, align: 32)
!1881 = !DIGlobalVariableExpression(var: !1882, expr: !DIExpression())
!1882 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_66", scope: !1738, file: !1877, line: 1914, type: !1883, isLocal: true, isDefinition: true, align: 32)
!1883 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1884)
!1884 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !469, line: 51, size: 64, elements: !1885)
!1885 = !{!1886, !1887}
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1884, file: !469, line: 60, baseType: !1802, size: 32)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1884, file: !469, line: 65, baseType: !1782, size: 32, offset: 32)
!1888 = !DIGlobalVariableExpression(var: !1889, expr: !DIExpression())
!1889 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_52", scope: !1738, file: !1877, line: 1914, type: !1878, isLocal: false, isDefinition: true, align: 16)
!1890 = !DIGlobalVariableExpression(var: !1891, expr: !DIExpression())
!1891 = distinct !DIGlobalVariable(name: "__device_dts_ord_52", scope: !1738, file: !1877, line: 1914, type: !1783, isLocal: false, isDefinition: true, align: 32)
!1892 = !DIGlobalVariableExpression(var: !1893, expr: !DIExpression())
!1893 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_52", scope: !1738, file: !1877, line: 1914, type: !1883, isLocal: true, isDefinition: true, align: 32)
!1894 = !DIGlobalVariableExpression(var: !1895, expr: !DIExpression())
!1895 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_55", scope: !1738, file: !1877, line: 1914, type: !1878, isLocal: false, isDefinition: true, align: 16)
!1896 = !DIGlobalVariableExpression(var: !1897, expr: !DIExpression())
!1897 = distinct !DIGlobalVariable(name: "__device_dts_ord_55", scope: !1738, file: !1877, line: 1914, type: !1783, isLocal: false, isDefinition: true, align: 32)
!1898 = !DIGlobalVariableExpression(var: !1899, expr: !DIExpression())
!1899 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_55", scope: !1738, file: !1877, line: 1914, type: !1883, isLocal: true, isDefinition: true, align: 32)
!1900 = !DIGlobalVariableExpression(var: !1901, expr: !DIExpression())
!1901 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_60", scope: !1738, file: !1877, line: 1914, type: !1878, isLocal: false, isDefinition: true, align: 16)
!1902 = !DIGlobalVariableExpression(var: !1903, expr: !DIExpression())
!1903 = distinct !DIGlobalVariable(name: "__device_dts_ord_60", scope: !1738, file: !1877, line: 1914, type: !1783, isLocal: false, isDefinition: true, align: 32)
!1904 = !DIGlobalVariableExpression(var: !1905, expr: !DIExpression())
!1905 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_60", scope: !1738, file: !1877, line: 1914, type: !1883, isLocal: true, isDefinition: true, align: 32)
!1906 = !DIGlobalVariableExpression(var: !1907, expr: !DIExpression())
!1907 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_63", scope: !1738, file: !1877, line: 1914, type: !1878, isLocal: false, isDefinition: true, align: 16)
!1908 = !DIGlobalVariableExpression(var: !1909, expr: !DIExpression())
!1909 = distinct !DIGlobalVariable(name: "__device_dts_ord_63", scope: !1738, file: !1877, line: 1914, type: !1783, isLocal: false, isDefinition: true, align: 32)
!1910 = !DIGlobalVariableExpression(var: !1911, expr: !DIExpression())
!1911 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_63", scope: !1738, file: !1877, line: 1914, type: !1883, isLocal: true, isDefinition: true, align: 32)
!1912 = !DIGlobalVariableExpression(var: !1913, expr: !DIExpression())
!1913 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_66", scope: !1738, file: !1877, line: 1914, type: !1791, isLocal: true, isDefinition: true, align: 8)
!1914 = !DIGlobalVariableExpression(var: !1915, expr: !DIExpression())
!1915 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_52", scope: !1738, file: !1877, line: 1914, type: !1791, isLocal: true, isDefinition: true, align: 8)
!1916 = !DIGlobalVariableExpression(var: !1917, expr: !DIExpression())
!1917 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_55", scope: !1738, file: !1877, line: 1914, type: !1791, isLocal: true, isDefinition: true, align: 8)
!1918 = !DIGlobalVariableExpression(var: !1919, expr: !DIExpression())
!1919 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_60", scope: !1738, file: !1877, line: 1914, type: !1791, isLocal: true, isDefinition: true, align: 8)
!1920 = !DIGlobalVariableExpression(var: !1921, expr: !DIExpression())
!1921 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_63", scope: !1738, file: !1877, line: 1914, type: !1791, isLocal: true, isDefinition: true, align: 8)
!1922 = !DIGlobalVariableExpression(var: !1923, expr: !DIExpression())
!1923 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_0", scope: !1738, file: !1877, line: 1914, type: !1924, isLocal: true, isDefinition: true)
!1924 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1925)
!1925 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_config", file: !1926, line: 22, size: 224, elements: !1927)
!1926 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1927 = !{!1928, !1929, !1936, !1937, !1938, !1939, !1940, !1941, !1942, !1943}
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "usart", scope: !1925, file: !1926, line: 24, baseType: !1823, size: 32)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1925, file: !1926, line: 26, baseType: !1930, size: 32, offset: 32)
!1930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1931, size: 32)
!1931 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1932)
!1932 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !1251, line: 343, size: 64, elements: !1933)
!1933 = !{!1934, !1935}
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1932, file: !1251, line: 344, baseType: !113, size: 32)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1932, file: !1251, line: 345, baseType: !113, size: 32, offset: 32)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "pclk_len", scope: !1925, file: !1926, line: 28, baseType: !439, size: 32, offset: 64)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "hw_flow_control", scope: !1925, file: !1926, line: 30, baseType: !422, size: 8, offset: 96)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1925, file: !1926, line: 32, baseType: !108, size: 32, offset: 128)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "single_wire", scope: !1925, file: !1926, line: 34, baseType: !422, size: 8, offset: 160)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "tx_rx_swap", scope: !1925, file: !1926, line: 36, baseType: !422, size: 8, offset: 168)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "rx_invert", scope: !1925, file: !1926, line: 38, baseType: !422, size: 8, offset: 176)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "tx_invert", scope: !1925, file: !1926, line: 40, baseType: !422, size: 8, offset: 184)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "pcfg", scope: !1925, file: !1926, line: 41, baseType: !1944, size: 32, offset: 192)
!1944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1945, size: 32)
!1945 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1946)
!1946 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1947, line: 60, size: 64, elements: !1948)
!1947 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1948 = !{!1949, !1965}
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1946, file: !1947, line: 69, baseType: !1950, size: 32)
!1950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1951, size: 32)
!1951 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1952)
!1952 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1947, line: 50, size: 64, elements: !1953)
!1953 = !{!1954, !1963, !1964}
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !1952, file: !1947, line: 52, baseType: !1955, size: 32)
!1955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1956, size: 32)
!1956 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1957)
!1957 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1958, line: 37, baseType: !1959)
!1958 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/pinctrl_soc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1959 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1958, line: 32, size: 64, elements: !1960)
!1960 = !{!1961, !1962}
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !1959, file: !1958, line: 34, baseType: !113, size: 32)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !1959, file: !1958, line: 36, baseType: !113, size: 32, offset: 32)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !1952, file: !1947, line: 54, baseType: !164, size: 8, offset: 32)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1952, file: !1947, line: 56, baseType: !164, size: 8, offset: 40)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !1946, file: !1947, line: 71, baseType: !164, size: 8, offset: 32)
!1966 = !DIGlobalVariableExpression(var: !1967, expr: !DIExpression())
!1967 = distinct !DIGlobalVariable(name: "pclken_0", scope: !1738, file: !1877, line: 1914, type: !1968, isLocal: true, isDefinition: true)
!1968 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1931, size: 64, elements: !784)
!1969 = !DIGlobalVariableExpression(var: !1970, expr: !DIExpression())
!1970 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_66", scope: !1738, file: !1877, line: 1914, type: !1945, isLocal: true, isDefinition: true)
!1971 = !DIGlobalVariableExpression(var: !1972, expr: !DIExpression())
!1972 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_66", scope: !1738, file: !1877, line: 1914, type: !1973, isLocal: true, isDefinition: true)
!1973 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1951, size: 64, elements: !784)
!1974 = !DIGlobalVariableExpression(var: !1975, expr: !DIExpression())
!1975 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_66", scope: !1738, file: !1877, line: 1914, type: !1976, isLocal: true, isDefinition: true)
!1976 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1956, size: 128, elements: !689)
!1977 = !DIGlobalVariableExpression(var: !1978, expr: !DIExpression())
!1978 = distinct !DIGlobalVariable(name: "uart_stm32_driver_api", scope: !1738, file: !1877, line: 1539, type: !1775, isLocal: true, isDefinition: true)
!1979 = !DIGlobalVariableExpression(var: !1980, expr: !DIExpression())
!1980 = distinct !DIGlobalVariable(name: "uart_stm32_data_0", scope: !1738, file: !1877, line: 1914, type: !1981, isLocal: true, isDefinition: true)
!1981 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_data", file: !1926, line: 74, size: 64, elements: !1982)
!1982 = !{!1983, !1984}
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !1981, file: !1926, line: 76, baseType: !113, size: 32)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !1981, file: !1926, line: 78, baseType: !1782, size: 32, offset: 32)
!1985 = !DIGlobalVariableExpression(var: !1986, expr: !DIExpression())
!1986 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_1", scope: !1738, file: !1877, line: 1914, type: !1924, isLocal: true, isDefinition: true)
!1987 = !DIGlobalVariableExpression(var: !1988, expr: !DIExpression())
!1988 = distinct !DIGlobalVariable(name: "pclken_1", scope: !1738, file: !1877, line: 1914, type: !1968, isLocal: true, isDefinition: true)
!1989 = !DIGlobalVariableExpression(var: !1990, expr: !DIExpression())
!1990 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_52", scope: !1738, file: !1877, line: 1914, type: !1945, isLocal: true, isDefinition: true)
!1991 = !DIGlobalVariableExpression(var: !1992, expr: !DIExpression())
!1992 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_52", scope: !1738, file: !1877, line: 1914, type: !1973, isLocal: true, isDefinition: true)
!1993 = !DIGlobalVariableExpression(var: !1994, expr: !DIExpression())
!1994 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_52", scope: !1738, file: !1877, line: 1914, type: !1976, isLocal: true, isDefinition: true)
!1995 = !DIGlobalVariableExpression(var: !1996, expr: !DIExpression())
!1996 = distinct !DIGlobalVariable(name: "uart_stm32_data_1", scope: !1738, file: !1877, line: 1914, type: !1981, isLocal: true, isDefinition: true)
!1997 = !DIGlobalVariableExpression(var: !1998, expr: !DIExpression())
!1998 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_2", scope: !1738, file: !1877, line: 1914, type: !1924, isLocal: true, isDefinition: true)
!1999 = !DIGlobalVariableExpression(var: !2000, expr: !DIExpression())
!2000 = distinct !DIGlobalVariable(name: "pclken_2", scope: !1738, file: !1877, line: 1914, type: !1968, isLocal: true, isDefinition: true)
!2001 = !DIGlobalVariableExpression(var: !2002, expr: !DIExpression())
!2002 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_55", scope: !1738, file: !1877, line: 1914, type: !1945, isLocal: true, isDefinition: true)
!2003 = !DIGlobalVariableExpression(var: !2004, expr: !DIExpression())
!2004 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_55", scope: !1738, file: !1877, line: 1914, type: !1973, isLocal: true, isDefinition: true)
!2005 = !DIGlobalVariableExpression(var: !2006, expr: !DIExpression())
!2006 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_55", scope: !1738, file: !1877, line: 1914, type: !1976, isLocal: true, isDefinition: true)
!2007 = !DIGlobalVariableExpression(var: !2008, expr: !DIExpression())
!2008 = distinct !DIGlobalVariable(name: "uart_stm32_data_2", scope: !1738, file: !1877, line: 1914, type: !1981, isLocal: true, isDefinition: true)
!2009 = !DIGlobalVariableExpression(var: !2010, expr: !DIExpression())
!2010 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_3", scope: !1738, file: !1877, line: 1914, type: !1924, isLocal: true, isDefinition: true)
!2011 = !DIGlobalVariableExpression(var: !2012, expr: !DIExpression())
!2012 = distinct !DIGlobalVariable(name: "pclken_3", scope: !1738, file: !1877, line: 1914, type: !1968, isLocal: true, isDefinition: true)
!2013 = !DIGlobalVariableExpression(var: !2014, expr: !DIExpression())
!2014 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_60", scope: !1738, file: !1877, line: 1914, type: !1945, isLocal: true, isDefinition: true)
!2015 = !DIGlobalVariableExpression(var: !2016, expr: !DIExpression())
!2016 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_60", scope: !1738, file: !1877, line: 1914, type: !1973, isLocal: true, isDefinition: true)
!2017 = !DIGlobalVariableExpression(var: !2018, expr: !DIExpression())
!2018 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_60", scope: !1738, file: !1877, line: 1914, type: !1976, isLocal: true, isDefinition: true)
!2019 = !DIGlobalVariableExpression(var: !2020, expr: !DIExpression())
!2020 = distinct !DIGlobalVariable(name: "uart_stm32_data_3", scope: !1738, file: !1877, line: 1914, type: !1981, isLocal: true, isDefinition: true)
!2021 = !DIGlobalVariableExpression(var: !2022, expr: !DIExpression())
!2022 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_4", scope: !1738, file: !1877, line: 1914, type: !1924, isLocal: true, isDefinition: true)
!2023 = !DIGlobalVariableExpression(var: !2024, expr: !DIExpression())
!2024 = distinct !DIGlobalVariable(name: "pclken_4", scope: !1738, file: !1877, line: 1914, type: !1968, isLocal: true, isDefinition: true)
!2025 = !DIGlobalVariableExpression(var: !2026, expr: !DIExpression())
!2026 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_63", scope: !1738, file: !1877, line: 1914, type: !1945, isLocal: true, isDefinition: true)
!2027 = !DIGlobalVariableExpression(var: !2028, expr: !DIExpression())
!2028 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_63", scope: !1738, file: !1877, line: 1914, type: !1973, isLocal: true, isDefinition: true)
!2029 = !DIGlobalVariableExpression(var: !2030, expr: !DIExpression())
!2030 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_63", scope: !1738, file: !1877, line: 1914, type: !1976, isLocal: true, isDefinition: true)
!2031 = !DIGlobalVariableExpression(var: !2032, expr: !DIExpression())
!2032 = distinct !DIGlobalVariable(name: "uart_stm32_data_4", scope: !1738, file: !1877, line: 1914, type: !1981, isLocal: true, isDefinition: true)
!2033 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2034)
!2034 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !254, line: 16, size: 64, elements: !2035)
!2035 = !{!2036, !2037}
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2034, file: !254, line: 17, baseType: !105, size: 32)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2034, file: !254, line: 18, baseType: !164, size: 8, offset: 32)
!2038 = !DIGlobalVariableExpression(var: !2039, expr: !DIExpression())
!2039 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !2040, file: !2118, line: 65, type: !584, isLocal: true, isDefinition: true)
!2040 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2041, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2042, retainedTypes: !2043, globals: !2115, splitDebugInlining: false, nameTableKind: None)
!2041 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/sensor_batch_processing")
!2042 = !{!999}
!2043 = !{!109, !2044, !220, !164, !113, !2052, !2083}
!2044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2045, size: 32)
!2045 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !802, line: 770, baseType: !2046)
!2046 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !802, line: 764, size: 128, elements: !2047)
!2047 = !{!2048, !2049, !2050, !2051}
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !2046, file: !802, line: 766, baseType: !584, size: 32)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !2046, file: !802, line: 767, baseType: !584, size: 32, offset: 32)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !2046, file: !802, line: 768, baseType: !584, size: 32, offset: 64)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !2046, file: !802, line: 769, baseType: !806, size: 32, offset: 96)
!2052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2053, size: 32)
!2053 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !802, line: 426, baseType: !2054)
!2054 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !802, line: 411, size: 28704, elements: !2055)
!2055 = !{!2056, !2058, !2062, !2063, !2064, !2065, !2066, !2067, !2068, !2069, !2073, !2078, !2082}
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2054, file: !802, line: 413, baseType: !2057, size: 256)
!2057 = !DICompositeType(tag: DW_TAG_array_type, baseType: !584, size: 256, elements: !244)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2054, file: !802, line: 414, baseType: !2059, size: 768, offset: 256)
!2059 = !DICompositeType(tag: DW_TAG_array_type, baseType: !113, size: 768, elements: !2060)
!2060 = !{!2061}
!2061 = !DISubrange(count: 24)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2054, file: !802, line: 415, baseType: !2057, size: 256, offset: 1024)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2054, file: !802, line: 416, baseType: !2059, size: 768, offset: 1280)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2054, file: !802, line: 417, baseType: !2057, size: 256, offset: 2048)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2054, file: !802, line: 418, baseType: !2059, size: 768, offset: 2304)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2054, file: !802, line: 419, baseType: !2057, size: 256, offset: 3072)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2054, file: !802, line: 420, baseType: !2059, size: 768, offset: 3328)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2054, file: !802, line: 421, baseType: !2057, size: 256, offset: 4096)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2054, file: !802, line: 422, baseType: !2070, size: 1792, offset: 4352)
!2070 = !DICompositeType(tag: DW_TAG_array_type, baseType: !113, size: 1792, elements: !2071)
!2071 = !{!2072}
!2072 = !DISubrange(count: 56)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2054, file: !802, line: 423, baseType: !2074, size: 1920, offset: 6144)
!2074 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2075, size: 1920, elements: !2076)
!2075 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !164)
!2076 = !{!2077}
!2077 = !DISubrange(count: 240)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2054, file: !802, line: 424, baseType: !2079, size: 20608, offset: 8064)
!2079 = !DICompositeType(tag: DW_TAG_array_type, baseType: !113, size: 20608, elements: !2080)
!2080 = !{!2081}
!2081 = !DISubrange(count: 644)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2054, file: !802, line: 425, baseType: !584, size: 32, offset: 28672)
!2083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2084, size: 32)
!2084 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !802, line: 468, baseType: !2085)
!2085 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !802, line: 445, size: 1120, elements: !2086)
!2086 = !{!2087, !2088, !2089, !2090, !2091, !2092, !2093, !2097, !2098, !2099, !2100, !2101, !2102, !2103, !2104, !2106, !2107, !2108, !2110, !2112, !2114}
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2085, file: !802, line: 447, baseType: !806, size: 32)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2085, file: !802, line: 448, baseType: !584, size: 32, offset: 32)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2085, file: !802, line: 449, baseType: !584, size: 32, offset: 64)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2085, file: !802, line: 450, baseType: !584, size: 32, offset: 96)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2085, file: !802, line: 451, baseType: !584, size: 32, offset: 128)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2085, file: !802, line: 452, baseType: !584, size: 32, offset: 160)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2085, file: !802, line: 453, baseType: !2094, size: 96, offset: 192)
!2094 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2075, size: 96, elements: !2095)
!2095 = !{!2096}
!2096 = !DISubrange(count: 12)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2085, file: !802, line: 454, baseType: !584, size: 32, offset: 288)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2085, file: !802, line: 455, baseType: !584, size: 32, offset: 320)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2085, file: !802, line: 456, baseType: !584, size: 32, offset: 352)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2085, file: !802, line: 457, baseType: !584, size: 32, offset: 384)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2085, file: !802, line: 458, baseType: !584, size: 32, offset: 416)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2085, file: !802, line: 459, baseType: !584, size: 32, offset: 448)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2085, file: !802, line: 460, baseType: !584, size: 32, offset: 480)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2085, file: !802, line: 461, baseType: !2105, size: 64, offset: 512)
!2105 = !DICompositeType(tag: DW_TAG_array_type, baseType: !806, size: 64, elements: !689)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2085, file: !802, line: 462, baseType: !806, size: 32, offset: 576)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2085, file: !802, line: 463, baseType: !806, size: 32, offset: 608)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2085, file: !802, line: 464, baseType: !2109, size: 128, offset: 640)
!2109 = !DICompositeType(tag: DW_TAG_array_type, baseType: !806, size: 128, elements: !461)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2085, file: !802, line: 465, baseType: !2111, size: 160, offset: 768)
!2111 = !DICompositeType(tag: DW_TAG_array_type, baseType: !806, size: 160, elements: !1570)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2085, file: !802, line: 466, baseType: !2113, size: 160, offset: 928)
!2113 = !DICompositeType(tag: DW_TAG_array_type, baseType: !113, size: 160, elements: !1570)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2085, file: !802, line: 467, baseType: !584, size: 32, offset: 1088)
!2115 = !{!2116, !2142, !2145, !2147, !2149, !2038}
!2116 = !DIGlobalVariableExpression(var: !2117, expr: !DIExpression())
!2117 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !2040, file: !2118, line: 285, type: !2119, isLocal: true, isDefinition: true, align: 32)
!2118 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2119 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2120)
!2120 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !469, line: 51, size: 64, elements: !2121)
!2121 = !{!2122, !2141}
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2120, file: !469, line: 60, baseType: !2123, size: 32)
!2123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2124, size: 32)
!2124 = !DISubroutineType(types: !2125)
!2125 = !{!108, !2126}
!2126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2127, size: 32)
!2127 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2128)
!2128 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !411, line: 378, size: 192, elements: !2129)
!2129 = !{!2130, !2131, !2132, !2133, !2139, !2140}
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2128, file: !411, line: 380, baseType: !105, size: 32)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !2128, file: !411, line: 382, baseType: !13, size: 32, offset: 32)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !2128, file: !411, line: 384, baseType: !13, size: 32, offset: 64)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2128, file: !411, line: 386, baseType: !2134, size: 32, offset: 96)
!2134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2135, size: 32)
!2135 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !411, line: 351, size: 16, elements: !2136)
!2136 = !{!2137, !2138}
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !2135, file: !411, line: 359, baseType: !164, size: 8)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !2135, file: !411, line: 364, baseType: !422, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2128, file: !411, line: 388, baseType: !104, size: 32, offset: 128)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !2128, file: !411, line: 396, baseType: !425, size: 32, offset: 160)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2120, file: !469, line: 65, baseType: !2126, size: 32, offset: 32)
!2142 = !DIGlobalVariableExpression(var: !2143, expr: !DIExpression())
!2143 = distinct !DIGlobalVariable(name: "lock", scope: !2040, file: !2118, line: 34, type: !2144, isLocal: true, isDefinition: true)
!2144 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !436, line: 43, elements: !437)
!2145 = !DIGlobalVariableExpression(var: !2146, expr: !DIExpression())
!2146 = distinct !DIGlobalVariable(name: "last_load", scope: !2040, file: !2118, line: 36, type: !113, isLocal: true, isDefinition: true)
!2147 = !DIGlobalVariableExpression(var: !2148, expr: !DIExpression())
!2148 = distinct !DIGlobalVariable(name: "cycle_count", scope: !2040, file: !2118, line: 48, type: !113, isLocal: true, isDefinition: true)
!2149 = !DIGlobalVariableExpression(var: !2150, expr: !DIExpression())
!2150 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !2040, file: !2118, line: 54, type: !113, isLocal: true, isDefinition: true)
!2151 = !DIGlobalVariableExpression(var: !2152, expr: !DIExpression())
!2152 = distinct !DIGlobalVariable(name: "gpio_ports", scope: !2153, file: !2235, line: 22, type: !2237, isLocal: true, isDefinition: true)
!2153 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2154, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2155, retainedTypes: !2156, globals: !2232, splitDebugInlining: false, nameTableKind: None)
!2154 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/sensor_batch_processing")
!2155 = !{!1402, !1408}
!2156 = !{!2157, !2221, !2226, !1455, !1408, !1402, !2231, !104}
!2157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2158, size: 32)
!2158 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2159)
!2159 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1403, line: 523, size: 288, elements: !2160)
!2160 = !{!2161, !2180, !2184, !2188, !2192, !2193, !2194, !2198, !2217}
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !2159, file: !1403, line: 524, baseType: !2162, size: 32)
!2162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2163, size: 32)
!2163 = !DISubroutineType(types: !2164)
!2164 = !{!108, !2165, !1443, !1444}
!2165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2166, size: 32)
!2166 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2167)
!2167 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !411, line: 378, size: 192, elements: !2168)
!2168 = !{!2169, !2170, !2171, !2172, !2178, !2179}
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2167, file: !411, line: 380, baseType: !105, size: 32)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !2167, file: !411, line: 382, baseType: !13, size: 32, offset: 32)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !2167, file: !411, line: 384, baseType: !13, size: 32, offset: 64)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2167, file: !411, line: 386, baseType: !2173, size: 32, offset: 96)
!2173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2174, size: 32)
!2174 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !411, line: 351, size: 16, elements: !2175)
!2175 = !{!2176, !2177}
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !2174, file: !411, line: 359, baseType: !164, size: 8)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !2174, file: !411, line: 364, baseType: !422, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2167, file: !411, line: 388, baseType: !104, size: 32, offset: 128)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !2167, file: !411, line: 396, baseType: !425, size: 32, offset: 160)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !2159, file: !1403, line: 530, baseType: !2181, size: 32, offset: 32)
!2181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2182, size: 32)
!2182 = !DISubroutineType(types: !2183)
!2183 = !{!108, !2165, !1449}
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !2159, file: !1403, line: 532, baseType: !2185, size: 32, offset: 64)
!2185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2186, size: 32)
!2186 = !DISubroutineType(types: !2187)
!2187 = !{!108, !2165, !1455, !1450}
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !2159, file: !1403, line: 535, baseType: !2189, size: 32, offset: 96)
!2189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2190, size: 32)
!2190 = !DISubroutineType(types: !2191)
!2191 = !{!108, !2165, !1455}
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !2159, file: !1403, line: 537, baseType: !2189, size: 32, offset: 128)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !2159, file: !1403, line: 539, baseType: !2189, size: 32, offset: 160)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !2159, file: !1403, line: 541, baseType: !2195, size: 32, offset: 192)
!2195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2196, size: 32)
!2196 = !DISubroutineType(types: !2197)
!2197 = !{!108, !2165, !1443, !1402, !1408}
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !2159, file: !1403, line: 544, baseType: !2199, size: 32, offset: 224)
!2199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2200, size: 32)
!2200 = !DISubroutineType(types: !2201)
!2201 = !{!108, !2165, !2202, !422}
!2202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2203, size: 32)
!2203 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1403, line: 478, size: 96, elements: !2204)
!2204 = !{!2205, !2211, !2216}
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2203, file: !1403, line: 482, baseType: !2206, size: 32)
!2206 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1475, line: 33, baseType: !2207)
!2207 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1475, line: 29, size: 32, elements: !2208)
!2208 = !{!2209}
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2207, file: !1475, line: 30, baseType: !2210, size: 32)
!2210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2207, size: 32)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !2203, file: !1403, line: 485, baseType: !2212, size: 32, offset: 32)
!2212 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1403, line: 464, baseType: !2213)
!2213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2214, size: 32)
!2214 = !DISubroutineType(types: !2215)
!2215 = !{null, !2165, !2202, !1455}
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !2203, file: !1403, line: 493, baseType: !1455, size: 32, offset: 64)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !2159, file: !1403, line: 547, baseType: !2218, size: 32, offset: 256)
!2218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2219, size: 32)
!2219 = !DISubroutineType(types: !2220)
!2220 = !{!113, !2165}
!2221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2222, size: 32)
!2222 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2223)
!2223 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1403, line: 428, size: 32, elements: !2224)
!2224 = !{!2225}
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !2223, file: !1403, line: 434, baseType: !1455, size: 32)
!2226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2227, size: 32)
!2227 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2228)
!2228 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1403, line: 441, size: 32, elements: !2229)
!2229 = !{!2230}
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !2228, file: !1403, line: 447, baseType: !1455, size: 32)
!2231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2228, size: 32)
!2232 = !{!2233, !2151}
!2233 = !DIGlobalVariableExpression(var: !2234, expr: !DIExpression(DW_OP_constu, 11, DW_OP_stack_value))
!2234 = distinct !DIGlobalVariable(name: "gpio_ports_cnt", scope: !2153, file: !2235, line: 37, type: !2236, isLocal: true, isDefinition: true)
!2235 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2236 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !439)
!2237 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2238, size: 352, elements: !2239)
!2238 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2165)
!2239 = !{!2240}
!2240 = !DISubrange(count: 11)
!2241 = !DIGlobalVariableExpression(var: !2242, expr: !DIExpression())
!2242 = distinct !DIGlobalVariable(name: "APBPrescTable", scope: !2243, file: !2285, line: 139, type: !2291, isLocal: false, isDefinition: true)
!2243 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2244, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2245, globals: !2282, splitDebugInlining: false, nameTableKind: None)
!2244 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/sensor_batch_processing")
!2245 = !{!2246}
!2246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2247, size: 32)
!2247 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !580, line: 677, baseType: !2248)
!2248 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !580, line: 643, size: 1152, elements: !2249)
!2249 = !{!2250, !2251, !2252, !2253, !2254, !2255, !2256, !2257, !2258, !2259, !2260, !2261, !2262, !2263, !2264, !2265, !2266, !2267, !2268, !2269, !2270, !2271, !2272, !2273, !2274, !2275, !2276, !2277, !2278, !2279, !2280, !2281}
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2248, file: !580, line: 645, baseType: !584, size: 32)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2248, file: !580, line: 646, baseType: !584, size: 32, offset: 32)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2248, file: !580, line: 647, baseType: !584, size: 32, offset: 64)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2248, file: !580, line: 648, baseType: !584, size: 32, offset: 96)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2248, file: !580, line: 649, baseType: !584, size: 32, offset: 128)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2248, file: !580, line: 650, baseType: !584, size: 32, offset: 160)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2248, file: !580, line: 651, baseType: !584, size: 32, offset: 192)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2248, file: !580, line: 652, baseType: !113, size: 32, offset: 224)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2248, file: !580, line: 653, baseType: !584, size: 32, offset: 256)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2248, file: !580, line: 654, baseType: !584, size: 32, offset: 288)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2248, file: !580, line: 655, baseType: !1227, size: 64, offset: 320)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2248, file: !580, line: 656, baseType: !584, size: 32, offset: 384)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2248, file: !580, line: 657, baseType: !584, size: 32, offset: 416)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2248, file: !580, line: 658, baseType: !584, size: 32, offset: 448)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2248, file: !580, line: 659, baseType: !113, size: 32, offset: 480)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2248, file: !580, line: 660, baseType: !584, size: 32, offset: 512)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2248, file: !580, line: 661, baseType: !584, size: 32, offset: 544)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2248, file: !580, line: 662, baseType: !1227, size: 64, offset: 576)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2248, file: !580, line: 663, baseType: !584, size: 32, offset: 640)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2248, file: !580, line: 664, baseType: !584, size: 32, offset: 672)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2248, file: !580, line: 665, baseType: !584, size: 32, offset: 704)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2248, file: !580, line: 666, baseType: !113, size: 32, offset: 736)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2248, file: !580, line: 667, baseType: !584, size: 32, offset: 768)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2248, file: !580, line: 668, baseType: !584, size: 32, offset: 800)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2248, file: !580, line: 669, baseType: !1227, size: 64, offset: 832)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2248, file: !580, line: 670, baseType: !584, size: 32, offset: 896)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2248, file: !580, line: 671, baseType: !584, size: 32, offset: 928)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2248, file: !580, line: 672, baseType: !1227, size: 64, offset: 960)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2248, file: !580, line: 673, baseType: !584, size: 32, offset: 1024)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2248, file: !580, line: 674, baseType: !584, size: 32, offset: 1056)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !2248, file: !580, line: 675, baseType: !584, size: 32, offset: 1088)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2248, file: !580, line: 676, baseType: !584, size: 32, offset: 1120)
!2282 = !{!2283, !2286, !2241}
!2283 = !DIGlobalVariableExpression(var: !2284, expr: !DIExpression())
!2284 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !2243, file: !2285, line: 137, type: !113, isLocal: false, isDefinition: true)
!2285 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2286 = !DIGlobalVariableExpression(var: !2287, expr: !DIExpression())
!2287 = distinct !DIGlobalVariable(name: "AHBPrescTable", scope: !2243, file: !2285, line: 138, type: !2288, isLocal: false, isDefinition: true)
!2288 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2289, size: 128, elements: !2290)
!2289 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !164)
!2290 = !{!234}
!2291 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2289, size: 64, elements: !244)
!2292 = !DIGlobalVariableExpression(var: !2293, expr: !DIExpression())
!2293 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !2294, file: !2297, line: 23, type: !2298, isLocal: false, isDefinition: true)
!2294 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2295, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !567, globals: !2296, splitDebugInlining: false, nameTableKind: None)
!2295 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/sensor_batch_processing")
!2296 = !{!2292}
!2297 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2298 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !108)
!2299 = !DIGlobalVariableExpression(var: !2300, expr: !DIExpression())
!2300 = distinct !DIGlobalVariable(name: "log_const_os", scope: !2301, file: !2305, line: 37, type: !2559, isLocal: false, isDefinition: true)
!2301 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2302, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2303, retainedTypes: !2312, globals: !2385, splitDebugInlining: false, nameTableKind: None)
!2302 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/sensor_batch_processing")
!2303 = !{!2304, !30, !999}
!2304 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !2305, line: 63, baseType: !32, size: 32, elements: !2306)
!2305 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2306 = !{!2307, !2308, !2309, !2310, !2311}
!2307 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!2308 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!2309 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!2310 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!2311 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!2312 = !{!22, !439, !104, !108, !2313, !443, !113, !2343, !220, !164, !2368}
!2313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2314, size: 32)
!2314 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2315)
!2315 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !2316, line: 51, size: 64, elements: !2317)
!2316 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2317 = !{!2318, !2338}
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !2315, file: !2316, line: 52, baseType: !2319, size: 32)
!2319 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !2316, line: 38, baseType: !2320)
!2320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2321, size: 32)
!2321 = !DISubroutineType(types: !2322)
!2322 = !{!108, !2323, !209, !168}
!2323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2324, size: 32)
!2324 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2325)
!2325 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !411, line: 378, size: 192, elements: !2326)
!2326 = !{!2327, !2328, !2329, !2330, !2336, !2337}
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2325, file: !411, line: 380, baseType: !105, size: 32)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !2325, file: !411, line: 382, baseType: !13, size: 32, offset: 32)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !2325, file: !411, line: 384, baseType: !13, size: 32, offset: 64)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2325, file: !411, line: 386, baseType: !2331, size: 32, offset: 96)
!2331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2332, size: 32)
!2332 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !411, line: 351, size: 16, elements: !2333)
!2333 = !{!2334, !2335}
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !2332, file: !411, line: 359, baseType: !164, size: 8)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !2332, file: !411, line: 364, baseType: !422, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2325, file: !411, line: 388, baseType: !104, size: 32, offset: 128)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !2325, file: !411, line: 396, baseType: !425, size: 32, offset: 160)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !2315, file: !2316, line: 53, baseType: !2339, size: 32, offset: 32)
!2339 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !2316, line: 47, baseType: !2340)
!2340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2341, size: 32)
!2341 = !DISubroutineType(types: !2342)
!2342 = !{!108, !2323, !209, !168, !113}
!2343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2344, size: 32)
!2344 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !802, line: 468, baseType: !2345)
!2345 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !802, line: 445, size: 1120, elements: !2346)
!2346 = !{!2347, !2348, !2349, !2350, !2351, !2352, !2353, !2354, !2355, !2356, !2357, !2358, !2359, !2360, !2361, !2362, !2363, !2364, !2365, !2366, !2367}
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2345, file: !802, line: 447, baseType: !806, size: 32)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2345, file: !802, line: 448, baseType: !584, size: 32, offset: 32)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2345, file: !802, line: 449, baseType: !584, size: 32, offset: 64)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2345, file: !802, line: 450, baseType: !584, size: 32, offset: 96)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2345, file: !802, line: 451, baseType: !584, size: 32, offset: 128)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2345, file: !802, line: 452, baseType: !584, size: 32, offset: 160)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2345, file: !802, line: 453, baseType: !2094, size: 96, offset: 192)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2345, file: !802, line: 454, baseType: !584, size: 32, offset: 288)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2345, file: !802, line: 455, baseType: !584, size: 32, offset: 320)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2345, file: !802, line: 456, baseType: !584, size: 32, offset: 352)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2345, file: !802, line: 457, baseType: !584, size: 32, offset: 384)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2345, file: !802, line: 458, baseType: !584, size: 32, offset: 416)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2345, file: !802, line: 459, baseType: !584, size: 32, offset: 448)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2345, file: !802, line: 460, baseType: !584, size: 32, offset: 480)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2345, file: !802, line: 461, baseType: !2105, size: 64, offset: 512)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2345, file: !802, line: 462, baseType: !806, size: 32, offset: 576)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2345, file: !802, line: 463, baseType: !806, size: 32, offset: 608)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2345, file: !802, line: 464, baseType: !2109, size: 128, offset: 640)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2345, file: !802, line: 465, baseType: !2111, size: 160, offset: 768)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2345, file: !802, line: 466, baseType: !2113, size: 160, offset: 928)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2345, file: !802, line: 467, baseType: !584, size: 32, offset: 1088)
!2368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2369, size: 32)
!2369 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !802, line: 426, baseType: !2370)
!2370 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !802, line: 411, size: 28704, elements: !2371)
!2371 = !{!2372, !2373, !2374, !2375, !2376, !2377, !2378, !2379, !2380, !2381, !2382, !2383, !2384}
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2370, file: !802, line: 413, baseType: !2057, size: 256)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2370, file: !802, line: 414, baseType: !2059, size: 768, offset: 256)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2370, file: !802, line: 415, baseType: !2057, size: 256, offset: 1024)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2370, file: !802, line: 416, baseType: !2059, size: 768, offset: 1280)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2370, file: !802, line: 417, baseType: !2057, size: 256, offset: 2048)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2370, file: !802, line: 418, baseType: !2059, size: 768, offset: 2304)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2370, file: !802, line: 419, baseType: !2057, size: 256, offset: 3072)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2370, file: !802, line: 420, baseType: !2059, size: 768, offset: 3328)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2370, file: !802, line: 421, baseType: !2057, size: 256, offset: 4096)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2370, file: !802, line: 422, baseType: !2070, size: 1792, offset: 4352)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2370, file: !802, line: 423, baseType: !2074, size: 1920, offset: 6144)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2370, file: !802, line: 424, baseType: !2079, size: 20608, offset: 8064)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2370, file: !802, line: 425, baseType: !584, size: 32, offset: 28672)
!2385 = !{!2299, !2386, !2508, !2517, !2519, !2522, !2527, !2529, !2534}
!2386 = !DIGlobalVariableExpression(var: !2387, expr: !DIExpression())
!2387 = distinct !DIGlobalVariable(name: "_kernel", scope: !2301, file: !2305, line: 40, type: !2388, isLocal: false, isDefinition: true)
!2388 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !363, line: 158, size: 288, elements: !2389)
!2389 = !{!2390, !2503}
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !2388, file: !363, line: 159, baseType: !2391, size: 192)
!2391 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2392, size: 192, elements: !784)
!2392 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !363, line: 100, size: 192, elements: !2393)
!2393 = !{!2394, !2395, !2396, !2497, !2498, !2499, !2500}
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !2392, file: !363, line: 102, baseType: !113, size: 32)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !2392, file: !363, line: 105, baseType: !443, size: 32, offset: 32)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !2392, file: !363, line: 108, baseType: !2397, size: 32, offset: 64)
!2397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2398, size: 32)
!2398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !659, line: 245, size: 1024, elements: !2399)
!2399 = !{!2400, !2458, !2470, !2471, !2472, !2473, !2479, !2492}
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2398, file: !659, line: 247, baseType: !2401, size: 384)
!2401 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !659, line: 57, size: 384, elements: !2402)
!2402 = !{!2403, !2427, !2434, !2435, !2436, !2445, !2446, !2447}
!2403 = !DIDerivedType(tag: DW_TAG_member, scope: !2401, file: !659, line: 60, baseType: !2404, size: 64)
!2404 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2401, file: !659, line: 60, size: 64, elements: !2405)
!2405 = !{!2406, !2421}
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2404, file: !659, line: 61, baseType: !2407, size: 64)
!2407 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !367, line: 49, baseType: !2408)
!2408 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !367, line: 37, size: 64, elements: !2409)
!2409 = !{!2410, !2416}
!2410 = !DIDerivedType(tag: DW_TAG_member, scope: !2408, file: !367, line: 38, baseType: !2411, size: 32)
!2411 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2408, file: !367, line: 38, size: 32, elements: !2412)
!2412 = !{!2413, !2415}
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2411, file: !367, line: 39, baseType: !2414, size: 32)
!2414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2408, size: 32)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2411, file: !367, line: 40, baseType: !2414, size: 32)
!2416 = !DIDerivedType(tag: DW_TAG_member, scope: !2408, file: !367, line: 42, baseType: !2417, size: 32, offset: 32)
!2417 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2408, file: !367, line: 42, size: 32, elements: !2418)
!2418 = !{!2419, !2420}
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2417, file: !367, line: 43, baseType: !2414, size: 32)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2417, file: !367, line: 44, baseType: !2414, size: 32)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2404, file: !659, line: 62, baseType: !2422, size: 64)
!2422 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !684, line: 49, size: 64, elements: !2423)
!2423 = !{!2424}
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2422, file: !684, line: 50, baseType: !2425, size: 64)
!2425 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2426, size: 64, elements: !689)
!2426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2422, size: 32)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2401, file: !659, line: 68, baseType: !2428, size: 32, offset: 64)
!2428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2429, size: 32)
!2429 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !363, line: 233, baseType: !2430)
!2430 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !363, line: 231, size: 64, elements: !2431)
!2431 = !{!2432}
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2430, file: !363, line: 232, baseType: !2433, size: 64)
!2433 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !367, line: 48, baseType: !2408)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2401, file: !659, line: 71, baseType: !164, size: 8, offset: 96)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2401, file: !659, line: 74, baseType: !164, size: 8, offset: 104)
!2436 = !DIDerivedType(tag: DW_TAG_member, scope: !2401, file: !659, line: 90, baseType: !2437, size: 16, offset: 112)
!2437 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2401, file: !659, line: 90, size: 16, elements: !2438)
!2438 = !{!2439, !2444}
!2439 = !DIDerivedType(tag: DW_TAG_member, scope: !2437, file: !659, line: 91, baseType: !2440, size: 16)
!2440 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2437, file: !659, line: 91, size: 16, elements: !2441)
!2441 = !{!2442, !2443}
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2440, file: !659, line: 96, baseType: !707, size: 8)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2440, file: !659, line: 97, baseType: !164, size: 8, offset: 8)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2437, file: !659, line: 100, baseType: !168, size: 16)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2401, file: !659, line: 107, baseType: !113, size: 32, offset: 128)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2401, file: !659, line: 127, baseType: !104, size: 32, offset: 160)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2401, file: !659, line: 131, baseType: !2448, size: 192, offset: 192)
!2448 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !363, line: 244, size: 192, elements: !2449)
!2449 = !{!2450, !2451, !2457}
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2448, file: !363, line: 245, baseType: !2407, size: 64)
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2448, file: !363, line: 246, baseType: !2452, size: 32, offset: 64)
!2452 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !363, line: 242, baseType: !2453)
!2453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2454, size: 32)
!2454 = !DISubroutineType(types: !2455)
!2455 = !{null, !2456}
!2456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2448, size: 32)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2448, file: !363, line: 249, baseType: !111, size: 64, offset: 128)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2398, file: !659, line: 250, baseType: !2459, size: 288, offset: 384)
!2459 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !726, line: 25, size: 288, elements: !2460)
!2460 = !{!2461, !2462, !2463, !2464, !2465, !2466, !2467, !2468, !2469}
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2459, file: !726, line: 26, baseType: !113, size: 32)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2459, file: !726, line: 27, baseType: !113, size: 32, offset: 32)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2459, file: !726, line: 28, baseType: !113, size: 32, offset: 64)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2459, file: !726, line: 29, baseType: !113, size: 32, offset: 96)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2459, file: !726, line: 30, baseType: !113, size: 32, offset: 128)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2459, file: !726, line: 31, baseType: !113, size: 32, offset: 160)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2459, file: !726, line: 32, baseType: !113, size: 32, offset: 192)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2459, file: !726, line: 33, baseType: !113, size: 32, offset: 224)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2459, file: !726, line: 34, baseType: !113, size: 32, offset: 256)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2398, file: !659, line: 253, baseType: !104, size: 32, offset: 672)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2398, file: !659, line: 256, baseType: !2429, size: 64, offset: 704)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2398, file: !659, line: 294, baseType: !108, size: 32, offset: 768)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2398, file: !659, line: 300, baseType: !2474, size: 96, offset: 800)
!2474 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !659, line: 149, size: 96, elements: !2475)
!2475 = !{!2476, !2477, !2478}
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2474, file: !659, line: 153, baseType: !22, size: 32)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2474, file: !659, line: 162, baseType: !439, size: 32, offset: 32)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2474, file: !659, line: 168, baseType: !439, size: 32, offset: 64)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2398, file: !659, line: 325, baseType: !2480, size: 32, offset: 896)
!2480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2481, size: 32)
!2481 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !359, line: 5073, size: 160, elements: !2482)
!2482 = !{!2483, !2489, !2490}
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2481, file: !359, line: 5074, baseType: !2484, size: 96)
!2484 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !752, line: 56, size: 96, elements: !2485)
!2485 = !{!2486, !2487, !2488}
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2484, file: !752, line: 57, baseType: !755, size: 32)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2484, file: !752, line: 58, baseType: !104, size: 32, offset: 32)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2484, file: !752, line: 59, baseType: !439, size: 32, offset: 64)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2481, file: !359, line: 5075, baseType: !2429, size: 64, offset: 96)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2481, file: !359, line: 5076, baseType: !2491, offset: 160)
!2491 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !436, line: 43, elements: !437)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2398, file: !659, line: 343, baseType: !2493, size: 64, offset: 928)
!2493 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !726, line: 60, size: 64, elements: !2494)
!2494 = !{!2495, !2496}
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2493, file: !726, line: 63, baseType: !113, size: 32)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2493, file: !726, line: 66, baseType: !113, size: 32, offset: 32)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !2392, file: !363, line: 111, baseType: !2397, size: 32, offset: 96)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !2392, file: !363, line: 124, baseType: !108, size: 32, offset: 128)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2392, file: !363, line: 127, baseType: !164, size: 8, offset: 160)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2392, file: !363, line: 153, baseType: !2501, offset: 168)
!2501 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !2502, line: 33, elements: !437)
!2502 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !2388, file: !363, line: 170, baseType: !2504, size: 96, offset: 192)
!2504 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !363, line: 83, size: 96, elements: !2505)
!2505 = !{!2506, !2507}
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !2504, file: !363, line: 86, baseType: !2397, size: 32)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !2504, file: !363, line: 90, baseType: !2433, size: 64, offset: 32)
!2508 = !DIGlobalVariableExpression(var: !2509, expr: !DIExpression())
!2509 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !2301, file: !2305, line: 43, type: !2510, isLocal: false, isDefinition: true, align: 512)
!2510 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2511, size: 8704, elements: !2515)
!2511 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !2512, line: 47, size: 8, elements: !2513)
!2512 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2513 = !{!2514}
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2511, file: !2512, line: 48, baseType: !107, size: 8)
!2515 = !{!2516}
!2516 = !DISubrange(count: 1088)
!2517 = !DIGlobalVariableExpression(var: !2518, expr: !DIExpression())
!2518 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !2301, file: !2305, line: 44, type: !2398, isLocal: false, isDefinition: true)
!2519 = !DIGlobalVariableExpression(var: !2520, expr: !DIExpression())
!2520 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !2301, file: !2305, line: 48, type: !2521, isLocal: false, isDefinition: true)
!2521 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2398, size: 1024, elements: !784)
!2522 = !DIGlobalVariableExpression(var: !2523, expr: !DIExpression())
!2523 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !2301, file: !2305, line: 86, type: !2524, isLocal: false, isDefinition: true, align: 512)
!2524 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2511, size: 16896, elements: !2525)
!2525 = !{!785, !2526}
!2526 = !DISubrange(count: 2112)
!2527 = !DIGlobalVariableExpression(var: !2528, expr: !DIExpression())
!2528 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !2301, file: !2305, line: 217, type: !422, isLocal: false, isDefinition: true)
!2529 = !DIGlobalVariableExpression(var: !2530, expr: !DIExpression())
!2530 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !2301, file: !2305, line: 50, type: !2531, isLocal: true, isDefinition: true, align: 512)
!2531 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2511, size: 3072, elements: !2532)
!2532 = !{!785, !2533}
!2533 = !DISubrange(count: 384)
!2534 = !DIGlobalVariableExpression(var: !2535, expr: !DIExpression())
!2535 = distinct !DIGlobalVariable(name: "levels", scope: !2536, file: !2305, line: 232, type: !2556, isLocal: true, isDefinition: true)
!2536 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !2305, file: !2305, line: 230, type: !2537, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2301, retainedNodes: !2539)
!2537 = !DISubroutineType(types: !2538)
!2538 = !{null, !2304}
!2539 = !{!2540, !2541, !2551, !2555}
!2540 = !DILocalVariable(name: "level", arg: 1, scope: !2536, file: !2305, line: 230, type: !2304)
!2541 = !DILocalVariable(name: "entry", scope: !2536, file: !2305, line: 244, type: !2542)
!2542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2543, size: 32)
!2543 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2544)
!2544 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !469, line: 51, size: 64, elements: !2545)
!2545 = !{!2546, !2550}
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2544, file: !469, line: 60, baseType: !2547, size: 32)
!2547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2548, size: 32)
!2548 = !DISubroutineType(types: !2549)
!2549 = !{!108, !2323}
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2544, file: !469, line: 65, baseType: !2323, size: 32, offset: 32)
!2551 = !DILocalVariable(name: "dev", scope: !2552, file: !2305, line: 247, type: !2323)
!2552 = distinct !DILexicalBlock(scope: !2553, file: !2305, line: 246, column: 64)
!2553 = distinct !DILexicalBlock(scope: !2554, file: !2305, line: 246, column: 2)
!2554 = distinct !DILexicalBlock(scope: !2536, file: !2305, line: 246, column: 2)
!2555 = !DILocalVariable(name: "rc", scope: !2552, file: !2305, line: 248, type: !108)
!2556 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2542, size: 192, elements: !2557)
!2557 = !{!2558}
!2558 = !DISubrange(count: 6)
!2559 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2560)
!2560 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !254, line: 16, size: 64, elements: !2561)
!2561 = !{!2562, !2563}
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2560, file: !254, line: 17, baseType: !105, size: 32)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2560, file: !254, line: 18, baseType: !164, size: 8, offset: 32)
!2564 = !DIGlobalVariableExpression(var: !2565, expr: !DIExpression())
!2565 = distinct !DIGlobalVariable(name: "states_str", scope: !2566, file: !2567, line: 276, type: !2688, isLocal: true, isDefinition: true)
!2566 = distinct !DISubprogram(name: "k_thread_state_str", scope: !2567, file: !2567, line: 271, type: !2568, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !2679)
!2567 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2568 = !DISubroutineType(types: !2569)
!2569 = !{!105, !2570, !443, !439}
!2570 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !659, line: 347, baseType: !2571)
!2571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2572, size: 32)
!2572 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !659, line: 245, size: 1024, elements: !2573)
!2573 = !{!2574, !2632, !2644, !2645, !2646, !2647, !2653, !2666}
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2572, file: !659, line: 247, baseType: !2575, size: 384)
!2575 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !659, line: 57, size: 384, elements: !2576)
!2576 = !{!2577, !2601, !2608, !2609, !2610, !2619, !2620, !2621}
!2577 = !DIDerivedType(tag: DW_TAG_member, scope: !2575, file: !659, line: 60, baseType: !2578, size: 64)
!2578 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2575, file: !659, line: 60, size: 64, elements: !2579)
!2579 = !{!2580, !2595}
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2578, file: !659, line: 61, baseType: !2581, size: 64)
!2581 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !367, line: 49, baseType: !2582)
!2582 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !367, line: 37, size: 64, elements: !2583)
!2583 = !{!2584, !2590}
!2584 = !DIDerivedType(tag: DW_TAG_member, scope: !2582, file: !367, line: 38, baseType: !2585, size: 32)
!2585 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2582, file: !367, line: 38, size: 32, elements: !2586)
!2586 = !{!2587, !2589}
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2585, file: !367, line: 39, baseType: !2588, size: 32)
!2588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2582, size: 32)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2585, file: !367, line: 40, baseType: !2588, size: 32)
!2590 = !DIDerivedType(tag: DW_TAG_member, scope: !2582, file: !367, line: 42, baseType: !2591, size: 32, offset: 32)
!2591 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2582, file: !367, line: 42, size: 32, elements: !2592)
!2592 = !{!2593, !2594}
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2591, file: !367, line: 43, baseType: !2588, size: 32)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2591, file: !367, line: 44, baseType: !2588, size: 32)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2578, file: !659, line: 62, baseType: !2596, size: 64)
!2596 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !684, line: 49, size: 64, elements: !2597)
!2597 = !{!2598}
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2596, file: !684, line: 50, baseType: !2599, size: 64)
!2599 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2600, size: 64, elements: !689)
!2600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2596, size: 32)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2575, file: !659, line: 68, baseType: !2602, size: 32, offset: 64)
!2602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2603, size: 32)
!2603 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !363, line: 233, baseType: !2604)
!2604 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !363, line: 231, size: 64, elements: !2605)
!2605 = !{!2606}
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2604, file: !363, line: 232, baseType: !2607, size: 64)
!2607 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !367, line: 48, baseType: !2582)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2575, file: !659, line: 71, baseType: !164, size: 8, offset: 96)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2575, file: !659, line: 74, baseType: !164, size: 8, offset: 104)
!2610 = !DIDerivedType(tag: DW_TAG_member, scope: !2575, file: !659, line: 90, baseType: !2611, size: 16, offset: 112)
!2611 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2575, file: !659, line: 90, size: 16, elements: !2612)
!2612 = !{!2613, !2618}
!2613 = !DIDerivedType(tag: DW_TAG_member, scope: !2611, file: !659, line: 91, baseType: !2614, size: 16)
!2614 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2611, file: !659, line: 91, size: 16, elements: !2615)
!2615 = !{!2616, !2617}
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2614, file: !659, line: 96, baseType: !707, size: 8)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2614, file: !659, line: 97, baseType: !164, size: 8, offset: 8)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2611, file: !659, line: 100, baseType: !168, size: 16)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2575, file: !659, line: 107, baseType: !113, size: 32, offset: 128)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2575, file: !659, line: 127, baseType: !104, size: 32, offset: 160)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2575, file: !659, line: 131, baseType: !2622, size: 192, offset: 192)
!2622 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !363, line: 244, size: 192, elements: !2623)
!2623 = !{!2624, !2625, !2631}
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2622, file: !363, line: 245, baseType: !2581, size: 64)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2622, file: !363, line: 246, baseType: !2626, size: 32, offset: 64)
!2626 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !363, line: 242, baseType: !2627)
!2627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2628, size: 32)
!2628 = !DISubroutineType(types: !2629)
!2629 = !{null, !2630}
!2630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2622, size: 32)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2622, file: !363, line: 249, baseType: !111, size: 64, offset: 128)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2572, file: !659, line: 250, baseType: !2633, size: 288, offset: 384)
!2633 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !726, line: 25, size: 288, elements: !2634)
!2634 = !{!2635, !2636, !2637, !2638, !2639, !2640, !2641, !2642, !2643}
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2633, file: !726, line: 26, baseType: !113, size: 32)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2633, file: !726, line: 27, baseType: !113, size: 32, offset: 32)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2633, file: !726, line: 28, baseType: !113, size: 32, offset: 64)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2633, file: !726, line: 29, baseType: !113, size: 32, offset: 96)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2633, file: !726, line: 30, baseType: !113, size: 32, offset: 128)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2633, file: !726, line: 31, baseType: !113, size: 32, offset: 160)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2633, file: !726, line: 32, baseType: !113, size: 32, offset: 192)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2633, file: !726, line: 33, baseType: !113, size: 32, offset: 224)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2633, file: !726, line: 34, baseType: !113, size: 32, offset: 256)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2572, file: !659, line: 253, baseType: !104, size: 32, offset: 672)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2572, file: !659, line: 256, baseType: !2603, size: 64, offset: 704)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2572, file: !659, line: 294, baseType: !108, size: 32, offset: 768)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2572, file: !659, line: 300, baseType: !2648, size: 96, offset: 800)
!2648 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !659, line: 149, size: 96, elements: !2649)
!2649 = !{!2650, !2651, !2652}
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2648, file: !659, line: 153, baseType: !22, size: 32)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2648, file: !659, line: 162, baseType: !439, size: 32, offset: 32)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2648, file: !659, line: 168, baseType: !439, size: 32, offset: 64)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2572, file: !659, line: 325, baseType: !2654, size: 32, offset: 896)
!2654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2655, size: 32)
!2655 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !359, line: 5073, size: 160, elements: !2656)
!2656 = !{!2657, !2663, !2664}
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2655, file: !359, line: 5074, baseType: !2658, size: 96)
!2658 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !752, line: 56, size: 96, elements: !2659)
!2659 = !{!2660, !2661, !2662}
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2658, file: !752, line: 57, baseType: !755, size: 32)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2658, file: !752, line: 58, baseType: !104, size: 32, offset: 32)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2658, file: !752, line: 59, baseType: !439, size: 32, offset: 64)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2655, file: !359, line: 5075, baseType: !2603, size: 64, offset: 96)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2655, file: !359, line: 5076, baseType: !2665, offset: 160)
!2665 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !436, line: 43, elements: !437)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2572, file: !659, line: 343, baseType: !2667, size: 64, offset: 928)
!2667 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !726, line: 60, size: 64, elements: !2668)
!2668 = !{!2669, !2670}
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2667, file: !726, line: 63, baseType: !113, size: 32)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2667, file: !726, line: 66, baseType: !113, size: 32, offset: 32)
!2671 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2672, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2673, globals: !2675, splitDebugInlining: false, nameTableKind: None)
!2672 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/sensor_batch_processing")
!2673 = !{!104, !105, !109, !164, !108, !2674, !24, !439, !443, !22, !113, !114}
!2674 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2581, size: 32)
!2675 = !{!2564, !2676}
!2676 = !DIGlobalVariableExpression(var: !2677, expr: !DIExpression())
!2677 = distinct !DIGlobalVariable(name: "states_sz", scope: !2566, file: !2567, line: 279, type: !2678, isLocal: true, isDefinition: true)
!2678 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2236, size: 256, elements: !244)
!2679 = !{!2680, !2681, !2682, !2683, !2684, !2685, !2686}
!2680 = !DILocalVariable(name: "thread_id", arg: 1, scope: !2566, file: !2567, line: 271, type: !2570)
!2681 = !DILocalVariable(name: "buf", arg: 2, scope: !2566, file: !2567, line: 271, type: !443)
!2682 = !DILocalVariable(name: "buf_size", arg: 3, scope: !2566, file: !2567, line: 271, type: !439)
!2683 = !DILocalVariable(name: "off", scope: !2566, file: !2567, line: 273, type: !439)
!2684 = !DILocalVariable(name: "bit", scope: !2566, file: !2567, line: 274, type: !164)
!2685 = !DILocalVariable(name: "thread_state", scope: !2566, file: !2567, line: 275, type: !164)
!2686 = !DILocalVariable(name: "index", scope: !2687, file: !2567, line: 293, type: !164)
!2687 = distinct !DILexicalBlock(scope: !2566, file: !2567, line: 293, column: 2)
!2688 = !DICompositeType(tag: DW_TAG_array_type, baseType: !105, size: 256, elements: !244)
!2689 = !DIGlobalVariableExpression(var: !2690, expr: !DIExpression())
!2690 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !2691, file: !2799, line: 56, type: !2788, isLocal: false, isDefinition: true)
!2691 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2692, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2693, globals: !2796, splitDebugInlining: false, nameTableKind: None)
!2692 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/sensor_batch_processing")
!2693 = !{!2694, !443, !104, !2794, !209, !109, !220, !108, !113, !114, !2795}
!2694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2695, size: 32)
!2695 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !659, line: 245, size: 1024, elements: !2696)
!2696 = !{!2697, !2755, !2767, !2768, !2769, !2770, !2776, !2789}
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2695, file: !659, line: 247, baseType: !2698, size: 384)
!2698 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !659, line: 57, size: 384, elements: !2699)
!2699 = !{!2700, !2724, !2731, !2732, !2733, !2742, !2743, !2744}
!2700 = !DIDerivedType(tag: DW_TAG_member, scope: !2698, file: !659, line: 60, baseType: !2701, size: 64)
!2701 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2698, file: !659, line: 60, size: 64, elements: !2702)
!2702 = !{!2703, !2718}
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2701, file: !659, line: 61, baseType: !2704, size: 64)
!2704 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !367, line: 49, baseType: !2705)
!2705 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !367, line: 37, size: 64, elements: !2706)
!2706 = !{!2707, !2713}
!2707 = !DIDerivedType(tag: DW_TAG_member, scope: !2705, file: !367, line: 38, baseType: !2708, size: 32)
!2708 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2705, file: !367, line: 38, size: 32, elements: !2709)
!2709 = !{!2710, !2712}
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2708, file: !367, line: 39, baseType: !2711, size: 32)
!2711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2705, size: 32)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2708, file: !367, line: 40, baseType: !2711, size: 32)
!2713 = !DIDerivedType(tag: DW_TAG_member, scope: !2705, file: !367, line: 42, baseType: !2714, size: 32, offset: 32)
!2714 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2705, file: !367, line: 42, size: 32, elements: !2715)
!2715 = !{!2716, !2717}
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2714, file: !367, line: 43, baseType: !2711, size: 32)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2714, file: !367, line: 44, baseType: !2711, size: 32)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2701, file: !659, line: 62, baseType: !2719, size: 64)
!2719 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !684, line: 49, size: 64, elements: !2720)
!2720 = !{!2721}
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2719, file: !684, line: 50, baseType: !2722, size: 64)
!2722 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2723, size: 64, elements: !689)
!2723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2719, size: 32)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2698, file: !659, line: 68, baseType: !2725, size: 32, offset: 64)
!2725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2726, size: 32)
!2726 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !363, line: 233, baseType: !2727)
!2727 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !363, line: 231, size: 64, elements: !2728)
!2728 = !{!2729}
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2727, file: !363, line: 232, baseType: !2730, size: 64)
!2730 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !367, line: 48, baseType: !2705)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2698, file: !659, line: 71, baseType: !164, size: 8, offset: 96)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2698, file: !659, line: 74, baseType: !164, size: 8, offset: 104)
!2733 = !DIDerivedType(tag: DW_TAG_member, scope: !2698, file: !659, line: 90, baseType: !2734, size: 16, offset: 112)
!2734 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2698, file: !659, line: 90, size: 16, elements: !2735)
!2735 = !{!2736, !2741}
!2736 = !DIDerivedType(tag: DW_TAG_member, scope: !2734, file: !659, line: 91, baseType: !2737, size: 16)
!2737 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2734, file: !659, line: 91, size: 16, elements: !2738)
!2738 = !{!2739, !2740}
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2737, file: !659, line: 96, baseType: !707, size: 8)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2737, file: !659, line: 97, baseType: !164, size: 8, offset: 8)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2734, file: !659, line: 100, baseType: !168, size: 16)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2698, file: !659, line: 107, baseType: !113, size: 32, offset: 128)
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2698, file: !659, line: 127, baseType: !104, size: 32, offset: 160)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2698, file: !659, line: 131, baseType: !2745, size: 192, offset: 192)
!2745 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !363, line: 244, size: 192, elements: !2746)
!2746 = !{!2747, !2748, !2754}
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2745, file: !363, line: 245, baseType: !2704, size: 64)
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2745, file: !363, line: 246, baseType: !2749, size: 32, offset: 64)
!2749 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !363, line: 242, baseType: !2750)
!2750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2751, size: 32)
!2751 = !DISubroutineType(types: !2752)
!2752 = !{null, !2753}
!2753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2745, size: 32)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2745, file: !363, line: 249, baseType: !111, size: 64, offset: 128)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2695, file: !659, line: 250, baseType: !2756, size: 288, offset: 384)
!2756 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !726, line: 25, size: 288, elements: !2757)
!2757 = !{!2758, !2759, !2760, !2761, !2762, !2763, !2764, !2765, !2766}
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2756, file: !726, line: 26, baseType: !113, size: 32)
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2756, file: !726, line: 27, baseType: !113, size: 32, offset: 32)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2756, file: !726, line: 28, baseType: !113, size: 32, offset: 64)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2756, file: !726, line: 29, baseType: !113, size: 32, offset: 96)
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2756, file: !726, line: 30, baseType: !113, size: 32, offset: 128)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2756, file: !726, line: 31, baseType: !113, size: 32, offset: 160)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2756, file: !726, line: 32, baseType: !113, size: 32, offset: 192)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2756, file: !726, line: 33, baseType: !113, size: 32, offset: 224)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2756, file: !726, line: 34, baseType: !113, size: 32, offset: 256)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2695, file: !659, line: 253, baseType: !104, size: 32, offset: 672)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2695, file: !659, line: 256, baseType: !2726, size: 64, offset: 704)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2695, file: !659, line: 294, baseType: !108, size: 32, offset: 768)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2695, file: !659, line: 300, baseType: !2771, size: 96, offset: 800)
!2771 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !659, line: 149, size: 96, elements: !2772)
!2772 = !{!2773, !2774, !2775}
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2771, file: !659, line: 153, baseType: !22, size: 32)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2771, file: !659, line: 162, baseType: !439, size: 32, offset: 32)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2771, file: !659, line: 168, baseType: !439, size: 32, offset: 64)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2695, file: !659, line: 325, baseType: !2777, size: 32, offset: 896)
!2777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2778, size: 32)
!2778 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !359, line: 5073, size: 160, elements: !2779)
!2779 = !{!2780, !2786, !2787}
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2778, file: !359, line: 5074, baseType: !2781, size: 96)
!2781 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !752, line: 56, size: 96, elements: !2782)
!2782 = !{!2783, !2784, !2785}
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2781, file: !752, line: 57, baseType: !755, size: 32)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2781, file: !752, line: 58, baseType: !104, size: 32, offset: 32)
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2781, file: !752, line: 59, baseType: !439, size: 32, offset: 64)
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2778, file: !359, line: 5075, baseType: !2726, size: 64, offset: 96)
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2778, file: !359, line: 5076, baseType: !2788, offset: 160)
!2788 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !436, line: 43, elements: !437)
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2695, file: !659, line: 343, baseType: !2790, size: 64, offset: 928)
!2790 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !726, line: 60, size: 64, elements: !2791)
!2791 = !{!2792, !2793}
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2790, file: !726, line: 63, baseType: !113, size: 32)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2790, file: !726, line: 66, baseType: !113, size: 32, offset: 32)
!2794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2723, size: 32)
!2795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2704, size: 32)
!2796 = !{!2689, !2797, !2800, !2802}
!2797 = !DIGlobalVariableExpression(var: !2798, expr: !DIExpression())
!2798 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !2691, file: !2799, line: 404, type: !108, isLocal: true, isDefinition: true)
!2799 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2800 = !DIGlobalVariableExpression(var: !2801, expr: !DIExpression())
!2801 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !2691, file: !2799, line: 405, type: !108, isLocal: true, isDefinition: true)
!2802 = !DIGlobalVariableExpression(var: !2803, expr: !DIExpression())
!2803 = distinct !DIGlobalVariable(name: "pending_current", scope: !2691, file: !2799, line: 425, type: !2694, isLocal: true, isDefinition: true)
!2804 = !DIGlobalVariableExpression(var: !2805, expr: !DIExpression())
!2805 = distinct !DIGlobalVariable(name: "curr_tick", scope: !2806, file: !2836, line: 15, type: !114, isLocal: true, isDefinition: true)
!2806 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2807, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2808, globals: !2833, splitDebugInlining: false, nameTableKind: None)
!2807 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/sensor_batch_processing")
!2808 = !{!109, !104, !220, !113, !114, !108, !2809, !443, !111}
!2809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2810, size: 32)
!2810 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !363, line: 244, size: 192, elements: !2811)
!2811 = !{!2812, !2827, !2832}
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2810, file: !363, line: 245, baseType: !2813, size: 64)
!2813 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !367, line: 49, baseType: !2814)
!2814 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !367, line: 37, size: 64, elements: !2815)
!2815 = !{!2816, !2822}
!2816 = !DIDerivedType(tag: DW_TAG_member, scope: !2814, file: !367, line: 38, baseType: !2817, size: 32)
!2817 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2814, file: !367, line: 38, size: 32, elements: !2818)
!2818 = !{!2819, !2821}
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2817, file: !367, line: 39, baseType: !2820, size: 32)
!2820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2814, size: 32)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2817, file: !367, line: 40, baseType: !2820, size: 32)
!2822 = !DIDerivedType(tag: DW_TAG_member, scope: !2814, file: !367, line: 42, baseType: !2823, size: 32, offset: 32)
!2823 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2814, file: !367, line: 42, size: 32, elements: !2824)
!2824 = !{!2825, !2826}
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2823, file: !367, line: 43, baseType: !2820, size: 32)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2823, file: !367, line: 44, baseType: !2820, size: 32)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2810, file: !363, line: 246, baseType: !2828, size: 32, offset: 64)
!2828 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !363, line: 242, baseType: !2829)
!2829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2830, size: 32)
!2830 = !DISubroutineType(types: !2831)
!2831 = !{null, !2809}
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2810, file: !363, line: 249, baseType: !111, size: 64, offset: 128)
!2833 = !{!2804, !2834, !2838, !2840}
!2834 = !DIGlobalVariableExpression(var: !2835, expr: !DIExpression())
!2835 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !2806, file: !2836, line: 19, type: !2837, isLocal: true, isDefinition: true)
!2836 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2837 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !436, line: 43, elements: !437)
!2838 = !DIGlobalVariableExpression(var: !2839, expr: !DIExpression())
!2839 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !2806, file: !2836, line: 25, type: !108, isLocal: true, isDefinition: true)
!2840 = !DIGlobalVariableExpression(var: !2841, expr: !DIExpression())
!2841 = distinct !DIGlobalVariable(name: "timeout_list", scope: !2806, file: !2836, line: 17, type: !2842, isLocal: true, isDefinition: true)
!2842 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !367, line: 48, baseType: !2814)
!2843 = !DIGlobalVariableExpression(var: !2844, expr: !DIExpression())
!2844 = distinct !DIGlobalVariable(name: "lock", scope: !2845, file: !2967, line: 16, type: !2959, isLocal: true, isDefinition: true)
!2845 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2846, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2847, globals: !2966, splitDebugInlining: false, nameTableKind: None)
!2846 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timer.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/sensor_batch_processing")
!2847 = !{!2848, !443, !109, !104, !108, !2894, !2965}
!2848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2849, size: 32)
!2849 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_timer", file: !359, line: 1318, size: 448, elements: !2850)
!2850 = !{!2851, !2876, !2882, !2886, !2887, !2892, !2893}
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2849, file: !359, line: 1324, baseType: !2852, size: 192)
!2852 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !363, line: 244, size: 192, elements: !2853)
!2853 = !{!2854, !2869, !2875}
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2852, file: !363, line: 245, baseType: !2855, size: 64)
!2855 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !367, line: 49, baseType: !2856)
!2856 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !367, line: 37, size: 64, elements: !2857)
!2857 = !{!2858, !2864}
!2858 = !DIDerivedType(tag: DW_TAG_member, scope: !2856, file: !367, line: 38, baseType: !2859, size: 32)
!2859 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2856, file: !367, line: 38, size: 32, elements: !2860)
!2860 = !{!2861, !2863}
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2859, file: !367, line: 39, baseType: !2862, size: 32)
!2862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2856, size: 32)
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2859, file: !367, line: 40, baseType: !2862, size: 32)
!2864 = !DIDerivedType(tag: DW_TAG_member, scope: !2856, file: !367, line: 42, baseType: !2865, size: 32, offset: 32)
!2865 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2856, file: !367, line: 42, size: 32, elements: !2866)
!2866 = !{!2867, !2868}
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2865, file: !367, line: 43, baseType: !2862, size: 32)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2865, file: !367, line: 44, baseType: !2862, size: 32)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2852, file: !363, line: 246, baseType: !2870, size: 32, offset: 64)
!2870 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !363, line: 242, baseType: !2871)
!2871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2872, size: 32)
!2872 = !DISubroutineType(types: !2873)
!2873 = !{null, !2874}
!2874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2852, size: 32)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2852, file: !363, line: 249, baseType: !111, size: 64, offset: 128)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2849, file: !359, line: 1327, baseType: !2877, size: 64, offset: 192)
!2877 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !363, line: 233, baseType: !2878)
!2878 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !363, line: 231, size: 64, elements: !2879)
!2879 = !{!2880}
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2878, file: !363, line: 232, baseType: !2881, size: 64)
!2881 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !367, line: 48, baseType: !2856)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "expiry_fn", scope: !2849, file: !359, line: 1330, baseType: !2883, size: 32, offset: 256)
!2883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2884, size: 32)
!2884 = !DISubroutineType(types: !2885)
!2885 = !{null, !2848}
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "stop_fn", scope: !2849, file: !359, line: 1333, baseType: !2883, size: 32, offset: 288)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "period", scope: !2849, file: !359, line: 1336, baseType: !2888, size: 64, offset: 320)
!2888 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !110, line: 67, baseType: !2889)
!2889 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !110, line: 65, size: 64, elements: !2890)
!2890 = !{!2891}
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !2889, file: !110, line: 66, baseType: !109, size: 64)
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !2849, file: !359, line: 1339, baseType: !113, size: 32, offset: 384)
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !2849, file: !359, line: 1342, baseType: !104, size: 32, offset: 416)
!2894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2895, size: 32)
!2895 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !659, line: 245, size: 1024, elements: !2896)
!2896 = !{!2897, !2926, !2938, !2939, !2940, !2941, !2947, !2960}
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2895, file: !659, line: 247, baseType: !2898, size: 384)
!2898 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !659, line: 57, size: 384, elements: !2899)
!2899 = !{!2900, !2910, !2912, !2913, !2914, !2923, !2924, !2925}
!2900 = !DIDerivedType(tag: DW_TAG_member, scope: !2898, file: !659, line: 60, baseType: !2901, size: 64)
!2901 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2898, file: !659, line: 60, size: 64, elements: !2902)
!2902 = !{!2903, !2904}
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2901, file: !659, line: 61, baseType: !2855, size: 64)
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2901, file: !659, line: 62, baseType: !2905, size: 64)
!2905 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !684, line: 49, size: 64, elements: !2906)
!2906 = !{!2907}
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2905, file: !684, line: 50, baseType: !2908, size: 64)
!2908 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2909, size: 64, elements: !689)
!2909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2905, size: 32)
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2898, file: !659, line: 68, baseType: !2911, size: 32, offset: 64)
!2911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2877, size: 32)
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2898, file: !659, line: 71, baseType: !164, size: 8, offset: 96)
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2898, file: !659, line: 74, baseType: !164, size: 8, offset: 104)
!2914 = !DIDerivedType(tag: DW_TAG_member, scope: !2898, file: !659, line: 90, baseType: !2915, size: 16, offset: 112)
!2915 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2898, file: !659, line: 90, size: 16, elements: !2916)
!2916 = !{!2917, !2922}
!2917 = !DIDerivedType(tag: DW_TAG_member, scope: !2915, file: !659, line: 91, baseType: !2918, size: 16)
!2918 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2915, file: !659, line: 91, size: 16, elements: !2919)
!2919 = !{!2920, !2921}
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2918, file: !659, line: 96, baseType: !707, size: 8)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2918, file: !659, line: 97, baseType: !164, size: 8, offset: 8)
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2915, file: !659, line: 100, baseType: !168, size: 16)
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2898, file: !659, line: 107, baseType: !113, size: 32, offset: 128)
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2898, file: !659, line: 127, baseType: !104, size: 32, offset: 160)
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2898, file: !659, line: 131, baseType: !2852, size: 192, offset: 192)
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2895, file: !659, line: 250, baseType: !2927, size: 288, offset: 384)
!2927 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !726, line: 25, size: 288, elements: !2928)
!2928 = !{!2929, !2930, !2931, !2932, !2933, !2934, !2935, !2936, !2937}
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2927, file: !726, line: 26, baseType: !113, size: 32)
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2927, file: !726, line: 27, baseType: !113, size: 32, offset: 32)
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2927, file: !726, line: 28, baseType: !113, size: 32, offset: 64)
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2927, file: !726, line: 29, baseType: !113, size: 32, offset: 96)
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2927, file: !726, line: 30, baseType: !113, size: 32, offset: 128)
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2927, file: !726, line: 31, baseType: !113, size: 32, offset: 160)
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2927, file: !726, line: 32, baseType: !113, size: 32, offset: 192)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2927, file: !726, line: 33, baseType: !113, size: 32, offset: 224)
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2927, file: !726, line: 34, baseType: !113, size: 32, offset: 256)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2895, file: !659, line: 253, baseType: !104, size: 32, offset: 672)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2895, file: !659, line: 256, baseType: !2877, size: 64, offset: 704)
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2895, file: !659, line: 294, baseType: !108, size: 32, offset: 768)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2895, file: !659, line: 300, baseType: !2942, size: 96, offset: 800)
!2942 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !659, line: 149, size: 96, elements: !2943)
!2943 = !{!2944, !2945, !2946}
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2942, file: !659, line: 153, baseType: !22, size: 32)
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2942, file: !659, line: 162, baseType: !439, size: 32, offset: 32)
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2942, file: !659, line: 168, baseType: !439, size: 32, offset: 64)
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2895, file: !659, line: 325, baseType: !2948, size: 32, offset: 896)
!2948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2949, size: 32)
!2949 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !359, line: 5073, size: 160, elements: !2950)
!2950 = !{!2951, !2957, !2958}
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2949, file: !359, line: 5074, baseType: !2952, size: 96)
!2952 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !752, line: 56, size: 96, elements: !2953)
!2953 = !{!2954, !2955, !2956}
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2952, file: !752, line: 57, baseType: !755, size: 32)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2952, file: !752, line: 58, baseType: !104, size: 32, offset: 32)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2952, file: !752, line: 59, baseType: !439, size: 32, offset: 64)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2949, file: !359, line: 5075, baseType: !2877, size: 64, offset: 96)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2949, file: !359, line: 5076, baseType: !2959, offset: 160)
!2959 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !436, line: 43, elements: !437)
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2895, file: !659, line: 343, baseType: !2961, size: 64, offset: 928)
!2961 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !726, line: 60, size: 64, elements: !2962)
!2962 = !{!2963, !2964}
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2961, file: !726, line: 63, baseType: !113, size: 32)
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2961, file: !726, line: 66, baseType: !113, size: 32, offset: 32)
!2965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2855, size: 32)
!2966 = !{!2843}
!2967 = !DIFile(filename: "zephyr/kernel/timer.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2968 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2969, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !567, splitDebugInlining: false, nameTableKind: None)
!2969 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/sensor_batch_processing")
!2970 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2971, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !567, splitDebugInlining: false, nameTableKind: None)
!2971 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/sensor_batch_processing")
!2972 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2973, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2974, retainedTypes: !2994, splitDebugInlining: false, nameTableKind: None)
!2973 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/sensor_batch_processing")
!2974 = !{!2975, !2983}
!2975 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !2976, line: 69, baseType: !32, size: 32, elements: !2977)
!2976 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2977 = !{!2978, !2979, !2980, !2981, !2982}
!2978 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!2979 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!2980 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!2981 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!2982 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!2983 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !2976, line: 56, baseType: !32, size: 32, elements: !2984)
!2984 = !{!2985, !2986, !2987, !2988, !2989, !2990, !2991, !2992, !2993}
!2985 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!2986 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!2987 = !DIEnumerator(name: "LENGTH_H", value: 2)
!2988 = !DIEnumerator(name: "LENGTH_L", value: 3)
!2989 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!2990 = !DIEnumerator(name: "LENGTH_J", value: 5)
!2991 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!2992 = !DIEnumerator(name: "LENGTH_T", value: 7)
!2993 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!2994 = !{!108, !2975, !2983, !2995, !708, !429, !2997, !2998, !165, !169, !105, !439, !104, !22, !32, !552, !3000, !3001, !144, !553, !112, !554, !2996, !3002, !3003, !3004, !3005}
!2995 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !2976, line: 31, baseType: !2996)
!2996 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !112)
!2997 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !440, line: 329, baseType: !32)
!2998 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !2976, line: 32, baseType: !2999)
!2999 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !115)
!3000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !708, size: 32)
!3001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !429, size: 32)
!3002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2996, size: 32)
!3003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !439, size: 32)
!3004 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !440, line: 145, baseType: !108)
!3005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3004, size: 32)
!3006 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3007, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!3007 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/sensor_batch_processing/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/sensor_batch_processing")
!3008 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3009, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !3010, splitDebugInlining: false, nameTableKind: None)
!3009 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/sensor_batch_processing")
!3010 = !{!105, !165, !108, !32}
!3011 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3012, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3013, retainedTypes: !567, splitDebugInlining: false, nameTableKind: None)
!3012 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/sensor_batch_processing")
!3013 = !{!3014, !30}
!3014 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !3015, line: 27, baseType: !32, size: 32, elements: !3016)
!3015 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3016 = !{!3017, !3018, !3019, !3020, !3021}
!3017 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!3018 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!3019 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!3020 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!3021 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!3022 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3023, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3024, retainedTypes: !3025, splitDebugInlining: false, nameTableKind: None)
!3023 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/sensor_batch_processing")
!3024 = !{!999, !3014, !30}
!3025 = !{!1193, !3026, !104, !108, !220, !113, !164, !3043}
!3026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3027, size: 32)
!3027 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !802, line: 426, baseType: !3028)
!3028 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !802, line: 411, size: 28704, elements: !3029)
!3029 = !{!3030, !3031, !3032, !3033, !3034, !3035, !3036, !3037, !3038, !3039, !3040, !3041, !3042}
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !3028, file: !802, line: 413, baseType: !2057, size: 256)
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3028, file: !802, line: 414, baseType: !2059, size: 768, offset: 256)
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !3028, file: !802, line: 415, baseType: !2057, size: 256, offset: 1024)
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3028, file: !802, line: 416, baseType: !2059, size: 768, offset: 1280)
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !3028, file: !802, line: 417, baseType: !2057, size: 256, offset: 2048)
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3028, file: !802, line: 418, baseType: !2059, size: 768, offset: 2304)
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !3028, file: !802, line: 419, baseType: !2057, size: 256, offset: 3072)
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3028, file: !802, line: 420, baseType: !2059, size: 768, offset: 3328)
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !3028, file: !802, line: 421, baseType: !2057, size: 256, offset: 4096)
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3028, file: !802, line: 422, baseType: !2070, size: 1792, offset: 4352)
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !3028, file: !802, line: 423, baseType: !2074, size: 1920, offset: 6144)
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3028, file: !802, line: 424, baseType: !2079, size: 20608, offset: 8064)
!3042 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !3028, file: !802, line: 425, baseType: !584, size: 32, offset: 28672)
!3043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3044, size: 32)
!3044 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !802, line: 468, baseType: !3045)
!3045 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !802, line: 445, size: 1120, elements: !3046)
!3046 = !{!3047, !3048, !3049, !3050, !3051, !3052, !3053, !3054, !3055, !3056, !3057, !3058, !3059, !3060, !3061, !3062, !3063, !3064, !3065, !3066, !3067}
!3047 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3045, file: !802, line: 447, baseType: !806, size: 32)
!3048 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3045, file: !802, line: 448, baseType: !584, size: 32, offset: 32)
!3049 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3045, file: !802, line: 449, baseType: !584, size: 32, offset: 64)
!3050 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3045, file: !802, line: 450, baseType: !584, size: 32, offset: 96)
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3045, file: !802, line: 451, baseType: !584, size: 32, offset: 128)
!3052 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3045, file: !802, line: 452, baseType: !584, size: 32, offset: 160)
!3053 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3045, file: !802, line: 453, baseType: !2094, size: 96, offset: 192)
!3054 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3045, file: !802, line: 454, baseType: !584, size: 32, offset: 288)
!3055 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !3045, file: !802, line: 455, baseType: !584, size: 32, offset: 320)
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !3045, file: !802, line: 456, baseType: !584, size: 32, offset: 352)
!3057 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !3045, file: !802, line: 457, baseType: !584, size: 32, offset: 384)
!3058 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !3045, file: !802, line: 458, baseType: !584, size: 32, offset: 416)
!3059 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !3045, file: !802, line: 459, baseType: !584, size: 32, offset: 448)
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !3045, file: !802, line: 460, baseType: !584, size: 32, offset: 480)
!3061 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !3045, file: !802, line: 461, baseType: !2105, size: 64, offset: 512)
!3062 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !3045, file: !802, line: 462, baseType: !806, size: 32, offset: 576)
!3063 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !3045, file: !802, line: 463, baseType: !806, size: 32, offset: 608)
!3064 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !3045, file: !802, line: 464, baseType: !2109, size: 128, offset: 640)
!3065 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !3045, file: !802, line: 465, baseType: !2111, size: 160, offset: 768)
!3066 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3045, file: !802, line: 466, baseType: !2113, size: 160, offset: 928)
!3067 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !3045, file: !802, line: 467, baseType: !584, size: 32, offset: 1088)
!3068 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3069, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !567, splitDebugInlining: false, nameTableKind: None)
!3069 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/sensor_batch_processing")
!3070 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3071, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3072, splitDebugInlining: false, nameTableKind: None)
!3071 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/sensor_batch_processing")
!3072 = !{!104, !108, !22, !3073}
!3073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3074, size: 32)
!3074 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !802, line: 468, baseType: !3075)
!3075 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !802, line: 445, size: 1120, elements: !3076)
!3076 = !{!3077, !3078, !3079, !3080, !3081, !3082, !3083, !3084, !3085, !3086, !3087, !3088, !3089, !3090, !3091, !3092, !3093, !3094, !3095, !3096, !3097}
!3077 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3075, file: !802, line: 447, baseType: !806, size: 32)
!3078 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3075, file: !802, line: 448, baseType: !584, size: 32, offset: 32)
!3079 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3075, file: !802, line: 449, baseType: !584, size: 32, offset: 64)
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3075, file: !802, line: 450, baseType: !584, size: 32, offset: 96)
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3075, file: !802, line: 451, baseType: !584, size: 32, offset: 128)
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3075, file: !802, line: 452, baseType: !584, size: 32, offset: 160)
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3075, file: !802, line: 453, baseType: !2094, size: 96, offset: 192)
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3075, file: !802, line: 454, baseType: !584, size: 32, offset: 288)
!3085 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !3075, file: !802, line: 455, baseType: !584, size: 32, offset: 320)
!3086 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !3075, file: !802, line: 456, baseType: !584, size: 32, offset: 352)
!3087 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !3075, file: !802, line: 457, baseType: !584, size: 32, offset: 384)
!3088 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !3075, file: !802, line: 458, baseType: !584, size: 32, offset: 416)
!3089 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !3075, file: !802, line: 459, baseType: !584, size: 32, offset: 448)
!3090 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !3075, file: !802, line: 460, baseType: !584, size: 32, offset: 480)
!3091 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !3075, file: !802, line: 461, baseType: !2105, size: 64, offset: 512)
!3092 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !3075, file: !802, line: 462, baseType: !806, size: 32, offset: 576)
!3093 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !3075, file: !802, line: 463, baseType: !806, size: 32, offset: 608)
!3094 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !3075, file: !802, line: 464, baseType: !2109, size: 128, offset: 640)
!3095 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !3075, file: !802, line: 465, baseType: !2111, size: 160, offset: 768)
!3096 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3075, file: !802, line: 466, baseType: !2113, size: 160, offset: 928)
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !3075, file: !802, line: 467, baseType: !584, size: 32, offset: 1088)
!3098 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3099, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3100, splitDebugInlining: false, nameTableKind: None)
!3099 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/sensor_batch_processing")
!3100 = !{!3101, !104, !108}
!3101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3102, size: 32)
!3102 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !802, line: 468, baseType: !3103)
!3103 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !802, line: 445, size: 1120, elements: !3104)
!3104 = !{!3105, !3106, !3107, !3108, !3109, !3110, !3111, !3112, !3113, !3114, !3115, !3116, !3117, !3118, !3119, !3120, !3121, !3122, !3123, !3124, !3125}
!3105 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3103, file: !802, line: 447, baseType: !806, size: 32)
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3103, file: !802, line: 448, baseType: !584, size: 32, offset: 32)
!3107 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3103, file: !802, line: 449, baseType: !584, size: 32, offset: 64)
!3108 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3103, file: !802, line: 450, baseType: !584, size: 32, offset: 96)
!3109 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3103, file: !802, line: 451, baseType: !584, size: 32, offset: 128)
!3110 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3103, file: !802, line: 452, baseType: !584, size: 32, offset: 160)
!3111 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3103, file: !802, line: 453, baseType: !2094, size: 96, offset: 192)
!3112 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3103, file: !802, line: 454, baseType: !584, size: 32, offset: 288)
!3113 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !3103, file: !802, line: 455, baseType: !584, size: 32, offset: 320)
!3114 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !3103, file: !802, line: 456, baseType: !584, size: 32, offset: 352)
!3115 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !3103, file: !802, line: 457, baseType: !584, size: 32, offset: 384)
!3116 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !3103, file: !802, line: 458, baseType: !584, size: 32, offset: 416)
!3117 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !3103, file: !802, line: 459, baseType: !584, size: 32, offset: 448)
!3118 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !3103, file: !802, line: 460, baseType: !584, size: 32, offset: 480)
!3119 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !3103, file: !802, line: 461, baseType: !2105, size: 64, offset: 512)
!3120 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !3103, file: !802, line: 462, baseType: !806, size: 32, offset: 576)
!3121 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !3103, file: !802, line: 463, baseType: !806, size: 32, offset: 608)
!3122 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !3103, file: !802, line: 464, baseType: !2109, size: 128, offset: 640)
!3123 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !3103, file: !802, line: 465, baseType: !2111, size: 160, offset: 768)
!3124 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3103, file: !802, line: 466, baseType: !2113, size: 160, offset: 928)
!3125 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !3103, file: !802, line: 467, baseType: !584, size: 32, offset: 1088)
!3126 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3127, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3128, splitDebugInlining: false, nameTableKind: None)
!3127 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/sensor_batch_processing")
!3128 = !{!3129, !113, !104, !108}
!3129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3130, size: 32)
!3130 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !3131, line: 98, size: 256, elements: !3132)
!3131 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3132 = !{!3133, !3138, !3143, !3148, !3153, !3158, !3163, !3168}
!3133 = !DIDerivedType(tag: DW_TAG_member, scope: !3130, file: !3131, line: 99, baseType: !3134, size: 32)
!3134 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3130, file: !3131, line: 99, size: 32, elements: !3135)
!3135 = !{!3136, !3137}
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !3134, file: !3131, line: 99, baseType: !113, size: 32)
!3137 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !3134, file: !3131, line: 99, baseType: !113, size: 32)
!3138 = !DIDerivedType(tag: DW_TAG_member, scope: !3130, file: !3131, line: 100, baseType: !3139, size: 32, offset: 32)
!3139 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3130, file: !3131, line: 100, size: 32, elements: !3140)
!3140 = !{!3141, !3142}
!3141 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !3139, file: !3131, line: 100, baseType: !113, size: 32)
!3142 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !3139, file: !3131, line: 100, baseType: !113, size: 32)
!3143 = !DIDerivedType(tag: DW_TAG_member, scope: !3130, file: !3131, line: 101, baseType: !3144, size: 32, offset: 64)
!3144 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3130, file: !3131, line: 101, size: 32, elements: !3145)
!3145 = !{!3146, !3147}
!3146 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !3144, file: !3131, line: 101, baseType: !113, size: 32)
!3147 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !3144, file: !3131, line: 101, baseType: !113, size: 32)
!3148 = !DIDerivedType(tag: DW_TAG_member, scope: !3130, file: !3131, line: 102, baseType: !3149, size: 32, offset: 96)
!3149 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3130, file: !3131, line: 102, size: 32, elements: !3150)
!3150 = !{!3151, !3152}
!3151 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !3149, file: !3131, line: 102, baseType: !113, size: 32)
!3152 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !3149, file: !3131, line: 102, baseType: !113, size: 32)
!3153 = !DIDerivedType(tag: DW_TAG_member, scope: !3130, file: !3131, line: 103, baseType: !3154, size: 32, offset: 128)
!3154 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3130, file: !3131, line: 103, size: 32, elements: !3155)
!3155 = !{!3156, !3157}
!3156 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !3154, file: !3131, line: 103, baseType: !113, size: 32)
!3157 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !3154, file: !3131, line: 103, baseType: !113, size: 32)
!3158 = !DIDerivedType(tag: DW_TAG_member, scope: !3130, file: !3131, line: 104, baseType: !3159, size: 32, offset: 160)
!3159 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3130, file: !3131, line: 104, size: 32, elements: !3160)
!3160 = !{!3161, !3162}
!3161 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !3159, file: !3131, line: 104, baseType: !113, size: 32)
!3162 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !3159, file: !3131, line: 104, baseType: !113, size: 32)
!3163 = !DIDerivedType(tag: DW_TAG_member, scope: !3130, file: !3131, line: 105, baseType: !3164, size: 32, offset: 192)
!3164 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3130, file: !3131, line: 105, size: 32, elements: !3165)
!3165 = !{!3166, !3167}
!3166 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !3164, file: !3131, line: 105, baseType: !113, size: 32)
!3167 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !3164, file: !3131, line: 105, baseType: !113, size: 32)
!3168 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !3130, file: !3131, line: 106, baseType: !113, size: 32, offset: 224)
!3169 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3170, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3013, retainedTypes: !3171, splitDebugInlining: false, nameTableKind: None)
!3170 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/sensor_batch_processing")
!3171 = !{!3172, !104, !108, !3197, !3240, !113}
!3172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3173, size: 32)
!3173 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !802, line: 468, baseType: !3174)
!3174 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !802, line: 445, size: 1120, elements: !3175)
!3175 = !{!3176, !3177, !3178, !3179, !3180, !3181, !3182, !3183, !3184, !3185, !3186, !3187, !3188, !3189, !3190, !3191, !3192, !3193, !3194, !3195, !3196}
!3176 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3174, file: !802, line: 447, baseType: !806, size: 32)
!3177 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3174, file: !802, line: 448, baseType: !584, size: 32, offset: 32)
!3178 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3174, file: !802, line: 449, baseType: !584, size: 32, offset: 64)
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3174, file: !802, line: 450, baseType: !584, size: 32, offset: 96)
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3174, file: !802, line: 451, baseType: !584, size: 32, offset: 128)
!3181 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3174, file: !802, line: 452, baseType: !584, size: 32, offset: 160)
!3182 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3174, file: !802, line: 453, baseType: !2094, size: 96, offset: 192)
!3183 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3174, file: !802, line: 454, baseType: !584, size: 32, offset: 288)
!3184 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !3174, file: !802, line: 455, baseType: !584, size: 32, offset: 320)
!3185 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !3174, file: !802, line: 456, baseType: !584, size: 32, offset: 352)
!3186 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !3174, file: !802, line: 457, baseType: !584, size: 32, offset: 384)
!3187 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !3174, file: !802, line: 458, baseType: !584, size: 32, offset: 416)
!3188 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !3174, file: !802, line: 459, baseType: !584, size: 32, offset: 448)
!3189 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !3174, file: !802, line: 460, baseType: !584, size: 32, offset: 480)
!3190 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !3174, file: !802, line: 461, baseType: !2105, size: 64, offset: 512)
!3191 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !3174, file: !802, line: 462, baseType: !806, size: 32, offset: 576)
!3192 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !3174, file: !802, line: 463, baseType: !806, size: 32, offset: 608)
!3193 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !3174, file: !802, line: 464, baseType: !2109, size: 128, offset: 640)
!3194 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !3174, file: !802, line: 465, baseType: !2111, size: 160, offset: 768)
!3195 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3174, file: !802, line: 466, baseType: !2113, size: 160, offset: 928)
!3196 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !3174, file: !802, line: 467, baseType: !584, size: 32, offset: 1088)
!3197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3198, size: 32)
!3198 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !3131, line: 141, baseType: !3199)
!3199 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !3131, line: 97, size: 256, elements: !3200)
!3200 = !{!3201}
!3201 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !3199, file: !3131, line: 107, baseType: !3202, size: 256)
!3202 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !3131, line: 98, size: 256, elements: !3203)
!3203 = !{!3204, !3209, !3214, !3219, !3224, !3229, !3234, !3239}
!3204 = !DIDerivedType(tag: DW_TAG_member, scope: !3202, file: !3131, line: 99, baseType: !3205, size: 32)
!3205 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3202, file: !3131, line: 99, size: 32, elements: !3206)
!3206 = !{!3207, !3208}
!3207 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !3205, file: !3131, line: 99, baseType: !113, size: 32)
!3208 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !3205, file: !3131, line: 99, baseType: !113, size: 32)
!3209 = !DIDerivedType(tag: DW_TAG_member, scope: !3202, file: !3131, line: 100, baseType: !3210, size: 32, offset: 32)
!3210 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3202, file: !3131, line: 100, size: 32, elements: !3211)
!3211 = !{!3212, !3213}
!3212 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !3210, file: !3131, line: 100, baseType: !113, size: 32)
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !3210, file: !3131, line: 100, baseType: !113, size: 32)
!3214 = !DIDerivedType(tag: DW_TAG_member, scope: !3202, file: !3131, line: 101, baseType: !3215, size: 32, offset: 64)
!3215 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3202, file: !3131, line: 101, size: 32, elements: !3216)
!3216 = !{!3217, !3218}
!3217 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !3215, file: !3131, line: 101, baseType: !113, size: 32)
!3218 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !3215, file: !3131, line: 101, baseType: !113, size: 32)
!3219 = !DIDerivedType(tag: DW_TAG_member, scope: !3202, file: !3131, line: 102, baseType: !3220, size: 32, offset: 96)
!3220 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3202, file: !3131, line: 102, size: 32, elements: !3221)
!3221 = !{!3222, !3223}
!3222 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !3220, file: !3131, line: 102, baseType: !113, size: 32)
!3223 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !3220, file: !3131, line: 102, baseType: !113, size: 32)
!3224 = !DIDerivedType(tag: DW_TAG_member, scope: !3202, file: !3131, line: 103, baseType: !3225, size: 32, offset: 128)
!3225 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3202, file: !3131, line: 103, size: 32, elements: !3226)
!3226 = !{!3227, !3228}
!3227 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !3225, file: !3131, line: 103, baseType: !113, size: 32)
!3228 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !3225, file: !3131, line: 103, baseType: !113, size: 32)
!3229 = !DIDerivedType(tag: DW_TAG_member, scope: !3202, file: !3131, line: 104, baseType: !3230, size: 32, offset: 160)
!3230 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3202, file: !3131, line: 104, size: 32, elements: !3231)
!3231 = !{!3232, !3233}
!3232 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !3230, file: !3131, line: 104, baseType: !113, size: 32)
!3233 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !3230, file: !3131, line: 104, baseType: !113, size: 32)
!3234 = !DIDerivedType(tag: DW_TAG_member, scope: !3202, file: !3131, line: 105, baseType: !3235, size: 32, offset: 192)
!3235 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3202, file: !3131, line: 105, size: 32, elements: !3236)
!3236 = !{!3237, !3238}
!3237 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !3235, file: !3131, line: 105, baseType: !113, size: 32)
!3238 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !3235, file: !3131, line: 105, baseType: !113, size: 32)
!3239 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !3202, file: !3131, line: 106, baseType: !113, size: 32, offset: 224)
!3240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !168, size: 32)
!3241 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3242, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2042, retainedTypes: !3243, splitDebugInlining: false, nameTableKind: None)
!3242 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/sensor_batch_processing")
!3243 = !{!1193, !220, !164, !113, !3244, !3261}
!3244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3245, size: 32)
!3245 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !802, line: 426, baseType: !3246)
!3246 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !802, line: 411, size: 28704, elements: !3247)
!3247 = !{!3248, !3249, !3250, !3251, !3252, !3253, !3254, !3255, !3256, !3257, !3258, !3259, !3260}
!3248 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !3246, file: !802, line: 413, baseType: !2057, size: 256)
!3249 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3246, file: !802, line: 414, baseType: !2059, size: 768, offset: 256)
!3250 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !3246, file: !802, line: 415, baseType: !2057, size: 256, offset: 1024)
!3251 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3246, file: !802, line: 416, baseType: !2059, size: 768, offset: 1280)
!3252 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !3246, file: !802, line: 417, baseType: !2057, size: 256, offset: 2048)
!3253 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3246, file: !802, line: 418, baseType: !2059, size: 768, offset: 2304)
!3254 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !3246, file: !802, line: 419, baseType: !2057, size: 256, offset: 3072)
!3255 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3246, file: !802, line: 420, baseType: !2059, size: 768, offset: 3328)
!3256 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !3246, file: !802, line: 421, baseType: !2057, size: 256, offset: 4096)
!3257 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3246, file: !802, line: 422, baseType: !2070, size: 1792, offset: 4352)
!3258 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !3246, file: !802, line: 423, baseType: !2074, size: 1920, offset: 6144)
!3259 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3246, file: !802, line: 424, baseType: !2079, size: 20608, offset: 8064)
!3260 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !3246, file: !802, line: 425, baseType: !584, size: 32, offset: 28672)
!3261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3262, size: 32)
!3262 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !802, line: 468, baseType: !3263)
!3263 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !802, line: 445, size: 1120, elements: !3264)
!3264 = !{!3265, !3266, !3267, !3268, !3269, !3270, !3271, !3272, !3273, !3274, !3275, !3276, !3277, !3278, !3279, !3280, !3281, !3282, !3283, !3284, !3285}
!3265 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3263, file: !802, line: 447, baseType: !806, size: 32)
!3266 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3263, file: !802, line: 448, baseType: !584, size: 32, offset: 32)
!3267 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3263, file: !802, line: 449, baseType: !584, size: 32, offset: 64)
!3268 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3263, file: !802, line: 450, baseType: !584, size: 32, offset: 96)
!3269 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3263, file: !802, line: 451, baseType: !584, size: 32, offset: 128)
!3270 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3263, file: !802, line: 452, baseType: !584, size: 32, offset: 160)
!3271 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3263, file: !802, line: 453, baseType: !2094, size: 96, offset: 192)
!3272 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3263, file: !802, line: 454, baseType: !584, size: 32, offset: 288)
!3273 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !3263, file: !802, line: 455, baseType: !584, size: 32, offset: 320)
!3274 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !3263, file: !802, line: 456, baseType: !584, size: 32, offset: 352)
!3275 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !3263, file: !802, line: 457, baseType: !584, size: 32, offset: 384)
!3276 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !3263, file: !802, line: 458, baseType: !584, size: 32, offset: 416)
!3277 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !3263, file: !802, line: 459, baseType: !584, size: 32, offset: 448)
!3278 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !3263, file: !802, line: 460, baseType: !584, size: 32, offset: 480)
!3279 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !3263, file: !802, line: 461, baseType: !2105, size: 64, offset: 512)
!3280 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !3263, file: !802, line: 462, baseType: !806, size: 32, offset: 576)
!3281 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !3263, file: !802, line: 463, baseType: !806, size: 32, offset: 608)
!3282 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !3263, file: !802, line: 464, baseType: !2109, size: 128, offset: 640)
!3283 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !3263, file: !802, line: 465, baseType: !2111, size: 160, offset: 768)
!3284 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3263, file: !802, line: 466, baseType: !2113, size: 160, offset: 928)
!3285 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !3263, file: !802, line: 467, baseType: !584, size: 32, offset: 1088)
!3286 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3287, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3288, splitDebugInlining: false, nameTableKind: None)
!3287 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/sensor_batch_processing")
!3288 = !{!3289, !104, !108}
!3289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3290, size: 32)
!3290 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !802, line: 468, baseType: !3291)
!3291 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !802, line: 445, size: 1120, elements: !3292)
!3292 = !{!3293, !3294, !3295, !3296, !3297, !3298, !3299, !3300, !3301, !3302, !3303, !3304, !3305, !3306, !3307, !3308, !3309, !3310, !3311, !3312, !3313}
!3293 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3291, file: !802, line: 447, baseType: !806, size: 32)
!3294 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3291, file: !802, line: 448, baseType: !584, size: 32, offset: 32)
!3295 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3291, file: !802, line: 449, baseType: !584, size: 32, offset: 64)
!3296 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3291, file: !802, line: 450, baseType: !584, size: 32, offset: 96)
!3297 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3291, file: !802, line: 451, baseType: !584, size: 32, offset: 128)
!3298 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3291, file: !802, line: 452, baseType: !584, size: 32, offset: 160)
!3299 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3291, file: !802, line: 453, baseType: !2094, size: 96, offset: 192)
!3300 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3291, file: !802, line: 454, baseType: !584, size: 32, offset: 288)
!3301 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !3291, file: !802, line: 455, baseType: !584, size: 32, offset: 320)
!3302 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !3291, file: !802, line: 456, baseType: !584, size: 32, offset: 352)
!3303 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !3291, file: !802, line: 457, baseType: !584, size: 32, offset: 384)
!3304 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !3291, file: !802, line: 458, baseType: !584, size: 32, offset: 416)
!3305 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !3291, file: !802, line: 459, baseType: !584, size: 32, offset: 448)
!3306 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !3291, file: !802, line: 460, baseType: !584, size: 32, offset: 480)
!3307 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !3291, file: !802, line: 461, baseType: !2105, size: 64, offset: 512)
!3308 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !3291, file: !802, line: 462, baseType: !806, size: 32, offset: 576)
!3309 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !3291, file: !802, line: 463, baseType: !806, size: 32, offset: 608)
!3310 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !3291, file: !802, line: 464, baseType: !2109, size: 128, offset: 640)
!3311 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !3291, file: !802, line: 465, baseType: !2111, size: 160, offset: 768)
!3312 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3291, file: !802, line: 466, baseType: !2113, size: 160, offset: 928)
!3313 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !3291, file: !802, line: 467, baseType: !584, size: 32, offset: 1088)
!3314 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3315, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !3316, splitDebugInlining: false, nameTableKind: None)
!3315 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/sensor_batch_processing")
!3316 = !{!107, !443, !439, !1360, !3317, !165, !104}
!3317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3318, size: 32)
!3318 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !165)
!3319 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3320, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !3321, splitDebugInlining: false, nameTableKind: None)
!3320 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/sensor_batch_processing")
!3321 = !{!3322}
!3322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3323, size: 32)
!3323 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !580, line: 677, baseType: !3324)
!3324 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !580, line: 643, size: 1152, elements: !3325)
!3325 = !{!3326, !3327, !3328, !3329, !3330, !3331, !3332, !3333, !3334, !3335, !3336, !3337, !3338, !3339, !3340, !3341, !3342, !3343, !3344, !3345, !3346, !3347, !3348, !3349, !3350, !3351, !3352, !3353, !3354, !3355, !3356, !3357}
!3326 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3324, file: !580, line: 645, baseType: !584, size: 32)
!3327 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3324, file: !580, line: 646, baseType: !584, size: 32, offset: 32)
!3328 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3324, file: !580, line: 647, baseType: !584, size: 32, offset: 64)
!3329 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3324, file: !580, line: 648, baseType: !584, size: 32, offset: 96)
!3330 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3324, file: !580, line: 649, baseType: !584, size: 32, offset: 128)
!3331 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3324, file: !580, line: 650, baseType: !584, size: 32, offset: 160)
!3332 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !3324, file: !580, line: 651, baseType: !584, size: 32, offset: 192)
!3333 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3324, file: !580, line: 652, baseType: !113, size: 32, offset: 224)
!3334 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3324, file: !580, line: 653, baseType: !584, size: 32, offset: 256)
!3335 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3324, file: !580, line: 654, baseType: !584, size: 32, offset: 288)
!3336 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3324, file: !580, line: 655, baseType: !1227, size: 64, offset: 320)
!3337 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3324, file: !580, line: 656, baseType: !584, size: 32, offset: 384)
!3338 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3324, file: !580, line: 657, baseType: !584, size: 32, offset: 416)
!3339 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !3324, file: !580, line: 658, baseType: !584, size: 32, offset: 448)
!3340 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3324, file: !580, line: 659, baseType: !113, size: 32, offset: 480)
!3341 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3324, file: !580, line: 660, baseType: !584, size: 32, offset: 512)
!3342 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3324, file: !580, line: 661, baseType: !584, size: 32, offset: 544)
!3343 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3324, file: !580, line: 662, baseType: !1227, size: 64, offset: 576)
!3344 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3324, file: !580, line: 663, baseType: !584, size: 32, offset: 640)
!3345 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3324, file: !580, line: 664, baseType: !584, size: 32, offset: 672)
!3346 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !3324, file: !580, line: 665, baseType: !584, size: 32, offset: 704)
!3347 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3324, file: !580, line: 666, baseType: !113, size: 32, offset: 736)
!3348 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3324, file: !580, line: 667, baseType: !584, size: 32, offset: 768)
!3349 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3324, file: !580, line: 668, baseType: !584, size: 32, offset: 800)
!3350 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3324, file: !580, line: 669, baseType: !1227, size: 64, offset: 832)
!3351 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3324, file: !580, line: 670, baseType: !584, size: 32, offset: 896)
!3352 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3324, file: !580, line: 671, baseType: !584, size: 32, offset: 928)
!3353 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3324, file: !580, line: 672, baseType: !1227, size: 64, offset: 960)
!3354 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3324, file: !580, line: 673, baseType: !584, size: 32, offset: 1024)
!3355 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3324, file: !580, line: 674, baseType: !584, size: 32, offset: 1056)
!3356 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !3324, file: !580, line: 675, baseType: !584, size: 32, offset: 1088)
!3357 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !3324, file: !580, line: 676, baseType: !584, size: 32, offset: 1120)
!3358 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3359, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!3359 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/sensor_batch_processing")
!3360 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3361, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3362, retainedTypes: !3378, splitDebugInlining: false, nameTableKind: None)
!3361 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/sensor_batch_processing")
!3362 = !{!3363, !3370, !3374}
!3363 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3364, line: 38, baseType: !32, size: 32, elements: !3365)
!3364 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_def.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3365 = !{!3366, !3367, !3368, !3369}
!3366 = !DIEnumerator(name: "HAL_OK", value: 0)
!3367 = !DIEnumerator(name: "HAL_ERROR", value: 1)
!3368 = !DIEnumerator(name: "HAL_BUSY", value: 2)
!3369 = !DIEnumerator(name: "HAL_TIMEOUT", value: 3)
!3370 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1200, line: 184, baseType: !32, size: 32, elements: !3371)
!3371 = !{!3372, !3373}
!3372 = !DIEnumerator(name: "RESET", value: 0)
!3373 = !DIEnumerator(name: "SET", value: 1)
!3374 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1200, line: 190, baseType: !32, size: 32, elements: !3375)
!3375 = !{!3376, !3377}
!3376 = !DIEnumerator(name: "DISABLE", value: 0)
!3377 = !DIEnumerator(name: "ENABLE", value: 1)
!3378 = !{!104, !3379, !164, !113, !1873, !3415, !3421, !3432, !168, !3433, !114}
!3379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3380, size: 32)
!3380 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !580, line: 677, baseType: !3381)
!3381 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !580, line: 643, size: 1152, elements: !3382)
!3382 = !{!3383, !3384, !3385, !3386, !3387, !3388, !3389, !3390, !3391, !3392, !3393, !3394, !3395, !3396, !3397, !3398, !3399, !3400, !3401, !3402, !3403, !3404, !3405, !3406, !3407, !3408, !3409, !3410, !3411, !3412, !3413, !3414}
!3383 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3381, file: !580, line: 645, baseType: !584, size: 32)
!3384 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3381, file: !580, line: 646, baseType: !584, size: 32, offset: 32)
!3385 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3381, file: !580, line: 647, baseType: !584, size: 32, offset: 64)
!3386 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3381, file: !580, line: 648, baseType: !584, size: 32, offset: 96)
!3387 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3381, file: !580, line: 649, baseType: !584, size: 32, offset: 128)
!3388 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3381, file: !580, line: 650, baseType: !584, size: 32, offset: 160)
!3389 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !3381, file: !580, line: 651, baseType: !584, size: 32, offset: 192)
!3390 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3381, file: !580, line: 652, baseType: !113, size: 32, offset: 224)
!3391 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3381, file: !580, line: 653, baseType: !584, size: 32, offset: 256)
!3392 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3381, file: !580, line: 654, baseType: !584, size: 32, offset: 288)
!3393 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3381, file: !580, line: 655, baseType: !1227, size: 64, offset: 320)
!3394 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3381, file: !580, line: 656, baseType: !584, size: 32, offset: 384)
!3395 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3381, file: !580, line: 657, baseType: !584, size: 32, offset: 416)
!3396 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !3381, file: !580, line: 658, baseType: !584, size: 32, offset: 448)
!3397 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3381, file: !580, line: 659, baseType: !113, size: 32, offset: 480)
!3398 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3381, file: !580, line: 660, baseType: !584, size: 32, offset: 512)
!3399 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3381, file: !580, line: 661, baseType: !584, size: 32, offset: 544)
!3400 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3381, file: !580, line: 662, baseType: !1227, size: 64, offset: 576)
!3401 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3381, file: !580, line: 663, baseType: !584, size: 32, offset: 640)
!3402 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3381, file: !580, line: 664, baseType: !584, size: 32, offset: 672)
!3403 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !3381, file: !580, line: 665, baseType: !584, size: 32, offset: 704)
!3404 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3381, file: !580, line: 666, baseType: !113, size: 32, offset: 736)
!3405 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3381, file: !580, line: 667, baseType: !584, size: 32, offset: 768)
!3406 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3381, file: !580, line: 668, baseType: !584, size: 32, offset: 800)
!3407 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3381, file: !580, line: 669, baseType: !1227, size: 64, offset: 832)
!3408 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3381, file: !580, line: 670, baseType: !584, size: 32, offset: 896)
!3409 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3381, file: !580, line: 671, baseType: !584, size: 32, offset: 928)
!3410 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3381, file: !580, line: 672, baseType: !1227, size: 64, offset: 960)
!3411 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3381, file: !580, line: 673, baseType: !584, size: 32, offset: 1024)
!3412 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3381, file: !580, line: 674, baseType: !584, size: 32, offset: 1056)
!3413 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !3381, file: !580, line: 675, baseType: !584, size: 32, offset: 1088)
!3414 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !3381, file: !580, line: 676, baseType: !584, size: 32, offset: 1120)
!3415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3416, size: 32)
!3416 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !580, line: 637, baseType: !3417)
!3417 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !580, line: 633, size: 64, elements: !3418)
!3418 = !{!3419, !3420}
!3419 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3417, file: !580, line: 635, baseType: !584, size: 32)
!3420 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3417, file: !580, line: 636, baseType: !584, size: 32, offset: 32)
!3421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3422, size: 32)
!3422 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !580, line: 501, baseType: !3423)
!3423 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !580, line: 492, size: 224, elements: !3424)
!3424 = !{!3425, !3426, !3427, !3428, !3429, !3430, !3431}
!3425 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !3423, file: !580, line: 494, baseType: !584, size: 32)
!3426 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !3423, file: !580, line: 495, baseType: !584, size: 32, offset: 32)
!3427 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !3423, file: !580, line: 496, baseType: !584, size: 32, offset: 64)
!3428 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !3423, file: !580, line: 497, baseType: !584, size: 32, offset: 96)
!3429 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3423, file: !580, line: 498, baseType: !584, size: 32, offset: 128)
!3430 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !3423, file: !580, line: 499, baseType: !584, size: 32, offset: 160)
!3431 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !3423, file: !580, line: 500, baseType: !584, size: 32, offset: 192)
!3432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2075, size: 32)
!3433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3434, size: 32)
!3434 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !580, line: 583, baseType: !3435)
!3435 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !580, line: 572, size: 320, elements: !3436)
!3436 = !{!3437, !3438, !3439, !3440, !3441, !3442, !3443, !3444, !3445}
!3437 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !3435, file: !580, line: 574, baseType: !584, size: 32)
!3438 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !3435, file: !580, line: 575, baseType: !584, size: 32, offset: 32)
!3439 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !3435, file: !580, line: 576, baseType: !584, size: 32, offset: 64)
!3440 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !3435, file: !580, line: 577, baseType: !584, size: 32, offset: 96)
!3441 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !3435, file: !580, line: 578, baseType: !584, size: 32, offset: 128)
!3442 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !3435, file: !580, line: 579, baseType: !584, size: 32, offset: 160)
!3443 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !3435, file: !580, line: 580, baseType: !584, size: 32, offset: 192)
!3444 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !3435, file: !580, line: 581, baseType: !584, size: 32, offset: 224)
!3445 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !3435, file: !580, line: 582, baseType: !1514, size: 64, offset: 256)
!3446 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3447, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3448, retainedTypes: !3449, splitDebugInlining: false, nameTableKind: None)
!3447 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/sensor_batch_processing")
!3448 = !{!1199}
!3449 = !{!3450, !113, !3458, !3464, !3475}
!3450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3451, size: 32)
!3451 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !802, line: 770, baseType: !3452)
!3452 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !802, line: 764, size: 128, elements: !3453)
!3453 = !{!3454, !3455, !3456, !3457}
!3454 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !3452, file: !802, line: 766, baseType: !584, size: 32)
!3455 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !3452, file: !802, line: 767, baseType: !584, size: 32, offset: 32)
!3456 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !3452, file: !802, line: 768, baseType: !584, size: 32, offset: 64)
!3457 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !3452, file: !802, line: 769, baseType: !806, size: 32, offset: 96)
!3458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3459, size: 32)
!3459 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !580, line: 637, baseType: !3460)
!3460 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !580, line: 633, size: 64, elements: !3461)
!3461 = !{!3462, !3463}
!3462 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3460, file: !580, line: 635, baseType: !584, size: 32)
!3463 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3460, file: !580, line: 636, baseType: !584, size: 32, offset: 32)
!3464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3465, size: 32)
!3465 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !580, line: 501, baseType: !3466)
!3466 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !580, line: 492, size: 224, elements: !3467)
!3467 = !{!3468, !3469, !3470, !3471, !3472, !3473, !3474}
!3468 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !3466, file: !580, line: 494, baseType: !584, size: 32)
!3469 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !3466, file: !580, line: 495, baseType: !584, size: 32, offset: 32)
!3470 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !3466, file: !580, line: 496, baseType: !584, size: 32, offset: 64)
!3471 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !3466, file: !580, line: 497, baseType: !584, size: 32, offset: 96)
!3472 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3466, file: !580, line: 498, baseType: !584, size: 32, offset: 128)
!3473 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !3466, file: !580, line: 499, baseType: !584, size: 32, offset: 160)
!3474 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !3466, file: !580, line: 500, baseType: !584, size: 32, offset: 192)
!3475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3476, size: 32)
!3476 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !580, line: 677, baseType: !3477)
!3477 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !580, line: 643, size: 1152, elements: !3478)
!3478 = !{!3479, !3480, !3481, !3482, !3483, !3484, !3485, !3486, !3487, !3488, !3489, !3490, !3491, !3492, !3493, !3494, !3495, !3496, !3497, !3498, !3499, !3500, !3501, !3502, !3503, !3504, !3505, !3506, !3507, !3508, !3509, !3510}
!3479 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3477, file: !580, line: 645, baseType: !584, size: 32)
!3480 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3477, file: !580, line: 646, baseType: !584, size: 32, offset: 32)
!3481 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3477, file: !580, line: 647, baseType: !584, size: 32, offset: 64)
!3482 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3477, file: !580, line: 648, baseType: !584, size: 32, offset: 96)
!3483 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3477, file: !580, line: 649, baseType: !584, size: 32, offset: 128)
!3484 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3477, file: !580, line: 650, baseType: !584, size: 32, offset: 160)
!3485 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !3477, file: !580, line: 651, baseType: !584, size: 32, offset: 192)
!3486 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3477, file: !580, line: 652, baseType: !113, size: 32, offset: 224)
!3487 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3477, file: !580, line: 653, baseType: !584, size: 32, offset: 256)
!3488 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3477, file: !580, line: 654, baseType: !584, size: 32, offset: 288)
!3489 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3477, file: !580, line: 655, baseType: !1227, size: 64, offset: 320)
!3490 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3477, file: !580, line: 656, baseType: !584, size: 32, offset: 384)
!3491 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3477, file: !580, line: 657, baseType: !584, size: 32, offset: 416)
!3492 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !3477, file: !580, line: 658, baseType: !584, size: 32, offset: 448)
!3493 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3477, file: !580, line: 659, baseType: !113, size: 32, offset: 480)
!3494 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3477, file: !580, line: 660, baseType: !584, size: 32, offset: 512)
!3495 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3477, file: !580, line: 661, baseType: !584, size: 32, offset: 544)
!3496 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3477, file: !580, line: 662, baseType: !1227, size: 64, offset: 576)
!3497 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3477, file: !580, line: 663, baseType: !584, size: 32, offset: 640)
!3498 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3477, file: !580, line: 664, baseType: !584, size: 32, offset: 672)
!3499 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !3477, file: !580, line: 665, baseType: !584, size: 32, offset: 704)
!3500 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3477, file: !580, line: 666, baseType: !113, size: 32, offset: 736)
!3501 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3477, file: !580, line: 667, baseType: !584, size: 32, offset: 768)
!3502 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3477, file: !580, line: 668, baseType: !584, size: 32, offset: 800)
!3503 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3477, file: !580, line: 669, baseType: !1227, size: 64, offset: 832)
!3504 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3477, file: !580, line: 670, baseType: !584, size: 32, offset: 896)
!3505 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3477, file: !580, line: 671, baseType: !584, size: 32, offset: 928)
!3506 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3477, file: !580, line: 672, baseType: !1227, size: 64, offset: 960)
!3507 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3477, file: !580, line: 673, baseType: !584, size: 32, offset: 1024)
!3508 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3477, file: !580, line: 674, baseType: !584, size: 32, offset: 1056)
!3509 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !3477, file: !580, line: 675, baseType: !584, size: 32, offset: 1088)
!3510 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !3477, file: !580, line: 676, baseType: !584, size: 32, offset: 1120)
!3511 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3512, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3513, splitDebugInlining: false, nameTableKind: None)
!3512 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/sensor_batch_processing")
!3513 = !{!104, !439}
!3514 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3515, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3516, retainedTypes: !567, splitDebugInlining: false, nameTableKind: None)
!3515 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/sensor_batch_processing")
!3516 = !{!3517, !3524, !30}
!3517 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !3518, line: 14, baseType: !32, size: 32, elements: !3519)
!3518 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3519 = !{!3520, !3521, !3522, !3523}
!3520 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!3521 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!3522 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!3523 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!3524 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !3518, line: 42, baseType: !32, size: 32, elements: !3525)
!3525 = !{!3526, !3527, !3528, !3529, !3530, !3531}
!3526 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!3527 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!3528 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!3529 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!3530 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!3531 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!3532 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3533, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !567, splitDebugInlining: false, nameTableKind: None)
!3533 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/sensor_batch_processing")
!3534 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3535, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3536, splitDebugInlining: false, nameTableKind: None)
!3535 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/sensor_batch_processing")
!3536 = !{!22, !104, !108}
!3537 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3538, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !567, splitDebugInlining: false, nameTableKind: None)
!3538 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/sensor_batch_processing")
!3539 = !{!"Ubuntu clang version 14.0.6"}
!3540 = !{i32 7, !"Dwarf Version", i32 4}
!3541 = !{i32 2, !"Debug Info Version", i32 3}
!3542 = !{i32 1, !"wchar_size", i32 4}
!3543 = !{i32 1, !"min_enum_size", i32 4}
!3544 = !{i32 1, !"branch-target-enforcement", i32 0}
!3545 = !{i32 1, !"sign-return-address", i32 0}
!3546 = !{i32 1, !"sign-return-address-all", i32 0}
!3547 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!3548 = !{i32 7, !"frame-pointer", i32 2}
!3549 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !3550, file: !3550, line: 26, type: !3551, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2968, retainedNodes: !437)
!3550 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3551 = !DISubroutineType(types: !3552)
!3552 = !{null}
!3553 = !DILocation(line: 28, column: 1, scope: !3549)
!3554 = !{i64 2155761785, i64 2155761805, i64 2155761868}
!3555 = !DILocation(line: 29, column: 1, scope: !3549)
!3556 = !{i64 2155762200, i64 2155762220, i64 2155762283}
!3557 = !DILocation(line: 30, column: 1, scope: !3549)
!3558 = !{i64 2155766680, i64 2155766700, i64 2155766763}
!3559 = !DILocation(line: 31, column: 1, scope: !3549)
!3560 = !{i64 2155767099, i64 2155767119, i64 2155767182}
!3561 = !DILocation(line: 33, column: 1, scope: !3549)
!3562 = !{i64 2155767391, i64 2155767411, i64 2155767474}
!3563 = !DILocation(line: 35, column: 1, scope: !3549)
!3564 = !{i64 2155767716, i64 2155767736, i64 2155767799}
!3565 = !DILocation(line: 50, column: 1, scope: !3549)
!3566 = !{i64 2155768143, i64 2155768163, i64 2155768226}
!3567 = !DILocation(line: 54, column: 1, scope: !3549)
!3568 = !{i64 2155768582, i64 2155768602, i64 2155768665}
!3569 = !DILocation(line: 61, column: 1, scope: !3549)
!3570 = !{i64 2155768899, i64 2155768919, i64 2155768982}
!3571 = !DILocation(line: 63, column: 1, scope: !3549)
!3572 = !{i64 2155769279, i64 2155769299, i64 2155769362}
!3573 = !DILocation(line: 64, column: 1, scope: !3549)
!3574 = !{i64 2155769801, i64 2155769821, i64 2155769884}
!3575 = !DILocation(line: 65, column: 1, scope: !3549)
!3576 = !{i64 2155770299, i64 2155770319, i64 2155770382}
!3577 = !DILocation(line: 66, column: 1, scope: !3549)
!3578 = !{i64 2155770781, i64 2155770801, i64 2155770864}
!3579 = !DILocation(line: 67, column: 1, scope: !3549)
!3580 = !{i64 2155771288, i64 2155771308, i64 2155771371}
!3581 = !DILocation(line: 68, column: 1, scope: !3549)
!3582 = !{i64 2155771776, i64 2155771796, i64 2155771859}
!3583 = !DILocation(line: 70, column: 1, scope: !3549)
!3584 = !{i64 2155772244, i64 2155772264, i64 2155772327}
!3585 = !DILocation(line: 71, column: 1, scope: !3549)
!3586 = !{i64 2155772686, i64 2155772706, i64 2155772769}
!3587 = !DILocation(line: 72, column: 1, scope: !3549)
!3588 = !{i64 2155773144, i64 2155773164, i64 2155773227}
!3589 = !DILocation(line: 79, column: 1, scope: !3549)
!3590 = !{i64 2155773598, i64 2155773618, i64 2155773681}
!3591 = !DILocation(line: 80, column: 1, scope: !3549)
!3592 = !{i64 2155774109, i64 2155774129, i64 2155774192}
!3593 = !DILocation(line: 82, column: 1, scope: !3549)
!3594 = !{i64 2155774600, i64 2155774620, i64 2155774683}
!3595 = !DILocation(line: 97, column: 1, scope: !3549)
!3596 = !{i64 2155774937, i64 2155774957, i64 2155775020}
!3597 = !DILocation(line: 99, column: 1, scope: !3549)
!3598 = !{i64 2155775155, i64 2155775175, i64 2155775238}
!3599 = !DILocation(line: 102, column: 1, scope: !3549)
!3600 = !{i64 2155775412, i64 2155775432, i64 2155775495}
!3601 = !DILocation(line: 105, column: 1, scope: !3549)
!3602 = !{i64 2155775652, i64 2155775672, i64 2155775735}
!3603 = !DILocation(line: 115, column: 1, scope: !3549)
!3604 = !{i64 2155780052, i64 2155780072, i64 2155780135}
!3605 = !DILocation(line: 118, column: 1, scope: !3549)
!3606 = !{i64 2155780396, i64 2155780416, i64 2155780479}
!3607 = !DILocation(line: 32, column: 1, scope: !3608)
!3608 = !DILexicalBlockFile(scope: !3549, file: !3609, discriminator: 0)
!3609 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3610 = !{i64 2155780752, i64 2155780772, i64 2155780835}
!3611 = !DILocation(line: 33, column: 1, scope: !3608)
!3612 = !{i64 2155781264, i64 2155781284, i64 2155781347}
!3613 = !DILocation(line: 53, column: 1, scope: !3608)
!3614 = !{i64 2155781772, i64 2155781792, i64 2155781855}
!3615 = !DILocation(line: 54, column: 1, scope: !3608)
!3616 = !{i64 2155782190, i64 2155782210, i64 2155782273}
!3617 = !DILocation(line: 55, column: 1, scope: !3608)
!3618 = !{i64 2155782608, i64 2155782628, i64 2155782691}
!3619 = !DILocation(line: 56, column: 1, scope: !3608)
!3620 = !{i64 2155783026, i64 2155783046, i64 2155783109}
!3621 = !DILocation(line: 57, column: 1, scope: !3608)
!3622 = !{i64 2155783444, i64 2155783464, i64 2155783527}
!3623 = !DILocation(line: 58, column: 1, scope: !3608)
!3624 = !{i64 2155783862, i64 2155783882, i64 2155783945}
!3625 = !DILocation(line: 59, column: 1, scope: !3608)
!3626 = !{i64 2155784280, i64 2155784300, i64 2155784363}
!3627 = !DILocation(line: 60, column: 1, scope: !3608)
!3628 = !{i64 2155784704, i64 2155784724, i64 2155784787}
!3629 = !DILocation(line: 61, column: 1, scope: !3608)
!3630 = !{i64 2155785021, i64 2155785041, i64 2155785104}
!3631 = !DILocation(line: 70, column: 1, scope: !3608)
!3632 = !{i64 2155785250, i64 2155785270, i64 2155785333}
!3633 = !DILocation(line: 72, column: 1, scope: !3608)
!3634 = !{i64 2155785582, i64 2155785602, i64 2155785665}
!3635 = !DILocation(line: 73, column: 1, scope: !3608)
!3636 = !{i64 2155786032, i64 2155786052, i64 2155786115}
!3637 = !DILocation(line: 74, column: 1, scope: !3608)
!3638 = !{i64 2155786482, i64 2155786502, i64 2155786565}
!3639 = !DILocation(line: 75, column: 1, scope: !3608)
!3640 = !{i64 2155786932, i64 2155786952, i64 2155787015}
!3641 = !DILocation(line: 76, column: 1, scope: !3608)
!3642 = !{i64 2155787382, i64 2155787402, i64 2155787465}
!3643 = !DILocation(line: 77, column: 1, scope: !3608)
!3644 = !{i64 2155787832, i64 2155787852, i64 2155787915}
!3645 = !DILocation(line: 78, column: 1, scope: !3608)
!3646 = !{i64 2155788282, i64 2155788302, i64 2155788365}
!3647 = !DILocation(line: 79, column: 1, scope: !3608)
!3648 = !{i64 2155788732, i64 2155788752, i64 2155788815}
!3649 = !DILocation(line: 80, column: 1, scope: !3608)
!3650 = !{i64 2155789185, i64 2155789205, i64 2155789268}
!3651 = !DILocation(line: 84, column: 1, scope: !3608)
!3652 = !{i64 2155793578, i64 2155793598, i64 2155793661}
!3653 = !DILocation(line: 91, column: 1, scope: !3608)
!3654 = !{i64 2155793975, i64 2155793995, i64 2155794058}
!3655 = !DILocation(line: 93, column: 1, scope: !3608)
!3656 = !{i64 2155794342, i64 2155794362, i64 2155794425}
!3657 = !DILocation(line: 106, column: 1, scope: !3608)
!3658 = !{i64 2155794612, i64 2155794632, i64 2155794695}
!3659 = !DILocation(line: 11, column: 1, scope: !3660)
!3660 = !DILexicalBlockFile(scope: !3549, file: !3661, discriminator: 0)
!3661 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3662 = distinct !DISubprogram(name: "main", scope: !119, file: !119, line: 29, type: !3551, scopeLine: 30, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3663)
!3663 = !{!3664, !3681, !3683, !3685, !3689, !3691, !3692, !3694, !3696, !3699, !3701, !3702, !3707, !3708, !3709, !3713, !3715}
!3664 = !DILocalVariable(name: "vnd_sensor", scope: !3662, file: !119, line: 31, type: !3665)
!3665 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3666)
!3666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3667, size: 32)
!3667 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3668)
!3668 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !411, line: 378, size: 192, elements: !3669)
!3669 = !{!3670, !3671, !3672, !3673, !3679, !3680}
!3670 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3668, file: !411, line: 380, baseType: !105, size: 32)
!3671 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !3668, file: !411, line: 382, baseType: !13, size: 32, offset: 32)
!3672 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !3668, file: !411, line: 384, baseType: !13, size: 32, offset: 64)
!3673 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3668, file: !411, line: 386, baseType: !3674, size: 32, offset: 96)
!3674 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3675, size: 32)
!3675 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !411, line: 351, size: 16, elements: !3676)
!3676 = !{!3677, !3678}
!3677 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !3675, file: !411, line: 359, baseType: !164, size: 8)
!3678 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !3675, file: !411, line: 364, baseType: !422, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!3679 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3668, file: !411, line: 388, baseType: !104, size: 32, offset: 128)
!3680 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !3668, file: !411, line: 396, baseType: !425, size: 32, offset: 160)
!3681 = !DILocalVariable(name: "iodev", scope: !3662, file: !119, line: 32, type: !3682)
!3682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !173, size: 32)
!3683 = !DILocalVariable(name: "n", scope: !3684, file: !119, line: 35, type: !108)
!3684 = distinct !DILexicalBlock(scope: !3662, file: !119, line: 35, column: 2)
!3685 = !DILocalVariable(name: "sqe", scope: !3686, file: !119, line: 36, type: !3688)
!3686 = distinct !DILexicalBlock(scope: !3687, file: !119, line: 35, column: 30)
!3687 = distinct !DILexicalBlock(scope: !3684, file: !119, line: 35, column: 2)
!3688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !161, size: 32)
!3689 = !DILocalVariable(name: "idx", scope: !3690, file: !119, line: 36, type: !24)
!3690 = distinct !DILexicalBlock(scope: !3686, file: !119, line: 36, column: 26)
!3691 = !DILocalVariable(name: "acq", scope: !3690, file: !119, line: 36, type: !422)
!3692 = !DILocalVariable(name: "m", scope: !3693, file: !119, line: 44, type: !108)
!3693 = distinct !DILexicalBlock(scope: !3662, file: !119, line: 43, column: 15)
!3694 = !DILocalVariable(name: "userdata", scope: !3693, file: !119, line: 45, type: !3695)
!3695 = !DICompositeType(tag: DW_TAG_array_type, baseType: !209, size: 128, elements: !461)
!3696 = !DILocalVariable(name: "cqe", scope: !3697, file: !119, line: 55, type: !3698)
!3697 = distinct !DILexicalBlock(scope: !3693, file: !119, line: 54, column: 17)
!3698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !217, size: 32)
!3699 = !DILocalVariable(name: "idx", scope: !3700, file: !119, line: 55, type: !24)
!3700 = distinct !DILexicalBlock(scope: !3697, file: !119, line: 55, column: 27)
!3701 = !DILocalVariable(name: "has_consumable", scope: !3700, file: !119, line: 55, type: !422)
!3702 = !DILocalVariable(name: "_str", scope: !3703, file: !119, line: 81, type: !105)
!3703 = distinct !DILexicalBlock(scope: !3704, file: !119, line: 81, column: 4)
!3704 = distinct !DILexicalBlock(scope: !3705, file: !119, line: 80, column: 27)
!3705 = distinct !DILexicalBlock(scope: !3706, file: !119, line: 80, column: 3)
!3706 = distinct !DILexicalBlock(scope: !3693, file: !119, line: 80, column: 3)
!3707 = !DILocalVariable(name: "is_user_context", scope: !3703, file: !119, line: 81, type: !422)
!3708 = !DILocalVariable(name: "filters", scope: !3703, file: !119, line: 81, type: !113)
!3709 = !DILocalVariable(name: "sqe", scope: !3710, file: !119, line: 90, type: !3688)
!3710 = distinct !DILexicalBlock(scope: !3711, file: !119, line: 89, column: 27)
!3711 = distinct !DILexicalBlock(scope: !3712, file: !119, line: 89, column: 3)
!3712 = distinct !DILexicalBlock(scope: !3693, file: !119, line: 89, column: 3)
!3713 = !DILocalVariable(name: "idx", scope: !3714, file: !119, line: 90, type: !24)
!3714 = distinct !DILexicalBlock(scope: !3710, file: !119, line: 90, column: 27)
!3715 = !DILocalVariable(name: "acq", scope: !3714, file: !119, line: 90, type: !422)
!3716 = !DILocation(line: 0, scope: !3662)
!3717 = !DILocation(line: 32, column: 41, scope: !3662)
!3718 = !DILocation(line: 0, scope: !3684)
!3719 = !DILocation(line: 36, column: 26, scope: !3690)
!3720 = !DILocation(line: 35, column: 2, scope: !3684)
!3721 = !DILocation(line: 43, column: 2, scope: !3662)
!3722 = !DILocation(line: 0, scope: !3690)
!3723 = !DILocation(line: 36, column: 26, scope: !3724)
!3724 = distinct !DILexicalBlock(scope: !3725, file: !119, line: 36, column: 26)
!3725 = distinct !DILexicalBlock(scope: !3690, file: !119, line: 36, column: 26)
!3726 = !DILocation(line: 0, scope: !3686)
!3727 = !DILocation(line: 38, column: 50, scope: !3686)
!3728 = !DILocation(line: 38, column: 3, scope: !3686)
!3729 = !DILocation(line: 40, column: 3, scope: !3730)
!3730 = distinct !DILexicalBlock(scope: !3731, file: !119, line: 40, column: 3)
!3731 = distinct !DILexicalBlock(scope: !3686, file: !119, line: 40, column: 3)
!3732 = !DILocation(line: 40, column: 3, scope: !3731)
!3733 = !DILocation(line: 40, column: 3, scope: !3734)
!3734 = distinct !DILexicalBlock(scope: !3730, file: !119, line: 40, column: 3)
!3735 = !DILocation(line: 35, column: 26, scope: !3687)
!3736 = !DILocation(line: 35, column: 20, scope: !3687)
!3737 = distinct !{!3737, !3720, !3738}
!3738 = !DILocation(line: 41, column: 2, scope: !3684)
!3739 = !DILocation(line: 0, scope: !3693)
!3740 = !DILocation(line: 45, column: 3, scope: !3693)
!3741 = !DILocation(line: 45, column: 12, scope: !3693)
!3742 = !DILocation(line: 47, column: 3, scope: !3743)
!3743 = distinct !DILexicalBlock(scope: !3744, file: !119, line: 47, column: 3)
!3744 = distinct !DILexicalBlock(scope: !3745, file: !119, line: 47, column: 3)
!3745 = distinct !DILexicalBlock(scope: !3746, file: !119, line: 47, column: 3)
!3746 = distinct !DILexicalBlock(scope: !3693, file: !119, line: 47, column: 3)
!3747 = !DILocation(line: 48, column: 3, scope: !3693)
!3748 = !DILocation(line: 54, column: 3, scope: !3693)
!3749 = !DILocation(line: 55, column: 27, scope: !3700)
!3750 = !DILocation(line: 0, scope: !3700)
!3751 = !DILocation(line: 0, scope: !3697)
!3752 = !DILocation(line: 58, column: 5, scope: !3753)
!3753 = distinct !DILexicalBlock(scope: !3754, file: !119, line: 58, column: 5)
!3754 = distinct !DILexicalBlock(scope: !3755, file: !119, line: 58, column: 5)
!3755 = distinct !DILexicalBlock(scope: !3756, file: !119, line: 58, column: 5)
!3756 = distinct !DILexicalBlock(scope: !3757, file: !119, line: 58, column: 5)
!3757 = distinct !DILexicalBlock(scope: !3758, file: !119, line: 57, column: 21)
!3758 = distinct !DILexicalBlock(scope: !3697, file: !119, line: 57, column: 8)
!3759 = !DILocation(line: 59, column: 5, scope: !3757)
!3760 = !DILocation(line: 60, column: 5, scope: !3757)
!3761 = distinct !{!3761, !3748, !3762}
!3762 = !DILocation(line: 71, column: 3, scope: !3693)
!3763 = !DILocation(line: 55, column: 27, scope: !3764)
!3764 = distinct !DILexicalBlock(scope: !3765, file: !119, line: 55, column: 27)
!3765 = distinct !DILexicalBlock(scope: !3700, file: !119, line: 55, column: 27)
!3766 = !DILocation(line: 62, column: 4, scope: !3767)
!3767 = distinct !DILexicalBlock(scope: !3768, file: !119, line: 62, column: 4)
!3768 = distinct !DILexicalBlock(scope: !3769, file: !119, line: 62, column: 4)
!3769 = distinct !DILexicalBlock(scope: !3770, file: !119, line: 62, column: 4)
!3770 = distinct !DILexicalBlock(scope: !3697, file: !119, line: 62, column: 4)
!3771 = !DILocation(line: 64, column: 13, scope: !3772)
!3772 = distinct !DILexicalBlock(scope: !3697, file: !119, line: 64, column: 8)
!3773 = !DILocation(line: 64, column: 20, scope: !3772)
!3774 = !DILocation(line: 64, column: 8, scope: !3697)
!3775 = !DILocation(line: 65, column: 5, scope: !3776)
!3776 = distinct !DILexicalBlock(scope: !3777, file: !119, line: 65, column: 5)
!3777 = distinct !DILexicalBlock(scope: !3778, file: !119, line: 65, column: 5)
!3778 = distinct !DILexicalBlock(scope: !3779, file: !119, line: 65, column: 5)
!3779 = distinct !DILexicalBlock(scope: !3780, file: !119, line: 65, column: 5)
!3780 = distinct !DILexicalBlock(scope: !3772, file: !119, line: 64, column: 25)
!3781 = !DILocation(line: 66, column: 4, scope: !3780)
!3782 = !DILocation(line: 68, column: 23, scope: !3697)
!3783 = !DILocation(line: 68, column: 4, scope: !3697)
!3784 = !DILocation(line: 68, column: 16, scope: !3697)
!3785 = !DILocation(line: 69, column: 4, scope: !3786)
!3786 = distinct !DILexicalBlock(scope: !3787, file: !119, line: 69, column: 4)
!3787 = distinct !DILexicalBlock(scope: !3697, file: !119, line: 69, column: 4)
!3788 = !DILocation(line: 69, column: 4, scope: !3787)
!3789 = !DILocation(line: 69, column: 4, scope: !3790)
!3790 = distinct !DILexicalBlock(scope: !3786, file: !119, line: 69, column: 4)
!3791 = !DILocation(line: 70, column: 5, scope: !3697)
!3792 = !DILocation(line: 54, column: 12, scope: !3693)
!3793 = !DILocation(line: 79, column: 3, scope: !3794)
!3794 = distinct !DILexicalBlock(scope: !3795, file: !119, line: 79, column: 3)
!3795 = distinct !DILexicalBlock(scope: !3796, file: !119, line: 79, column: 3)
!3796 = distinct !DILexicalBlock(scope: !3797, file: !119, line: 79, column: 3)
!3797 = distinct !DILexicalBlock(scope: !3693, file: !119, line: 79, column: 3)
!3798 = !DILocation(line: 80, column: 3, scope: !3706)
!3799 = !DILocation(line: 0, scope: !3703)
!3800 = !DILocation(line: 81, column: 4, scope: !3801)
!3801 = distinct !DILexicalBlock(scope: !3802, file: !119, line: 81, column: 4)
!3802 = distinct !DILexicalBlock(scope: !3803, file: !119, line: 81, column: 4)
!3803 = distinct !DILexicalBlock(scope: !3703, file: !119, line: 81, column: 4)
!3804 = !DILocation(line: 81, column: 4, scope: !3802)
!3805 = !DILocation(line: 80, column: 23, scope: !3705)
!3806 = !DILocation(line: 80, column: 17, scope: !3705)
!3807 = distinct !{!3807, !3798, !3808}
!3808 = !DILocation(line: 82, column: 3, scope: !3706)
!3809 = !DILocation(line: 83, column: 3, scope: !3693)
!3810 = !DILocation(line: 84, column: 3, scope: !3811)
!3811 = distinct !DILexicalBlock(scope: !3812, file: !119, line: 84, column: 3)
!3812 = distinct !DILexicalBlock(scope: !3813, file: !119, line: 84, column: 3)
!3813 = distinct !DILexicalBlock(scope: !3814, file: !119, line: 84, column: 3)
!3814 = distinct !DILexicalBlock(scope: !3693, file: !119, line: 84, column: 3)
!3815 = !DILocation(line: 90, column: 27, scope: !3714)
!3816 = !DILocation(line: 89, column: 3, scope: !3712)
!3817 = !DILocation(line: 0, scope: !3714)
!3818 = !DILocation(line: 90, column: 27, scope: !3819)
!3819 = distinct !DILexicalBlock(scope: !3820, file: !119, line: 90, column: 27)
!3820 = distinct !DILexicalBlock(scope: !3714, file: !119, line: 90, column: 27)
!3821 = !DILocation(line: 0, scope: !3710)
!3822 = !DILocation(line: 93, column: 9, scope: !3710)
!3823 = !DILocation(line: 92, column: 4, scope: !3710)
!3824 = !DILocation(line: 95, column: 4, scope: !3825)
!3825 = distinct !DILexicalBlock(scope: !3826, file: !119, line: 95, column: 4)
!3826 = distinct !DILexicalBlock(scope: !3710, file: !119, line: 95, column: 4)
!3827 = !DILocation(line: 95, column: 4, scope: !3826)
!3828 = !DILocation(line: 95, column: 4, scope: !3829)
!3829 = distinct !DILexicalBlock(scope: !3825, file: !119, line: 95, column: 4)
!3830 = !DILocation(line: 89, column: 23, scope: !3711)
!3831 = !DILocation(line: 89, column: 17, scope: !3711)
!3832 = distinct !{!3832, !3816, !3833}
!3833 = !DILocation(line: 96, column: 3, scope: !3712)
!3834 = !DILocation(line: 97, column: 2, scope: !3662)
!3835 = distinct !{!3835, !3721, !3834}
!3836 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !3837, file: !3837, line: 175, type: !3838, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3840)
!3837 = !DIFile(filename: "zephyr/include/zephyr/logging/log_core.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3838 = !DISubroutineType(types: !3839)
!3839 = !{!107, !108}
!3840 = !{!3841}
!3841 = !DILocalVariable(name: "level", arg: 1, scope: !3836, file: !3837, line: 175, type: !108)
!3842 = !DILocation(line: 0, scope: !3836)
!3843 = !DILocation(line: 177, column: 2, scope: !3836)
!3844 = !DILocation(line: 189, column: 1, scope: !3836)
!3845 = distinct !DISubprogram(name: "atomic_get", scope: !3846, file: !3846, line: 159, type: !3847, scopeLine: 160, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3852)
!3846 = !DIFile(filename: "zephyr/include/zephyr/sys/atomic_builtin.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3847 = !DISubroutineType(types: !3848)
!3848 = !{!3849, !3850}
!3849 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_val_t", file: !143, line: 23, baseType: !142)
!3850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3851, size: 32)
!3851 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !142)
!3852 = !{!3853}
!3853 = !DILocalVariable(name: "target", arg: 1, scope: !3845, file: !3846, line: 159, type: !3850)
!3854 = !DILocation(line: 0, scope: !3845)
!3855 = !DILocation(line: 161, column: 9, scope: !3845)
!3856 = !DILocation(line: 161, column: 2, scope: !3845)
!3857 = distinct !DISubprogram(name: "rtio_sqe_prep_read", scope: !125, file: !125, line: 341, type: !3858, scopeLine: 347, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3860)
!3858 = !DISubroutineType(types: !3859)
!3859 = !{null, !3688, !171, !707, !209, !113, !104}
!3860 = !{!3861, !3862, !3863, !3864, !3865, !3866}
!3861 = !DILocalVariable(name: "sqe", arg: 1, scope: !3857, file: !125, line: 341, type: !3688)
!3862 = !DILocalVariable(name: "iodev", arg: 2, scope: !3857, file: !125, line: 342, type: !171)
!3863 = !DILocalVariable(name: "prio", arg: 3, scope: !3857, file: !125, line: 343, type: !707)
!3864 = !DILocalVariable(name: "buf", arg: 4, scope: !3857, file: !125, line: 344, type: !209)
!3865 = !DILocalVariable(name: "len", arg: 5, scope: !3857, file: !125, line: 345, type: !113)
!3866 = !DILocalVariable(name: "userdata", arg: 6, scope: !3857, file: !125, line: 346, type: !104)
!3867 = !DILocation(line: 0, scope: !3857)
!3868 = !DILocation(line: 348, column: 7, scope: !3857)
!3869 = !DILocation(line: 348, column: 10, scope: !3857)
!3870 = !DILocation(line: 349, column: 7, scope: !3857)
!3871 = !DILocation(line: 349, column: 12, scope: !3857)
!3872 = !DILocation(line: 350, column: 7, scope: !3857)
!3873 = !DILocation(line: 350, column: 13, scope: !3857)
!3874 = !DILocation(line: 351, column: 7, scope: !3857)
!3875 = !DILocation(line: 351, column: 15, scope: !3857)
!3876 = !DILocation(line: 352, column: 7, scope: !3857)
!3877 = !DILocation(line: 352, column: 11, scope: !3857)
!3878 = !DILocation(line: 353, column: 7, scope: !3857)
!3879 = !DILocation(line: 353, column: 16, scope: !3857)
!3880 = !DILocation(line: 354, column: 1, scope: !3857)
!3881 = distinct !DISubprogram(name: "atomic_add", scope: !3846, file: !3846, line: 86, type: !3882, scopeLine: 87, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3885)
!3882 = !DISubroutineType(types: !3883)
!3883 = !{!3849, !3884, !3849}
!3884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !142, size: 32)
!3885 = !{!3886, !3887}
!3886 = !DILocalVariable(name: "target", arg: 1, scope: !3881, file: !3846, line: 86, type: !3884)
!3887 = !DILocalVariable(name: "value", arg: 2, scope: !3881, file: !3846, line: 86, type: !3849)
!3888 = !DILocation(line: 0, scope: !3881)
!3889 = !DILocation(line: 88, column: 9, scope: !3881)
!3890 = !DILocation(line: 88, column: 2, scope: !3881)
!3891 = distinct !DISubprogram(name: "rtio_submit", scope: !3892, file: !3892, line: 75, type: !3893, scopeLine: 76, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3895)
!3892 = !DIFile(filename: "zephyr/include/generated/syscalls/rtio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/sensor_batch_processing")
!3893 = !DISubroutineType(types: !3894)
!3894 = !{!108, !136, !113}
!3895 = !{!3896, !3897}
!3896 = !DILocalVariable(name: "r", arg: 1, scope: !3891, file: !3892, line: 75, type: !136)
!3897 = !DILocalVariable(name: "wait_count", arg: 2, scope: !3891, file: !3892, line: 75, type: !113)
!3898 = !DILocation(line: 0, scope: !3891)
!3899 = !DILocation(line: 84, column: 2, scope: !3900)
!3900 = distinct !DILexicalBlock(scope: !3891, file: !3892, line: 84, column: 2)
!3901 = !{i64 2155702806}
!3902 = !DILocation(line: 85, column: 9, scope: !3891)
!3903 = !DILocation(line: 85, column: 2, scope: !3891)
!3904 = distinct !DISubprogram(name: "k_msleep", scope: !359, file: !359, line: 439, type: !3905, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3907)
!3905 = !DISubroutineType(types: !3906)
!3906 = !{!220, !220}
!3907 = !{!3908}
!3908 = !DILocalVariable(name: "ms", arg: 1, scope: !3904, file: !359, line: 439, type: !220)
!3909 = !DILocation(line: 0, scope: !3904)
!3910 = !DILocation(line: 441, column: 17, scope: !3904)
!3911 = !DILocation(line: 441, column: 9, scope: !3904)
!3912 = !DILocation(line: 441, column: 2, scope: !3904)
!3913 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !3914, file: !3914, line: 403, type: !3915, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3917)
!3914 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3915 = !DISubroutineType(types: !3916)
!3916 = !{!114, !114}
!3917 = !{!3918}
!3918 = !DILocalVariable(name: "t", arg: 1, scope: !3913, file: !3914, line: 403, type: !114)
!3919 = !DILocation(line: 0, scope: !3913)
!3920 = !DILocalVariable(name: "t", arg: 1, scope: !3921, file: !3914, line: 102, type: !114)
!3921 = distinct !DISubprogram(name: "z_tmcvt", scope: !3914, file: !3914, line: 102, type: !3922, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3924)
!3922 = !DISubroutineType(types: !3923)
!3923 = !{!114, !114, !113, !113, !422, !422, !422, !422}
!3924 = !{!3920, !3925, !3926, !3927, !3928, !3929, !3930, !3931, !3932, !3933, !3934}
!3925 = !DILocalVariable(name: "from_hz", arg: 2, scope: !3921, file: !3914, line: 102, type: !113)
!3926 = !DILocalVariable(name: "to_hz", arg: 3, scope: !3921, file: !3914, line: 103, type: !113)
!3927 = !DILocalVariable(name: "const_hz", arg: 4, scope: !3921, file: !3914, line: 103, type: !422)
!3928 = !DILocalVariable(name: "result32", arg: 5, scope: !3921, file: !3914, line: 104, type: !422)
!3929 = !DILocalVariable(name: "round_up", arg: 6, scope: !3921, file: !3914, line: 104, type: !422)
!3930 = !DILocalVariable(name: "round_off", arg: 7, scope: !3921, file: !3914, line: 105, type: !422)
!3931 = !DILocalVariable(name: "mul_ratio", scope: !3921, file: !3914, line: 107, type: !422)
!3932 = !DILocalVariable(name: "div_ratio", scope: !3921, file: !3914, line: 109, type: !422)
!3933 = !DILocalVariable(name: "off", scope: !3921, file: !3914, line: 116, type: !114)
!3934 = !DILocalVariable(name: "rdivisor", scope: !3935, file: !3914, line: 119, type: !113)
!3935 = distinct !DILexicalBlock(scope: !3936, file: !3914, line: 118, column: 18)
!3936 = distinct !DILexicalBlock(scope: !3921, file: !3914, line: 118, column: 6)
!3937 = !DILocation(line: 0, scope: !3921, inlinedAt: !3938)
!3938 = distinct !DILocation(line: 406, column: 9, scope: !3913)
!3939 = !DILocation(line: 145, column: 13, scope: !3940, inlinedAt: !3938)
!3940 = distinct !DILexicalBlock(scope: !3941, file: !3914, line: 144, column: 10)
!3941 = distinct !DILexicalBlock(scope: !3942, file: !3914, line: 142, column: 7)
!3942 = distinct !DILexicalBlock(scope: !3943, file: !3914, line: 141, column: 24)
!3943 = distinct !DILexicalBlock(scope: !3944, file: !3914, line: 141, column: 13)
!3944 = distinct !DILexicalBlock(scope: !3921, file: !3914, line: 134, column: 6)
!3945 = !DILocation(line: 406, column: 2, scope: !3913)
!3946 = distinct !DISubprogram(name: "k_sleep", scope: !3947, file: !3947, line: 91, type: !3948, scopeLine: 92, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3954)
!3947 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/sensor_batch_processing")
!3948 = !DISubroutineType(types: !3949)
!3949 = !{!220, !3950}
!3950 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !110, line: 67, baseType: !3951)
!3951 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !110, line: 65, size: 64, elements: !3952)
!3952 = !{!3953}
!3953 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !3951, file: !110, line: 66, baseType: !109, size: 64)
!3954 = !{!3955}
!3955 = !DILocalVariable(name: "timeout", arg: 1, scope: !3946, file: !3947, line: 91, type: !3950)
!3956 = !DILocation(line: 0, scope: !3946)
!3957 = !DILocation(line: 99, column: 2, scope: !3958)
!3958 = distinct !DILexicalBlock(scope: !3946, file: !3947, line: 99, column: 2)
!3959 = !{i64 2155453416}
!3960 = !DILocation(line: 100, column: 9, scope: !3946)
!3961 = !DILocation(line: 100, column: 2, scope: !3946)
!3962 = distinct !DISubprogram(name: "z_impl_rtio_submit", scope: !125, file: !125, line: 744, type: !3893, scopeLine: 745, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3963)
!3963 = !{!3964, !3965, !3966, !3967}
!3964 = !DILocalVariable(name: "r", arg: 1, scope: !3962, file: !125, line: 744, type: !136)
!3965 = !DILocalVariable(name: "wait_count", arg: 2, scope: !3962, file: !125, line: 744, type: !113)
!3966 = !DILocalVariable(name: "res", scope: !3962, file: !125, line: 746, type: !108)
!3967 = !DILocalVariable(name: "acquired", scope: !3968, file: !125, line: 763, type: !24)
!3968 = distinct !DILexicalBlock(scope: !3969, file: !125, line: 763, column: 2)
!3969 = distinct !DILexicalBlock(scope: !3970, file: !125, line: 763, column: 2)
!3970 = distinct !DILexicalBlock(scope: !3962, file: !125, line: 763, column: 2)
!3971 = !DILocation(line: 0, scope: !3962)
!3972 = !DILocation(line: 763, column: 2, scope: !3969)
!3973 = !DILocation(line: 763, column: 2, scope: !3970)
!3974 = !DILocation(line: 0, scope: !3968)
!3975 = !DILocation(line: 763, column: 2, scope: !3968)
!3976 = !DILocation(line: 768, column: 11, scope: !3962)
!3977 = !DILocation(line: 768, column: 21, scope: !3962)
!3978 = !DILocation(line: 768, column: 26, scope: !3962)
!3979 = !DILocation(line: 768, column: 8, scope: !3962)
!3980 = !DILocation(line: 769, column: 10, scope: !3981)
!3981 = distinct !DILexicalBlock(scope: !3962, file: !125, line: 769, column: 6)
!3982 = !DILocation(line: 769, column: 6, scope: !3962)
!3983 = !DILocation(line: 784, column: 9, scope: !3984)
!3984 = distinct !DILexicalBlock(scope: !3962, file: !125, line: 784, column: 9)
!3985 = !DILocation(line: 784, column: 37, scope: !3962)
!3986 = !DILocation(line: 784, column: 2, scope: !3962)
!3987 = !DILocation(line: 788, column: 3, scope: !3988)
!3988 = distinct !DILexicalBlock(scope: !3962, file: !125, line: 784, column: 51)
!3989 = distinct !{!3989, !3986, !3990}
!3990 = !DILocation(line: 790, column: 2, scope: !3962)
!3991 = !DILocation(line: 794, column: 1, scope: !3962)
!3992 = distinct !DISubprogram(name: "k_yield", scope: !3947, file: !3947, line: 140, type: !3551, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !437)
!3993 = !DILocation(line: 148, column: 2, scope: !3994)
!3994 = distinct !DILexicalBlock(scope: !3992, file: !3947, line: 148, column: 2)
!3995 = !{i64 2155453620}
!3996 = !DILocation(line: 149, column: 2, scope: !3992)
!3997 = !DILocation(line: 150, column: 1, scope: !3992)
!3998 = distinct !DISubprogram(name: "vnd_sensor_iodev_submit", scope: !265, file: !265, line: 74, type: !277, scopeLine: 75, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !260, retainedNodes: !3999)
!3999 = !{!4000, !4001, !4002, !4003, !4004, !4006, !4008}
!4000 = !DILocalVariable(name: "sqe", arg: 1, scope: !3998, file: !265, line: 74, type: !279)
!4001 = !DILocalVariable(name: "r", arg: 2, scope: !3998, file: !265, line: 74, type: !298)
!4002 = !DILocalVariable(name: "data", scope: !3998, file: !265, line: 76, type: !263)
!4003 = !DILocalVariable(name: "dev", scope: !3998, file: !265, line: 77, type: !408)
!4004 = !DILocalVariable(name: "iodev_sqe", scope: !3998, file: !265, line: 78, type: !4005)
!4005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !352, size: 32)
!4006 = !DILocalVariable(name: "idx", scope: !4007, file: !265, line: 78, type: !24)
!4007 = distinct !DILexicalBlock(scope: !3998, file: !265, line: 78, column: 37)
!4008 = !DILocalVariable(name: "acq", scope: !4007, file: !265, line: 78, type: !422)
!4009 = !DILocation(line: 0, scope: !3998)
!4010 = !DILocation(line: 76, column: 65, scope: !3998)
!4011 = !DILocation(line: 77, column: 35, scope: !3998)
!4012 = !DILocation(line: 78, column: 37, scope: !4007)
!4013 = !DILocation(line: 0, scope: !4007)
!4014 = !DILocation(line: 78, column: 37, scope: !4015)
!4015 = distinct !DILexicalBlock(scope: !4016, file: !265, line: 78, column: 37)
!4016 = distinct !DILexicalBlock(scope: !4007, file: !265, line: 78, column: 37)
!4017 = !DILocation(line: 81, column: 14, scope: !4018)
!4018 = distinct !DILexicalBlock(scope: !4019, file: !265, line: 80, column: 25)
!4019 = distinct !DILexicalBlock(scope: !3998, file: !265, line: 80, column: 6)
!4020 = !DILocation(line: 81, column: 18, scope: !4018)
!4021 = !DILocation(line: 82, column: 14, scope: !4018)
!4022 = !DILocation(line: 82, column: 16, scope: !4018)
!4023 = !DILocation(line: 83, column: 3, scope: !4024)
!4024 = distinct !DILexicalBlock(scope: !4025, file: !265, line: 83, column: 3)
!4025 = distinct !DILexicalBlock(scope: !4018, file: !265, line: 83, column: 3)
!4026 = !DILocation(line: 83, column: 3, scope: !4025)
!4027 = !DILocation(line: 83, column: 3, scope: !4028)
!4028 = distinct !DILexicalBlock(scope: !4024, file: !265, line: 83, column: 3)
!4029 = !DILocation(line: 85, column: 3, scope: !4030)
!4030 = distinct !DILexicalBlock(scope: !4031, file: !265, line: 85, column: 3)
!4031 = distinct !DILexicalBlock(scope: !4032, file: !265, line: 85, column: 3)
!4032 = distinct !DILexicalBlock(scope: !4033, file: !265, line: 85, column: 3)
!4033 = distinct !DILexicalBlock(scope: !4034, file: !265, line: 85, column: 3)
!4034 = distinct !DILexicalBlock(scope: !4019, file: !265, line: 84, column: 9)
!4035 = !DILocation(line: 86, column: 3, scope: !4034)
!4036 = !DILocation(line: 88, column: 1, scope: !3998)
!4037 = distinct !DISubprogram(name: "atomic_get", scope: !3846, file: !3846, line: 159, type: !3847, scopeLine: 160, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !260, retainedNodes: !4038)
!4038 = !{!4039}
!4039 = !DILocalVariable(name: "target", arg: 1, scope: !4037, file: !3846, line: 159, type: !3850)
!4040 = !DILocation(line: 0, scope: !4037)
!4041 = !DILocation(line: 161, column: 9, scope: !4037)
!4042 = !DILocation(line: 161, column: 2, scope: !4037)
!4043 = distinct !DISubprogram(name: "atomic_add", scope: !3846, file: !3846, line: 86, type: !3882, scopeLine: 87, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !260, retainedNodes: !4044)
!4044 = !{!4045, !4046}
!4045 = !DILocalVariable(name: "target", arg: 1, scope: !4043, file: !3846, line: 86, type: !3884)
!4046 = !DILocalVariable(name: "value", arg: 2, scope: !4043, file: !3846, line: 86, type: !3849)
!4047 = !DILocation(line: 0, scope: !4043)
!4048 = !DILocation(line: 88, column: 9, scope: !4043)
!4049 = !DILocation(line: 88, column: 2, scope: !4043)
!4050 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !3837, file: !3837, line: 175, type: !3838, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !260, retainedNodes: !4051)
!4051 = !{!4052}
!4052 = !DILocalVariable(name: "level", arg: 1, scope: !4050, file: !3837, line: 175, type: !108)
!4053 = !DILocation(line: 0, scope: !4050)
!4054 = !DILocation(line: 177, column: 2, scope: !4050)
!4055 = !DILocation(line: 189, column: 1, scope: !4050)
!4056 = distinct !DISubprogram(name: "rtio_sqe_err", scope: !125, file: !125, line: 592, type: !316, scopeLine: 593, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !260, retainedNodes: !4057)
!4057 = !{!4058, !4059, !4060}
!4058 = !DILocalVariable(name: "r", arg: 1, scope: !4056, file: !125, line: 592, type: !298)
!4059 = !DILocalVariable(name: "sqe", arg: 2, scope: !4056, file: !125, line: 592, type: !279)
!4060 = !DILocalVariable(name: "result", arg: 3, scope: !4056, file: !125, line: 592, type: !108)
!4061 = !DILocation(line: 0, scope: !4056)
!4062 = !DILocation(line: 594, column: 5, scope: !4056)
!4063 = !DILocation(line: 594, column: 15, scope: !4056)
!4064 = !DILocation(line: 594, column: 20, scope: !4056)
!4065 = !DILocation(line: 594, column: 2, scope: !4056)
!4066 = !DILocation(line: 595, column: 1, scope: !4056)
!4067 = distinct !DISubprogram(name: "vnd_sensor_init", scope: !265, file: !265, line: 111, type: !473, scopeLine: 112, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !260, retainedNodes: !4068)
!4068 = !{!4069, !4070, !4072, !4073}
!4069 = !DILocalVariable(name: "dev", arg: 1, scope: !4067, file: !265, line: 111, type: !408)
!4070 = !DILocalVariable(name: "config", scope: !4067, file: !265, line: 113, type: !4071)
!4071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !480, size: 32)
!4072 = !DILocalVariable(name: "data", scope: !4067, file: !265, line: 114, type: !263)
!4073 = !DILocalVariable(name: "sample_period", scope: !4067, file: !265, line: 115, type: !113)
!4074 = !DILocation(line: 0, scope: !4067)
!4075 = !DILocation(line: 113, column: 48, scope: !4067)
!4076 = !DILocation(line: 114, column: 38, scope: !4067)
!4077 = !DILocation(line: 115, column: 35, scope: !4067)
!4078 = !DILocation(line: 117, column: 8, scope: !4067)
!4079 = !DILocation(line: 117, column: 12, scope: !4067)
!4080 = !DILocation(line: 119, column: 22, scope: !4067)
!4081 = !DILocation(line: 119, column: 2, scope: !4067)
!4082 = !DILocation(line: 121, column: 30, scope: !4067)
!4083 = !DILocation(line: 121, column: 2, scope: !4067)
!4084 = !DILocation(line: 124, column: 2, scope: !4067)
!4085 = distinct !DISubprogram(name: "vnd_sensor_timer_expiry", scope: !265, file: !265, line: 103, type: !396, scopeLine: 104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !260, retainedNodes: !4086)
!4086 = !{!4087, !4088}
!4087 = !DILocalVariable(name: "timer", arg: 1, scope: !4085, file: !265, line: 103, type: !398)
!4088 = !DILocalVariable(name: "data", scope: !4085, file: !265, line: 105, type: !263)
!4089 = !DILocation(line: 0, scope: !4085)
!4090 = !DILocation(line: 106, column: 3, scope: !4085)
!4091 = !DILocation(line: 108, column: 30, scope: !4085)
!4092 = !DILocation(line: 108, column: 2, scope: !4085)
!4093 = !DILocation(line: 109, column: 1, scope: !4085)
!4094 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !3914, file: !3914, line: 403, type: !3915, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !260, retainedNodes: !4095)
!4095 = !{!4096}
!4096 = !DILocalVariable(name: "t", arg: 1, scope: !4094, file: !3914, line: 403, type: !114)
!4097 = !DILocation(line: 0, scope: !4094)
!4098 = !DILocalVariable(name: "t", arg: 1, scope: !4099, file: !3914, line: 102, type: !114)
!4099 = distinct !DISubprogram(name: "z_tmcvt", scope: !3914, file: !3914, line: 102, type: !3922, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !260, retainedNodes: !4100)
!4100 = !{!4098, !4101, !4102, !4103, !4104, !4105, !4106, !4107, !4108, !4109, !4110}
!4101 = !DILocalVariable(name: "from_hz", arg: 2, scope: !4099, file: !3914, line: 102, type: !113)
!4102 = !DILocalVariable(name: "to_hz", arg: 3, scope: !4099, file: !3914, line: 103, type: !113)
!4103 = !DILocalVariable(name: "const_hz", arg: 4, scope: !4099, file: !3914, line: 103, type: !422)
!4104 = !DILocalVariable(name: "result32", arg: 5, scope: !4099, file: !3914, line: 104, type: !422)
!4105 = !DILocalVariable(name: "round_up", arg: 6, scope: !4099, file: !3914, line: 104, type: !422)
!4106 = !DILocalVariable(name: "round_off", arg: 7, scope: !4099, file: !3914, line: 105, type: !422)
!4107 = !DILocalVariable(name: "mul_ratio", scope: !4099, file: !3914, line: 107, type: !422)
!4108 = !DILocalVariable(name: "div_ratio", scope: !4099, file: !3914, line: 109, type: !422)
!4109 = !DILocalVariable(name: "off", scope: !4099, file: !3914, line: 116, type: !114)
!4110 = !DILocalVariable(name: "rdivisor", scope: !4111, file: !3914, line: 119, type: !113)
!4111 = distinct !DILexicalBlock(scope: !4112, file: !3914, line: 118, column: 18)
!4112 = distinct !DILexicalBlock(scope: !4099, file: !3914, line: 118, column: 6)
!4113 = !DILocation(line: 0, scope: !4099, inlinedAt: !4114)
!4114 = distinct !DILocation(line: 406, column: 9, scope: !4094)
!4115 = !DILocation(line: 145, column: 13, scope: !4116, inlinedAt: !4114)
!4116 = distinct !DILexicalBlock(scope: !4117, file: !3914, line: 144, column: 10)
!4117 = distinct !DILexicalBlock(scope: !4118, file: !3914, line: 142, column: 7)
!4118 = distinct !DILexicalBlock(scope: !4119, file: !3914, line: 141, column: 24)
!4119 = distinct !DILexicalBlock(scope: !4120, file: !3914, line: 141, column: 13)
!4120 = distinct !DILexicalBlock(scope: !4099, file: !3914, line: 134, column: 6)
!4121 = !DILocation(line: 406, column: 2, scope: !4094)
!4122 = distinct !DISubprogram(name: "k_timer_start", scope: !3947, file: !3947, line: 426, type: !4123, scopeLine: 427, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !260, retainedNodes: !4125)
!4123 = !DISubroutineType(types: !4124)
!4124 = !{null, !398, !401, !401}
!4125 = !{!4126, !4127, !4128}
!4126 = !DILocalVariable(name: "timer", arg: 1, scope: !4122, file: !3947, line: 426, type: !398)
!4127 = !DILocalVariable(name: "duration", arg: 2, scope: !4122, file: !3947, line: 426, type: !401)
!4128 = !DILocalVariable(name: "period", arg: 3, scope: !4122, file: !3947, line: 426, type: !401)
!4129 = !DILocation(line: 0, scope: !4122)
!4130 = !DILocation(line: 437, column: 2, scope: !4131)
!4131 = distinct !DILexicalBlock(scope: !4122, file: !3947, line: 437, column: 2)
!4132 = !{i64 2155457066}
!4133 = !DILocation(line: 438, column: 2, scope: !4122)
!4134 = !DILocation(line: 439, column: 1, scope: !4122)
!4135 = distinct !DISubprogram(name: "vnd_sensor_handle_int", scope: !265, file: !265, line: 90, type: !4136, scopeLine: 91, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !260, retainedNodes: !4138)
!4136 = !DISubroutineType(types: !4137)
!4137 = !{null, !408}
!4138 = !{!4139, !4140, !4141, !4142, !4144}
!4139 = !DILocalVariable(name: "dev", arg: 1, scope: !4135, file: !265, line: 90, type: !408)
!4140 = !DILocalVariable(name: "data", scope: !4135, file: !265, line: 92, type: !263)
!4141 = !DILocalVariable(name: "iodev_sqe", scope: !4135, file: !265, line: 93, type: !4005)
!4142 = !DILocalVariable(name: "idx", scope: !4143, file: !265, line: 93, type: !24)
!4143 = distinct !DILexicalBlock(scope: !4135, file: !265, line: 93, column: 37)
!4144 = !DILocalVariable(name: "has_consumable", scope: !4143, file: !265, line: 93, type: !422)
!4145 = !DILocation(line: 0, scope: !4135)
!4146 = !DILocation(line: 92, column: 38, scope: !4135)
!4147 = !DILocation(line: 93, column: 37, scope: !4143)
!4148 = !DILocation(line: 0, scope: !4143)
!4149 = !DILocation(line: 93, column: 37, scope: !4150)
!4150 = distinct !DILexicalBlock(scope: !4151, file: !265, line: 93, column: 37)
!4151 = distinct !DILexicalBlock(scope: !4143, file: !265, line: 93, column: 37)
!4152 = !DILocation(line: 96, column: 44, scope: !4153)
!4153 = distinct !DILexicalBlock(scope: !4154, file: !265, line: 95, column: 25)
!4154 = distinct !DILexicalBlock(scope: !4135, file: !265, line: 95, column: 6)
!4155 = !DILocation(line: 96, column: 60, scope: !4153)
!4156 = !DILocation(line: 96, column: 3, scope: !4153)
!4157 = !DILocation(line: 97, column: 3, scope: !4158)
!4158 = distinct !DILexicalBlock(scope: !4159, file: !265, line: 97, column: 3)
!4159 = distinct !DILexicalBlock(scope: !4153, file: !265, line: 97, column: 3)
!4160 = !DILocation(line: 97, column: 3, scope: !4159)
!4161 = !DILocation(line: 97, column: 3, scope: !4162)
!4162 = distinct !DILexicalBlock(scope: !4158, file: !265, line: 97, column: 3)
!4163 = !DILocation(line: 99, column: 3, scope: !4164)
!4164 = distinct !DILexicalBlock(scope: !4165, file: !265, line: 99, column: 3)
!4165 = distinct !DILexicalBlock(scope: !4166, file: !265, line: 99, column: 3)
!4166 = distinct !DILexicalBlock(scope: !4167, file: !265, line: 99, column: 3)
!4167 = distinct !DILexicalBlock(scope: !4168, file: !265, line: 99, column: 3)
!4168 = distinct !DILexicalBlock(scope: !4154, file: !265, line: 98, column: 9)
!4169 = !DILocation(line: 101, column: 1, scope: !4135)
!4170 = distinct !DISubprogram(name: "vnd_sensor_iodev_execute", scope: !265, file: !265, line: 55, type: !4171, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !260, retainedNodes: !4173)
!4171 = !DISubroutineType(types: !4172)
!4172 = !{null, !408, !279, !298}
!4173 = !{!4174, !4175, !4176, !4177}
!4174 = !DILocalVariable(name: "dev", arg: 1, scope: !4170, file: !265, line: 55, type: !408)
!4175 = !DILocalVariable(name: "sqe", arg: 2, scope: !4170, file: !265, line: 56, type: !279)
!4176 = !DILocalVariable(name: "r", arg: 3, scope: !4170, file: !265, line: 56, type: !298)
!4177 = !DILocalVariable(name: "result", scope: !4170, file: !265, line: 58, type: !108)
!4178 = !DILocation(line: 0, scope: !4170)
!4179 = !DILocation(line: 60, column: 11, scope: !4180)
!4180 = distinct !DILexicalBlock(scope: !4170, file: !265, line: 60, column: 6)
!4181 = !DILocation(line: 60, column: 14, scope: !4180)
!4182 = !DILocation(line: 60, column: 6, scope: !4170)
!4183 = !DILocation(line: 63, column: 3, scope: !4184)
!4184 = distinct !DILexicalBlock(scope: !4185, file: !265, line: 63, column: 3)
!4185 = distinct !DILexicalBlock(scope: !4186, file: !265, line: 63, column: 3)
!4186 = distinct !DILexicalBlock(scope: !4187, file: !265, line: 63, column: 3)
!4187 = distinct !DILexicalBlock(scope: !4188, file: !265, line: 63, column: 3)
!4188 = distinct !DILexicalBlock(scope: !4180, file: !265, line: 62, column: 9)
!4189 = !DILocation(line: 67, column: 6, scope: !4170)
!4190 = !DILocation(line: 61, column: 44, scope: !4191)
!4191 = distinct !DILexicalBlock(scope: !4180, file: !265, line: 60, column: 29)
!4192 = !DILocation(line: 61, column: 54, scope: !4191)
!4193 = !DILocation(line: 61, column: 12, scope: !4191)
!4194 = !DILocation(line: 67, column: 13, scope: !4195)
!4195 = distinct !DILexicalBlock(scope: !4170, file: !265, line: 67, column: 6)
!4196 = !DILocation(line: 68, column: 3, scope: !4197)
!4197 = distinct !DILexicalBlock(scope: !4195, file: !265, line: 67, column: 18)
!4198 = !DILocation(line: 69, column: 2, scope: !4197)
!4199 = !DILocation(line: 70, column: 3, scope: !4200)
!4200 = distinct !DILexicalBlock(scope: !4195, file: !265, line: 69, column: 9)
!4201 = !DILocation(line: 72, column: 1, scope: !4170)
!4202 = distinct !DISubprogram(name: "vnd_sensor_iodev_read", scope: !265, file: !265, line: 29, type: !4203, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !260, retainedNodes: !4205)
!4203 = !DISubroutineType(types: !4204)
!4204 = !{!108, !408, !209, !113}
!4205 = !{!4206, !4207, !4208, !4209, !4210, !4211, !4212, !4213}
!4206 = !DILocalVariable(name: "dev", arg: 1, scope: !4202, file: !265, line: 29, type: !408)
!4207 = !DILocalVariable(name: "buf", arg: 2, scope: !4202, file: !265, line: 29, type: !209)
!4208 = !DILocalVariable(name: "buf_len", arg: 3, scope: !4202, file: !265, line: 30, type: !113)
!4209 = !DILocalVariable(name: "config", scope: !4202, file: !265, line: 32, type: !4071)
!4210 = !DILocalVariable(name: "data", scope: !4202, file: !265, line: 33, type: !263)
!4211 = !DILocalVariable(name: "sample_number", scope: !4202, file: !265, line: 34, type: !113)
!4212 = !DILocalVariable(name: "key", scope: !4202, file: !265, line: 35, type: !113)
!4213 = !DILocalVariable(name: "i", scope: !4214, file: !265, line: 48, type: !108)
!4214 = distinct !DILexicalBlock(scope: !4202, file: !265, line: 48, column: 2)
!4215 = !DILocation(line: 0, scope: !4202)
!4216 = !DILocation(line: 32, column: 48, scope: !4202)
!4217 = !DILocation(line: 33, column: 38, scope: !4202)
!4218 = !DILocation(line: 37, column: 2, scope: !4219)
!4219 = distinct !DILexicalBlock(scope: !4220, file: !265, line: 37, column: 2)
!4220 = distinct !DILexicalBlock(scope: !4221, file: !265, line: 37, column: 2)
!4221 = distinct !DILexicalBlock(scope: !4222, file: !265, line: 37, column: 2)
!4222 = distinct !DILexicalBlock(scope: !4202, file: !265, line: 37, column: 2)
!4223 = !DILocation(line: 55, column: 2, scope: !4224, inlinedAt: !4231)
!4224 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4225, file: !4225, line: 42, type: !4226, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !260, retainedNodes: !4228)
!4225 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4226 = !DISubroutineType(types: !4227)
!4227 = !{!32}
!4228 = !{!4229, !4230}
!4229 = !DILocalVariable(name: "key", scope: !4224, file: !4225, line: 44, type: !32)
!4230 = !DILocalVariable(name: "tmp", scope: !4224, file: !4225, line: 53, type: !32)
!4231 = distinct !DILocation(line: 39, column: 8, scope: !4202)
!4232 = !{i64 2612470}
!4233 = !DILocation(line: 0, scope: !4224, inlinedAt: !4231)
!4234 = !DILocation(line: 40, column: 24, scope: !4202)
!4235 = !DILocation(line: 40, column: 37, scope: !4202)
!4236 = !DILocalVariable(name: "key", arg: 1, scope: !4237, file: !4225, line: 84, type: !32)
!4237 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4225, file: !4225, line: 84, type: !4238, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !260, retainedNodes: !4240)
!4238 = !DISubroutineType(types: !4239)
!4239 = !{null, !32}
!4240 = !{!4236}
!4241 = !DILocation(line: 0, scope: !4237, inlinedAt: !4242)
!4242 = distinct !DILocation(line: 41, column: 2, scope: !4202)
!4243 = !DILocation(line: 95, column: 2, scope: !4237, inlinedAt: !4242)
!4244 = !{i64 2613287}
!4245 = !DILocation(line: 43, column: 24, scope: !4246)
!4246 = distinct !DILexicalBlock(scope: !4202, file: !265, line: 43, column: 6)
!4247 = !DILocation(line: 43, column: 14, scope: !4246)
!4248 = !DILocation(line: 43, column: 6, scope: !4202)
!4249 = !DILocation(line: 0, scope: !4214)
!4250 = !DILocation(line: 48, column: 22, scope: !4251)
!4251 = distinct !DILexicalBlock(scope: !4214, file: !265, line: 48, column: 2)
!4252 = !DILocation(line: 48, column: 20, scope: !4251)
!4253 = !DILocation(line: 48, column: 2, scope: !4214)
!4254 = !DILocation(line: 44, column: 3, scope: !4255)
!4255 = distinct !DILexicalBlock(scope: !4256, file: !265, line: 44, column: 3)
!4256 = distinct !DILexicalBlock(scope: !4257, file: !265, line: 44, column: 3)
!4257 = distinct !DILexicalBlock(scope: !4258, file: !265, line: 44, column: 3)
!4258 = distinct !DILexicalBlock(scope: !4259, file: !265, line: 44, column: 3)
!4259 = distinct !DILexicalBlock(scope: !4246, file: !265, line: 43, column: 37)
!4260 = !DILocation(line: 45, column: 3, scope: !4259)
!4261 = !DILocation(line: 49, column: 26, scope: !4262)
!4262 = distinct !DILexicalBlock(scope: !4251, file: !265, line: 48, column: 62)
!4263 = !DILocation(line: 49, column: 48, scope: !4262)
!4264 = !DILocation(line: 49, column: 12, scope: !4262)
!4265 = !DILocation(line: 49, column: 3, scope: !4262)
!4266 = !DILocation(line: 49, column: 10, scope: !4262)
!4267 = !DILocation(line: 48, column: 58, scope: !4251)
!4268 = distinct !{!4268, !4253, !4269}
!4269 = !DILocation(line: 50, column: 2, scope: !4214)
!4270 = !DILocation(line: 53, column: 1, scope: !4202)
!4271 = distinct !DISubprogram(name: "rtio_sqe_ok", scope: !125, file: !125, line: 578, type: !316, scopeLine: 579, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !260, retainedNodes: !4272)
!4272 = !{!4273, !4274, !4275}
!4273 = !DILocalVariable(name: "r", arg: 1, scope: !4271, file: !125, line: 578, type: !298)
!4274 = !DILocalVariable(name: "sqe", arg: 2, scope: !4271, file: !125, line: 578, type: !279)
!4275 = !DILocalVariable(name: "result", arg: 3, scope: !4271, file: !125, line: 578, type: !108)
!4276 = !DILocation(line: 0, scope: !4271)
!4277 = !DILocation(line: 580, column: 5, scope: !4271)
!4278 = !DILocation(line: 580, column: 15, scope: !4271)
!4279 = !DILocation(line: 580, column: 20, scope: !4271)
!4280 = !DILocation(line: 580, column: 2, scope: !4271)
!4281 = !DILocation(line: 581, column: 1, scope: !4271)
!4282 = distinct !DISubprogram(name: "cbvprintf_package", scope: !557, file: !557, line: 233, type: !4283, scopeLine: 235, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !544, retainedNodes: !4292)
!4283 = !DISubroutineType(types: !4284)
!4284 = !{!108, !104, !439, !113, !105, !4285}
!4285 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !4286, line: 99, baseType: !4287)
!4286 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4287 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !4286, line: 40, baseType: !4288)
!4288 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !557, baseType: !4289)
!4289 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4290)
!4290 = !{!4291}
!4291 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4289, file: !557, line: 18, baseType: !104, size: 32)
!4292 = !{!4293, !4294, !4295, !4296, !4297, !4298, !4299, !4300, !4301, !4302, !4304, !4305, !4306, !4307, !4308, !4309, !4310, !4311, !4312, !4313, !4314, !4315, !4328, !4337, !4340, !4341, !4344, !4347, !4350, !4353, !4359}
!4293 = !DILocalVariable(name: "packaged", arg: 1, scope: !4282, file: !557, line: 233, type: !104)
!4294 = !DILocalVariable(name: "len", arg: 2, scope: !4282, file: !557, line: 233, type: !439)
!4295 = !DILocalVariable(name: "flags", arg: 3, scope: !4282, file: !557, line: 233, type: !113)
!4296 = !DILocalVariable(name: "fmt", arg: 4, scope: !4282, file: !557, line: 234, type: !105)
!4297 = !DILocalVariable(name: "ap", arg: 5, scope: !4282, file: !557, line: 234, type: !4285)
!4298 = !DILocalVariable(name: "buf0", scope: !4282, file: !557, line: 247, type: !209)
!4299 = !DILocalVariable(name: "buf", scope: !4282, file: !557, line: 248, type: !209)
!4300 = !DILocalVariable(name: "size", scope: !4282, file: !557, line: 249, type: !32)
!4301 = !DILocalVariable(name: "align", scope: !4282, file: !557, line: 250, type: !32)
!4302 = !DILocalVariable(name: "str_ptr_pos", scope: !4282, file: !557, line: 251, type: !4303)
!4303 = !DICompositeType(tag: DW_TAG_array_type, baseType: !164, size: 128, elements: !2290)
!4304 = !DILocalVariable(name: "str_ptr_arg", scope: !4282, file: !557, line: 252, type: !4303)
!4305 = !DILocalVariable(name: "s_idx", scope: !4282, file: !557, line: 253, type: !32)
!4306 = !DILocalVariable(name: "s_rw_cnt", scope: !4282, file: !557, line: 254, type: !32)
!4307 = !DILocalVariable(name: "s_ro_cnt", scope: !4282, file: !557, line: 255, type: !32)
!4308 = !DILocalVariable(name: "arg_idx", scope: !4282, file: !557, line: 256, type: !108)
!4309 = !DILocalVariable(name: "i", scope: !4282, file: !557, line: 257, type: !32)
!4310 = !DILocalVariable(name: "s", scope: !4282, file: !557, line: 258, type: !105)
!4311 = !DILocalVariable(name: "parsing", scope: !4282, file: !557, line: 259, type: !422)
!4312 = !DILocalVariable(name: "rws_pos_en", scope: !4282, file: !557, line: 263, type: !422)
!4313 = !DILocalVariable(name: "fros_cnt", scope: !4282, file: !557, line: 268, type: !108)
!4314 = !DILocalVariable(name: "is_str_arg", scope: !4282, file: !557, line: 269, type: !422)
!4315 = !DILocalVariable(name: "pkg_hdr", scope: !4282, file: !557, line: 270, type: !4316)
!4316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4317, size: 32)
!4317 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "cbprintf_package_hdr", file: !4318, line: 78, size: 32, elements: !4319)
!4318 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4319 = !{!4320, !4327}
!4320 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !4317, file: !4318, line: 80, baseType: !4321, size: 32)
!4321 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_desc", file: !4318, line: 45, size: 32, elements: !4322)
!4322 = !{!4323, !4324, !4325, !4326}
!4323 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !4321, file: !4318, line: 47, baseType: !164, size: 8)
!4324 = !DIDerivedType(tag: DW_TAG_member, name: "str_cnt", scope: !4321, file: !4318, line: 50, baseType: !164, size: 8, offset: 8)
!4325 = !DIDerivedType(tag: DW_TAG_member, name: "ro_str_cnt", scope: !4321, file: !4318, line: 53, baseType: !164, size: 8, offset: 16)
!4326 = !DIDerivedType(tag: DW_TAG_member, name: "rw_str_cnt", scope: !4321, file: !4318, line: 56, baseType: !164, size: 8, offset: 24)
!4327 = !DIDerivedType(tag: DW_TAG_member, name: "raw", scope: !4317, file: !4318, line: 82, baseType: !104, size: 32)
!4328 = !DILocalVariable(name: "v", scope: !4329, file: !557, line: 567, type: !4333)
!4329 = distinct !DILexicalBlock(scope: !4330, file: !557, line: 562, column: 14)
!4330 = distinct !DILexicalBlock(scope: !4331, file: !557, line: 481, column: 18)
!4331 = distinct !DILexicalBlock(scope: !4332, file: !557, line: 466, column: 3)
!4332 = distinct !DILexicalBlock(scope: !4282, file: !557, line: 343, column: 15)
!4333 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4282, file: !557, line: 567, size: 64, elements: !4334)
!4334 = !{!4335, !4336}
!4335 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !4333, file: !557, line: 567, baseType: !550, size: 64)
!4336 = !DIDerivedType(tag: DW_TAG_member, name: "ld", scope: !4333, file: !557, line: 567, baseType: !548, size: 64)
!4337 = !DILocalVariable(name: "is_ro", scope: !4338, file: !557, line: 620, type: !422)
!4338 = distinct !DILexicalBlock(scope: !4339, file: !557, line: 613, column: 19)
!4339 = distinct !DILexicalBlock(scope: !4332, file: !557, line: 613, column: 7)
!4340 = !DILocalVariable(name: "do_ro", scope: !4338, file: !557, line: 621, type: !422)
!4341 = !DILocalVariable(name: "s_ptr_idx", scope: !4342, file: !557, line: 626, type: !113)
!4342 = distinct !DILexicalBlock(scope: !4343, file: !557, line: 625, column: 11)
!4343 = distinct !DILexicalBlock(scope: !4338, file: !557, line: 623, column: 8)
!4344 = !DILocalVariable(name: "v", scope: !4345, file: !557, line: 684, type: !108)
!4345 = distinct !DILexicalBlock(scope: !4346, file: !557, line: 683, column: 35)
!4346 = distinct !DILexicalBlock(scope: !4339, file: !557, line: 683, column: 14)
!4347 = !DILocalVariable(name: "v", scope: !4348, file: !557, line: 691, type: !144)
!4348 = distinct !DILexicalBlock(scope: !4349, file: !557, line: 690, column: 36)
!4349 = distinct !DILexicalBlock(scope: !4346, file: !557, line: 690, column: 14)
!4350 = !DILocalVariable(name: "v", scope: !4351, file: !557, line: 698, type: !112)
!4351 = distinct !DILexicalBlock(scope: !4352, file: !557, line: 697, column: 41)
!4352 = distinct !DILexicalBlock(scope: !4349, file: !557, line: 697, column: 14)
!4353 = !DILocalVariable(name: "pos", scope: !4354, file: !557, line: 762, type: !164)
!4354 = distinct !DILexicalBlock(scope: !4355, file: !557, line: 757, column: 31)
!4355 = distinct !DILexicalBlock(scope: !4356, file: !557, line: 757, column: 3)
!4356 = distinct !DILexicalBlock(scope: !4357, file: !557, line: 757, column: 3)
!4357 = distinct !DILexicalBlock(scope: !4358, file: !557, line: 756, column: 16)
!4358 = distinct !DILexicalBlock(scope: !4282, file: !557, line: 756, column: 6)
!4359 = !DILabel(scope: !4338, name: "process_string", file: !557, line: 615)
!4360 = !DILocation(line: 0, scope: !4282)
!4361 = !DILocation(line: 251, column: 2, scope: !4282)
!4362 = !DILocation(line: 251, column: 10, scope: !4282)
!4363 = !DILocation(line: 252, column: 2, scope: !4282)
!4364 = !DILocation(line: 252, column: 10, scope: !4282)
!4365 = !DILocation(line: 263, column: 29, scope: !4282)
!4366 = !DILocation(line: 263, column: 21, scope: !4282)
!4367 = !DILocation(line: 268, column: 21, scope: !4282)
!4368 = !DILocation(line: 268, column: 19, scope: !4282)
!4369 = !DILocation(line: 273, column: 6, scope: !4370)
!4370 = distinct !DILexicalBlock(scope: !4282, file: !557, line: 273, column: 6)
!4371 = !DILocation(line: 273, column: 26, scope: !4370)
!4372 = !DILocation(line: 273, column: 6, scope: !4282)
!4373 = !DILocation(line: 297, column: 6, scope: !4282)
!4374 = !DILocation(line: 305, column: 11, scope: !4375)
!4375 = distinct !DILexicalBlock(scope: !4282, file: !557, line: 305, column: 6)
!4376 = !DILocation(line: 305, column: 6, scope: !4282)
!4377 = !DILocation(line: 327, column: 19, scope: !4378)
!4378 = distinct !DILexicalBlock(scope: !4282, file: !557, line: 327, column: 6)
!4379 = !DILocation(line: 327, column: 22, scope: !4378)
!4380 = !DILocation(line: 327, column: 33, scope: !4378)
!4381 = !DILocation(line: 327, column: 50, scope: !4378)
!4382 = !DILocation(line: 327, column: 6, scope: !4282)
!4383 = !DILocation(line: 338, column: 9, scope: !4282)
!4384 = !DILocation(line: 341, column: 2, scope: !4282)
!4385 = !DILocation(line: 472, column: 8, scope: !4331)
!4386 = !DILocation(line: 473, column: 14, scope: !4387)
!4387 = distinct !DILexicalBlock(scope: !4388, file: !557, line: 473, column: 9)
!4388 = distinct !DILexicalBlock(scope: !4389, file: !557, line: 472, column: 18)
!4389 = distinct !DILexicalBlock(scope: !4331, file: !557, line: 472, column: 8)
!4390 = !DILocation(line: 473, column: 9, scope: !4388)
!4391 = !DILocation(line: 479, column: 5, scope: !4388)
!4392 = !DILocation(line: 468, column: 9, scope: !4393)
!4393 = distinct !DILexicalBlock(scope: !4331, file: !557, line: 468, column: 8)
!4394 = !DILocation(line: 468, column: 8, scope: !4393)
!4395 = !DILocation(line: 468, column: 15, scope: !4393)
!4396 = !DILocation(line: 468, column: 8, scope: !4331)
!4397 = distinct !{!4397, !4398, !4399}
!4398 = !DILocation(line: 343, column: 2, scope: !4282)
!4399 = !DILocation(line: 712, column: 2, scope: !4282)
!4400 = !DILocation(line: 481, column: 4, scope: !4331)
!4401 = !DILocation(line: 484, column: 12, scope: !4330)
!4402 = !DILocation(line: 485, column: 5, scope: !4330)
!4403 = !DILocation(line: 505, column: 5, scope: !4330)
!4404 = !DILocation(line: 518, column: 5, scope: !4330)
!4405 = !DILocation(line: 523, column: 5, scope: !4330)
!4406 = !DILocation(line: 532, column: 9, scope: !4407)
!4407 = distinct !DILexicalBlock(scope: !4330, file: !557, line: 532, column: 9)
!4408 = !DILocation(line: 532, column: 17, scope: !4407)
!4409 = !DILocation(line: 532, column: 9, scope: !4330)
!4410 = !DILocation(line: 533, column: 10, scope: !4411)
!4411 = distinct !DILexicalBlock(scope: !4412, file: !557, line: 533, column: 10)
!4412 = distinct !DILexicalBlock(scope: !4407, file: !557, line: 532, column: 25)
!4413 = !DILocation(line: 533, column: 18, scope: !4411)
!4414 = !DILocation(line: 0, scope: !4415)
!4415 = distinct !DILexicalBlock(scope: !4329, file: !557, line: 569, column: 9)
!4416 = !DILocation(line: 0, scope: !4329)
!4417 = !DILocation(line: 579, column: 20, scope: !4329)
!4418 = !DILocation(line: 579, column: 11, scope: !4329)
!4419 = !DILocation(line: 580, column: 9, scope: !4329)
!4420 = !DILocation(line: 582, column: 21, scope: !4421)
!4421 = distinct !DILexicalBlock(scope: !4422, file: !557, line: 582, column: 10)
!4422 = distinct !DILexicalBlock(scope: !4423, file: !557, line: 580, column: 23)
!4423 = distinct !DILexicalBlock(scope: !4329, file: !557, line: 580, column: 9)
!4424 = !DILocation(line: 582, column: 28, scope: !4421)
!4425 = !DILocation(line: 582, column: 10, scope: !4422)
!4426 = !DILocation(line: 0, scope: !4427)
!4427 = distinct !DILexicalBlock(scope: !4428, file: !557, line: 587, column: 17)
!4428 = distinct !DILexicalBlock(scope: !4422, file: !557, line: 585, column: 10)
!4429 = !DILocation(line: 593, column: 9, scope: !4329)
!4430 = !DILocation(line: 600, column: 5, scope: !4330)
!4431 = !DILocation(line: 605, column: 18, scope: !4332)
!4432 = !DILocation(line: 605, column: 9, scope: !4332)
!4433 = !DILocation(line: 608, column: 20, scope: !4434)
!4434 = distinct !DILexicalBlock(scope: !4332, file: !557, line: 608, column: 7)
!4435 = !DILocation(line: 608, column: 23, scope: !4434)
!4436 = !DILocation(line: 608, column: 34, scope: !4434)
!4437 = !DILocation(line: 608, column: 41, scope: !4434)
!4438 = !DILocation(line: 608, column: 7, scope: !4332)
!4439 = !DILocation(line: 613, column: 7, scope: !4332)
!4440 = !DILocation(line: 614, column: 8, scope: !4338)
!4441 = !DILocation(line: 614, column: 4, scope: !4338)
!4442 = !DILocation(line: 255, column: 15, scope: !4282)
!4443 = !DILocation(line: 256, column: 6, scope: !4282)
!4444 = !DILocation(line: 254, column: 15, scope: !4282)
!4445 = !DILocation(line: 253, column: 15, scope: !4282)
!4446 = !DILocation(line: 320, column: 7, scope: !4447)
!4447 = distinct !DILexicalBlock(scope: !4375, file: !557, line: 305, column: 20)
!4448 = !DILocation(line: 615, column: 1, scope: !4338)
!4449 = !DILocation(line: 616, column: 8, scope: !4338)
!4450 = !DILocation(line: 617, column: 5, scope: !4451)
!4451 = distinct !DILexicalBlock(scope: !4452, file: !557, line: 616, column: 22)
!4452 = distinct !DILexicalBlock(scope: !4338, file: !557, line: 616, column: 8)
!4453 = !DILocation(line: 617, column: 25, scope: !4451)
!4454 = !DILocation(line: 618, column: 4, scope: !4451)
!4455 = !DILocation(line: 620, column: 26, scope: !4338)
!4456 = !DILocation(line: 620, column: 29, scope: !4338)
!4457 = !DILocation(line: 620, column: 17, scope: !4338)
!4458 = !DILocation(line: 620, column: 43, scope: !4338)
!4459 = !DILocation(line: 0, scope: !4338)
!4460 = !DILocation(line: 623, column: 14, scope: !4343)
!4461 = !DILocation(line: 626, column: 26, scope: !4342)
!4462 = !DILocation(line: 626, column: 37, scope: !4342)
!4463 = !DILocation(line: 0, scope: !4342)
!4464 = !DILocation(line: 634, column: 15, scope: !4465)
!4465 = distinct !DILexicalBlock(scope: !4342, file: !557, line: 634, column: 9)
!4466 = !DILocation(line: 644, column: 9, scope: !4342)
!4467 = !DILocation(line: 649, column: 27, scope: !4468)
!4468 = distinct !DILexicalBlock(scope: !4469, file: !557, line: 644, column: 23)
!4469 = distinct !DILexicalBlock(scope: !4342, file: !557, line: 644, column: 9)
!4470 = !DILocation(line: 649, column: 6, scope: !4468)
!4471 = !DILocation(line: 649, column: 25, scope: !4468)
!4472 = !DILocation(line: 650, column: 27, scope: !4468)
!4473 = !DILocation(line: 650, column: 6, scope: !4468)
!4474 = !DILocation(line: 650, column: 25, scope: !4468)
!4475 = !DILocation(line: 651, column: 10, scope: !4468)
!4476 = !DILocation(line: 653, column: 26, scope: !4477)
!4477 = distinct !DILexicalBlock(scope: !4478, file: !557, line: 651, column: 17)
!4478 = distinct !DILexicalBlock(scope: !4468, file: !557, line: 651, column: 10)
!4479 = !DILocation(line: 654, column: 15, scope: !4477)
!4480 = !DILocation(line: 655, column: 6, scope: !4477)
!4481 = !DILocation(line: 656, column: 15, scope: !4482)
!4482 = distinct !DILexicalBlock(scope: !4478, file: !557, line: 655, column: 13)
!4483 = !DILocation(line: 658, column: 16, scope: !4469)
!4484 = !DILocation(line: 663, column: 10, scope: !4485)
!4485 = distinct !DILexicalBlock(scope: !4486, file: !557, line: 658, column: 23)
!4486 = distinct !DILexicalBlock(scope: !4469, file: !557, line: 658, column: 16)
!4487 = !DILocation(line: 664, column: 5, scope: !4485)
!4488 = !DILocation(line: 664, column: 16, scope: !4486)
!4489 = !DILocation(line: 669, column: 10, scope: !4490)
!4490 = distinct !DILexicalBlock(scope: !4491, file: !557, line: 664, column: 28)
!4491 = distinct !DILexicalBlock(scope: !4486, file: !557, line: 664, column: 16)
!4492 = !DILocation(line: 670, column: 5, scope: !4490)
!4493 = !DILocation(line: 675, column: 13, scope: !4494)
!4494 = distinct !DILexicalBlock(scope: !4491, file: !557, line: 670, column: 12)
!4495 = !DILocation(line: 675, column: 27, scope: !4494)
!4496 = !DILocation(line: 675, column: 10, scope: !4494)
!4497 = !DILocation(line: 678, column: 10, scope: !4342)
!4498 = !DILocation(line: 680, column: 8, scope: !4338)
!4499 = !DILocation(line: 683, column: 14, scope: !4339)
!4500 = !DILocation(line: 684, column: 12, scope: !4345)
!4501 = !DILocation(line: 0, scope: !4345)
!4502 = !DILocation(line: 686, column: 8, scope: !4345)
!4503 = !DILocation(line: 687, column: 5, scope: !4504)
!4504 = distinct !DILexicalBlock(scope: !4505, file: !557, line: 686, column: 22)
!4505 = distinct !DILexicalBlock(scope: !4345, file: !557, line: 686, column: 8)
!4506 = !DILocation(line: 687, column: 17, scope: !4504)
!4507 = !DILocation(line: 688, column: 4, scope: !4504)
!4508 = !DILocation(line: 698, column: 18, scope: !4351)
!4509 = !DILocation(line: 0, scope: !4351)
!4510 = !DILocation(line: 700, column: 8, scope: !4351)
!4511 = !DILocation(line: 704, column: 6, scope: !4512)
!4512 = distinct !DILexicalBlock(scope: !4513, file: !557, line: 703, column: 12)
!4513 = distinct !DILexicalBlock(scope: !4514, file: !557, line: 701, column: 9)
!4514 = distinct !DILexicalBlock(scope: !4515, file: !557, line: 700, column: 22)
!4515 = distinct !DILexicalBlock(scope: !4351, file: !557, line: 700, column: 8)
!4516 = !DILocation(line: 704, column: 24, scope: !4512)
!4517 = !DILocation(line: 706, column: 4, scope: !4514)
!4518 = !DILocation(line: 0, scope: !4346)
!4519 = !DILocation(line: 0, scope: !4332)
!4520 = !DILocation(line: 720, column: 6, scope: !4521)
!4521 = distinct !DILexicalBlock(scope: !4282, file: !557, line: 720, column: 6)
!4522 = !DILocation(line: 720, column: 17, scope: !4521)
!4523 = !DILocation(line: 720, column: 31, scope: !4521)
!4524 = !DILocation(line: 720, column: 6, scope: !4282)
!4525 = !DILocation(line: 729, column: 6, scope: !4282)
!4526 = !DILocation(line: 730, column: 21, scope: !4527)
!4527 = distinct !DILexicalBlock(scope: !4528, file: !557, line: 729, column: 20)
!4528 = distinct !DILexicalBlock(scope: !4282, file: !557, line: 729, column: 6)
!4529 = !DILocation(line: 730, column: 27, scope: !4527)
!4530 = !DILocation(line: 730, column: 3, scope: !4527)
!4531 = !DILocation(line: 737, column: 22, scope: !4282)
!4532 = !DILocation(line: 737, column: 20, scope: !4282)
!4533 = !DILocation(line: 0, scope: !4534)
!4534 = distinct !DILexicalBlock(scope: !4282, file: !557, line: 739, column: 6)
!4535 = !DILocation(line: 745, column: 17, scope: !4536)
!4536 = distinct !DILexicalBlock(scope: !4534, file: !557, line: 743, column: 9)
!4537 = !DILocation(line: 745, column: 25, scope: !4536)
!4538 = !DILocation(line: 746, column: 17, scope: !4536)
!4539 = !DILocation(line: 746, column: 28, scope: !4536)
!4540 = !DILocation(line: 749, column: 29, scope: !4282)
!4541 = !DILocation(line: 749, column: 16, scope: !4282)
!4542 = !DILocation(line: 749, column: 27, scope: !4282)
!4543 = !DILocation(line: 756, column: 6, scope: !4358)
!4544 = !DILocation(line: 756, column: 6, scope: !4282)
!4545 = !DILocation(line: 757, column: 3, scope: !4356)
!4546 = !DILocation(line: 758, column: 10, scope: !4547)
!4547 = distinct !DILexicalBlock(scope: !4354, file: !557, line: 758, column: 8)
!4548 = !DILocation(line: 758, column: 25, scope: !4547)
!4549 = !DILocation(line: 758, column: 8, scope: !4354)
!4550 = !DILocation(line: 0, scope: !4354)
!4551 = !DILocation(line: 765, column: 8, scope: !4552)
!4552 = distinct !DILexicalBlock(scope: !4354, file: !557, line: 765, column: 8)
!4553 = !DILocation(line: 765, column: 19, scope: !4552)
!4554 = !DILocation(line: 765, column: 23, scope: !4552)
!4555 = !DILocation(line: 765, column: 8, scope: !4354)
!4556 = !DILocation(line: 762, column: 33, scope: !4354)
!4557 = !DILocation(line: 769, column: 8, scope: !4354)
!4558 = !DILocation(line: 769, column: 11, scope: !4354)
!4559 = !DILocation(line: 757, column: 27, scope: !4355)
!4560 = !DILocation(line: 757, column: 17, scope: !4355)
!4561 = distinct !{!4561, !4545, !4562}
!4562 = !DILocation(line: 770, column: 3, scope: !4356)
!4563 = !DILocation(line: 774, column: 16, scope: !4564)
!4564 = distinct !DILexicalBlock(scope: !4565, file: !557, line: 774, column: 2)
!4565 = distinct !DILexicalBlock(scope: !4282, file: !557, line: 774, column: 2)
!4566 = !DILocation(line: 774, column: 2, scope: !4565)
!4567 = !DILocation(line: 776, column: 16, scope: !4568)
!4568 = distinct !DILexicalBlock(scope: !4569, file: !557, line: 776, column: 7)
!4569 = distinct !DILexicalBlock(scope: !4564, file: !557, line: 774, column: 30)
!4570 = !DILocation(line: 776, column: 19, scope: !4568)
!4571 = !DILocation(line: 776, column: 34, scope: !4568)
!4572 = !DILocation(line: 776, column: 7, scope: !4569)
!4573 = !DILocation(line: 780, column: 7, scope: !4569)
!4574 = !DILocation(line: 782, column: 13, scope: !4575)
!4575 = distinct !DILexicalBlock(scope: !4576, file: !557, line: 780, column: 19)
!4576 = distinct !DILexicalBlock(scope: !4569, file: !557, line: 780, column: 7)
!4577 = !DILocation(line: 782, column: 8, scope: !4575)
!4578 = !DILocation(line: 782, column: 11, scope: !4575)
!4579 = !DILocation(line: 783, column: 3, scope: !4575)
!4580 = !DILocation(line: 785, column: 26, scope: !4581)
!4581 = distinct !DILexicalBlock(scope: !4576, file: !557, line: 783, column: 10)
!4582 = !DILocation(line: 785, column: 41, scope: !4581)
!4583 = !DILocation(line: 785, column: 24, scope: !4581)
!4584 = !DILocation(line: 785, column: 8, scope: !4581)
!4585 = !DILocation(line: 787, column: 52, scope: !4581)
!4586 = !DILocation(line: 789, column: 11, scope: !4581)
!4587 = !DILocation(line: 789, column: 21, scope: !4581)
!4588 = !DILocation(line: 0, scope: !4576)
!4589 = !DILocation(line: 793, column: 7, scope: !4590)
!4590 = distinct !DILexicalBlock(scope: !4569, file: !557, line: 793, column: 7)
!4591 = !DILocation(line: 793, column: 18, scope: !4590)
!4592 = !DILocation(line: 793, column: 22, scope: !4590)
!4593 = !DILocation(line: 793, column: 29, scope: !4590)
!4594 = !DILocation(line: 793, column: 7, scope: !4569)
!4595 = !DILocation(line: 797, column: 12, scope: !4569)
!4596 = !DILocation(line: 797, column: 7, scope: !4569)
!4597 = !DILocation(line: 797, column: 10, scope: !4569)
!4598 = !DILocation(line: 799, column: 3, scope: !4569)
!4599 = !DILocation(line: 800, column: 7, scope: !4569)
!4600 = !DILocation(line: 801, column: 2, scope: !4569)
!4601 = !DILocation(line: 338, column: 4, scope: !4282)
!4602 = !DILocation(line: 774, column: 26, scope: !4564)
!4603 = distinct !{!4603, !4566, !4604}
!4604 = !DILocation(line: 801, column: 2, scope: !4565)
!4605 = !DILocation(line: 808, column: 9, scope: !4282)
!4606 = !DILocation(line: 808, column: 2, scope: !4282)
!4607 = !DILocation(line: 813, column: 1, scope: !4282)
!4608 = distinct !DISubprogram(name: "ptr_in_rodata", scope: !557, file: !557, line: 33, type: !4609, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !544, retainedNodes: !4611)
!4609 = !DISubroutineType(types: !4610)
!4610 = !{!422, !105}
!4611 = !{!4612}
!4612 = !DILocalVariable(name: "addr", arg: 1, scope: !4608, file: !557, line: 33, type: !105)
!4613 = !DILocation(line: 0, scope: !4608)
!4614 = !DILocation(line: 41, column: 9, scope: !4608)
!4615 = !DILocation(line: 41, column: 2, scope: !4608)
!4616 = distinct !DISubprogram(name: "linker_is_in_rodata", scope: !4617, file: !4617, line: 24, type: !4618, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !544, retainedNodes: !4620)
!4617 = !DIFile(filename: "zephyr/include/zephyr/linker/utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4618 = !DISubroutineType(types: !4619)
!4619 = !{!422, !13}
!4620 = !{!4621}
!4621 = !DILocalVariable(name: "addr", arg: 1, scope: !4616, file: !4617, line: 24, type: !13)
!4622 = !DILocation(line: 0, scope: !4616)
!4623 = !DILocation(line: 49, column: 30, scope: !4616)
!4624 = !DILocation(line: 49, column: 57, scope: !4616)
!4625 = !DILocation(line: 49, column: 2, scope: !4616)
!4626 = distinct !DISubprogram(name: "cbprintf_package", scope: !557, file: !557, line: 815, type: !4627, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !544, retainedNodes: !4629)
!4627 = !DISubroutineType(types: !4628)
!4628 = !{!108, !104, !439, !113, !105, null}
!4629 = !{!4630, !4631, !4632, !4633, !4634, !4635}
!4630 = !DILocalVariable(name: "packaged", arg: 1, scope: !4626, file: !557, line: 815, type: !104)
!4631 = !DILocalVariable(name: "len", arg: 2, scope: !4626, file: !557, line: 815, type: !439)
!4632 = !DILocalVariable(name: "flags", arg: 3, scope: !4626, file: !557, line: 815, type: !113)
!4633 = !DILocalVariable(name: "format", arg: 4, scope: !4626, file: !557, line: 816, type: !105)
!4634 = !DILocalVariable(name: "ap", scope: !4626, file: !557, line: 818, type: !4285)
!4635 = !DILocalVariable(name: "ret", scope: !4626, file: !557, line: 819, type: !108)
!4636 = !DILocation(line: 0, scope: !4626)
!4637 = !DILocation(line: 818, column: 2, scope: !4626)
!4638 = !DILocation(line: 818, column: 10, scope: !4626)
!4639 = !DILocation(line: 821, column: 2, scope: !4626)
!4640 = !DILocation(line: 822, column: 8, scope: !4626)
!4641 = !DILocation(line: 823, column: 2, scope: !4626)
!4642 = !DILocation(line: 825, column: 1, scope: !4626)
!4643 = !DILocation(line: 824, column: 2, scope: !4626)
!4644 = distinct !DISubprogram(name: "cbpprintf_external", scope: !557, file: !557, line: 827, type: !4645, scopeLine: 830, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !544, retainedNodes: !4655)
!4645 = !DISubroutineType(types: !4646)
!4646 = !{!108, !4647, !4651, !104, !104}
!4647 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !4318, line: 297, baseType: !4648)
!4648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4649, size: 32)
!4649 = !DISubroutineType(types: !4650)
!4650 = !{!108, null}
!4651 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbvprintf_external_formatter_func", file: !4318, line: 328, baseType: !4652)
!4652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4653, size: 32)
!4653 = !DISubroutineType(types: !4654)
!4654 = !{!108, !4647, !104, !105, !4285}
!4655 = !{!4656, !4657, !4658, !4659, !4660, !4661, !4667, !4668, !4669, !4670, !4671, !4672, !4673, !4674}
!4656 = !DILocalVariable(name: "out", arg: 1, scope: !4644, file: !557, line: 827, type: !4647)
!4657 = !DILocalVariable(name: "formatter", arg: 2, scope: !4644, file: !557, line: 828, type: !4651)
!4658 = !DILocalVariable(name: "ctx", arg: 3, scope: !4644, file: !557, line: 829, type: !104)
!4659 = !DILocalVariable(name: "packaged", arg: 4, scope: !4644, file: !557, line: 829, type: !104)
!4660 = !DILocalVariable(name: "buf", scope: !4644, file: !557, line: 831, type: !209)
!4661 = !DILocalVariable(name: "hdr", scope: !4644, file: !557, line: 832, type: !4662)
!4662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4663, size: 32)
!4663 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_hdr_ext", file: !4318, line: 96, size: 64, elements: !4664)
!4664 = !{!4665, !4666}
!4665 = !DIDerivedType(tag: DW_TAG_member, name: "hdr", scope: !4663, file: !4318, line: 98, baseType: !4317, size: 32)
!4666 = !DIDerivedType(tag: DW_TAG_member, name: "fmt", scope: !4663, file: !4318, line: 101, baseType: !443, size: 32, offset: 32)
!4667 = !DILocalVariable(name: "s", scope: !4644, file: !557, line: 833, type: !443)
!4668 = !DILocalVariable(name: "ps", scope: !4644, file: !557, line: 833, type: !555)
!4669 = !DILocalVariable(name: "i", scope: !4644, file: !557, line: 834, type: !32)
!4670 = !DILocalVariable(name: "args_size", scope: !4644, file: !557, line: 834, type: !32)
!4671 = !DILocalVariable(name: "s_nbr", scope: !4644, file: !557, line: 834, type: !32)
!4672 = !DILocalVariable(name: "ros_nbr", scope: !4644, file: !557, line: 834, type: !32)
!4673 = !DILocalVariable(name: "rws_nbr", scope: !4644, file: !557, line: 834, type: !32)
!4674 = !DILocalVariable(name: "s_idx", scope: !4644, file: !557, line: 834, type: !32)
!4675 = !DILocation(line: 0, scope: !4644)
!4676 = !DILocation(line: 836, column: 10, scope: !4677)
!4677 = distinct !DILexicalBlock(scope: !4644, file: !557, line: 836, column: 6)
!4678 = !DILocation(line: 836, column: 6, scope: !4644)
!4679 = !DILocation(line: 842, column: 28, scope: !4644)
!4680 = !DILocation(line: 842, column: 14, scope: !4644)
!4681 = !DILocation(line: 852, column: 16, scope: !4682)
!4682 = distinct !DILexicalBlock(scope: !4683, file: !557, line: 852, column: 2)
!4683 = distinct !DILexicalBlock(scope: !4644, file: !557, line: 852, column: 2)
!4684 = !DILocation(line: 852, column: 2, scope: !4683)
!4685 = !DILocation(line: 841, column: 28, scope: !4644)
!4686 = !DILocation(line: 841, column: 14, scope: !4644)
!4687 = !DILocation(line: 841, column: 32, scope: !4644)
!4688 = !DILocation(line: 847, column: 19, scope: !4644)
!4689 = !DILocation(line: 843, column: 28, scope: !4644)
!4690 = !DILocation(line: 843, column: 14, scope: !4644)
!4691 = !DILocation(line: 847, column: 31, scope: !4644)
!4692 = !DILocation(line: 844, column: 28, scope: !4644)
!4693 = !DILocation(line: 844, column: 14, scope: !4644)
!4694 = !DILocation(line: 847, column: 45, scope: !4644)
!4695 = !DILocation(line: 847, column: 41, scope: !4644)
!4696 = !DILocation(line: 854, column: 24, scope: !4697)
!4697 = distinct !DILexicalBlock(scope: !4682, file: !557, line: 852, column: 30)
!4698 = !DILocation(line: 854, column: 11, scope: !4697)
!4699 = !DILocation(line: 855, column: 30, scope: !4697)
!4700 = !DILocation(line: 855, column: 22, scope: !4697)
!4701 = !DILocation(line: 855, column: 8, scope: !4697)
!4702 = !DILocation(line: 857, column: 7, scope: !4697)
!4703 = !DILocation(line: 859, column: 8, scope: !4697)
!4704 = !DILocation(line: 859, column: 18, scope: !4697)
!4705 = !DILocation(line: 859, column: 5, scope: !4697)
!4706 = !DILocation(line: 852, column: 26, scope: !4682)
!4707 = distinct !{!4707, !4684, !4708}
!4708 = !DILocation(line: 860, column: 2, scope: !4683)
!4709 = !DILocation(line: 863, column: 6, scope: !4644)
!4710 = !DILocation(line: 866, column: 56, scope: !4644)
!4711 = !DILocation(line: 866, column: 9, scope: !4644)
!4712 = !DILocation(line: 866, column: 2, scope: !4644)
!4713 = !DILocation(line: 867, column: 1, scope: !4644)
!4714 = distinct !DISubprogram(name: "cbprintf_via_va_list", scope: !557, file: !557, line: 179, type: !4715, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !544, retainedNodes: !4717)
!4715 = !DISubroutineType(types: !4716)
!4716 = !{!108, !4647, !4651, !104, !105, !104}
!4717 = !{!4718, !4719, !4720, !4721, !4722, !4723}
!4718 = !DILocalVariable(name: "out", arg: 1, scope: !4714, file: !557, line: 179, type: !4647)
!4719 = !DILocalVariable(name: "formatter", arg: 2, scope: !4714, file: !557, line: 180, type: !4651)
!4720 = !DILocalVariable(name: "ctx", arg: 3, scope: !4714, file: !557, line: 181, type: !104)
!4721 = !DILocalVariable(name: "fmt", arg: 4, scope: !4714, file: !557, line: 182, type: !105)
!4722 = !DILocalVariable(name: "buf", arg: 5, scope: !4714, file: !557, line: 182, type: !104)
!4723 = !DILocalVariable(name: "u", scope: !4714, file: !557, line: 187, type: !4724)
!4724 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4714, file: !557, line: 184, size: 32, elements: !4725)
!4725 = !{!4726, !4727}
!4726 = !DIDerivedType(tag: DW_TAG_member, name: "ap", scope: !4724, file: !557, line: 185, baseType: !4285, size: 32)
!4727 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4724, file: !557, line: 186, baseType: !104, size: 32)
!4728 = !DILocation(line: 0, scope: !4714)
!4729 = !DILocation(line: 191, column: 9, scope: !4714)
!4730 = !DILocation(line: 191, column: 2, scope: !4714)
!4731 = distinct !DISubprogram(name: "is_ptr", scope: !557, file: !557, line: 881, type: !4732, scopeLine: 882, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !544, retainedNodes: !4734)
!4732 = !DISubroutineType(types: !4733)
!4733 = !{!422, !105, !108}
!4734 = !{!4735, !4736, !4737, !4738, !4739}
!4735 = !DILocalVariable(name: "fmt", arg: 1, scope: !4731, file: !557, line: 881, type: !105)
!4736 = !DILocalVariable(name: "n", arg: 2, scope: !4731, file: !557, line: 881, type: !108)
!4737 = !DILocalVariable(name: "c", scope: !4731, file: !557, line: 883, type: !107)
!4738 = !DILocalVariable(name: "mod", scope: !4731, file: !557, line: 884, type: !422)
!4739 = !DILocalVariable(name: "cnt", scope: !4731, file: !557, line: 885, type: !108)
!4740 = !DILocation(line: 0, scope: !4731)
!4741 = !DILocation(line: 887, column: 14, scope: !4731)
!4742 = !DILocation(line: 887, column: 22, scope: !4731)
!4743 = !DILocation(line: 887, column: 2, scope: !4731)
!4744 = !DILocation(line: 887, column: 18, scope: !4731)
!4745 = !DILocation(line: 888, column: 7, scope: !4746)
!4746 = distinct !DILexicalBlock(scope: !4731, file: !557, line: 887, column: 31)
!4747 = !DILocation(line: 889, column: 12, scope: !4748)
!4748 = distinct !DILexicalBlock(scope: !4749, file: !557, line: 889, column: 8)
!4749 = distinct !DILexicalBlock(scope: !4750, file: !557, line: 888, column: 12)
!4750 = distinct !DILexicalBlock(scope: !4746, file: !557, line: 888, column: 7)
!4751 = !DILocation(line: 889, column: 8, scope: !4749)
!4752 = !DILocation(line: 890, column: 11, scope: !4753)
!4753 = distinct !DILexicalBlock(scope: !4754, file: !557, line: 890, column: 9)
!4754 = distinct !DILexicalBlock(scope: !4748, file: !557, line: 889, column: 18)
!4755 = !DILocation(line: 890, column: 9, scope: !4754)
!4756 = !DILocation(line: 892, column: 16, scope: !4757)
!4757 = distinct !DILexicalBlock(scope: !4753, file: !557, line: 892, column: 16)
!4758 = !DILocation(line: 892, column: 16, scope: !4753)
!4759 = !DILocation(line: 895, column: 15, scope: !4760)
!4760 = distinct !DILexicalBlock(scope: !4748, file: !557, line: 895, column: 15)
!4761 = !DILocation(line: 895, column: 15, scope: !4748)
!4762 = !DILocation(line: 900, column: 9, scope: !4763)
!4763 = distinct !DILexicalBlock(scope: !4746, file: !557, line: 900, column: 7)
!4764 = !DILocation(line: 900, column: 7, scope: !4746)
!4765 = distinct !{!4765, !4743, !4766}
!4766 = !DILocation(line: 903, column: 2, scope: !4731)
!4767 = !DILocation(line: 906, column: 1, scope: !4731)
!4768 = distinct !DISubprogram(name: "is_fmt_spec", scope: !557, file: !557, line: 873, type: !4769, scopeLine: 874, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !544, retainedNodes: !4771)
!4769 = !DISubroutineType(types: !4770)
!4770 = !{!422, !107}
!4771 = !{!4772}
!4772 = !DILocalVariable(name: "c", arg: 1, scope: !4768, file: !557, line: 873, type: !107)
!4773 = !DILocation(line: 0, scope: !4768)
!4774 = !DILocation(line: 875, column: 19, scope: !4768)
!4775 = !DILocation(line: 875, column: 2, scope: !4768)
!4776 = distinct !DISubprogram(name: "cbprintf_package_convert", scope: !557, file: !557, line: 908, type: !4777, scopeLine: 915, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !544, retainedNodes: !4783)
!4777 = !DISubroutineType(types: !4778)
!4778 = !{!108, !104, !439, !4779, !104, !113, !3240, !439}
!4779 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_convert_cb", file: !4318, line: 308, baseType: !4780)
!4780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4781, size: 32)
!4781 = !DISubroutineType(types: !4782)
!4782 = !{!108, !13, !439, !104}
!4783 = !{!4784, !4785, !4786, !4787, !4788, !4789, !4790, !4791, !4792, !4793, !4794, !4795, !4796, !4797, !4798, !4799, !4801, !4802, !4803, !4804, !4805, !4811, !4814, !4815, !4816, !4818, !4821, !4822, !4823, !4824, !4825, !4826, !4827, !4828, !4829, !4830, !4831, !4832, !4834, !4837, !4838, !4839, !4840, !4841, !4842, !4844, !4847, !4848, !4849}
!4784 = !DILocalVariable(name: "in_packaged", arg: 1, scope: !4776, file: !557, line: 908, type: !104)
!4785 = !DILocalVariable(name: "in_len", arg: 2, scope: !4776, file: !557, line: 909, type: !439)
!4786 = !DILocalVariable(name: "cb", arg: 3, scope: !4776, file: !557, line: 910, type: !4779)
!4787 = !DILocalVariable(name: "ctx", arg: 4, scope: !4776, file: !557, line: 911, type: !104)
!4788 = !DILocalVariable(name: "flags", arg: 5, scope: !4776, file: !557, line: 912, type: !113)
!4789 = !DILocalVariable(name: "strl", arg: 6, scope: !4776, file: !557, line: 913, type: !3240)
!4790 = !DILocalVariable(name: "strl_len", arg: 7, scope: !4776, file: !557, line: 914, type: !439)
!4791 = !DILocalVariable(name: "buf", scope: !4776, file: !557, line: 918, type: !209)
!4792 = !DILocalVariable(name: "buf32", scope: !4776, file: !557, line: 919, type: !1255)
!4793 = !DILocalVariable(name: "args_size", scope: !4776, file: !557, line: 920, type: !32)
!4794 = !DILocalVariable(name: "ros_nbr", scope: !4776, file: !557, line: 920, type: !32)
!4795 = !DILocalVariable(name: "rws_nbr", scope: !4776, file: !557, line: 920, type: !32)
!4796 = !DILocalVariable(name: "fmt_present", scope: !4776, file: !557, line: 921, type: !422)
!4797 = !DILocalVariable(name: "rw_cpy", scope: !4776, file: !557, line: 922, type: !422)
!4798 = !DILocalVariable(name: "ro_cpy", scope: !4776, file: !557, line: 923, type: !422)
!4799 = !DILocalVariable(name: "in_desc", scope: !4776, file: !557, line: 924, type: !4800)
!4800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4321, size: 32)
!4801 = !DILocalVariable(name: "out_len", scope: !4776, file: !557, line: 960, type: !108)
!4802 = !DILocalVariable(name: "fmt", scope: !4776, file: !557, line: 965, type: !105)
!4803 = !DILocalVariable(name: "str_pos", scope: !4776, file: !557, line: 966, type: !209)
!4804 = !DILocalVariable(name: "strl_cnt", scope: !4776, file: !557, line: 967, type: !439)
!4805 = !DILocalVariable(name: "i", scope: !4806, file: !557, line: 973, type: !108)
!4806 = distinct !DILexicalBlock(scope: !4807, file: !557, line: 973, column: 4)
!4807 = distinct !DILexicalBlock(scope: !4808, file: !557, line: 972, column: 15)
!4808 = distinct !DILexicalBlock(scope: !4809, file: !557, line: 972, column: 7)
!4809 = distinct !DILexicalBlock(scope: !4810, file: !557, line: 970, column: 18)
!4810 = distinct !DILexicalBlock(scope: !4776, file: !557, line: 970, column: 6)
!4811 = !DILocalVariable(name: "str", scope: !4812, file: !557, line: 974, type: !105)
!4812 = distinct !DILexicalBlock(scope: !4813, file: !557, line: 973, column: 38)
!4813 = distinct !DILexicalBlock(scope: !4806, file: !557, line: 973, column: 4)
!4814 = !DILocalVariable(name: "len", scope: !4812, file: !557, line: 975, type: !108)
!4815 = !DILocalVariable(name: "drop_ro_str_pos", scope: !4809, file: !557, line: 990, type: !422)
!4816 = !DILocalVariable(name: "i", scope: !4817, file: !557, line: 995, type: !108)
!4817 = distinct !DILexicalBlock(scope: !4809, file: !557, line: 995, column: 3)
!4818 = !DILocalVariable(name: "arg_idx", scope: !4819, file: !557, line: 996, type: !164)
!4819 = distinct !DILexicalBlock(scope: !4820, file: !557, line: 995, column: 37)
!4820 = distinct !DILexicalBlock(scope: !4817, file: !557, line: 995, column: 3)
!4821 = !DILocalVariable(name: "arg_pos", scope: !4819, file: !557, line: 997, type: !164)
!4822 = !DILocalVariable(name: "str", scope: !4819, file: !557, line: 998, type: !105)
!4823 = !DILocalVariable(name: "is_ro", scope: !4819, file: !557, line: 999, type: !422)
!4824 = !DILocalVariable(name: "len", scope: !4819, file: !557, line: 1000, type: !108)
!4825 = !DILocalVariable(name: "out_desc", scope: !4776, file: !557, line: 1038, type: !4321)
!4826 = !DILocalVariable(name: "cpy_str_pos", scope: !4776, file: !557, line: 1040, type: !4303)
!4827 = !DILocalVariable(name: "keep_str_pos", scope: !4776, file: !557, line: 1042, type: !4303)
!4828 = !DILocalVariable(name: "scpy_cnt", scope: !4776, file: !557, line: 1043, type: !164)
!4829 = !DILocalVariable(name: "keep_cnt", scope: !4776, file: !557, line: 1044, type: !164)
!4830 = !DILocalVariable(name: "dst", scope: !4776, file: !557, line: 1045, type: !209)
!4831 = !DILocalVariable(name: "rv", scope: !4776, file: !557, line: 1046, type: !108)
!4832 = !DILocalVariable(name: "i", scope: !4833, file: !557, line: 1074, type: !108)
!4833 = distinct !DILexicalBlock(scope: !4776, file: !557, line: 1074, column: 2)
!4834 = !DILocalVariable(name: "arg_idx", scope: !4835, file: !557, line: 1075, type: !164)
!4835 = distinct !DILexicalBlock(scope: !4836, file: !557, line: 1074, column: 36)
!4836 = distinct !DILexicalBlock(scope: !4833, file: !557, line: 1074, column: 2)
!4837 = !DILocalVariable(name: "arg_pos", scope: !4835, file: !557, line: 1076, type: !164)
!4838 = !DILocalVariable(name: "str", scope: !4835, file: !557, line: 1077, type: !105)
!4839 = !DILocalVariable(name: "is_ro", scope: !4835, file: !557, line: 1078, type: !422)
!4840 = !DILocalVariable(name: "in_desc_backup", scope: !4776, file: !557, line: 1114, type: !4321)
!4841 = !DILocalVariable(name: "strs_len", scope: !4776, file: !557, line: 1134, type: !439)
!4842 = !DILocalVariable(name: "i", scope: !4843, file: !557, line: 1143, type: !108)
!4843 = distinct !DILexicalBlock(scope: !4776, file: !557, line: 1143, column: 2)
!4844 = !DILocalVariable(name: "loc", scope: !4845, file: !557, line: 1144, type: !164)
!4845 = distinct !DILexicalBlock(scope: !4846, file: !557, line: 1143, column: 37)
!4846 = distinct !DILexicalBlock(scope: !4843, file: !557, line: 1143, column: 2)
!4847 = !DILocalVariable(name: "str", scope: !4845, file: !557, line: 1145, type: !105)
!4848 = !DILocalVariable(name: "str_len", scope: !4845, file: !557, line: 1146, type: !168)
!4849 = !DILabel(scope: !4850, name: "calculate_string_length", file: !557, line: 1021)
!4850 = distinct !DILexicalBlock(scope: !4851, file: !557, line: 1020, column: 56)
!4851 = distinct !DILexicalBlock(scope: !4852, file: !557, line: 1020, column: 15)
!4852 = distinct !DILexicalBlock(scope: !4819, file: !557, line: 1014, column: 8)
!4853 = !DILocation(line: 0, scope: !4776)
!4854 = !DILocation(line: 919, column: 20, scope: !4776)
!4855 = !DILocation(line: 921, column: 27, scope: !4776)
!4856 = !DILocation(line: 921, column: 21, scope: !4776)
!4857 = !DILocation(line: 926, column: 18, scope: !4776)
!4858 = !DILocation(line: 926, column: 11, scope: !4776)
!4859 = !DILocation(line: 926, column: 34, scope: !4776)
!4860 = !DILocation(line: 931, column: 21, scope: !4776)
!4861 = !DILocation(line: 931, column: 12, scope: !4776)
!4862 = !DILocation(line: 932, column: 11, scope: !4776)
!4863 = !DILocation(line: 932, column: 19, scope: !4776)
!4864 = !DILocation(line: 938, column: 21, scope: !4776)
!4865 = !DILocation(line: 938, column: 12, scope: !4776)
!4866 = !DILocation(line: 939, column: 19, scope: !4776)
!4867 = !DILocation(line: 939, column: 23, scope: !4776)
!4868 = !DILocation(line: 946, column: 14, scope: !4869)
!4869 = distinct !DILexicalBlock(scope: !4776, file: !557, line: 946, column: 6)
!4870 = !DILocation(line: 947, column: 7, scope: !4871)
!4871 = distinct !DILexicalBlock(scope: !4872, file: !557, line: 947, column: 7)
!4872 = distinct !DILexicalBlock(scope: !4869, file: !557, line: 946, column: 26)
!4873 = !DILocation(line: 947, column: 7, scope: !4872)
!4874 = !DILocation(line: 948, column: 4, scope: !4875)
!4875 = distinct !DILexicalBlock(scope: !4871, file: !557, line: 947, column: 11)
!4876 = !DILocation(line: 949, column: 3, scope: !4875)
!4877 = !DILocation(line: 958, column: 23, scope: !4776)
!4878 = !DILocation(line: 958, column: 14, scope: !4776)
!4879 = !DILocation(line: 958, column: 27, scope: !4776)
!4880 = !DILocation(line: 965, column: 41, scope: !4776)
!4881 = !DILocation(line: 965, column: 20, scope: !4776)
!4882 = !DILocation(line: 966, column: 22, scope: !4776)
!4883 = !DILocation(line: 970, column: 9, scope: !4810)
!4884 = !DILocation(line: 970, column: 6, scope: !4776)
!4885 = !DILocation(line: 972, column: 7, scope: !4809)
!4886 = !DILocation(line: 0, scope: !4806)
!4887 = !DILocation(line: 973, column: 4, scope: !4806)
!4888 = !DILocation(line: 974, column: 46, scope: !4812)
!4889 = !DILocation(line: 974, column: 40, scope: !4812)
!4890 = !DILocation(line: 974, column: 23, scope: !4812)
!4891 = !DILocation(line: 0, scope: !4812)
!4892 = !DILocation(line: 975, column: 15, scope: !4812)
!4893 = !DILocation(line: 978, column: 14, scope: !4894)
!4894 = distinct !DILexicalBlock(scope: !4812, file: !557, line: 978, column: 9)
!4895 = !DILocation(line: 979, column: 25, scope: !4896)
!4896 = distinct !DILexicalBlock(scope: !4894, file: !557, line: 978, column: 38)
!4897 = !DILocation(line: 979, column: 19, scope: !4896)
!4898 = !DILocation(line: 979, column: 6, scope: !4896)
!4899 = !DILocation(line: 979, column: 23, scope: !4896)
!4900 = !DILocation(line: 980, column: 5, scope: !4896)
!4901 = !DILocation(line: 981, column: 13, scope: !4812)
!4902 = !DILocation(line: 982, column: 12, scope: !4812)
!4903 = !DILocation(line: 973, column: 34, scope: !4813)
!4904 = !DILocation(line: 973, column: 22, scope: !4813)
!4905 = distinct !{!4905, !4887, !4906}
!4906 = !DILocation(line: 983, column: 4, scope: !4806)
!4907 = !DILocation(line: 985, column: 16, scope: !4908)
!4908 = distinct !DILexicalBlock(scope: !4909, file: !557, line: 985, column: 8)
!4909 = distinct !DILexicalBlock(scope: !4808, file: !557, line: 984, column: 10)
!4910 = !DILocation(line: 967, column: 9, scope: !4776)
!4911 = !DILocation(line: 971, column: 11, scope: !4809)
!4912 = !DILocation(line: 0, scope: !4809)
!4913 = !DILocation(line: 0, scope: !4817)
!4914 = !DILocation(line: 995, column: 21, scope: !4820)
!4915 = !DILocation(line: 995, column: 3, scope: !4817)
!4916 = !DILocation(line: 990, column: 34, scope: !4809)
!4917 = !DILocation(line: 990, column: 26, scope: !4809)
!4918 = !DILocation(line: 996, column: 30, scope: !4819)
!4919 = !DILocation(line: 0, scope: !4819)
!4920 = !DILocation(line: 997, column: 30, scope: !4819)
!4921 = !DILocation(line: 997, column: 22, scope: !4819)
!4922 = !DILocation(line: 998, column: 39, scope: !4819)
!4923 = !DILocation(line: 998, column: 22, scope: !4819)
!4924 = !DILocation(line: 999, column: 17, scope: !4819)
!4925 = !DILocation(line: 1002, column: 20, scope: !4926)
!4926 = distinct !DILexicalBlock(scope: !4819, file: !557, line: 1002, column: 8)
!4927 = !DILocation(line: 996, column: 22, scope: !4819)
!4928 = !DILocation(line: 1002, column: 35, scope: !4926)
!4929 = !DILocation(line: 1002, column: 23, scope: !4926)
!4930 = !DILocation(line: 1002, column: 8, scope: !4819)
!4931 = !DILocation(line: 1003, column: 5, scope: !4932)
!4932 = distinct !DILexicalBlock(scope: !4933, file: !557, line: 1003, column: 5)
!4933 = distinct !DILexicalBlock(scope: !4934, file: !557, line: 1003, column: 5)
!4934 = distinct !DILexicalBlock(scope: !4935, file: !557, line: 1003, column: 5)
!4935 = distinct !DILexicalBlock(scope: !4936, file: !557, line: 1003, column: 5)
!4936 = distinct !DILexicalBlock(scope: !4926, file: !557, line: 1002, column: 45)
!4937 = !DILocation(line: 1010, column: 13, scope: !4936)
!4938 = !DILocation(line: 1011, column: 5, scope: !4936)
!4939 = !DILocation(line: 1014, column: 8, scope: !4819)
!4940 = !DILocation(line: 1015, column: 9, scope: !4941)
!4941 = distinct !DILexicalBlock(scope: !4852, file: !557, line: 1014, column: 15)
!4942 = !DILocation(line: 1018, column: 14, scope: !4943)
!4943 = distinct !DILexicalBlock(scope: !4944, file: !557, line: 1017, column: 12)
!4944 = distinct !DILexicalBlock(scope: !4941, file: !557, line: 1015, column: 9)
!4945 = !DILocation(line: 1020, column: 4, scope: !4941)
!4946 = !DILocation(line: 1020, column: 15, scope: !4852)
!4947 = !DILocation(line: 1021, column: 1, scope: !4850)
!4948 = !DILocation(line: 1022, column: 11, scope: !4850)
!4949 = !DILocation(line: 1025, column: 14, scope: !4950)
!4950 = distinct !DILexicalBlock(scope: !4850, file: !557, line: 1025, column: 9)
!4951 = !DILocation(line: 1026, column: 25, scope: !4952)
!4952 = distinct !DILexicalBlock(scope: !4950, file: !557, line: 1025, column: 38)
!4953 = !DILocation(line: 1026, column: 19, scope: !4952)
!4954 = !DILocation(line: 1026, column: 6, scope: !4952)
!4955 = !DILocation(line: 1026, column: 23, scope: !4952)
!4956 = !DILocation(line: 1027, column: 5, scope: !4952)
!4957 = !DILocation(line: 1031, column: 21, scope: !4850)
!4958 = !DILocation(line: 1031, column: 13, scope: !4850)
!4959 = !DILocation(line: 1032, column: 4, scope: !4850)
!4960 = !DILocation(line: 995, column: 33, scope: !4820)
!4961 = distinct !{!4961, !4915, !4962}
!4962 = !DILocation(line: 1033, column: 3, scope: !4817)
!4963 = !DILocation(line: 1040, column: 10, scope: !4776)
!4964 = !DILocation(line: 1042, column: 10, scope: !4776)
!4965 = !DILocation(line: 1052, column: 6, scope: !4776)
!4966 = !DILocation(line: 1055, column: 9, scope: !4967)
!4967 = distinct !DILexicalBlock(scope: !4968, file: !557, line: 1052, column: 14)
!4968 = distinct !DILexicalBlock(scope: !4776, file: !557, line: 1052, column: 6)
!4969 = !DILocation(line: 1056, column: 2, scope: !4967)
!4970 = !DILocation(line: 1056, column: 21, scope: !4971)
!4971 = distinct !DILexicalBlock(scope: !4968, file: !557, line: 1056, column: 13)
!4972 = !DILocation(line: 1066, column: 3, scope: !4973)
!4973 = distinct !DILexicalBlock(scope: !4974, file: !557, line: 1065, column: 11)
!4974 = distinct !DILexicalBlock(scope: !4776, file: !557, line: 1065, column: 6)
!4975 = !DILocation(line: 1067, column: 2, scope: !4973)
!4976 = !DILocation(line: 1068, column: 10, scope: !4776)
!4977 = !DILocation(line: 0, scope: !4833)
!4978 = !DILocation(line: 1074, column: 20, scope: !4836)
!4979 = !DILocation(line: 1074, column: 2, scope: !4833)
!4980 = !DILocation(line: 1110, column: 24, scope: !4776)
!4981 = !DILocation(line: 1053, column: 12, scope: !4967)
!4982 = !DILocation(line: 1054, column: 12, scope: !4967)
!4983 = !DILocation(line: 1108, column: 30, scope: !4776)
!4984 = !DILocation(line: 1108, column: 40, scope: !4776)
!4985 = !DILocation(line: 1108, column: 38, scope: !4776)
!4986 = !DILocation(line: 1109, column: 31, scope: !4776)
!4987 = !DILocation(line: 1109, column: 24, scope: !4776)
!4988 = !DILocation(line: 1110, column: 31, scope: !4776)
!4989 = !DILocation(line: 1114, column: 31, scope: !4776)
!4990 = !DILocation(line: 1114, column: 48, scope: !4776)
!4991 = !DILocation(line: 1115, column: 13, scope: !4776)
!4992 = !DILocation(line: 1118, column: 7, scope: !4776)
!4993 = !DILocation(line: 1119, column: 9, scope: !4994)
!4994 = distinct !DILexicalBlock(scope: !4776, file: !557, line: 1119, column: 6)
!4995 = !DILocation(line: 1119, column: 6, scope: !4776)
!4996 = !DILocation(line: 1075, column: 29, scope: !4835)
!4997 = !DILocation(line: 1075, column: 21, scope: !4835)
!4998 = !DILocation(line: 0, scope: !4835)
!4999 = !DILocation(line: 1076, column: 29, scope: !4835)
!5000 = !DILocation(line: 1076, column: 21, scope: !4835)
!5001 = !DILocation(line: 1077, column: 38, scope: !4835)
!5002 = !DILocation(line: 1077, column: 21, scope: !4835)
!5003 = !DILocation(line: 1078, column: 16, scope: !4835)
!5004 = !DILocation(line: 1080, column: 19, scope: !5005)
!5005 = distinct !DILexicalBlock(scope: !4835, file: !557, line: 1080, column: 7)
!5006 = !DILocation(line: 1080, column: 34, scope: !5005)
!5007 = !DILocation(line: 1080, column: 22, scope: !5005)
!5008 = !DILocation(line: 1080, column: 7, scope: !4835)
!5009 = !DILocation(line: 1084, column: 7, scope: !4835)
!5010 = !DILocation(line: 1085, column: 8, scope: !5011)
!5011 = distinct !DILexicalBlock(scope: !5012, file: !557, line: 1084, column: 14)
!5012 = distinct !DILexicalBlock(scope: !4835, file: !557, line: 1084, column: 7)
!5013 = !DILocation(line: 1087, column: 25, scope: !5014)
!5014 = distinct !DILexicalBlock(scope: !5015, file: !557, line: 1085, column: 49)
!5015 = distinct !DILexicalBlock(scope: !5011, file: !557, line: 1085, column: 8)
!5016 = !DILocation(line: 1088, column: 4, scope: !5014)
!5017 = !DILocation(line: 1088, column: 15, scope: !5015)
!5018 = !DILocation(line: 1090, column: 26, scope: !5019)
!5019 = distinct !DILexicalBlock(scope: !5020, file: !557, line: 1088, column: 61)
!5020 = distinct !DILexicalBlock(scope: !5015, file: !557, line: 1088, column: 15)
!5021 = !DILocation(line: 1091, column: 4, scope: !5019)
!5022 = !DILocation(line: 1095, column: 8, scope: !5023)
!5023 = distinct !DILexicalBlock(scope: !5012, file: !557, line: 1094, column: 10)
!5024 = !DILocation(line: 1097, column: 25, scope: !5025)
!5025 = distinct !DILexicalBlock(scope: !5026, file: !557, line: 1095, column: 49)
!5026 = distinct !DILexicalBlock(scope: !5023, file: !557, line: 1095, column: 8)
!5027 = !DILocation(line: 1098, column: 4, scope: !5025)
!5028 = !DILocation(line: 1100, column: 26, scope: !5029)
!5029 = distinct !DILexicalBlock(scope: !5026, file: !557, line: 1098, column: 11)
!5030 = !DILocation(line: 1100, column: 5, scope: !5029)
!5031 = !DILocation(line: 1100, column: 30, scope: !5029)
!5032 = !DILocation(line: 1101, column: 26, scope: !5029)
!5033 = !DILocation(line: 0, scope: !5012)
!5034 = !DILocation(line: 1074, column: 32, scope: !4836)
!5035 = distinct !{!5035, !4979, !5036}
!5036 = !DILocation(line: 1104, column: 2, scope: !4833)
!5037 = !DILocation(line: 1124, column: 13, scope: !4776)
!5038 = !DILocation(line: 1127, column: 10, scope: !4776)
!5039 = !DILocation(line: 1127, column: 7, scope: !4776)
!5040 = !DILocation(line: 1128, column: 9, scope: !5041)
!5041 = distinct !DILexicalBlock(scope: !4776, file: !557, line: 1128, column: 6)
!5042 = !DILocation(line: 1128, column: 6, scope: !4776)
!5043 = !DILocation(line: 1134, column: 27, scope: !4776)
!5044 = !DILocation(line: 1136, column: 7, scope: !4776)
!5045 = !DILocation(line: 1137, column: 9, scope: !5046)
!5046 = distinct !DILexicalBlock(scope: !4776, file: !557, line: 1137, column: 6)
!5047 = !DILocation(line: 1137, column: 6, scope: !4776)
!5048 = !DILocation(line: 1131, column: 10, scope: !4776)
!5049 = !DILocation(line: 1140, column: 10, scope: !4776)
!5050 = !DILocation(line: 0, scope: !4843)
!5051 = !DILocation(line: 1143, column: 20, scope: !4846)
!5052 = !DILocation(line: 1143, column: 2, scope: !4843)
!5053 = !DILocation(line: 1144, column: 3, scope: !4845)
!5054 = !DILocation(line: 1144, column: 17, scope: !4845)
!5055 = !DILocation(line: 0, scope: !4845)
!5056 = !DILocation(line: 1144, column: 11, scope: !4845)
!5057 = !DILocation(line: 1145, column: 38, scope: !4845)
!5058 = !DILocation(line: 1145, column: 21, scope: !4845)
!5059 = !DILocation(line: 1146, column: 22, scope: !4845)
!5060 = !DILocation(line: 1146, column: 29, scope: !4845)
!5061 = !DILocation(line: 1148, column: 8, scope: !4845)
!5062 = !DILocation(line: 1149, column: 10, scope: !5063)
!5063 = distinct !DILexicalBlock(scope: !4845, file: !557, line: 1149, column: 7)
!5064 = !DILocation(line: 1149, column: 7, scope: !4845)
!5065 = !DILocation(line: 1154, column: 8, scope: !4845)
!5066 = !DILocation(line: 1155, column: 10, scope: !5067)
!5067 = distinct !DILexicalBlock(scope: !4845, file: !557, line: 1155, column: 7)
!5068 = !DILocation(line: 1155, column: 7, scope: !4845)
!5069 = !DILocation(line: 1159, column: 2, scope: !4846)
!5070 = !DILocation(line: 1152, column: 11, scope: !4845)
!5071 = !DILocation(line: 1158, column: 11, scope: !4845)
!5072 = !DILocation(line: 1143, column: 33, scope: !4846)
!5073 = distinct !{!5073, !5052, !5074}
!5074 = !DILocation(line: 1159, column: 2, scope: !4843)
!5075 = !DILocation(line: 1162, column: 8, scope: !4776)
!5076 = !DILocation(line: 1164, column: 2, scope: !4776)
!5077 = !DILocation(line: 1165, column: 1, scope: !4776)
!5078 = distinct !DISubprogram(name: "get_package_len", scope: !557, file: !557, line: 196, type: !5079, scopeLine: 197, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !544, retainedNodes: !5081)
!5079 = !DISubroutineType(types: !5080)
!5080 = !{!439, !104}
!5081 = !{!5082, !5083, !5084, !5085, !5086, !5087, !5088}
!5082 = !DILocalVariable(name: "packaged", arg: 1, scope: !5078, file: !557, line: 196, type: !104)
!5083 = !DILocalVariable(name: "buf", scope: !5078, file: !557, line: 200, type: !209)
!5084 = !DILocalVariable(name: "start", scope: !5078, file: !557, line: 201, type: !209)
!5085 = !DILocalVariable(name: "args_size", scope: !5078, file: !557, line: 202, type: !32)
!5086 = !DILocalVariable(name: "s_nbr", scope: !5078, file: !557, line: 202, type: !32)
!5087 = !DILocalVariable(name: "ros_nbr", scope: !5078, file: !557, line: 202, type: !32)
!5088 = !DILocalVariable(name: "i", scope: !5089, file: !557, line: 215, type: !108)
!5089 = distinct !DILexicalBlock(scope: !5078, file: !557, line: 215, column: 2)
!5090 = !DILocation(line: 0, scope: !5078)
!5091 = !DILocation(line: 204, column: 14, scope: !5078)
!5092 = !DILocation(line: 204, column: 21, scope: !5078)
!5093 = !DILocation(line: 205, column: 14, scope: !5078)
!5094 = !DILocation(line: 206, column: 14, scope: !5078)
!5095 = !DILocation(line: 209, column: 6, scope: !5078)
!5096 = !DILocation(line: 212, column: 6, scope: !5078)
!5097 = !DILocation(line: 0, scope: !5089)
!5098 = !DILocation(line: 215, column: 20, scope: !5099)
!5099 = distinct !DILexicalBlock(scope: !5089, file: !557, line: 215, column: 2)
!5100 = !DILocation(line: 215, column: 2, scope: !5089)
!5101 = !DILocation(line: 220, column: 33, scope: !5078)
!5102 = !DILocation(line: 220, column: 2, scope: !5078)
!5103 = !DILocation(line: 216, column: 6, scope: !5104)
!5104 = distinct !DILexicalBlock(scope: !5099, file: !557, line: 215, column: 34)
!5105 = !DILocation(line: 217, column: 10, scope: !5104)
!5106 = !DILocation(line: 217, column: 36, scope: !5104)
!5107 = !DILocation(line: 217, column: 7, scope: !5104)
!5108 = !DILocation(line: 215, column: 30, scope: !5099)
!5109 = distinct !{!5109, !5100, !5110}
!5110 = !DILocation(line: 218, column: 2, scope: !5089)
!5111 = distinct !DISubprogram(name: "append_string", scope: !557, file: !557, line: 223, type: !5112, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !544, retainedNodes: !5114)
!5112 = !DISubroutineType(types: !5113)
!5113 = !{!108, !4779, !104, !105, !168}
!5114 = !{!5115, !5116, !5117, !5118}
!5115 = !DILocalVariable(name: "cb", arg: 1, scope: !5111, file: !557, line: 223, type: !4779)
!5116 = !DILocalVariable(name: "ctx", arg: 2, scope: !5111, file: !557, line: 223, type: !104)
!5117 = !DILocalVariable(name: "str", arg: 3, scope: !5111, file: !557, line: 223, type: !105)
!5118 = !DILocalVariable(name: "strl", arg: 4, scope: !5111, file: !557, line: 223, type: !168)
!5119 = !DILocation(line: 0, scope: !5111)
!5120 = !DILocation(line: 225, column: 9, scope: !5121)
!5121 = distinct !DILexicalBlock(scope: !5111, file: !557, line: 225, column: 6)
!5122 = !DILocation(line: 225, column: 6, scope: !5111)
!5123 = !DILocation(line: 226, column: 14, scope: !5124)
!5124 = distinct !DILexicalBlock(scope: !5121, file: !557, line: 225, column: 18)
!5125 = !DILocation(line: 226, column: 12, scope: !5124)
!5126 = !DILocation(line: 226, column: 3, scope: !5124)
!5127 = !DILocation(line: 229, column: 14, scope: !5111)
!5128 = !DILocation(line: 229, column: 9, scope: !5111)
!5129 = !DILocation(line: 229, column: 27, scope: !5111)
!5130 = !DILocation(line: 229, column: 39, scope: !5111)
!5131 = !DILocation(line: 230, column: 17, scope: !5111)
!5132 = !DILocation(line: 230, column: 9, scope: !5111)
!5133 = !DILocation(line: 230, column: 2, scope: !5111)
!5134 = !DILocation(line: 231, column: 1, scope: !5111)
!5135 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !569, file: !569, line: 45, type: !571, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !565, retainedNodes: !5136)
!5136 = !{!5137}
!5137 = !DILocalVariable(name: "c", arg: 1, scope: !5135, file: !569, line: 45, type: !108)
!5138 = !DILocation(line: 0, scope: !5135)
!5139 = !DILocation(line: 50, column: 2, scope: !5135)
!5140 = distinct !DISubprogram(name: "__printk_hook_install", scope: !569, file: !569, line: 63, type: !5141, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !565, retainedNodes: !5143)
!5141 = !DISubroutineType(types: !5142)
!5142 = !{null, !570}
!5143 = !{!5144}
!5144 = !DILocalVariable(name: "fn", arg: 1, scope: !5140, file: !569, line: 63, type: !570)
!5145 = !DILocation(line: 0, scope: !5140)
!5146 = !DILocation(line: 65, column: 12, scope: !5140)
!5147 = !DILocation(line: 66, column: 1, scope: !5140)
!5148 = distinct !DISubprogram(name: "__printk_get_hook", scope: !569, file: !569, line: 76, type: !5149, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !565, retainedNodes: !437)
!5149 = !DISubroutineType(types: !5150)
!5150 = !{!104}
!5151 = !DILocation(line: 78, column: 9, scope: !5148)
!5152 = !DILocation(line: 78, column: 2, scope: !5148)
!5153 = distinct !DISubprogram(name: "vprintk", scope: !569, file: !569, line: 113, type: !5154, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !565, retainedNodes: !5162)
!5154 = !DISubroutineType(types: !5155)
!5155 = !{null, !105, !5156}
!5156 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !4286, line: 99, baseType: !5157)
!5157 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !4286, line: 40, baseType: !5158)
!5158 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !569, baseType: !5159)
!5159 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !5160)
!5160 = !{!5161}
!5161 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !5159, file: !569, line: 79, baseType: !104, size: 32)
!5162 = !{!5163, !5164, !5165}
!5163 = !DILocalVariable(name: "fmt", arg: 1, scope: !5153, file: !569, line: 113, type: !105)
!5164 = !DILocalVariable(name: "ap", arg: 2, scope: !5153, file: !569, line: 113, type: !5156)
!5165 = !DILocalVariable(name: "ctx", scope: !5166, file: !569, line: 121, type: !5168)
!5166 = distinct !DILexicalBlock(scope: !5167, file: !569, line: 120, column: 27)
!5167 = distinct !DILexicalBlock(scope: !5153, file: !569, line: 120, column: 6)
!5168 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !569, line: 81, size: 32, elements: !5169)
!5169 = !{!5170, !5171}
!5170 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !5168, file: !569, line: 85, baseType: !32, size: 32)
!5171 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !5168, file: !569, line: 86, baseType: !5172, offset: 32)
!5172 = !DICompositeType(tag: DW_TAG_array_type, baseType: !107, elements: !5173)
!5173 = !{!5174}
!5174 = !DISubrange(count: 0)
!5175 = !DILocation(line: 0, scope: !5153)
!5176 = !DILocation(line: 148, column: 3, scope: !5177)
!5177 = distinct !DILexicalBlock(scope: !5167, file: !569, line: 138, column: 9)
!5178 = !DILocation(line: 155, column: 1, scope: !5153)
!5179 = distinct !DISubprogram(name: "char_out", scope: !569, file: !569, line: 107, type: !5180, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !565, retainedNodes: !5182)
!5180 = !DISubroutineType(types: !5181)
!5181 = !{!108, !108, !104}
!5182 = !{!5183, !5184}
!5183 = !DILocalVariable(name: "c", arg: 1, scope: !5179, file: !569, line: 107, type: !108)
!5184 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !5179, file: !569, line: 107, type: !104)
!5185 = !DILocation(line: 0, scope: !5179)
!5186 = !DILocation(line: 110, column: 9, scope: !5179)
!5187 = !DILocation(line: 110, column: 2, scope: !5179)
!5188 = distinct !DISubprogram(name: "cbvprintf", scope: !4318, file: !4318, line: 739, type: !5189, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !565, retainedNodes: !5191)
!5189 = !DISubroutineType(types: !5190)
!5190 = !{!108, !4647, !104, !105, !5156}
!5191 = !{!5192, !5193, !5194, !5195}
!5192 = !DILocalVariable(name: "out", arg: 1, scope: !5188, file: !4318, line: 739, type: !4647)
!5193 = !DILocalVariable(name: "ctx", arg: 2, scope: !5188, file: !4318, line: 739, type: !104)
!5194 = !DILocalVariable(name: "format", arg: 3, scope: !5188, file: !4318, line: 739, type: !105)
!5195 = !DILocalVariable(name: "ap", arg: 4, scope: !5188, file: !4318, line: 739, type: !5156)
!5196 = !DILocation(line: 0, scope: !5188)
!5197 = !DILocation(line: 741, column: 9, scope: !5188)
!5198 = !DILocation(line: 741, column: 2, scope: !5188)
!5199 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !569, file: !569, line: 157, type: !5200, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !565, retainedNodes: !5202)
!5200 = !DISubroutineType(types: !5201)
!5201 = !{null, !443, !439}
!5202 = !{!5203, !5204, !5205}
!5203 = !DILocalVariable(name: "c", arg: 1, scope: !5199, file: !569, line: 157, type: !443)
!5204 = !DILocalVariable(name: "n", arg: 2, scope: !5199, file: !569, line: 157, type: !439)
!5205 = !DILocalVariable(name: "i", scope: !5199, file: !569, line: 159, type: !439)
!5206 = !DILocation(line: 0, scope: !5199)
!5207 = !DILocation(line: 164, column: 16, scope: !5208)
!5208 = distinct !DILexicalBlock(scope: !5209, file: !569, line: 164, column: 2)
!5209 = distinct !DILexicalBlock(scope: !5199, file: !569, line: 164, column: 2)
!5210 = !DILocation(line: 164, column: 2, scope: !5209)
!5211 = !DILocation(line: 165, column: 3, scope: !5212)
!5212 = distinct !DILexicalBlock(scope: !5208, file: !569, line: 164, column: 26)
!5213 = !DILocation(line: 165, column: 13, scope: !5212)
!5214 = !DILocation(line: 164, column: 22, scope: !5208)
!5215 = distinct !{!5215, !5210, !5216}
!5216 = !DILocation(line: 166, column: 2, scope: !5209)
!5217 = !DILocation(line: 171, column: 1, scope: !5199)
!5218 = distinct !DISubprogram(name: "printk", scope: !569, file: !569, line: 203, type: !5219, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !565, retainedNodes: !5221)
!5219 = !DISubroutineType(types: !5220)
!5220 = !{null, !105, null}
!5221 = !{!5222, !5223}
!5222 = !DILocalVariable(name: "fmt", arg: 1, scope: !5218, file: !569, line: 203, type: !105)
!5223 = !DILocalVariable(name: "ap", scope: !5218, file: !569, line: 205, type: !5156)
!5224 = !DILocation(line: 0, scope: !5218)
!5225 = !DILocation(line: 205, column: 2, scope: !5218)
!5226 = !DILocation(line: 205, column: 10, scope: !5218)
!5227 = !DILocation(line: 207, column: 2, scope: !5218)
!5228 = !DILocation(line: 209, column: 2, scope: !5218)
!5229 = !DILocation(line: 211, column: 2, scope: !5218)
!5230 = !DILocation(line: 212, column: 1, scope: !5218)
!5231 = distinct !DISubprogram(name: "snprintk", scope: !569, file: !569, line: 239, type: !5232, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !565, retainedNodes: !5234)
!5232 = !DISubroutineType(types: !5233)
!5233 = !{!108, !443, !439, !105, null}
!5234 = !{!5235, !5236, !5237, !5238, !5239}
!5235 = !DILocalVariable(name: "str", arg: 1, scope: !5231, file: !569, line: 239, type: !443)
!5236 = !DILocalVariable(name: "size", arg: 2, scope: !5231, file: !569, line: 239, type: !439)
!5237 = !DILocalVariable(name: "fmt", arg: 3, scope: !5231, file: !569, line: 239, type: !105)
!5238 = !DILocalVariable(name: "ap", scope: !5231, file: !569, line: 241, type: !5156)
!5239 = !DILocalVariable(name: "ret", scope: !5231, file: !569, line: 242, type: !108)
!5240 = !DILocation(line: 0, scope: !5231)
!5241 = !DILocation(line: 241, column: 2, scope: !5231)
!5242 = !DILocation(line: 241, column: 10, scope: !5231)
!5243 = !DILocation(line: 244, column: 2, scope: !5231)
!5244 = !DILocation(line: 245, column: 8, scope: !5231)
!5245 = !DILocation(line: 246, column: 2, scope: !5231)
!5246 = !DILocation(line: 249, column: 1, scope: !5231)
!5247 = !DILocation(line: 248, column: 2, scope: !5231)
!5248 = distinct !DISubprogram(name: "vsnprintk", scope: !569, file: !569, line: 251, type: !5249, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !565, retainedNodes: !5251)
!5249 = !DISubroutineType(types: !5250)
!5250 = !{!108, !443, !439, !105, !5156}
!5251 = !{!5252, !5253, !5254, !5255, !5256}
!5252 = !DILocalVariable(name: "str", arg: 1, scope: !5248, file: !569, line: 251, type: !443)
!5253 = !DILocalVariable(name: "size", arg: 2, scope: !5248, file: !569, line: 251, type: !439)
!5254 = !DILocalVariable(name: "fmt", arg: 3, scope: !5248, file: !569, line: 251, type: !105)
!5255 = !DILocalVariable(name: "ap", arg: 4, scope: !5248, file: !569, line: 251, type: !5156)
!5256 = !DILocalVariable(name: "ctx", scope: !5248, file: !569, line: 253, type: !5257)
!5257 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !569, line: 217, size: 96, elements: !5258)
!5258 = !{!5259, !5260, !5261}
!5259 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !5257, file: !569, line: 218, baseType: !443, size: 32)
!5260 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !5257, file: !569, line: 219, baseType: !108, size: 32, offset: 32)
!5261 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !5257, file: !569, line: 220, baseType: !108, size: 32, offset: 64)
!5262 = !DILocation(line: 0, scope: !5248)
!5263 = !DILocation(line: 253, column: 2, scope: !5248)
!5264 = !DILocation(line: 253, column: 21, scope: !5248)
!5265 = !DILocation(line: 253, column: 27, scope: !5248)
!5266 = !DILocation(line: 255, column: 2, scope: !5248)
!5267 = !DILocation(line: 257, column: 10, scope: !5268)
!5268 = distinct !DILexicalBlock(scope: !5248, file: !569, line: 257, column: 6)
!5269 = !DILocation(line: 257, column: 22, scope: !5268)
!5270 = !DILocation(line: 257, column: 16, scope: !5268)
!5271 = !DILocation(line: 257, column: 6, scope: !5248)
!5272 = !DILocation(line: 258, column: 3, scope: !5273)
!5273 = distinct !DILexicalBlock(scope: !5268, file: !569, line: 257, column: 27)
!5274 = !DILocation(line: 258, column: 18, scope: !5273)
!5275 = !DILocation(line: 259, column: 2, scope: !5273)
!5276 = !DILocation(line: 262, column: 1, scope: !5248)
!5277 = !DILocation(line: 261, column: 2, scope: !5248)
!5278 = distinct !DISubprogram(name: "str_out", scope: !569, file: !569, line: 223, type: !5279, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !565, retainedNodes: !5282)
!5279 = !DISubroutineType(types: !5280)
!5280 = !{!108, !108, !5281}
!5281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5257, size: 32)
!5282 = !{!5283, !5284}
!5283 = !DILocalVariable(name: "c", arg: 1, scope: !5278, file: !569, line: 223, type: !108)
!5284 = !DILocalVariable(name: "ctx", arg: 2, scope: !5278, file: !569, line: 223, type: !5281)
!5285 = !DILocation(line: 0, scope: !5278)
!5286 = !DILocation(line: 225, column: 11, scope: !5287)
!5287 = distinct !DILexicalBlock(scope: !5278, file: !569, line: 225, column: 6)
!5288 = !DILocation(line: 225, column: 15, scope: !5287)
!5289 = !DILocation(line: 0, scope: !5287)
!5290 = !DILocation(line: 225, column: 23, scope: !5287)
!5291 = !DILocation(line: 225, column: 45, scope: !5287)
!5292 = !DILocation(line: 225, column: 37, scope: !5287)
!5293 = !DILocation(line: 225, column: 6, scope: !5278)
!5294 = !DILocation(line: 226, column: 8, scope: !5295)
!5295 = distinct !DILexicalBlock(scope: !5287, file: !569, line: 225, column: 50)
!5296 = !DILocation(line: 226, column: 13, scope: !5295)
!5297 = !DILocation(line: 227, column: 3, scope: !5295)
!5298 = !DILocation(line: 230, column: 29, scope: !5299)
!5299 = distinct !DILexicalBlock(scope: !5278, file: !569, line: 230, column: 6)
!5300 = !DILocation(line: 230, column: 17, scope: !5299)
!5301 = !DILocation(line: 230, column: 6, scope: !5278)
!5302 = !DILocation(line: 231, column: 22, scope: !5303)
!5303 = distinct !DILexicalBlock(scope: !5299, file: !569, line: 230, column: 34)
!5304 = !DILocation(line: 231, column: 3, scope: !5303)
!5305 = !DILocation(line: 231, column: 26, scope: !5303)
!5306 = !DILocation(line: 232, column: 2, scope: !5303)
!5307 = !DILocation(line: 233, column: 28, scope: !5308)
!5308 = distinct !DILexicalBlock(scope: !5299, file: !569, line: 232, column: 9)
!5309 = !DILocation(line: 233, column: 22, scope: !5308)
!5310 = !DILocation(line: 233, column: 3, scope: !5308)
!5311 = !DILocation(line: 233, column: 26, scope: !5308)
!5312 = !DILocation(line: 237, column: 1, scope: !5278)
!5313 = distinct !DISubprogram(name: "z_thread_entry", scope: !5314, file: !5314, line: 30, type: !5315, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2970, retainedNodes: !5322)
!5314 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5315 = !DISubroutineType(types: !5316)
!5316 = !{null, !5317, !104, !104, !104}
!5317 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !5318, line: 46, baseType: !5319)
!5318 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5320, size: 32)
!5320 = !DISubroutineType(types: !5321)
!5321 = !{null, !104, !104, !104}
!5322 = !{!5323, !5324, !5325, !5326}
!5323 = !DILocalVariable(name: "entry", arg: 1, scope: !5313, file: !5314, line: 30, type: !5317)
!5324 = !DILocalVariable(name: "p1", arg: 2, scope: !5313, file: !5314, line: 31, type: !104)
!5325 = !DILocalVariable(name: "p2", arg: 3, scope: !5313, file: !5314, line: 31, type: !104)
!5326 = !DILocalVariable(name: "p3", arg: 4, scope: !5313, file: !5314, line: 31, type: !104)
!5327 = !DILocation(line: 0, scope: !5313)
!5328 = !DILocation(line: 36, column: 2, scope: !5313)
!5329 = !DILocation(line: 38, column: 17, scope: !5313)
!5330 = !DILocation(line: 38, column: 2, scope: !5313)
!5331 = !DILocation(line: 45, column: 2, scope: !5313)
!5332 = distinct !DISubprogram(name: "k_current_get", scope: !359, file: !359, line: 530, type: !5333, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2970, retainedNodes: !437)
!5333 = !DISubroutineType(types: !5334)
!5334 = !{!5335}
!5335 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !659, line: 347, baseType: !5336)
!5336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5337, size: 32)
!5337 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !659, line: 245, size: 1024, elements: !5338)
!5338 = !{!5339, !5397, !5409, !5410, !5411, !5412, !5418, !5431}
!5339 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !5337, file: !659, line: 247, baseType: !5340, size: 384)
!5340 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !659, line: 57, size: 384, elements: !5341)
!5341 = !{!5342, !5366, !5373, !5374, !5375, !5384, !5385, !5386}
!5342 = !DIDerivedType(tag: DW_TAG_member, scope: !5340, file: !659, line: 60, baseType: !5343, size: 64)
!5343 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5340, file: !659, line: 60, size: 64, elements: !5344)
!5344 = !{!5345, !5360}
!5345 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !5343, file: !659, line: 61, baseType: !5346, size: 64)
!5346 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !367, line: 49, baseType: !5347)
!5347 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !367, line: 37, size: 64, elements: !5348)
!5348 = !{!5349, !5355}
!5349 = !DIDerivedType(tag: DW_TAG_member, scope: !5347, file: !367, line: 38, baseType: !5350, size: 32)
!5350 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5347, file: !367, line: 38, size: 32, elements: !5351)
!5351 = !{!5352, !5354}
!5352 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !5350, file: !367, line: 39, baseType: !5353, size: 32)
!5353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5347, size: 32)
!5354 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5350, file: !367, line: 40, baseType: !5353, size: 32)
!5355 = !DIDerivedType(tag: DW_TAG_member, scope: !5347, file: !367, line: 42, baseType: !5356, size: 32, offset: 32)
!5356 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5347, file: !367, line: 42, size: 32, elements: !5357)
!5357 = !{!5358, !5359}
!5358 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !5356, file: !367, line: 43, baseType: !5353, size: 32)
!5359 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !5356, file: !367, line: 44, baseType: !5353, size: 32)
!5360 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !5343, file: !659, line: 62, baseType: !5361, size: 64)
!5361 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !684, line: 49, size: 64, elements: !5362)
!5362 = !{!5363}
!5363 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !5361, file: !684, line: 50, baseType: !5364, size: 64)
!5364 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5365, size: 64, elements: !689)
!5365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5361, size: 32)
!5366 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !5340, file: !659, line: 68, baseType: !5367, size: 32, offset: 64)
!5367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5368, size: 32)
!5368 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !363, line: 233, baseType: !5369)
!5369 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !363, line: 231, size: 64, elements: !5370)
!5370 = !{!5371}
!5371 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !5369, file: !363, line: 232, baseType: !5372, size: 64)
!5372 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !367, line: 48, baseType: !5347)
!5373 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !5340, file: !659, line: 71, baseType: !164, size: 8, offset: 96)
!5374 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !5340, file: !659, line: 74, baseType: !164, size: 8, offset: 104)
!5375 = !DIDerivedType(tag: DW_TAG_member, scope: !5340, file: !659, line: 90, baseType: !5376, size: 16, offset: 112)
!5376 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5340, file: !659, line: 90, size: 16, elements: !5377)
!5377 = !{!5378, !5383}
!5378 = !DIDerivedType(tag: DW_TAG_member, scope: !5376, file: !659, line: 91, baseType: !5379, size: 16)
!5379 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5376, file: !659, line: 91, size: 16, elements: !5380)
!5380 = !{!5381, !5382}
!5381 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !5379, file: !659, line: 96, baseType: !707, size: 8)
!5382 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !5379, file: !659, line: 97, baseType: !164, size: 8, offset: 8)
!5383 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !5376, file: !659, line: 100, baseType: !168, size: 16)
!5384 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !5340, file: !659, line: 107, baseType: !113, size: 32, offset: 128)
!5385 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !5340, file: !659, line: 127, baseType: !104, size: 32, offset: 160)
!5386 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !5340, file: !659, line: 131, baseType: !5387, size: 192, offset: 192)
!5387 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !363, line: 244, size: 192, elements: !5388)
!5388 = !{!5389, !5390, !5396}
!5389 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !5387, file: !363, line: 245, baseType: !5346, size: 64)
!5390 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !5387, file: !363, line: 246, baseType: !5391, size: 32, offset: 64)
!5391 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !363, line: 242, baseType: !5392)
!5392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5393, size: 32)
!5393 = !DISubroutineType(types: !5394)
!5394 = !{null, !5395}
!5395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5387, size: 32)
!5396 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !5387, file: !363, line: 249, baseType: !111, size: 64, offset: 128)
!5397 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !5337, file: !659, line: 250, baseType: !5398, size: 288, offset: 384)
!5398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !726, line: 25, size: 288, elements: !5399)
!5399 = !{!5400, !5401, !5402, !5403, !5404, !5405, !5406, !5407, !5408}
!5400 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !5398, file: !726, line: 26, baseType: !113, size: 32)
!5401 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !5398, file: !726, line: 27, baseType: !113, size: 32, offset: 32)
!5402 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !5398, file: !726, line: 28, baseType: !113, size: 32, offset: 64)
!5403 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !5398, file: !726, line: 29, baseType: !113, size: 32, offset: 96)
!5404 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !5398, file: !726, line: 30, baseType: !113, size: 32, offset: 128)
!5405 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !5398, file: !726, line: 31, baseType: !113, size: 32, offset: 160)
!5406 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !5398, file: !726, line: 32, baseType: !113, size: 32, offset: 192)
!5407 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !5398, file: !726, line: 33, baseType: !113, size: 32, offset: 224)
!5408 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !5398, file: !726, line: 34, baseType: !113, size: 32, offset: 256)
!5409 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !5337, file: !659, line: 253, baseType: !104, size: 32, offset: 672)
!5410 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !5337, file: !659, line: 256, baseType: !5368, size: 64, offset: 704)
!5411 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !5337, file: !659, line: 294, baseType: !108, size: 32, offset: 768)
!5412 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !5337, file: !659, line: 300, baseType: !5413, size: 96, offset: 800)
!5413 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !659, line: 149, size: 96, elements: !5414)
!5414 = !{!5415, !5416, !5417}
!5415 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !5413, file: !659, line: 153, baseType: !22, size: 32)
!5416 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5413, file: !659, line: 162, baseType: !439, size: 32, offset: 32)
!5417 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !5413, file: !659, line: 168, baseType: !439, size: 32, offset: 64)
!5418 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !5337, file: !659, line: 325, baseType: !5419, size: 32, offset: 896)
!5419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5420, size: 32)
!5420 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !359, line: 5073, size: 160, elements: !5421)
!5421 = !{!5422, !5428, !5429}
!5422 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !5420, file: !359, line: 5074, baseType: !5423, size: 96)
!5423 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !752, line: 56, size: 96, elements: !5424)
!5424 = !{!5425, !5426, !5427}
!5425 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !5423, file: !752, line: 57, baseType: !755, size: 32)
!5426 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !5423, file: !752, line: 58, baseType: !104, size: 32, offset: 32)
!5427 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !5423, file: !752, line: 59, baseType: !439, size: 32, offset: 64)
!5428 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !5420, file: !359, line: 5075, baseType: !5368, size: 64, offset: 96)
!5429 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5420, file: !359, line: 5076, baseType: !5430, offset: 160)
!5430 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !436, line: 43, elements: !437)
!5431 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !5337, file: !659, line: 343, baseType: !5432, size: 64, offset: 928)
!5432 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !726, line: 60, size: 64, elements: !5433)
!5433 = !{!5434, !5435}
!5434 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !5432, file: !726, line: 63, baseType: !113, size: 32)
!5435 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !5432, file: !726, line: 66, baseType: !113, size: 32, offset: 32)
!5436 = !DILocation(line: 535, column: 9, scope: !5332)
!5437 = !DILocation(line: 535, column: 2, scope: !5332)
!5438 = distinct !DISubprogram(name: "k_thread_abort", scope: !3947, file: !3947, line: 188, type: !5439, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2970, retainedNodes: !5441)
!5439 = !DISubroutineType(types: !5440)
!5440 = !{null, !5335}
!5441 = !{!5442}
!5442 = !DILocalVariable(name: "thread", arg: 1, scope: !5438, file: !3947, line: 188, type: !5335)
!5443 = !DILocation(line: 0, scope: !5438)
!5444 = !DILocation(line: 197, column: 2, scope: !5445)
!5445 = distinct !DILexicalBlock(scope: !5438, file: !3947, line: 197, column: 2)
!5446 = !{i64 2155452381}
!5447 = !DILocation(line: 198, column: 2, scope: !5438)
!5448 = !DILocation(line: 199, column: 1, scope: !5438)
!5449 = distinct !DISubprogram(name: "z_current_get", scope: !3947, file: !3947, line: 173, type: !5333, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2970, retainedNodes: !437)
!5450 = !DILocation(line: 180, column: 2, scope: !5451)
!5451 = distinct !DILexicalBlock(scope: !5449, file: !3947, line: 180, column: 2)
!5452 = !{i64 2155452313}
!5453 = !DILocation(line: 181, column: 9, scope: !5449)
!5454 = !DILocation(line: 181, column: 2, scope: !5449)
!5455 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !2976, file: !2976, line: 1338, type: !5456, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2972, retainedNodes: !5464)
!5456 = !DISubroutineType(types: !5457)
!5457 = !{!108, !4647, !104, !105, !5458, !113}
!5458 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !4286, line: 99, baseType: !5459)
!5459 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !4286, line: 40, baseType: !5460)
!5460 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2976, baseType: !5461)
!5461 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !5462)
!5462 = !{!5463}
!5463 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !5461, file: !2976, baseType: !104, size: 32)
!5464 = !{!5465, !5466, !5467, !5468, !5469, !5470, !5474, !5475, !5476, !5478, !5483, !5526, !5529, !5532, !5533, !5534, !5535, !5536, !5537, !5538, !5541, !5542, !5543, !5547, !5550, !5552, !5555, !5556, !5557, !5562, !5568, !5571, !5575, !5581, !5585, !5588, !5590, !5593}
!5465 = !DILocalVariable(name: "out", arg: 1, scope: !5455, file: !2976, line: 1338, type: !4647)
!5466 = !DILocalVariable(name: "ctx", arg: 2, scope: !5455, file: !2976, line: 1338, type: !104)
!5467 = !DILocalVariable(name: "fp", arg: 3, scope: !5455, file: !2976, line: 1338, type: !105)
!5468 = !DILocalVariable(name: "ap", arg: 4, scope: !5455, file: !2976, line: 1339, type: !5458)
!5469 = !DILocalVariable(name: "flags", arg: 5, scope: !5455, file: !2976, line: 1339, type: !113)
!5470 = !DILocalVariable(name: "buf", scope: !5455, file: !2976, line: 1341, type: !5471)
!5471 = !DICompositeType(tag: DW_TAG_array_type, baseType: !107, size: 176, elements: !5472)
!5472 = !{!5473}
!5473 = !DISubrange(count: 22)
!5474 = !DILocalVariable(name: "count", scope: !5455, file: !2976, line: 1342, type: !439)
!5475 = !DILocalVariable(name: "sint", scope: !5455, file: !2976, line: 1343, type: !2995)
!5476 = !DILocalVariable(name: "tagged_ap", scope: !5455, file: !2976, line: 1345, type: !5477)
!5477 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !422)
!5478 = !DILocalVariable(name: "rc", scope: !5479, file: !2976, line: 1377, type: !108)
!5479 = distinct !DILexicalBlock(scope: !5480, file: !2976, line: 1377, column: 4)
!5480 = distinct !DILexicalBlock(scope: !5481, file: !2976, line: 1376, column: 19)
!5481 = distinct !DILexicalBlock(scope: !5482, file: !2976, line: 1376, column: 7)
!5482 = distinct !DILexicalBlock(scope: !5455, file: !2976, line: 1375, column: 19)
!5483 = !DILocalVariable(name: "state", scope: !5482, file: !2976, line: 1395, type: !5484)
!5484 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5455, file: !2976, line: 1392, size: 192, elements: !5485)
!5485 = !{!5486, !5494}
!5486 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !5484, file: !2976, line: 1393, baseType: !5487, size: 64)
!5487 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !2976, line: 166, size: 64, elements: !5488)
!5488 = !{!5489, !5490, !5491, !5492, !5493}
!5489 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !5487, file: !2976, line: 168, baseType: !2995, size: 64)
!5490 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !5487, file: !2976, line: 171, baseType: !2998, size: 64)
!5491 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !5487, file: !2976, line: 174, baseType: !550, size: 64)
!5492 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !5487, file: !2976, line: 177, baseType: !548, size: 64)
!5493 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !5487, file: !2976, line: 180, baseType: !104, size: 32)
!5494 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !5484, file: !2976, line: 1394, baseType: !5495, size: 96, offset: 64)
!5495 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !2976, line: 189, size: 96, elements: !5496)
!5496 = !{!5497, !5498, !5499, !5500, !5501, !5502, !5503, !5504, !5505, !5506, !5507, !5508, !5509, !5510, !5511, !5512, !5513, !5514, !5515, !5516, !5521}
!5497 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !5495, file: !2976, line: 191, baseType: !422, size: 1, flags: DIFlagBitField, extraData: i64 0)
!5498 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !5495, file: !2976, line: 194, baseType: !422, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!5499 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !5495, file: !2976, line: 197, baseType: !422, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!5500 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !5495, file: !2976, line: 200, baseType: !422, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!5501 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !5495, file: !2976, line: 203, baseType: !422, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!5502 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !5495, file: !2976, line: 206, baseType: !422, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!5503 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !5495, file: !2976, line: 209, baseType: !422, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!5504 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !5495, file: !2976, line: 212, baseType: !422, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!5505 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !5495, file: !2976, line: 219, baseType: !422, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!5506 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !5495, file: !2976, line: 222, baseType: !422, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!5507 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !5495, file: !2976, line: 229, baseType: !422, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!5508 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !5495, file: !2976, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!5509 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !5495, file: !2976, line: 238, baseType: !422, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!5510 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !5495, file: !2976, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!5511 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !5495, file: !2976, line: 244, baseType: !422, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!5512 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !5495, file: !2976, line: 247, baseType: !422, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!5513 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !5495, file: !2976, line: 252, baseType: !422, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!5514 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !5495, file: !2976, line: 257, baseType: !422, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!5515 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !5495, file: !2976, line: 260, baseType: !165, size: 8, offset: 24)
!5516 = !DIDerivedType(tag: DW_TAG_member, scope: !5495, file: !2976, line: 262, baseType: !5517, size: 32, offset: 32)
!5517 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5495, file: !2976, line: 262, size: 32, elements: !5518)
!5518 = !{!5519, !5520}
!5519 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !5517, file: !2976, line: 267, baseType: !108, size: 32)
!5520 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !5517, file: !2976, line: 289, baseType: !108, size: 32)
!5521 = !DIDerivedType(tag: DW_TAG_member, scope: !5495, file: !2976, line: 292, baseType: !5522, size: 32, offset: 64)
!5522 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5495, file: !2976, line: 292, size: 32, elements: !5523)
!5523 = !{!5524, !5525}
!5524 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !5522, file: !2976, line: 297, baseType: !108, size: 32)
!5525 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !5522, file: !2976, line: 306, baseType: !108, size: 32)
!5526 = !DILocalVariable(name: "conv", scope: !5482, file: !2976, line: 1400, type: !5527)
!5527 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5528)
!5528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5495, size: 32)
!5529 = !DILocalVariable(name: "value", scope: !5482, file: !2976, line: 1401, type: !5530)
!5530 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5531)
!5531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5487, size: 32)
!5532 = !DILocalVariable(name: "sp", scope: !5482, file: !2976, line: 1402, type: !105)
!5533 = !DILocalVariable(name: "width", scope: !5482, file: !2976, line: 1403, type: !108)
!5534 = !DILocalVariable(name: "precision", scope: !5482, file: !2976, line: 1404, type: !108)
!5535 = !DILocalVariable(name: "bps", scope: !5482, file: !2976, line: 1405, type: !105)
!5536 = !DILocalVariable(name: "bpe", scope: !5482, file: !2976, line: 1406, type: !105)
!5537 = !DILocalVariable(name: "sign", scope: !5482, file: !2976, line: 1407, type: !107)
!5538 = !DILocalVariable(name: "arg", scope: !5539, file: !2976, line: 1432, type: !108)
!5539 = distinct !DILexicalBlock(scope: !5540, file: !2976, line: 1431, column: 24)
!5540 = distinct !DILexicalBlock(scope: !5482, file: !2976, line: 1431, column: 7)
!5541 = !DILocalVariable(name: "specifier_cat", scope: !5482, file: !2976, line: 1468, type: !2975)
!5542 = !DILocalVariable(name: "length_mod", scope: !5482, file: !2976, line: 1470, type: !2983)
!5543 = !DILocalVariable(name: "rc", scope: !5544, file: !2976, line: 1575, type: !108)
!5544 = distinct !DILexicalBlock(scope: !5545, file: !2976, line: 1575, column: 4)
!5545 = distinct !DILexicalBlock(scope: !5546, file: !2976, line: 1574, column: 43)
!5546 = distinct !DILexicalBlock(scope: !5482, file: !2976, line: 1574, column: 7)
!5547 = !DILocalVariable(name: "rc", scope: !5548, file: !2976, line: 1584, type: !108)
!5548 = distinct !DILexicalBlock(scope: !5549, file: !2976, line: 1584, column: 4)
!5549 = distinct !DILexicalBlock(scope: !5482, file: !2976, line: 1582, column: 28)
!5550 = !DILocalVariable(name: "len", scope: !5551, file: !2976, line: 1589, type: !439)
!5551 = distinct !DILexicalBlock(scope: !5549, file: !2976, line: 1586, column: 13)
!5552 = !DILocalVariable(name: "len", scope: !5553, file: !2976, line: 1641, type: !439)
!5553 = distinct !DILexicalBlock(scope: !5554, file: !2976, line: 1640, column: 24)
!5554 = distinct !DILexicalBlock(scope: !5549, file: !2976, line: 1640, column: 8)
!5555 = !DILocalVariable(name: "nj_len", scope: !5482, file: !2976, line: 1722, type: !439)
!5556 = !DILocalVariable(name: "pad_len", scope: !5482, file: !2976, line: 1723, type: !108)
!5557 = !DILocalVariable(name: "pad", scope: !5558, file: !2976, line: 1751, type: !107)
!5558 = distinct !DILexicalBlock(scope: !5559, file: !2976, line: 1750, column: 26)
!5559 = distinct !DILexicalBlock(scope: !5560, file: !2976, line: 1750, column: 8)
!5560 = distinct !DILexicalBlock(scope: !5561, file: !2976, line: 1747, column: 18)
!5561 = distinct !DILexicalBlock(scope: !5482, file: !2976, line: 1747, column: 7)
!5562 = !DILocalVariable(name: "rc", scope: !5563, file: !2976, line: 1758, type: !108)
!5563 = distinct !DILexicalBlock(scope: !5564, file: !2976, line: 1758, column: 7)
!5564 = distinct !DILexicalBlock(scope: !5565, file: !2976, line: 1757, column: 21)
!5565 = distinct !DILexicalBlock(scope: !5566, file: !2976, line: 1757, column: 10)
!5566 = distinct !DILexicalBlock(scope: !5567, file: !2976, line: 1756, column: 26)
!5567 = distinct !DILexicalBlock(scope: !5558, file: !2976, line: 1756, column: 9)
!5568 = !DILocalVariable(name: "rc", scope: !5569, file: !2976, line: 1765, type: !108)
!5569 = distinct !DILexicalBlock(scope: !5570, file: !2976, line: 1765, column: 6)
!5570 = distinct !DILexicalBlock(scope: !5558, file: !2976, line: 1764, column: 25)
!5571 = !DILocalVariable(name: "rc", scope: !5572, file: !2976, line: 1774, type: !108)
!5572 = distinct !DILexicalBlock(scope: !5573, file: !2976, line: 1774, column: 4)
!5573 = distinct !DILexicalBlock(scope: !5574, file: !2976, line: 1773, column: 18)
!5574 = distinct !DILexicalBlock(scope: !5482, file: !2976, line: 1773, column: 7)
!5575 = !DILocalVariable(name: "rc", scope: !5576, file: !2976, line: 1819, type: !108)
!5576 = distinct !DILexicalBlock(scope: !5577, file: !2976, line: 1819, column: 5)
!5577 = distinct !DILexicalBlock(scope: !5578, file: !2976, line: 1818, column: 44)
!5578 = distinct !DILexicalBlock(scope: !5579, file: !2976, line: 1818, column: 8)
!5579 = distinct !DILexicalBlock(scope: !5580, file: !2976, line: 1817, column: 10)
!5580 = distinct !DILexicalBlock(scope: !5482, file: !2976, line: 1777, column: 7)
!5581 = !DILocalVariable(name: "rc", scope: !5582, file: !2976, line: 1823, type: !108)
!5582 = distinct !DILexicalBlock(scope: !5583, file: !2976, line: 1823, column: 5)
!5583 = distinct !DILexicalBlock(scope: !5584, file: !2976, line: 1822, column: 26)
!5584 = distinct !DILexicalBlock(scope: !5579, file: !2976, line: 1822, column: 8)
!5585 = !DILocalVariable(name: "rc", scope: !5586, file: !2976, line: 1828, type: !108)
!5586 = distinct !DILexicalBlock(scope: !5587, file: !2976, line: 1828, column: 5)
!5587 = distinct !DILexicalBlock(scope: !5579, file: !2976, line: 1827, column: 26)
!5588 = !DILocalVariable(name: "rc", scope: !5589, file: !2976, line: 1831, type: !108)
!5589 = distinct !DILexicalBlock(scope: !5579, file: !2976, line: 1831, column: 4)
!5590 = !DILocalVariable(name: "rc", scope: !5591, file: !2976, line: 1836, type: !108)
!5591 = distinct !DILexicalBlock(scope: !5592, file: !2976, line: 1836, column: 4)
!5592 = distinct !DILexicalBlock(scope: !5482, file: !2976, line: 1835, column: 21)
!5593 = !DILabel(scope: !5549, name: "prec_int_pad0", file: !2976, line: 1634)
!5594 = !DILocation(line: 0, scope: !5455)
!5595 = !DILocation(line: 1341, column: 2, scope: !5455)
!5596 = !DILocation(line: 1341, column: 7, scope: !5455)
!5597 = !DILocation(line: 1375, column: 2, scope: !5455)
!5598 = !DILocation(line: 1342, column: 9, scope: !5455)
!5599 = !DILocation(line: 1375, column: 9, scope: !5455)
!5600 = !DILocation(line: 1377, column: 4, scope: !5479)
!5601 = !DILocation(line: 0, scope: !5479)
!5602 = !DILocation(line: 1377, column: 4, scope: !5603)
!5603 = distinct !DILexicalBlock(scope: !5479, file: !2976, line: 1377, column: 4)
!5604 = distinct !{!5604, !5597, !5605}
!5605 = !DILocation(line: 1839, column: 2, scope: !5455)
!5606 = !DILocation(line: 1392, column: 3, scope: !5482)
!5607 = !DILocation(line: 1395, column: 5, scope: !5482)
!5608 = !DILocation(line: 0, scope: !5482)
!5609 = !DILocation(line: 1409, column: 8, scope: !5482)
!5610 = !DILocation(line: 1414, column: 13, scope: !5611)
!5611 = distinct !DILexicalBlock(scope: !5482, file: !2976, line: 1414, column: 7)
!5612 = !DILocation(line: 1414, column: 7, scope: !5482)
!5613 = !DILocation(line: 1415, column: 12, scope: !5614)
!5614 = distinct !DILexicalBlock(scope: !5611, file: !2976, line: 1414, column: 25)
!5615 = !DILocation(line: 1417, column: 14, scope: !5616)
!5616 = distinct !DILexicalBlock(scope: !5614, file: !2976, line: 1417, column: 8)
!5617 = !DILocation(line: 1417, column: 8, scope: !5614)
!5618 = !DILocation(line: 1418, column: 21, scope: !5619)
!5619 = distinct !DILexicalBlock(scope: !5616, file: !2976, line: 1417, column: 19)
!5620 = !DILocation(line: 1419, column: 13, scope: !5619)
!5621 = !DILocation(line: 1420, column: 4, scope: !5619)
!5622 = !DILocation(line: 1421, column: 20, scope: !5623)
!5623 = distinct !DILexicalBlock(scope: !5611, file: !2976, line: 1421, column: 14)
!5624 = !DILocation(line: 1421, column: 14, scope: !5611)
!5625 = !DILocation(line: 1431, column: 13, scope: !5540)
!5626 = !DILocation(line: 1431, column: 7, scope: !5482)
!5627 = !DILocation(line: 1432, column: 14, scope: !5539)
!5628 = !DILocation(line: 0, scope: !5539)
!5629 = !DILocation(line: 1434, column: 12, scope: !5630)
!5630 = distinct !DILexicalBlock(scope: !5539, file: !2976, line: 1434, column: 8)
!5631 = !DILocation(line: 1434, column: 8, scope: !5539)
!5632 = !DILocation(line: 1435, column: 24, scope: !5633)
!5633 = distinct !DILexicalBlock(scope: !5630, file: !2976, line: 1434, column: 17)
!5634 = !DILocation(line: 1436, column: 4, scope: !5633)
!5635 = !DILocation(line: 1439, column: 20, scope: !5636)
!5636 = distinct !DILexicalBlock(scope: !5540, file: !2976, line: 1439, column: 14)
!5637 = !DILocation(line: 1439, column: 14, scope: !5540)
!5638 = !DILocation(line: 1469, column: 37, scope: !5482)
!5639 = !DILocation(line: 1448, column: 20, scope: !5482)
!5640 = !DILocation(line: 1449, column: 22, scope: !5482)
!5641 = !DILocation(line: 1471, column: 34, scope: !5482)
!5642 = !DILocation(line: 1478, column: 7, scope: !5482)
!5643 = !DILocation(line: 1479, column: 4, scope: !5644)
!5644 = distinct !DILexicalBlock(scope: !5645, file: !2976, line: 1478, column: 40)
!5645 = distinct !DILexicalBlock(scope: !5482, file: !2976, line: 1478, column: 7)
!5646 = !DILocation(line: 1484, column: 19, scope: !5647)
!5647 = distinct !DILexicalBlock(scope: !5644, file: !2976, line: 1479, column: 24)
!5648 = !DILocation(line: 1484, column: 17, scope: !5647)
!5649 = !DILocation(line: 1485, column: 5, scope: !5647)
!5650 = !DILocation(line: 1492, column: 20, scope: !5651)
!5651 = distinct !DILexicalBlock(scope: !5652, file: !2976, line: 1491, column: 12)
!5652 = distinct !DILexicalBlock(scope: !5647, file: !2976, line: 1487, column: 9)
!5653 = !DILocation(line: 1492, column: 18, scope: !5651)
!5654 = !DILocation(line: 1494, column: 5, scope: !5647)
!5655 = !DILocation(line: 1497, column: 23, scope: !5647)
!5656 = !DILocation(line: 1496, column: 17, scope: !5647)
!5657 = !DILocation(line: 1498, column: 5, scope: !5647)
!5658 = !DILocation(line: 1501, column: 23, scope: !5647)
!5659 = !DILocation(line: 1500, column: 17, scope: !5647)
!5660 = !DILocation(line: 1502, column: 5, scope: !5647)
!5661 = !DILocation(line: 1513, column: 23, scope: !5647)
!5662 = !DILocation(line: 1513, column: 6, scope: !5647)
!5663 = !DILocation(line: 1512, column: 17, scope: !5647)
!5664 = !DILocation(line: 1514, column: 5, scope: !5647)
!5665 = !DILocation(line: 0, scope: !5647)
!5666 = !DILocation(line: 1516, column: 8, scope: !5644)
!5667 = !DILocation(line: 1517, column: 19, scope: !5668)
!5668 = distinct !DILexicalBlock(scope: !5669, file: !2976, line: 1516, column: 33)
!5669 = distinct !DILexicalBlock(scope: !5644, file: !2976, line: 1516, column: 8)
!5670 = !DILocation(line: 1517, column: 17, scope: !5668)
!5671 = !DILocation(line: 1518, column: 4, scope: !5668)
!5672 = !DILocation(line: 1519, column: 19, scope: !5673)
!5673 = distinct !DILexicalBlock(scope: !5674, file: !2976, line: 1518, column: 39)
!5674 = distinct !DILexicalBlock(scope: !5669, file: !2976, line: 1518, column: 15)
!5675 = !DILocation(line: 1519, column: 17, scope: !5673)
!5676 = !DILocation(line: 1520, column: 4, scope: !5673)
!5677 = !DILocation(line: 1522, column: 4, scope: !5678)
!5678 = distinct !DILexicalBlock(scope: !5679, file: !2976, line: 1521, column: 47)
!5679 = distinct !DILexicalBlock(scope: !5645, file: !2976, line: 1521, column: 14)
!5680 = !DILocation(line: 1527, column: 19, scope: !5681)
!5681 = distinct !DILexicalBlock(scope: !5678, file: !2976, line: 1522, column: 24)
!5682 = !DILocation(line: 1527, column: 17, scope: !5681)
!5683 = !DILocation(line: 1528, column: 5, scope: !5681)
!5684 = !DILocation(line: 0, scope: !5685)
!5685 = distinct !DILexicalBlock(scope: !5681, file: !2976, line: 1530, column: 9)
!5686 = !DILocation(line: 1540, column: 23, scope: !5681)
!5687 = !DILocation(line: 1539, column: 17, scope: !5681)
!5688 = !DILocation(line: 1542, column: 5, scope: !5681)
!5689 = !DILocation(line: 1545, column: 23, scope: !5681)
!5690 = !DILocation(line: 1544, column: 17, scope: !5681)
!5691 = !DILocation(line: 1547, column: 5, scope: !5681)
!5692 = !DILocation(line: 1551, column: 23, scope: !5681)
!5693 = !DILocation(line: 1551, column: 6, scope: !5681)
!5694 = !DILocation(line: 1550, column: 17, scope: !5681)
!5695 = !DILocation(line: 1552, column: 5, scope: !5681)
!5696 = !DILocation(line: 0, scope: !5681)
!5697 = !DILocation(line: 1554, column: 8, scope: !5678)
!5698 = !DILocation(line: 1555, column: 19, scope: !5699)
!5699 = distinct !DILexicalBlock(scope: !5700, file: !2976, line: 1554, column: 33)
!5700 = distinct !DILexicalBlock(scope: !5678, file: !2976, line: 1554, column: 8)
!5701 = !DILocation(line: 1555, column: 17, scope: !5699)
!5702 = !DILocation(line: 1556, column: 4, scope: !5699)
!5703 = !DILocation(line: 1557, column: 19, scope: !5704)
!5704 = distinct !DILexicalBlock(scope: !5705, file: !2976, line: 1556, column: 39)
!5705 = distinct !DILexicalBlock(scope: !5700, file: !2976, line: 1556, column: 15)
!5706 = !DILocation(line: 1557, column: 17, scope: !5704)
!5707 = !DILocation(line: 1558, column: 4, scope: !5704)
!5708 = !DILocation(line: 0, scope: !5709)
!5709 = distinct !DILexicalBlock(scope: !5710, file: !2976, line: 1560, column: 8)
!5710 = distinct !DILexicalBlock(scope: !5711, file: !2976, line: 1559, column: 45)
!5711 = distinct !DILexicalBlock(scope: !5679, file: !2976, line: 1559, column: 14)
!5712 = !DILocation(line: 1566, column: 17, scope: !5713)
!5713 = distinct !DILexicalBlock(scope: !5714, file: !2976, line: 1565, column: 46)
!5714 = distinct !DILexicalBlock(scope: !5711, file: !2976, line: 1565, column: 14)
!5715 = !DILocation(line: 1566, column: 15, scope: !5713)
!5716 = !DILocation(line: 1567, column: 3, scope: !5713)
!5717 = !DILocation(line: 1574, column: 21, scope: !5546)
!5718 = !DILocation(line: 1575, column: 4, scope: !5544)
!5719 = !DILocation(line: 0, scope: !5544)
!5720 = !DILocation(line: 1575, column: 4, scope: !5721)
!5721 = distinct !DILexicalBlock(scope: !5544, file: !2976, line: 1575, column: 4)
!5722 = !DILocation(line: 1582, column: 17, scope: !5482)
!5723 = !DILocation(line: 1582, column: 3, scope: !5482)
!5724 = !DILocation(line: 1584, column: 4, scope: !5548)
!5725 = !DILocation(line: 0, scope: !5548)
!5726 = !DILocation(line: 1584, column: 4, scope: !5727)
!5727 = distinct !DILexicalBlock(scope: !5548, file: !2976, line: 1584, column: 4)
!5728 = !DILocation(line: 1587, column: 31, scope: !5551)
!5729 = !DILocation(line: 1591, column: 18, scope: !5730)
!5730 = distinct !DILexicalBlock(scope: !5551, file: !2976, line: 1591, column: 8)
!5731 = !DILocation(line: 1591, column: 8, scope: !5551)
!5732 = !DILocation(line: 1592, column: 11, scope: !5733)
!5733 = distinct !DILexicalBlock(scope: !5730, file: !2976, line: 1591, column: 24)
!5734 = !DILocation(line: 0, scope: !5551)
!5735 = !DILocation(line: 1593, column: 4, scope: !5733)
!5736 = !DILocation(line: 1594, column: 11, scope: !5737)
!5737 = distinct !DILexicalBlock(scope: !5730, file: !2976, line: 1593, column: 11)
!5738 = !DILocation(line: 1604, column: 51, scope: !5549)
!5739 = !DILocation(line: 1604, column: 13, scope: !5549)
!5740 = !DILocation(line: 1604, column: 11, scope: !5549)
!5741 = !DILocation(line: 1606, column: 4, scope: !5549)
!5742 = !DILocation(line: 1609, column: 14, scope: !5743)
!5743 = distinct !DILexicalBlock(scope: !5549, file: !2976, line: 1609, column: 8)
!5744 = !DILocation(line: 1609, column: 8, scope: !5549)
!5745 = !DILocation(line: 1619, column: 18, scope: !5549)
!5746 = !DILocation(line: 1620, column: 13, scope: !5747)
!5747 = distinct !DILexicalBlock(scope: !5549, file: !2976, line: 1620, column: 8)
!5748 = !DILocation(line: 1620, column: 8, scope: !5549)
!5749 = !DILocation(line: 1622, column: 36, scope: !5750)
!5750 = distinct !DILexicalBlock(scope: !5747, file: !2976, line: 1620, column: 18)
!5751 = !DILocation(line: 1622, column: 17, scope: !5750)
!5752 = !DILocation(line: 1623, column: 4, scope: !5750)
!5753 = !DILocation(line: 1632, column: 29, scope: !5549)
!5754 = !DILocation(line: 1632, column: 10, scope: !5549)
!5755 = !DILocation(line: 1632, column: 4, scope: !5549)
!5756 = !DILocation(line: 1407, column: 8, scope: !5482)
!5757 = !DILocation(line: 0, scope: !5549)
!5758 = !DILocation(line: 1634, column: 3, scope: !5549)
!5759 = !DILocation(line: 1640, column: 18, scope: !5554)
!5760 = !DILocation(line: 1640, column: 8, scope: !5549)
!5761 = !DILocation(line: 1729, column: 13, scope: !5762)
!5762 = distinct !DILexicalBlock(scope: !5482, file: !2976, line: 1729, column: 7)
!5763 = !DILocation(line: 1641, column: 22, scope: !5553)
!5764 = !DILocation(line: 0, scope: !5553)
!5765 = !DILocation(line: 1646, column: 21, scope: !5553)
!5766 = !DILocation(line: 1649, column: 13, scope: !5767)
!5767 = distinct !DILexicalBlock(scope: !5553, file: !2976, line: 1649, column: 9)
!5768 = !DILocation(line: 1649, column: 9, scope: !5553)
!5769 = !DILocation(line: 1650, column: 35, scope: !5770)
!5770 = distinct !DILexicalBlock(scope: !5767, file: !2976, line: 1649, column: 34)
!5771 = !DILocation(line: 1650, column: 23, scope: !5770)
!5772 = !DILocation(line: 1651, column: 5, scope: !5770)
!5773 = !DILocation(line: 1660, column: 15, scope: !5774)
!5774 = distinct !DILexicalBlock(scope: !5549, file: !2976, line: 1660, column: 8)
!5775 = !DILocation(line: 1660, column: 19, scope: !5774)
!5776 = !DILocation(line: 1660, column: 8, scope: !5549)
!5777 = !DILocation(line: 1661, column: 23, scope: !5778)
!5778 = distinct !DILexicalBlock(scope: !5774, file: !2976, line: 1660, column: 28)
!5779 = !DILocation(line: 1661, column: 11, scope: !5778)
!5780 = !DILocation(line: 1665, column: 22, scope: !5778)
!5781 = !DILocation(line: 1666, column: 21, scope: !5778)
!5782 = !DILocation(line: 1668, column: 5, scope: !5778)
!5783 = !DILocation(line: 1677, column: 30, scope: !5784)
!5784 = distinct !DILexicalBlock(scope: !5785, file: !2976, line: 1676, column: 49)
!5785 = distinct !DILexicalBlock(scope: !5549, file: !2976, line: 1676, column: 8)
!5786 = !DILocation(line: 1677, column: 5, scope: !5784)
!5787 = !DILocation(line: 1680, column: 4, scope: !5549)
!5788 = !DILocation(line: 0, scope: !5730)
!5789 = !DILocation(line: 1597, column: 14, scope: !5551)
!5790 = !DILocation(line: 1699, column: 11, scope: !5791)
!5791 = distinct !DILexicalBlock(scope: !5482, file: !2976, line: 1699, column: 7)
!5792 = !DILocation(line: 1699, column: 7, scope: !5482)
!5793 = !DILocation(line: 1725, column: 7, scope: !5794)
!5794 = distinct !DILexicalBlock(scope: !5482, file: !2976, line: 1725, column: 7)
!5795 = !DILocation(line: 1725, column: 12, scope: !5794)
!5796 = !DILocation(line: 1747, column: 13, scope: !5561)
!5797 = !DILocation(line: 1747, column: 7, scope: !5482)
!5798 = !DILocation(line: 1722, column: 24, scope: !5482)
!5799 = !DILocation(line: 1725, column: 7, scope: !5482)
!5800 = !DILocation(line: 1729, column: 7, scope: !5482)
!5801 = !DILocation(line: 1736, column: 13, scope: !5802)
!5802 = distinct !DILexicalBlock(scope: !5482, file: !2976, line: 1736, column: 7)
!5803 = !DILocation(line: 1735, column: 19, scope: !5482)
!5804 = !DILocation(line: 1736, column: 7, scope: !5482)
!5805 = !DILocation(line: 1748, column: 10, scope: !5560)
!5806 = !DILocation(line: 1750, column: 15, scope: !5559)
!5807 = !DILocation(line: 1750, column: 8, scope: !5560)
!5808 = !DILocation(line: 0, scope: !5558)
!5809 = !DILocation(line: 1756, column: 15, scope: !5567)
!5810 = !DILocation(line: 1756, column: 9, scope: !5558)
!5811 = !DILocation(line: 1758, column: 7, scope: !5563)
!5812 = !DILocation(line: 0, scope: !5563)
!5813 = !DILocation(line: 1758, column: 7, scope: !5814)
!5814 = distinct !DILexicalBlock(scope: !5563, file: !2976, line: 1758, column: 7)
!5815 = !DILocation(line: 1764, column: 5, scope: !5558)
!5816 = !DILocation(line: 0, scope: !5560)
!5817 = !DILocation(line: 1764, column: 20, scope: !5558)
!5818 = !DILocation(line: 1764, column: 17, scope: !5558)
!5819 = !DILocation(line: 1765, column: 6, scope: !5569)
!5820 = !DILocation(line: 0, scope: !5569)
!5821 = !DILocation(line: 1765, column: 6, scope: !5822)
!5822 = distinct !DILexicalBlock(scope: !5569, file: !2976, line: 1765, column: 6)
!5823 = distinct !{!5823, !5815, !5824}
!5824 = !DILocation(line: 1766, column: 5, scope: !5558)
!5825 = !DILocation(line: 1773, column: 12, scope: !5574)
!5826 = !DILocation(line: 1773, column: 7, scope: !5482)
!5827 = !DILocation(line: 1773, column: 7, scope: !5574)
!5828 = !DILocation(line: 1774, column: 4, scope: !5572)
!5829 = !DILocation(line: 0, scope: !5572)
!5830 = !DILocation(line: 1774, column: 4, scope: !5831)
!5831 = distinct !DILexicalBlock(scope: !5572, file: !2976, line: 1774, column: 4)
!5832 = !DILocation(line: 1818, column: 8, scope: !5578)
!5833 = !DILocation(line: 1818, column: 27, scope: !5578)
!5834 = !DILocation(line: 1818, column: 25, scope: !5578)
!5835 = !DILocation(line: 1818, column: 8, scope: !5579)
!5836 = !DILocation(line: 1819, column: 5, scope: !5576)
!5837 = !DILocation(line: 0, scope: !5576)
!5838 = !DILocation(line: 1819, column: 5, scope: !5839)
!5839 = distinct !DILexicalBlock(scope: !5576, file: !2976, line: 1819, column: 5)
!5840 = !DILocation(line: 1822, column: 14, scope: !5584)
!5841 = !DILocation(line: 1822, column: 8, scope: !5579)
!5842 = !DILocation(line: 1823, column: 5, scope: !5582)
!5843 = !DILocation(line: 0, scope: !5582)
!5844 = !DILocation(line: 1823, column: 5, scope: !5845)
!5845 = distinct !DILexicalBlock(scope: !5582, file: !2976, line: 1823, column: 5)
!5846 = !DILocation(line: 1826, column: 20, scope: !5579)
!5847 = !DILocation(line: 1827, column: 4, scope: !5579)
!5848 = !DILocation(line: 0, scope: !5579)
!5849 = !DILocation(line: 1827, column: 21, scope: !5579)
!5850 = !DILocation(line: 1827, column: 18, scope: !5579)
!5851 = !DILocation(line: 1828, column: 5, scope: !5586)
!5852 = !DILocation(line: 0, scope: !5586)
!5853 = !DILocation(line: 1828, column: 5, scope: !5854)
!5854 = distinct !DILexicalBlock(scope: !5586, file: !2976, line: 1828, column: 5)
!5855 = distinct !{!5855, !5847, !5856}
!5856 = !DILocation(line: 1829, column: 4, scope: !5579)
!5857 = !DILocation(line: 1831, column: 4, scope: !5589)
!5858 = !DILocation(line: 0, scope: !5589)
!5859 = !DILocation(line: 1831, column: 4, scope: !5860)
!5860 = distinct !DILexicalBlock(scope: !5589, file: !2976, line: 1831, column: 4)
!5861 = !DILocation(line: 1835, column: 16, scope: !5482)
!5862 = !DILocation(line: 1835, column: 3, scope: !5482)
!5863 = !DILocation(line: 1836, column: 4, scope: !5591)
!5864 = !DILocation(line: 0, scope: !5591)
!5865 = !DILocation(line: 1836, column: 4, scope: !5866)
!5866 = distinct !DILexicalBlock(scope: !5591, file: !2976, line: 1836, column: 4)
!5867 = !DILocation(line: 1837, column: 4, scope: !5592)
!5868 = distinct !{!5868, !5862, !5869}
!5869 = !DILocation(line: 1838, column: 3, scope: !5482)
!5870 = !DILocation(line: 1844, column: 1, scope: !5455)
!5871 = distinct !DISubprogram(name: "extract_conversion", scope: !2976, file: !2976, line: 642, type: !5872, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2972, retainedNodes: !5874)
!5872 = !DISubroutineType(types: !5873)
!5873 = !{!105, !5528, !105}
!5874 = !{!5875, !5876}
!5875 = !DILocalVariable(name: "conv", arg: 1, scope: !5871, file: !2976, line: 642, type: !5528)
!5876 = !DILocalVariable(name: "sp", arg: 2, scope: !5871, file: !2976, line: 643, type: !105)
!5877 = !DILocation(line: 0, scope: !5871)
!5878 = !DILocation(line: 645, column: 10, scope: !5871)
!5879 = !DILocation(line: 653, column: 2, scope: !5871)
!5880 = !DILocation(line: 654, column: 6, scope: !5881)
!5881 = distinct !DILexicalBlock(scope: !5871, file: !2976, line: 654, column: 6)
!5882 = !DILocation(line: 654, column: 10, scope: !5881)
!5883 = !DILocation(line: 654, column: 6, scope: !5871)
!5884 = !DILocation(line: 655, column: 24, scope: !5885)
!5885 = distinct !DILexicalBlock(scope: !5881, file: !2976, line: 654, column: 18)
!5886 = !DILocation(line: 655, column: 19, scope: !5885)
!5887 = !DILocation(line: 656, column: 3, scope: !5885)
!5888 = !DILocation(line: 659, column: 7, scope: !5871)
!5889 = !DILocation(line: 660, column: 7, scope: !5871)
!5890 = !DILocation(line: 661, column: 7, scope: !5871)
!5891 = !DILocation(line: 662, column: 7, scope: !5871)
!5892 = !DILocation(line: 663, column: 7, scope: !5871)
!5893 = !DILocation(line: 665, column: 2, scope: !5871)
!5894 = !DILocation(line: 666, column: 1, scope: !5871)
!5895 = distinct !DISubprogram(name: "outs", scope: !2976, file: !2976, line: 1319, type: !5896, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2972, retainedNodes: !5898)
!5896 = !DISubroutineType(types: !5897)
!5897 = !{!108, !4647, !104, !105, !105}
!5898 = !{!5899, !5900, !5901, !5902, !5903, !5904}
!5899 = !DILocalVariable(name: "out", arg: 1, scope: !5895, file: !2976, line: 1319, type: !4647)
!5900 = !DILocalVariable(name: "ctx", arg: 2, scope: !5895, file: !2976, line: 1320, type: !104)
!5901 = !DILocalVariable(name: "sp", arg: 3, scope: !5895, file: !2976, line: 1321, type: !105)
!5902 = !DILocalVariable(name: "ep", arg: 4, scope: !5895, file: !2976, line: 1322, type: !105)
!5903 = !DILocalVariable(name: "count", scope: !5895, file: !2976, line: 1324, type: !439)
!5904 = !DILocalVariable(name: "rc", scope: !5905, file: !2976, line: 1327, type: !108)
!5905 = distinct !DILexicalBlock(scope: !5895, file: !2976, line: 1326, column: 45)
!5906 = !DILocation(line: 0, scope: !5895)
!5907 = !DILocation(line: 1326, column: 2, scope: !5895)
!5908 = !DILocation(line: 1324, column: 9, scope: !5895)
!5909 = !DILocation(line: 1326, column: 13, scope: !5895)
!5910 = !DILocation(line: 1326, column: 19, scope: !5895)
!5911 = !DILocation(line: 1327, column: 21, scope: !5905)
!5912 = !DILocation(line: 1326, column: 36, scope: !5895)
!5913 = !DILocation(line: 1326, column: 39, scope: !5895)
!5914 = !DILocation(line: 1327, column: 24, scope: !5905)
!5915 = !DILocation(line: 1327, column: 16, scope: !5905)
!5916 = !DILocation(line: 1327, column: 12, scope: !5905)
!5917 = !DILocation(line: 0, scope: !5905)
!5918 = !DILocation(line: 1329, column: 10, scope: !5919)
!5919 = distinct !DILexicalBlock(scope: !5905, file: !2976, line: 1329, column: 7)
!5920 = !DILocation(line: 1329, column: 7, scope: !5905)
!5921 = distinct !{!5921, !5907, !5922}
!5922 = !DILocation(line: 1333, column: 2, scope: !5895)
!5923 = !DILocation(line: 1336, column: 1, scope: !5895)
!5924 = distinct !DISubprogram(name: "encode_uint", scope: !2976, file: !2976, line: 788, type: !5925, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2972, retainedNodes: !5927)
!5925 = !DISubroutineType(types: !5926)
!5926 = !{!443, !2998, !5528, !443, !105}
!5927 = !{!5928, !5929, !5930, !5931, !5932, !5933, !5935, !5936}
!5928 = !DILocalVariable(name: "value", arg: 1, scope: !5924, file: !2976, line: 788, type: !2998)
!5929 = !DILocalVariable(name: "conv", arg: 2, scope: !5924, file: !2976, line: 789, type: !5528)
!5930 = !DILocalVariable(name: "bps", arg: 3, scope: !5924, file: !2976, line: 790, type: !443)
!5931 = !DILocalVariable(name: "bpe", arg: 4, scope: !5924, file: !2976, line: 791, type: !105)
!5932 = !DILocalVariable(name: "upcase", scope: !5924, file: !2976, line: 793, type: !422)
!5933 = !DILocalVariable(name: "radix", scope: !5924, file: !2976, line: 794, type: !5934)
!5934 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!5935 = !DILocalVariable(name: "bp", scope: !5924, file: !2976, line: 795, type: !443)
!5936 = !DILocalVariable(name: "lsv", scope: !5937, file: !2976, line: 798, type: !32)
!5937 = distinct !DILexicalBlock(scope: !5924, file: !2976, line: 797, column: 5)
!5938 = !DILocation(line: 0, scope: !5924)
!5939 = !DILocation(line: 793, column: 35, scope: !5924)
!5940 = !DILocation(line: 793, column: 24, scope: !5924)
!5941 = !DILocation(line: 793, column: 16, scope: !5924)
!5942 = !DILocation(line: 794, column: 29, scope: !5924)
!5943 = !DILocation(line: 795, column: 24, scope: !5924)
!5944 = !DILocation(line: 795, column: 17, scope: !5924)
!5945 = !DILocation(line: 797, column: 2, scope: !5924)
!5946 = !DILocation(line: 802, column: 9, scope: !5937)
!5947 = !DILocation(line: 798, column: 22, scope: !5937)
!5948 = !DILocation(line: 0, scope: !5937)
!5949 = !DILocation(line: 800, column: 16, scope: !5937)
!5950 = !DILocation(line: 800, column: 11, scope: !5937)
!5951 = !DILocation(line: 800, column: 4, scope: !5937)
!5952 = !DILocation(line: 800, column: 9, scope: !5937)
!5953 = !DILocation(line: 803, column: 18, scope: !5924)
!5954 = !DILocation(line: 803, column: 24, scope: !5924)
!5955 = !DILocation(line: 803, column: 2, scope: !5937)
!5956 = distinct !{!5956, !5945, !5957}
!5957 = !DILocation(line: 803, column: 37, scope: !5924)
!5958 = !DILocation(line: 808, column: 12, scope: !5959)
!5959 = distinct !DILexicalBlock(scope: !5924, file: !2976, line: 808, column: 6)
!5960 = !DILocation(line: 808, column: 6, scope: !5924)
!5961 = !DILocation(line: 809, column: 7, scope: !5962)
!5962 = distinct !DILexicalBlock(scope: !5959, file: !2976, line: 808, column: 23)
!5963 = !DILocation(line: 813, column: 3, scope: !5964)
!5964 = distinct !DILexicalBlock(scope: !5965, file: !2976, line: 811, column: 27)
!5965 = distinct !DILexicalBlock(scope: !5966, file: !2976, line: 811, column: 14)
!5966 = distinct !DILexicalBlock(scope: !5962, file: !2976, line: 809, column: 7)
!5967 = !DILocation(line: 0, scope: !5966)
!5968 = !DILocation(line: 818, column: 2, scope: !5924)
!5969 = distinct !DISubprogram(name: "store_count", scope: !2976, file: !2976, line: 1280, type: !5970, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2972, retainedNodes: !5974)
!5970 = !DISubroutineType(types: !5971)
!5971 = !{null, !5972, !104, !108}
!5972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5973, size: 32)
!5973 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5495)
!5974 = !{!5975, !5976, !5977}
!5975 = !DILocalVariable(name: "conv", arg: 1, scope: !5969, file: !2976, line: 1280, type: !5972)
!5976 = !DILocalVariable(name: "dp", arg: 2, scope: !5969, file: !2976, line: 1281, type: !104)
!5977 = !DILocalVariable(name: "count", arg: 3, scope: !5969, file: !2976, line: 1282, type: !108)
!5978 = !DILocation(line: 0, scope: !5969)
!5979 = !DILocation(line: 1284, column: 38, scope: !5969)
!5980 = !DILocation(line: 1284, column: 2, scope: !5969)
!5981 = !DILocation(line: 1286, column: 4, scope: !5982)
!5982 = distinct !DILexicalBlock(scope: !5969, file: !2976, line: 1284, column: 50)
!5983 = !DILocation(line: 1286, column: 14, scope: !5982)
!5984 = !DILocation(line: 1287, column: 3, scope: !5982)
!5985 = !DILocation(line: 1289, column: 24, scope: !5982)
!5986 = !DILocation(line: 1289, column: 22, scope: !5982)
!5987 = !DILocation(line: 1290, column: 3, scope: !5982)
!5988 = !DILocation(line: 1292, column: 18, scope: !5982)
!5989 = !DILocation(line: 1292, column: 4, scope: !5982)
!5990 = !DILocation(line: 1292, column: 16, scope: !5982)
!5991 = !DILocation(line: 1293, column: 3, scope: !5982)
!5992 = !DILocation(line: 1295, column: 4, scope: !5982)
!5993 = !DILocation(line: 1295, column: 15, scope: !5982)
!5994 = !DILocation(line: 1296, column: 3, scope: !5982)
!5995 = !DILocation(line: 1298, column: 22, scope: !5982)
!5996 = !DILocation(line: 1298, column: 4, scope: !5982)
!5997 = !DILocation(line: 1298, column: 20, scope: !5982)
!5998 = !DILocation(line: 1299, column: 3, scope: !5982)
!5999 = !DILocation(line: 1301, column: 21, scope: !5982)
!6000 = !DILocation(line: 1301, column: 4, scope: !5982)
!6001 = !DILocation(line: 1301, column: 19, scope: !5982)
!6002 = !DILocation(line: 1302, column: 3, scope: !5982)
!6003 = !DILocation(line: 1304, column: 4, scope: !5982)
!6004 = !DILocation(line: 1304, column: 17, scope: !5982)
!6005 = !DILocation(line: 1305, column: 3, scope: !5982)
!6006 = !DILocation(line: 1307, column: 4, scope: !5982)
!6007 = !DILocation(line: 1307, column: 20, scope: !5982)
!6008 = !DILocation(line: 1308, column: 3, scope: !5982)
!6009 = !DILocation(line: 1316, column: 1, scope: !5969)
!6010 = distinct !DISubprogram(name: "isupper", scope: !6011, file: !6011, line: 16, type: !571, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2972, retainedNodes: !6012)
!6011 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6012 = !{!6013}
!6013 = !DILocalVariable(name: "a", arg: 1, scope: !6010, file: !6011, line: 16, type: !108)
!6014 = !DILocation(line: 0, scope: !6010)
!6015 = !DILocation(line: 18, column: 29, scope: !6010)
!6016 = !DILocation(line: 18, column: 45, scope: !6010)
!6017 = !DILocation(line: 18, column: 2, scope: !6010)
!6018 = distinct !DISubprogram(name: "conversion_radix", scope: !2976, file: !2976, line: 761, type: !6019, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2972, retainedNodes: !6021)
!6019 = !DISubroutineType(types: !6020)
!6020 = !{!439, !107}
!6021 = !{!6022}
!6022 = !DILocalVariable(name: "specifier", arg: 1, scope: !6018, file: !2976, line: 761, type: !107)
!6023 = !DILocation(line: 0, scope: !6018)
!6024 = !DILocation(line: 763, column: 2, scope: !6018)
!6025 = !DILocation(line: 770, column: 3, scope: !6026)
!6026 = distinct !DILexicalBlock(scope: !6018, file: !2976, line: 763, column: 21)
!6027 = !DILocation(line: 774, column: 3, scope: !6026)
!6028 = !DILocation(line: 0, scope: !6026)
!6029 = !DILocation(line: 776, column: 1, scope: !6018)
!6030 = distinct !DISubprogram(name: "extract_flags", scope: !2976, file: !2976, line: 339, type: !5872, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2972, retainedNodes: !6031)
!6031 = !{!6032, !6033, !6034}
!6032 = !DILocalVariable(name: "conv", arg: 1, scope: !6030, file: !2976, line: 339, type: !5528)
!6033 = !DILocalVariable(name: "sp", arg: 2, scope: !6030, file: !2976, line: 340, type: !105)
!6034 = !DILocalVariable(name: "loop", scope: !6030, file: !2976, line: 342, type: !422)
!6035 = !DILocation(line: 0, scope: !6030)
!6036 = !DILocation(line: 344, column: 2, scope: !6030)
!6037 = !DILocation(line: 345, column: 11, scope: !6038)
!6038 = distinct !DILexicalBlock(scope: !6030, file: !2976, line: 344, column: 5)
!6039 = !DILocation(line: 345, column: 3, scope: !6038)
!6040 = !DILocation(line: 351, column: 4, scope: !6041)
!6041 = distinct !DILexicalBlock(scope: !6038, file: !2976, line: 345, column: 16)
!6042 = !DILocation(line: 354, column: 4, scope: !6041)
!6043 = !DILocation(line: 357, column: 4, scope: !6041)
!6044 = !DILocation(line: 360, column: 4, scope: !6041)
!6045 = !DILocation(line: 0, scope: !6041)
!6046 = !DILocation(line: 370, column: 12, scope: !6047)
!6047 = distinct !DILexicalBlock(scope: !6030, file: !2976, line: 370, column: 6)
!6048 = !DILocation(line: 370, column: 22, scope: !6047)
!6049 = !DILocation(line: 371, column: 19, scope: !6050)
!6050 = distinct !DILexicalBlock(scope: !6047, file: !2976, line: 370, column: 42)
!6051 = !DILocation(line: 372, column: 2, scope: !6050)
!6052 = !DILocation(line: 376, column: 2, scope: !6030)
!6053 = distinct !DISubprogram(name: "extract_width", scope: !2976, file: !2976, line: 388, type: !5872, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2972, retainedNodes: !6054)
!6054 = !{!6055, !6056, !6057, !6058}
!6055 = !DILocalVariable(name: "conv", arg: 1, scope: !6053, file: !2976, line: 388, type: !5528)
!6056 = !DILocalVariable(name: "sp", arg: 2, scope: !6053, file: !2976, line: 389, type: !105)
!6057 = !DILocalVariable(name: "wp", scope: !6053, file: !2976, line: 398, type: !105)
!6058 = !DILocalVariable(name: "width", scope: !6053, file: !2976, line: 399, type: !439)
!6059 = !DILocation(line: 0, scope: !6053)
!6060 = !DILocation(line: 391, column: 8, scope: !6053)
!6061 = !DILocation(line: 391, column: 22, scope: !6053)
!6062 = !DILocation(line: 393, column: 6, scope: !6063)
!6063 = distinct !DILexicalBlock(scope: !6053, file: !2976, line: 393, column: 6)
!6064 = !DILocation(line: 393, column: 10, scope: !6063)
!6065 = !DILocation(line: 393, column: 6, scope: !6053)
!6066 = !DILocation(line: 394, column: 20, scope: !6067)
!6067 = distinct !DILexicalBlock(scope: !6063, file: !2976, line: 393, column: 18)
!6068 = !DILocation(line: 395, column: 10, scope: !6067)
!6069 = !DILocation(line: 395, column: 3, scope: !6067)
!6070 = !DILocation(line: 399, column: 17, scope: !6053)
!6071 = !DILocation(line: 401, column: 6, scope: !6072)
!6072 = distinct !DILexicalBlock(scope: !6053, file: !2976, line: 401, column: 6)
!6073 = !DILocation(line: 401, column: 9, scope: !6072)
!6074 = !DILocation(line: 401, column: 6, scope: !6053)
!6075 = !DILocation(line: 402, column: 23, scope: !6076)
!6076 = distinct !DILexicalBlock(scope: !6072, file: !2976, line: 401, column: 16)
!6077 = !DILocation(line: 403, column: 9, scope: !6076)
!6078 = !DILocation(line: 403, column: 21, scope: !6076)
!6079 = !DILocation(line: 405, column: 11, scope: !6076)
!6080 = !DILocation(line: 404, column: 21, scope: !6076)
!6081 = !DILocation(line: 406, column: 2, scope: !6076)
!6082 = !DILocation(line: 409, column: 1, scope: !6053)
!6083 = distinct !DISubprogram(name: "extract_prec", scope: !2976, file: !2976, line: 420, type: !5872, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2972, retainedNodes: !6084)
!6084 = !{!6085, !6086, !6087}
!6085 = !DILocalVariable(name: "conv", arg: 1, scope: !6083, file: !2976, line: 420, type: !5528)
!6086 = !DILocalVariable(name: "sp", arg: 2, scope: !6083, file: !2976, line: 421, type: !105)
!6087 = !DILocalVariable(name: "prec", scope: !6083, file: !2976, line: 435, type: !439)
!6088 = !DILocation(line: 0, scope: !6083)
!6089 = !DILocation(line: 423, column: 24, scope: !6083)
!6090 = !DILocation(line: 423, column: 28, scope: !6083)
!6091 = !DILocation(line: 423, column: 8, scope: !6083)
!6092 = !DILocation(line: 423, column: 21, scope: !6083)
!6093 = !DILocation(line: 425, column: 6, scope: !6083)
!6094 = !DILocation(line: 428, column: 2, scope: !6083)
!6095 = !DILocation(line: 430, column: 6, scope: !6096)
!6096 = distinct !DILexicalBlock(scope: !6083, file: !2976, line: 430, column: 6)
!6097 = !DILocation(line: 430, column: 10, scope: !6096)
!6098 = !DILocation(line: 430, column: 6, scope: !6083)
!6099 = !DILocation(line: 431, column: 19, scope: !6100)
!6100 = distinct !DILexicalBlock(scope: !6096, file: !2976, line: 430, column: 18)
!6101 = !DILocation(line: 432, column: 10, scope: !6100)
!6102 = !DILocation(line: 432, column: 3, scope: !6100)
!6103 = !DILocation(line: 435, column: 16, scope: !6083)
!6104 = !DILocation(line: 437, column: 8, scope: !6083)
!6105 = !DILocation(line: 437, column: 19, scope: !6083)
!6106 = !DILocation(line: 439, column: 10, scope: !6083)
!6107 = !DILocation(line: 438, column: 20, scope: !6083)
!6108 = !DILocation(line: 441, column: 9, scope: !6083)
!6109 = !DILocation(line: 442, column: 1, scope: !6083)
!6110 = distinct !DISubprogram(name: "extract_length", scope: !2976, file: !2976, line: 453, type: !5872, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2972, retainedNodes: !6111)
!6111 = !{!6112, !6113}
!6112 = !DILocalVariable(name: "conv", arg: 1, scope: !6110, file: !2976, line: 453, type: !5528)
!6113 = !DILocalVariable(name: "sp", arg: 2, scope: !6110, file: !2976, line: 454, type: !105)
!6114 = !DILocation(line: 0, scope: !6110)
!6115 = !DILocation(line: 456, column: 10, scope: !6110)
!6116 = !DILocation(line: 456, column: 2, scope: !6110)
!6117 = !DILocation(line: 458, column: 8, scope: !6118)
!6118 = distinct !DILexicalBlock(scope: !6119, file: !2976, line: 458, column: 7)
!6119 = distinct !DILexicalBlock(scope: !6110, file: !2976, line: 456, column: 15)
!6120 = !DILocation(line: 458, column: 7, scope: !6118)
!6121 = !DILocation(line: 458, column: 13, scope: !6118)
!6122 = !DILocation(line: 0, scope: !6118)
!6123 = !DILocation(line: 458, column: 7, scope: !6119)
!6124 = !DILocation(line: 459, column: 21, scope: !6125)
!6125 = distinct !DILexicalBlock(scope: !6118, file: !2976, line: 458, column: 21)
!6126 = !DILocation(line: 460, column: 4, scope: !6125)
!6127 = !DILocation(line: 461, column: 3, scope: !6125)
!6128 = !DILocation(line: 462, column: 21, scope: !6129)
!6129 = distinct !DILexicalBlock(scope: !6118, file: !2976, line: 461, column: 10)
!6130 = !DILocation(line: 466, column: 8, scope: !6131)
!6131 = distinct !DILexicalBlock(scope: !6119, file: !2976, line: 466, column: 7)
!6132 = !DILocation(line: 466, column: 7, scope: !6131)
!6133 = !DILocation(line: 466, column: 13, scope: !6131)
!6134 = !DILocation(line: 0, scope: !6131)
!6135 = !DILocation(line: 466, column: 7, scope: !6119)
!6136 = !DILocation(line: 467, column: 21, scope: !6137)
!6137 = distinct !DILexicalBlock(scope: !6131, file: !2976, line: 466, column: 21)
!6138 = !DILocation(line: 468, column: 4, scope: !6137)
!6139 = !DILocation(line: 469, column: 3, scope: !6137)
!6140 = !DILocation(line: 470, column: 21, scope: !6141)
!6141 = distinct !DILexicalBlock(scope: !6131, file: !2976, line: 469, column: 10)
!6142 = !DILocation(line: 474, column: 9, scope: !6119)
!6143 = !DILocation(line: 474, column: 20, scope: !6119)
!6144 = !DILocation(line: 475, column: 3, scope: !6119)
!6145 = !DILocation(line: 476, column: 3, scope: !6119)
!6146 = !DILocation(line: 478, column: 9, scope: !6119)
!6147 = !DILocation(line: 478, column: 20, scope: !6119)
!6148 = !DILocation(line: 479, column: 3, scope: !6119)
!6149 = !DILocation(line: 480, column: 3, scope: !6119)
!6150 = !DILocation(line: 482, column: 9, scope: !6119)
!6151 = !DILocation(line: 482, column: 20, scope: !6119)
!6152 = !DILocation(line: 483, column: 3, scope: !6119)
!6153 = !DILocation(line: 484, column: 3, scope: !6119)
!6154 = !DILocation(line: 486, column: 9, scope: !6119)
!6155 = !DILocation(line: 486, column: 20, scope: !6119)
!6156 = !DILocation(line: 487, column: 3, scope: !6119)
!6157 = !DILocation(line: 492, column: 21, scope: !6119)
!6158 = !DILocation(line: 493, column: 3, scope: !6119)
!6159 = !DILocation(line: 495, column: 9, scope: !6119)
!6160 = !DILocation(line: 495, column: 20, scope: !6119)
!6161 = !DILocation(line: 496, column: 3, scope: !6119)
!6162 = !DILocation(line: 498, column: 2, scope: !6110)
!6163 = distinct !DISubprogram(name: "extract_specifier", scope: !2976, file: !2976, line: 513, type: !5872, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2972, retainedNodes: !6164)
!6164 = !{!6165, !6166, !6167, !6168}
!6165 = !DILocalVariable(name: "conv", arg: 1, scope: !6163, file: !2976, line: 513, type: !5528)
!6166 = !DILocalVariable(name: "sp", arg: 2, scope: !6163, file: !2976, line: 514, type: !105)
!6167 = !DILocalVariable(name: "unsupported", scope: !6163, file: !2976, line: 516, type: !422)
!6168 = !DILabel(scope: !6169, name: "int_conv", file: !2976, line: 526)
!6169 = distinct !DILexicalBlock(scope: !6163, file: !2976, line: 520, column: 27)
!6170 = !DILocation(line: 0, scope: !6163)
!6171 = !DILocation(line: 518, column: 20, scope: !6163)
!6172 = !DILocation(line: 518, column: 8, scope: !6163)
!6173 = !DILocation(line: 518, column: 18, scope: !6163)
!6174 = !DILocation(line: 520, column: 2, scope: !6163)
!6175 = !DILocation(line: 525, column: 3, scope: !6169)
!6176 = !DILocation(line: 0, scope: !6169)
!6177 = !DILocation(line: 526, column: 1, scope: !6169)
!6178 = !DILocation(line: 528, column: 24, scope: !6179)
!6179 = distinct !DILexicalBlock(scope: !6169, file: !2976, line: 528, column: 7)
!6180 = !DILocation(line: 528, column: 7, scope: !6169)
!6181 = !DILocation(line: 535, column: 23, scope: !6182)
!6182 = distinct !DILexicalBlock(scope: !6169, file: !2976, line: 535, column: 7)
!6183 = !DILocation(line: 535, column: 7, scope: !6169)
!6184 = !DILocation(line: 536, column: 36, scope: !6185)
!6185 = distinct !DILexicalBlock(scope: !6182, file: !2976, line: 535, column: 31)
!6186 = !DILocation(line: 537, column: 3, scope: !6185)
!6187 = !DILocation(line: 570, column: 9, scope: !6169)
!6188 = !DILocation(line: 570, column: 23, scope: !6169)
!6189 = !DILocation(line: 575, column: 4, scope: !6190)
!6190 = distinct !DILexicalBlock(scope: !6191, file: !2976, line: 573, column: 48)
!6191 = distinct !DILexicalBlock(scope: !6169, file: !2976, line: 573, column: 7)
!6192 = !DILocation(line: 603, column: 9, scope: !6169)
!6193 = !DILocation(line: 603, column: 23, scope: !6169)
!6194 = !DILocation(line: 605, column: 24, scope: !6195)
!6195 = distinct !DILexicalBlock(scope: !6169, file: !2976, line: 605, column: 7)
!6196 = !DILocation(line: 605, column: 7, scope: !6169)
!6197 = !DILocation(line: 612, column: 9, scope: !6169)
!6198 = !DILocation(line: 612, column: 23, scope: !6169)
!6199 = !DILocation(line: 619, column: 24, scope: !6200)
!6200 = distinct !DILexicalBlock(scope: !6169, file: !2976, line: 619, column: 7)
!6201 = !DILocation(line: 619, column: 7, scope: !6169)
!6202 = !DILocation(line: 625, column: 9, scope: !6169)
!6203 = !DILocation(line: 625, column: 17, scope: !6169)
!6204 = !DILocation(line: 626, column: 3, scope: !6169)
!6205 = !DILocation(line: 629, column: 20, scope: !6163)
!6206 = !DILocation(line: 629, column: 8, scope: !6163)
!6207 = !DILocation(line: 518, column: 23, scope: !6163)
!6208 = !DILocation(line: 631, column: 2, scope: !6163)
!6209 = distinct !DISubprogram(name: "extract_decimal", scope: !2976, file: !2976, line: 318, type: !6210, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2972, retainedNodes: !6212)
!6210 = !DISubroutineType(types: !6211)
!6211 = !{!439, !551}
!6212 = !{!6213, !6214, !6215}
!6213 = !DILocalVariable(name: "str", arg: 1, scope: !6209, file: !2976, line: 318, type: !551)
!6214 = !DILocalVariable(name: "sp", scope: !6209, file: !2976, line: 320, type: !105)
!6215 = !DILocalVariable(name: "val", scope: !6209, file: !2976, line: 321, type: !439)
!6216 = !DILocation(line: 0, scope: !6209)
!6217 = !DILocation(line: 320, column: 19, scope: !6209)
!6218 = !DILocation(line: 323, column: 37, scope: !6209)
!6219 = !DILocation(line: 323, column: 17, scope: !6209)
!6220 = !DILocation(line: 323, column: 9, scope: !6209)
!6221 = !DILocation(line: 323, column: 2, scope: !6209)
!6222 = !DILocation(line: 324, column: 13, scope: !6223)
!6223 = distinct !DILexicalBlock(scope: !6209, file: !2976, line: 323, column: 43)
!6224 = !DILocation(line: 324, column: 24, scope: !6223)
!6225 = !DILocation(line: 324, column: 19, scope: !6223)
!6226 = !DILocation(line: 324, column: 27, scope: !6223)
!6227 = distinct !{!6227, !6221, !6228}
!6228 = !DILocation(line: 325, column: 2, scope: !6209)
!6229 = !DILocation(line: 326, column: 7, scope: !6209)
!6230 = !DILocation(line: 327, column: 2, scope: !6209)
!6231 = distinct !DISubprogram(name: "isdigit", scope: !6011, file: !6011, line: 43, type: !571, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2972, retainedNodes: !6232)
!6232 = !{!6233}
!6233 = !DILocalVariable(name: "a", arg: 1, scope: !6231, file: !6011, line: 43, type: !108)
!6234 = !DILocation(line: 0, scope: !6231)
!6235 = !DILocation(line: 45, column: 29, scope: !6231)
!6236 = !DILocation(line: 45, column: 45, scope: !6231)
!6237 = !DILocation(line: 45, column: 2, scope: !6231)
!6238 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !6239, file: !6239, line: 9, type: !3551, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3006, retainedNodes: !437)
!6239 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/sensor_batch_processing")
!6240 = !DILocation(line: 11, column: 1, scope: !6238)
!6241 = !{i64 2147564977, i64 2147565020, i64 2147565060}
!6242 = !DILocation(line: 12, column: 1, scope: !6238)
!6243 = !{i64 2147569204, i64 2147569247, i64 2147569287}
!6244 = !DILocation(line: 13, column: 1, scope: !6238)
!6245 = !{i64 2147569413, i64 2147569456, i64 2147569496}
!6246 = !DILocation(line: 14, column: 1, scope: !6238)
!6247 = !{i64 2147569582, i64 2147569625, i64 2147569665}
!6248 = !DILocation(line: 15, column: 1, scope: !6238)
!6249 = !{i64 2147569745, i64 2147569788, i64 2147569828}
!6250 = !DILocation(line: 16, column: 1, scope: !6238)
!6251 = !{i64 2147569929, i64 2147569972, i64 2147570012}
!6252 = !DILocation(line: 17, column: 1, scope: !6238)
!6253 = !{i64 2147570108, i64 2147570151, i64 2147570191}
!6254 = !DILocation(line: 18, column: 1, scope: !6238)
!6255 = !{i64 2147570351, i64 2147570394, i64 2147570434}
!6256 = !DILocation(line: 19, column: 1, scope: !6238)
!6257 = !{i64 2147570586, i64 2147570629, i64 2147570669}
!6258 = !DILocation(line: 20, column: 1, scope: !6238)
!6259 = !{i64 2147570773, i64 2147570816, i64 2147570856}
!6260 = !DILocation(line: 21, column: 1, scope: !6238)
!6261 = !{i64 2147570989, i64 2147571032, i64 2147571072}
!6262 = !DILocation(line: 22, column: 1, scope: !6238)
!6263 = !{i64 2147571192, i64 2147571235, i64 2147571275}
!6264 = !DILocation(line: 23, column: 1, scope: !6238)
!6265 = !{i64 2147571395, i64 2147571438, i64 2147571478}
!6266 = !DILocation(line: 24, column: 1, scope: !6238)
!6267 = !{i64 2147571570, i64 2147571613, i64 2147571653}
!6268 = !DILocation(line: 25, column: 1, scope: !6238)
!6269 = !{i64 2147571778, i64 2147571821, i64 2147571861}
!6270 = !DILocation(line: 26, column: 1, scope: !6238)
!6271 = !{i64 2147571982, i64 2147572025, i64 2147572065}
!6272 = !DILocation(line: 27, column: 1, scope: !6238)
!6273 = !{i64 2147572175, i64 2147572218, i64 2147572258}
!6274 = !DILocation(line: 28, column: 1, scope: !6238)
!6275 = !{i64 2147572377, i64 2147572420, i64 2147572460}
!6276 = !DILocation(line: 29, column: 1, scope: !6238)
!6277 = !{i64 2147572576, i64 2147572619, i64 2147572659}
!6278 = !DILocation(line: 30, column: 1, scope: !6238)
!6279 = !{i64 2147572803, i64 2147572846, i64 2147572886}
!6280 = !DILocation(line: 31, column: 1, scope: !6238)
!6281 = !{i64 2147573005, i64 2147573048, i64 2147573088}
!6282 = !DILocation(line: 32, column: 1, scope: !6238)
!6283 = !{i64 2147573220, i64 2147573263, i64 2147573303}
!6284 = !DILocation(line: 33, column: 1, scope: !6238)
!6285 = !{i64 2147573392, i64 2147573435, i64 2147573475}
!6286 = !DILocation(line: 34, column: 1, scope: !6238)
!6287 = !{i64 2147573594, i64 2147573637, i64 2147573677}
!6288 = !DILocation(line: 35, column: 1, scope: !6238)
!6289 = !{i64 2147573820, i64 2147573863, i64 2147573903}
!6290 = !DILocation(line: 36, column: 1, scope: !6238)
!6291 = !{i64 2147574019, i64 2147574062, i64 2147574102}
!6292 = !DILocation(line: 37, column: 1, scope: !6238)
!6293 = !{i64 2147574194, i64 2147574237, i64 2147574277}
!6294 = !DILocation(line: 38, column: 1, scope: !6238)
!6295 = !{i64 2147574447, i64 2147574490, i64 2147574530}
!6296 = !DILocation(line: 39, column: 1, scope: !6238)
!6297 = !{i64 2147574688, i64 2147574731, i64 2147574771}
!6298 = !DILocation(line: 40, column: 1, scope: !6238)
!6299 = !{i64 2147574923, i64 2147574966, i64 2147575006}
!6300 = !DILocation(line: 41, column: 1, scope: !6238)
!6301 = !{i64 2147575149, i64 2147575192, i64 2147575232}
!6302 = !DILocation(line: 42, column: 1, scope: !6238)
!6303 = !{i64 2147575375, i64 2147575418, i64 2147575458}
!6304 = !DILocation(line: 43, column: 1, scope: !6238)
!6305 = !{i64 2147575610, i64 2147575653, i64 2147575693}
!6306 = !DILocation(line: 44, column: 1, scope: !6238)
!6307 = !{i64 2147575845, i64 2147575888, i64 2147575928}
!6308 = !DILocation(line: 45, column: 1, scope: !6238)
!6309 = !{i64 2147576080, i64 2147576123, i64 2147576163}
!6310 = !DILocation(line: 46, column: 1, scope: !6238)
!6311 = !{i64 2147576318, i64 2147576361, i64 2147576401}
!6312 = !DILocation(line: 47, column: 1, scope: !6238)
!6313 = !{i64 2147576592, i64 2147576635, i64 2147576675}
!6314 = !DILocation(line: 48, column: 1, scope: !6238)
!6315 = !{i64 2147576830, i64 2147576873, i64 2147576913}
!6316 = !DILocation(line: 49, column: 1, scope: !6238)
!6317 = !{i64 2147577083, i64 2147577126, i64 2147577166}
!6318 = !DILocation(line: 50, column: 1, scope: !6238)
!6319 = !{i64 2147577327, i64 2147577370, i64 2147577410}
!6320 = !DILocation(line: 51, column: 1, scope: !6238)
!6321 = !{i64 2147577577, i64 2147577620, i64 2147577660}
!6322 = !DILocation(line: 52, column: 1, scope: !6238)
!6323 = !{i64 2147577818, i64 2147577861, i64 2147577901}
!6324 = !DILocation(line: 53, column: 1, scope: !6238)
!6325 = !{i64 2147582126, i64 2147582169, i64 2147582209}
!6326 = !DILocation(line: 54, column: 1, scope: !6238)
!6327 = !{i64 2147582361, i64 2147582404, i64 2147582444}
!6328 = !DILocation(line: 55, column: 1, scope: !6238)
!6329 = !{i64 2147582596, i64 2147582639, i64 2147582679}
!6330 = !DILocation(line: 56, column: 1, scope: !6238)
!6331 = !{i64 2147582831, i64 2147582874, i64 2147582914}
!6332 = !DILocation(line: 57, column: 1, scope: !6238)
!6333 = !{i64 2147583066, i64 2147583109, i64 2147583149}
!6334 = !DILocation(line: 58, column: 1, scope: !6238)
!6335 = !{i64 2147583310, i64 2147583353, i64 2147583393}
!6336 = !DILocation(line: 59, column: 1, scope: !6238)
!6337 = !{i64 2147583548, i64 2147583591, i64 2147583631}
!6338 = !DILocation(line: 60, column: 1, scope: !6238)
!6339 = !{i64 2147583789, i64 2147583832, i64 2147583872}
!6340 = !DILocation(line: 61, column: 1, scope: !6238)
!6341 = !{i64 2147584069, i64 2147584112, i64 2147584152}
!6342 = !DILocation(line: 62, column: 1, scope: !6238)
!6343 = !{i64 2147584328, i64 2147584371, i64 2147584411}
!6344 = !DILocation(line: 63, column: 1, scope: !6238)
!6345 = !{i64 2147584566, i64 2147584609, i64 2147584649}
!6346 = !DILocation(line: 64, column: 1, scope: !6238)
!6347 = !{i64 2147584795, i64 2147584838, i64 2147584878}
!6348 = !DILocation(line: 65, column: 1, scope: !6238)
!6349 = !{i64 2147585054, i64 2147585097, i64 2147585137}
!6350 = !DILocation(line: 66, column: 1, scope: !6238)
!6351 = !{i64 2147585283, i64 2147585326, i64 2147585366}
!6352 = !DILocation(line: 67, column: 1, scope: !6238)
!6353 = !{i64 2147585491, i64 2147585534, i64 2147585574}
!6354 = !DILocation(line: 68, column: 1, scope: !6238)
!6355 = !{i64 2147585702, i64 2147585745, i64 2147585785}
!6356 = !DILocation(line: 69, column: 1, scope: !6238)
!6357 = !{i64 2147585937, i64 2147585980, i64 2147586020}
!6358 = !DILocation(line: 70, column: 1, scope: !6238)
!6359 = !{i64 2147586166, i64 2147586209, i64 2147586249}
!6360 = !DILocation(line: 71, column: 1, scope: !6238)
!6361 = !{i64 2147586383, i64 2147586426, i64 2147586466}
!6362 = !DILocation(line: 72, column: 1, scope: !6238)
!6363 = !{i64 2147586612, i64 2147586655, i64 2147586695}
!6364 = !DILocation(line: 73, column: 1, scope: !6238)
!6365 = !{i64 2147586850, i64 2147586893, i64 2147586933}
!6366 = !DILocation(line: 74, column: 1, scope: !6238)
!6367 = !{i64 2147587082, i64 2147587125, i64 2147587165}
!6368 = !DILocation(line: 75, column: 1, scope: !6238)
!6369 = !{i64 2147587308, i64 2147587351, i64 2147587391}
!6370 = !DILocation(line: 76, column: 1, scope: !6238)
!6371 = !{i64 2147587525, i64 2147587568, i64 2147587608}
!6372 = !DILocation(line: 77, column: 1, scope: !6238)
!6373 = !{i64 2147587757, i64 2147587800, i64 2147587840}
!6374 = !DILocation(line: 78, column: 1, scope: !6238)
!6375 = !{i64 2147587983, i64 2147588026, i64 2147588066}
!6376 = !DILocation(line: 79, column: 1, scope: !6238)
!6377 = !{i64 2147588197, i64 2147588240, i64 2147588280}
!6378 = !DILocation(line: 80, column: 1, scope: !6238)
!6379 = !{i64 2147588417, i64 2147588460, i64 2147588500}
!6380 = !DILocation(line: 81, column: 1, scope: !6238)
!6381 = !{i64 2147588649, i64 2147588692, i64 2147588732}
!6382 = !DILocation(line: 82, column: 1, scope: !6238)
!6383 = !{i64 2147588857, i64 2147588900, i64 2147588940}
!6384 = !DILocation(line: 83, column: 1, scope: !6238)
!6385 = !{i64 2147589062, i64 2147589105, i64 2147589145}
!6386 = !DILocation(line: 84, column: 1, scope: !6238)
!6387 = !{i64 2147589279, i64 2147589322, i64 2147589362}
!6388 = !DILocation(line: 85, column: 1, scope: !6238)
!6389 = !{i64 2147589493, i64 2147589536, i64 2147589576}
!6390 = !DILocation(line: 86, column: 1, scope: !6238)
!6391 = !{i64 2147589719, i64 2147589762, i64 2147589802}
!6392 = !DILocation(line: 87, column: 1, scope: !6238)
!6393 = !{i64 2147589939, i64 2147589982, i64 2147590022}
!6394 = !DILocation(line: 88, column: 1, scope: !6238)
!6395 = !{i64 2147594205, i64 2147594248, i64 2147594288}
!6396 = !DILocation(line: 89, column: 1, scope: !6238)
!6397 = !{i64 2147594437, i64 2147594480, i64 2147594520}
!6398 = !DILocation(line: 90, column: 1, scope: !6238)
!6399 = !{i64 2147594672, i64 2147594715, i64 2147594755}
!6400 = !DILocation(line: 91, column: 1, scope: !6238)
!6401 = !{i64 2147594922, i64 2147594965, i64 2147595005}
!6402 = !DILocation(line: 92, column: 1, scope: !6238)
!6403 = !{i64 2147595172, i64 2147595215, i64 2147595255}
!6404 = !DILocation(line: 93, column: 1, scope: !6238)
!6405 = !{i64 2147595410, i64 2147595453, i64 2147595493}
!6406 = !DILocation(line: 94, column: 1, scope: !6238)
!6407 = !{i64 2147595621, i64 2147595664, i64 2147595704}
!6408 = !DILocation(line: 95, column: 1, scope: !6238)
!6409 = !{i64 2147595838, i64 2147595881, i64 2147595921}
!6410 = !DILocation(line: 96, column: 1, scope: !6238)
!6411 = !{i64 2147596034, i64 2147596077, i64 2147596117}
!6412 = !DILocation(line: 97, column: 1, scope: !6238)
!6413 = !{i64 2147596236, i64 2147596279, i64 2147596319}
!6414 = !DILocation(line: 98, column: 1, scope: !6238)
!6415 = !{i64 2147596429, i64 2147596472, i64 2147596512}
!6416 = !DILocation(line: 99, column: 1, scope: !6238)
!6417 = !{i64 2147596637, i64 2147596680, i64 2147596720}
!6418 = !DILocation(line: 100, column: 1, scope: !6238)
!6419 = !{i64 2147596833, i64 2147596876, i64 2147596916}
!6420 = !DILocation(line: 101, column: 1, scope: !6238)
!6421 = !{i64 2147597044, i64 2147597087, i64 2147597127}
!6422 = !DILocation(line: 102, column: 1, scope: !6238)
!6423 = !{i64 2147597255, i64 2147597298, i64 2147597338}
!6424 = !DILocation(line: 103, column: 1, scope: !6238)
!6425 = !{i64 2147597454, i64 2147597497, i64 2147597537}
!6426 = !DILocation(line: 104, column: 1, scope: !6238)
!6427 = !{i64 2147597629, i64 2147597672, i64 2147597712}
!6428 = !DILocation(line: 105, column: 1, scope: !6238)
!6429 = !{i64 2147597813, i64 2147597856, i64 2147597896}
!6430 = !DILocation(line: 106, column: 1, scope: !6238)
!6431 = !{i64 2147598015, i64 2147598058, i64 2147598098}
!6432 = !DILocation(line: 107, column: 1, scope: !6238)
!6433 = !{i64 2147598196, i64 2147598239, i64 2147598279}
!6434 = !DILocation(line: 108, column: 1, scope: !6238)
!6435 = !{i64 2147598395, i64 2147598438, i64 2147598478}
!6436 = !DILocation(line: 109, column: 1, scope: !6238)
!6437 = !{i64 2147598600, i64 2147598643, i64 2147598683}
!6438 = !DILocation(line: 110, column: 1, scope: !6238)
!6439 = !{i64 2147598793, i64 2147598836, i64 2147598876}
!6440 = !DILocation(line: 111, column: 1, scope: !6238)
!6441 = !{i64 2147598959, i64 2147599002, i64 2147599042}
!6442 = !DILocation(line: 112, column: 1, scope: !6238)
!6443 = !{i64 2147599143, i64 2147599186, i64 2147599226}
!6444 = !DILocation(line: 113, column: 1, scope: !6238)
!6445 = !{i64 2147599333, i64 2147599376, i64 2147599416}
!6446 = !DILocation(line: 114, column: 1, scope: !6238)
!6447 = !{i64 2147599517, i64 2147599560, i64 2147599600}
!6448 = !DILocation(line: 115, column: 1, scope: !6238)
!6449 = !{i64 2147599731, i64 2147599774, i64 2147599814}
!6450 = !DILocation(line: 116, column: 1, scope: !6238)
!6451 = !{i64 2147599942, i64 2147599985, i64 2147600025}
!6452 = !DILocation(line: 117, column: 1, scope: !6238)
!6453 = !{i64 2147600165, i64 2147600208, i64 2147600248}
!6454 = !DILocation(line: 118, column: 1, scope: !6238)
!6455 = !{i64 2147600349, i64 2147600392, i64 2147600432}
!6456 = !DILocation(line: 119, column: 1, scope: !6238)
!6457 = !{i64 2147600563, i64 2147600606, i64 2147600646}
!6458 = !DILocation(line: 120, column: 1, scope: !6238)
!6459 = !{i64 2147600729, i64 2147600772, i64 2147600812}
!6460 = !DILocation(line: 121, column: 1, scope: !6238)
!6461 = !{i64 2147600910, i64 2147600953, i64 2147600993}
!6462 = !DILocation(line: 122, column: 1, scope: !6238)
!6463 = !{i64 2147601103, i64 2147601146, i64 2147601186}
!6464 = !DILocation(line: 123, column: 1, scope: !6238)
!6465 = !{i64 2147601329, i64 2147601372, i64 2147601412}
!6466 = !DILocation(line: 124, column: 1, scope: !6238)
!6467 = !{i64 2147601543, i64 2147601586, i64 2147601626}
!6468 = !DILocation(line: 125, column: 1, scope: !6238)
!6469 = !{i64 2147601769, i64 2147601812, i64 2147601852}
!6470 = !DILocation(line: 126, column: 1, scope: !6238)
!6471 = !{i64 2147601986, i64 2147602029, i64 2147602069}
!6472 = !DILocation(line: 127, column: 1, scope: !6238)
!6473 = !{i64 2147602263, i64 2147602306, i64 2147602346}
!6474 = !DILocation(line: 128, column: 1, scope: !6238)
!6475 = !{i64 2147602489, i64 2147602532, i64 2147602572}
!6476 = !DILocation(line: 129, column: 1, scope: !6238)
!6477 = !{i64 2147602697, i64 2147602740, i64 2147602780}
!6478 = !DILocation(line: 130, column: 1, scope: !6238)
!6479 = !{i64 2147602893, i64 2147602936, i64 2147602976}
!6480 = !DILocation(line: 131, column: 1, scope: !6238)
!6481 = !{i64 2147603158, i64 2147603201, i64 2147603241}
!6482 = !DILocation(line: 132, column: 1, scope: !6238)
!6483 = !{i64 2147607433, i64 2147607476, i64 2147607516}
!6484 = !DILocation(line: 133, column: 1, scope: !6238)
!6485 = !{i64 2147607608, i64 2147607651, i64 2147607691}
!6486 = !DILocation(line: 134, column: 1, scope: !6238)
!6487 = !{i64 2147607862, i64 2147607905, i64 2147607945}
!6488 = !DILocation(line: 135, column: 1, scope: !6238)
!6489 = !{i64 2147608061, i64 2147608104, i64 2147608144}
!6490 = !DILocation(line: 136, column: 1, scope: !6238)
!6491 = !{i64 2147608303, i64 2147608346, i64 2147608386}
!6492 = !DILocation(line: 137, column: 1, scope: !6238)
!6493 = !{i64 2147608466, i64 2147608509, i64 2147608549}
!6494 = !DILocation(line: 138, column: 1, scope: !6238)
!6495 = !{i64 2147608653, i64 2147608696, i64 2147608736}
!6496 = !DILocation(line: 139, column: 1, scope: !6238)
!6497 = !{i64 2147608861, i64 2147608904, i64 2147608944}
!6498 = !DILocation(line: 140, column: 1, scope: !6238)
!6499 = !{i64 2147609057, i64 2147609100, i64 2147609140}
!6500 = !DILocation(line: 141, column: 1, scope: !6238)
!6501 = !{i64 2147609250, i64 2147609293, i64 2147609333}
!6502 = !DILocation(line: 142, column: 1, scope: !6238)
!6503 = !{i64 2147609433, i64 2147609476, i64 2147609516}
!6504 = !DILocation(line: 143, column: 1, scope: !6238)
!6505 = !{i64 2147609647, i64 2147609690, i64 2147609730}
!6506 = !DILocation(line: 144, column: 1, scope: !6238)
!6507 = !{i64 2147609858, i64 2147609901, i64 2147609941}
!6508 = !DILocation(line: 145, column: 1, scope: !6238)
!6509 = !{i64 2147610078, i64 2147610121, i64 2147610161}
!6510 = !DILocation(line: 146, column: 1, scope: !6238)
!6511 = !{i64 2147610285, i64 2147610328, i64 2147610368}
!6512 = !DILocation(line: 147, column: 1, scope: !6238)
!6513 = !{i64 2147610558, i64 2147610601, i64 2147610641}
!6514 = !DILocation(line: 148, column: 1, scope: !6238)
!6515 = !{i64 2147610806, i64 2147610849, i64 2147610889}
!6516 = !DILocation(line: 149, column: 1, scope: !6238)
!6517 = !{i64 2147611005, i64 2147611048, i64 2147611088}
!6518 = !DILocation(line: 150, column: 1, scope: !6238)
!6519 = !{i64 2147611240, i64 2147611283, i64 2147611323}
!6520 = !DILocation(line: 151, column: 1, scope: !6238)
!6521 = !{i64 2147611490, i64 2147611533, i64 2147611573}
!6522 = !DILocation(line: 152, column: 1, scope: !6238)
!6523 = !{i64 2147611692, i64 2147611735, i64 2147611775}
!6524 = !DILocation(line: 153, column: 1, scope: !6238)
!6525 = !{i64 2147611915, i64 2147611958, i64 2147611998}
!6526 = !DILocation(line: 154, column: 1, scope: !6238)
!6527 = !{i64 2147612129, i64 2147612172, i64 2147612212}
!6528 = !DILocation(line: 155, column: 1, scope: !6238)
!6529 = !{i64 2147612373, i64 2147612416, i64 2147612456}
!6530 = !DILocation(line: 156, column: 1, scope: !6238)
!6531 = !{i64 2147612602, i64 2147612645, i64 2147612685}
!6532 = !DILocation(line: 157, column: 1, scope: !6238)
!6533 = !{i64 2147612831, i64 2147612874, i64 2147612914}
!6534 = !DILocation(line: 158, column: 1, scope: !6238)
!6535 = !{i64 2147613039, i64 2147613082, i64 2147613122}
!6536 = !DILocation(line: 159, column: 1, scope: !6238)
!6537 = !{i64 2147613277, i64 2147613320, i64 2147613360}
!6538 = !DILocation(line: 160, column: 1, scope: !6238)
!6539 = !{i64 2147613503, i64 2147613546, i64 2147613586}
!6540 = !DILocation(line: 161, column: 1, scope: !6238)
!6541 = !{i64 2147613762, i64 2147613805, i64 2147613845}
!6542 = !DILocation(line: 162, column: 1, scope: !6238)
!6543 = !{i64 2147613982, i64 2147614025, i64 2147614065}
!6544 = !DILocation(line: 163, column: 1, scope: !6238)
!6545 = !{i64 2147614214, i64 2147614257, i64 2147614297}
!6546 = !DILocation(line: 164, column: 1, scope: !6238)
!6547 = !{i64 2147614455, i64 2147614498, i64 2147614538}
!6548 = !DILocation(line: 165, column: 1, scope: !6238)
!6549 = !{i64 2147614696, i64 2147614739, i64 2147614779}
!6550 = !DILocation(line: 166, column: 1, scope: !6238)
!6551 = !{i64 2147614919, i64 2147614962, i64 2147615002}
!6552 = !DILocation(line: 167, column: 1, scope: !6238)
!6553 = !{i64 2147615136, i64 2147615179, i64 2147615219}
!6554 = !DILocation(line: 168, column: 1, scope: !6238)
!6555 = !{i64 2147615377, i64 2147615420, i64 2147615460}
!6556 = !DILocation(line: 169, column: 1, scope: !6238)
!6557 = !{i64 2147615564, i64 2147615607, i64 2147615647}
!6558 = !DILocation(line: 170, column: 1, scope: !6238)
!6559 = !{i64 2147615751, i64 2147615794, i64 2147615834}
!6560 = !DILocation(line: 171, column: 1, scope: !6238)
!6561 = !{i64 2147615914, i64 2147615957, i64 2147615997}
!6562 = !DILocation(line: 172, column: 1, scope: !6238)
!6563 = !{i64 2147620180, i64 2147620223, i64 2147620263}
!6564 = !DILocation(line: 173, column: 1, scope: !6238)
!6565 = !{i64 2147620373, i64 2147620416, i64 2147620456}
!6566 = !DILocation(line: 174, column: 1, scope: !6238)
!6567 = !{i64 2147620632, i64 2147620675, i64 2147620715}
!6568 = !DILocation(line: 175, column: 1, scope: !6238)
!6569 = !{i64 2147620855, i64 2147620898, i64 2147620938}
!6570 = !DILocation(line: 176, column: 1, scope: !6238)
!6571 = !{i64 2147621084, i64 2147621127, i64 2147621167}
!6572 = !DILocation(line: 177, column: 1, scope: !6238)
!6573 = !{i64 2147621298, i64 2147621341, i64 2147621381}
!6574 = !DILocation(line: 178, column: 1, scope: !6238)
!6575 = !{i64 2147621500, i64 2147621543, i64 2147621583}
!6576 = !DILocation(line: 179, column: 1, scope: !6238)
!6577 = !{i64 2147621696, i64 2147621739, i64 2147621779}
!6578 = !DILocation(line: 180, column: 1, scope: !6238)
!6579 = !{i64 2147621908, i64 2147621951, i64 2147621991}
!6580 = !DILocation(line: 181, column: 1, scope: !6238)
!6581 = !{i64 2147622129, i64 2147622172, i64 2147622212}
!6582 = !DILocation(line: 182, column: 1, scope: !6238)
!6583 = !{i64 2147622343, i64 2147622386, i64 2147622426}
!6584 = !DILocation(line: 183, column: 1, scope: !6238)
!6585 = !{i64 2147622533, i64 2147622576, i64 2147622616}
!6586 = !DILocation(line: 184, column: 1, scope: !6238)
!6587 = !{i64 2147622732, i64 2147622775, i64 2147622815}
!6588 = !DILocation(line: 185, column: 1, scope: !6238)
!6589 = !{i64 2147622937, i64 2147622980, i64 2147623020}
!6590 = !DILocation(line: 186, column: 1, scope: !6238)
!6591 = !{i64 2147623157, i64 2147623200, i64 2147623240}
!6592 = !DILocation(line: 187, column: 1, scope: !6238)
!6593 = !{i64 2147623358, i64 2147623401, i64 2147623441}
!6594 = !DILocation(line: 188, column: 1, scope: !6238)
!6595 = !{i64 2147623557, i64 2147623600, i64 2147623640}
!6596 = !DILocation(line: 189, column: 1, scope: !6238)
!6597 = !{i64 2147623762, i64 2147623805, i64 2147623845}
!6598 = !DILocation(line: 190, column: 1, scope: !6238)
!6599 = !{i64 2147623931, i64 2147623974, i64 2147624014}
!6600 = !DILocation(line: 191, column: 1, scope: !6238)
!6601 = !{i64 2147624115, i64 2147624158, i64 2147624198}
!6602 = !DILocation(line: 192, column: 1, scope: !6238)
!6603 = !{i64 2147624299, i64 2147624342, i64 2147624382}
!6604 = !DILocation(line: 193, column: 1, scope: !6238)
!6605 = !{i64 2147624486, i64 2147624529, i64 2147624569}
!6606 = !DILocation(line: 194, column: 1, scope: !6238)
!6607 = !{i64 2147624670, i64 2147624713, i64 2147624753}
!6608 = !DILocation(line: 195, column: 1, scope: !6238)
!6609 = !{i64 2147624908, i64 2147624951, i64 2147624991}
!6610 = !DILocation(line: 196, column: 1, scope: !6238)
!6611 = !{i64 2147625138, i64 2147625181, i64 2147625221}
!6612 = !DILocation(line: 197, column: 1, scope: !6238)
!6613 = !{i64 2147625367, i64 2147625410, i64 2147625450}
!6614 = !DILocation(line: 198, column: 1, scope: !6238)
!6615 = !{i64 2147625554, i64 2147625597, i64 2147625637}
!6616 = !DILocation(line: 199, column: 1, scope: !6238)
!6617 = !{i64 2147625750, i64 2147625793, i64 2147625833}
!6618 = !DILocation(line: 200, column: 1, scope: !6238)
!6619 = !{i64 2147625958, i64 2147626001, i64 2147626041}
!6620 = !DILocation(line: 201, column: 1, scope: !6238)
!6621 = !{i64 2147626170, i64 2147626213, i64 2147626253}
!6622 = !DILocation(line: 202, column: 1, scope: !6238)
!6623 = !{i64 2147626369, i64 2147626412, i64 2147626452}
!6624 = !DILocation(line: 203, column: 1, scope: !6238)
!6625 = !{i64 2147626607, i64 2147626650, i64 2147626690}
!6626 = !DILocation(line: 204, column: 1, scope: !6238)
!6627 = !{i64 2147626803, i64 2147626846, i64 2147626886}
!6628 = !DILocation(line: 205, column: 1, scope: !6238)
!6629 = !{i64 2147627005, i64 2147627048, i64 2147627088}
!6630 = !DILocation(line: 206, column: 1, scope: !6238)
!6631 = !{i64 2147627198, i64 2147627241, i64 2147627281}
!6632 = !DILocation(line: 207, column: 1, scope: !6238)
!6633 = !{i64 2147627432, i64 2147627475, i64 2147627515}
!6634 = !DILocation(line: 208, column: 1, scope: !6238)
!6635 = !{i64 2147627595, i64 2147627638, i64 2147627678}
!6636 = !DILocation(line: 209, column: 1, scope: !6238)
!6637 = !{i64 2147627834, i64 2147627877, i64 2147627917}
!6638 = !DILocation(line: 210, column: 1, scope: !6238)
!6639 = !{i64 2147628073, i64 2147628116, i64 2147628156}
!6640 = !DILocation(line: 211, column: 1, scope: !6238)
!6641 = !{i64 2147628309, i64 2147628352, i64 2147628392}
!6642 = !DILocation(line: 212, column: 1, scope: !6238)
!6643 = !{i64 2147628539, i64 2147628582, i64 2147628622}
!6644 = !DILocation(line: 213, column: 1, scope: !6238)
!6645 = !{i64 2147628726, i64 2147628769, i64 2147628809}
!6646 = !DILocation(line: 214, column: 1, scope: !6238)
!6647 = !{i64 2147628925, i64 2147628968, i64 2147629008}
!6648 = !DILocation(line: 215, column: 1, scope: !6238)
!6649 = !{i64 2147629196, i64 2147629239, i64 2147629279}
!6650 = !DILocation(line: 216, column: 1, scope: !6238)
!6651 = !{i64 2147633432, i64 2147633475, i64 2147633515}
!6652 = !DILocation(line: 217, column: 1, scope: !6238)
!6653 = !{i64 2147633666, i64 2147633709, i64 2147633749}
!6654 = !DILocation(line: 218, column: 1, scope: !6238)
!6655 = !{i64 2147633874, i64 2147633917, i64 2147633957}
!6656 = !DILocation(line: 219, column: 1, scope: !6238)
!6657 = !{i64 2147634092, i64 2147634135, i64 2147634175}
!6658 = !DILocation(line: 220, column: 1, scope: !6238)
!6659 = !{i64 2147634282, i64 2147634325, i64 2147634365}
!6660 = !DILocation(line: 221, column: 1, scope: !6238)
!6661 = !{i64 2147634514, i64 2147634557, i64 2147634597}
!6662 = !DILocation(line: 222, column: 1, scope: !6238)
!6663 = !{i64 2147634734, i64 2147634777, i64 2147634817}
!6664 = !DILocation(line: 223, column: 1, scope: !6238)
!6665 = !{i64 2147634930, i64 2147634973, i64 2147635013}
!6666 = !DILocation(line: 224, column: 1, scope: !6238)
!6667 = !{i64 2147635136, i64 2147635179, i64 2147635219}
!6668 = !DILocation(line: 225, column: 1, scope: !6238)
!6669 = !{i64 2147635341, i64 2147635384, i64 2147635424}
!6670 = !DILocation(line: 226, column: 1, scope: !6238)
!6671 = !{i64 2147635567, i64 2147635610, i64 2147635650}
!6672 = !DILocation(line: 227, column: 1, scope: !6238)
!6673 = !{i64 2147635775, i64 2147635818, i64 2147635858}
!6674 = !DILocation(line: 228, column: 1, scope: !6238)
!6675 = !{i64 2147635971, i64 2147636014, i64 2147636054}
!6676 = !DILocation(line: 229, column: 1, scope: !6238)
!6677 = !{i64 2147636203, i64 2147636246, i64 2147636286}
!6678 = !DILocation(line: 230, column: 1, scope: !6238)
!6679 = !{i64 2147636387, i64 2147636430, i64 2147636470}
!6680 = !DILocation(line: 231, column: 1, scope: !6238)
!6681 = !{i64 2147636596, i64 2147636639, i64 2147636679}
!6682 = !DILocation(line: 232, column: 1, scope: !6238)
!6683 = !{i64 2147636804, i64 2147636847, i64 2147636887}
!6684 = !DILocation(line: 233, column: 1, scope: !6238)
!6685 = !{i64 2147637000, i64 2147637043, i64 2147637083}
!6686 = !DILocation(line: 234, column: 1, scope: !6238)
!6687 = !{i64 2147637184, i64 2147637227, i64 2147637267}
!6688 = !DILocation(line: 235, column: 1, scope: !6238)
!6689 = !{i64 2147637410, i64 2147637453, i64 2147637493}
!6690 = !DILocation(line: 236, column: 1, scope: !6238)
!6691 = !{i64 2147637636, i64 2147637679, i64 2147637719}
!6692 = !DILocation(line: 237, column: 1, scope: !6238)
!6693 = !{i64 2147637862, i64 2147637905, i64 2147637945}
!6694 = !DILocation(line: 238, column: 1, scope: !6238)
!6695 = !{i64 2147638088, i64 2147638131, i64 2147638171}
!6696 = !DILocation(line: 239, column: 1, scope: !6238)
!6697 = !{i64 2147638314, i64 2147638357, i64 2147638397}
!6698 = !DILocation(line: 240, column: 1, scope: !6238)
!6699 = !{i64 2147638546, i64 2147638589, i64 2147638629}
!6700 = !DILocation(line: 241, column: 1, scope: !6238)
!6701 = !{i64 2147638784, i64 2147638827, i64 2147638867}
!6702 = !DILocation(line: 242, column: 1, scope: !6238)
!6703 = !{i64 2147639004, i64 2147639047, i64 2147639087}
!6704 = !DILocation(line: 243, column: 1, scope: !6238)
!6705 = !{i64 2147639248, i64 2147639291, i64 2147639331}
!6706 = !DILocation(line: 244, column: 1, scope: !6238)
!6707 = !{i64 2147639489, i64 2147639532, i64 2147639572}
!6708 = !DILocation(line: 245, column: 1, scope: !6238)
!6709 = !{i64 2147639724, i64 2147639767, i64 2147639807}
!6710 = !DILocation(line: 246, column: 1, scope: !6238)
!6711 = !{i64 2147639956, i64 2147639999, i64 2147640039}
!6712 = !DILocation(line: 247, column: 1, scope: !6238)
!6713 = !{i64 2147640158, i64 2147640201, i64 2147640241}
!6714 = !DILocation(line: 248, column: 1, scope: !6238)
!6715 = !{i64 2147640408, i64 2147640451, i64 2147640491}
!6716 = !DILocation(line: 249, column: 1, scope: !6238)
!6717 = !{i64 2147640646, i64 2147640689, i64 2147640729}
!6718 = !DILocation(line: 250, column: 1, scope: !6238)
!6719 = !{i64 2147640854, i64 2147640897, i64 2147640937}
!6720 = !DILocation(line: 251, column: 1, scope: !6238)
!6721 = !{i64 2147641050, i64 2147641093, i64 2147641133}
!6722 = !DILocation(line: 252, column: 1, scope: !6238)
!6723 = !{i64 2147641234, i64 2147641277, i64 2147641317}
!6724 = !DILocation(line: 253, column: 1, scope: !6238)
!6725 = !{i64 2147641451, i64 2147641494, i64 2147641534}
!6726 = !DILocation(line: 254, column: 1, scope: !6238)
!6727 = !{i64 2147641656, i64 2147641699, i64 2147641739}
!6728 = !DILocation(line: 255, column: 1, scope: !6238)
!6729 = !{i64 2147641891, i64 2147641934, i64 2147641974}
!6730 = !DILocation(line: 256, column: 1, scope: !6238)
!6731 = !{i64 2147646175, i64 2147646218, i64 2147646258}
!6732 = !DILocation(line: 257, column: 1, scope: !6238)
!6733 = !{i64 2147646399, i64 2147646442, i64 2147646482}
!6734 = !DILocation(line: 258, column: 1, scope: !6238)
!6735 = !{i64 2147646637, i64 2147646680, i64 2147646720}
!6736 = !DILocation(line: 259, column: 1, scope: !6238)
!6737 = !{i64 2147646875, i64 2147646918, i64 2147646958}
!6738 = !DILocation(line: 260, column: 1, scope: !6238)
!6739 = !{i64 2147647092, i64 2147647135, i64 2147647175}
!6740 = !DILocation(line: 261, column: 1, scope: !6238)
!6741 = !{i64 2147647297, i64 2147647340, i64 2147647380}
!6742 = !DILocation(line: 262, column: 1, scope: !6238)
!6743 = !{i64 2147647490, i64 2147647533, i64 2147647573}
!6744 = !DILocation(line: 263, column: 1, scope: !6238)
!6745 = !{i64 2147647743, i64 2147647786, i64 2147647826}
!6746 = !DILocation(line: 264, column: 1, scope: !6238)
!6747 = !{i64 2147647951, i64 2147647994, i64 2147648034}
!6748 = !DILocation(line: 265, column: 1, scope: !6238)
!6749 = !{i64 2147648147, i64 2147648190, i64 2147648230}
!6750 = !DILocation(line: 266, column: 1, scope: !6238)
!6751 = !{i64 2147648361, i64 2147648404, i64 2147648444}
!6752 = !DILocation(line: 267, column: 1, scope: !6238)
!6753 = !{i64 2147648569, i64 2147648612, i64 2147648652}
!6754 = !DILocation(line: 268, column: 1, scope: !6238)
!6755 = !{i64 2147648759, i64 2147648802, i64 2147648842}
!6756 = !DILocation(line: 269, column: 1, scope: !6238)
!6757 = !{i64 2147648973, i64 2147649016, i64 2147649056}
!6758 = !DILocation(line: 270, column: 1, scope: !6238)
!6759 = !{i64 2147649235, i64 2147649278, i64 2147649318}
!6760 = !DILocation(line: 271, column: 1, scope: !6238)
!6761 = !{i64 2147649446, i64 2147649489, i64 2147649529}
!6762 = !DILocation(line: 272, column: 1, scope: !6238)
!6763 = !{i64 2147649690, i64 2147649733, i64 2147649773}
!6764 = !DILocation(line: 273, column: 1, scope: !6238)
!6765 = !{i64 2147649901, i64 2147649944, i64 2147649984}
!6766 = !DILocation(line: 274, column: 1, scope: !6238)
!6767 = !{i64 2147650130, i64 2147650173, i64 2147650213}
!6768 = !DILocation(line: 275, column: 1, scope: !6238)
!6769 = !{i64 2147650395, i64 2147650438, i64 2147650478}
!6770 = !DILocation(line: 276, column: 1, scope: !6238)
!6771 = !{i64 2147650600, i64 2147650643, i64 2147650683}
!6772 = !DILocation(line: 277, column: 1, scope: !6238)
!6773 = !{i64 2147650796, i64 2147650839, i64 2147650879}
!6774 = !DILocation(line: 278, column: 1, scope: !6238)
!6775 = !{i64 2147651019, i64 2147651062, i64 2147651102}
!6776 = !DILocation(line: 279, column: 1, scope: !6238)
!6777 = !{i64 2147651182, i64 2147651225, i64 2147651265}
!6778 = !DILocation(line: 280, column: 1, scope: !6238)
!6779 = !{i64 2147651387, i64 2147651430, i64 2147651470}
!6780 = !DILocation(line: 281, column: 1, scope: !6238)
!6781 = !{i64 2147651607, i64 2147651650, i64 2147651690}
!6782 = !DILocation(line: 282, column: 1, scope: !6238)
!6783 = !{i64 2147651821, i64 2147651864, i64 2147651904}
!6784 = !DILocation(line: 283, column: 1, scope: !6238)
!6785 = !{i64 2147652065, i64 2147652108, i64 2147652148}
!6786 = !DILocation(line: 284, column: 1, scope: !6238)
!6787 = !{i64 2147652297, i64 2147652340, i64 2147652380}
!6788 = !DILocation(line: 285, column: 1, scope: !6238)
!6789 = !{i64 2147652511, i64 2147652554, i64 2147652594}
!6790 = !DILocation(line: 286, column: 1, scope: !6238)
!6791 = !{i64 2147652722, i64 2147652765, i64 2147652805}
!6792 = !DILocation(line: 287, column: 1, scope: !6238)
!6793 = !{i64 2147652915, i64 2147652958, i64 2147652998}
!6794 = !DILocation(line: 288, column: 1, scope: !6238)
!6795 = !{i64 2147653114, i64 2147653157, i64 2147653197}
!6796 = !DILocation(line: 289, column: 1, scope: !6238)
!6797 = !{i64 2147653286, i64 2147653329, i64 2147653369}
!6798 = !DILocation(line: 290, column: 1, scope: !6238)
!6799 = !{i64 2147653479, i64 2147653522, i64 2147653562}
!6800 = !DILocation(line: 291, column: 1, scope: !6238)
!6801 = !{i64 2147653675, i64 2147653718, i64 2147653758}
!6802 = !DILocation(line: 292, column: 1, scope: !6238)
!6803 = !{i64 2147653838, i64 2147653881, i64 2147653921}
!6804 = !DILocation(line: 293, column: 1, scope: !6238)
!6805 = !{i64 2147654040, i64 2147654083, i64 2147654123}
!6806 = !DILocation(line: 294, column: 1, scope: !6238)
!6807 = !{i64 2147654245, i64 2147654288, i64 2147654328}
!6808 = !DILocation(line: 295, column: 1, scope: !6238)
!6809 = !{i64 2147654453, i64 2147654496, i64 2147654536}
!6810 = !DILocation(line: 296, column: 1, scope: !6238)
!6811 = !{i64 2147654646, i64 2147654689, i64 2147654729}
!6812 = !DILocation(line: 297, column: 1, scope: !6238)
!6813 = !{i64 2147654833, i64 2147654876, i64 2147654916}
!6814 = !DILocation(line: 298, column: 1, scope: !6238)
!6815 = !{i64 2147659121, i64 2147659164, i64 2147659204}
!6816 = !DILocation(line: 299, column: 1, scope: !6238)
!6817 = !{i64 2147659287, i64 2147659330, i64 2147659370}
!6818 = !DILocation(line: 300, column: 1, scope: !6238)
!6819 = !{i64 2147659501, i64 2147659544, i64 2147659584}
!6820 = !DILocation(line: 301, column: 1, scope: !6238)
!6821 = !{i64 2147659727, i64 2147659770, i64 2147659810}
!6822 = !DILocation(line: 302, column: 1, scope: !6238)
!6823 = !{i64 2147659935, i64 2147659978, i64 2147660018}
!6824 = !DILocation(line: 303, column: 1, scope: !6238)
!6825 = !{i64 2147660131, i64 2147660174, i64 2147660214}
!6826 = !DILocation(line: 304, column: 1, scope: !6238)
!6827 = !{i64 2147660348, i64 2147660391, i64 2147660431}
!6828 = !DILocation(line: 305, column: 1, scope: !6238)
!6829 = !{i64 2147660640, i64 2147660683, i64 2147660723}
!6830 = !DILocation(line: 306, column: 1, scope: !6238)
!6831 = !{i64 2147660872, i64 2147660915, i64 2147660955}
!6832 = !DILocation(line: 307, column: 1, scope: !6238)
!6833 = !{i64 2147661089, i64 2147661132, i64 2147661172}
!6834 = !DILocation(line: 308, column: 1, scope: !6238)
!6835 = !{i64 2147661296, i64 2147661339, i64 2147661379}
!6836 = !DILocation(line: 309, column: 1, scope: !6238)
!6837 = !{i64 2147661497, i64 2147661540, i64 2147661580}
!6838 = !DILocation(line: 310, column: 1, scope: !6238)
!6839 = !{i64 2147661729, i64 2147661772, i64 2147661812}
!6840 = !DILocation(line: 311, column: 1, scope: !6238)
!6841 = !{i64 2147661937, i64 2147661980, i64 2147662020}
!6842 = !DILocation(line: 312, column: 1, scope: !6238)
!6843 = !{i64 2147662127, i64 2147662170, i64 2147662210}
!6844 = !DILocation(line: 313, column: 1, scope: !6238)
!6845 = !{i64 2147662353, i64 2147662396, i64 2147662436}
!6846 = !DILocation(line: 314, column: 1, scope: !6238)
!6847 = !{i64 2147662542, i64 2147662585, i64 2147662625}
!6848 = !DILocation(line: 315, column: 1, scope: !6238)
!6849 = !{i64 2147662813, i64 2147662856, i64 2147662896}
!6850 = !DILocation(line: 316, column: 1, scope: !6238)
!6851 = !{i64 2147663033, i64 2147663076, i64 2147663116}
!6852 = !DILocation(line: 317, column: 1, scope: !6238)
!6853 = !{i64 2147663286, i64 2147663329, i64 2147663369}
!6854 = !DILocation(line: 318, column: 1, scope: !6238)
!6855 = !{i64 2147663494, i64 2147663537, i64 2147663577}
!6856 = !DILocation(line: 319, column: 1, scope: !6238)
!6857 = !{i64 2147663726, i64 2147663769, i64 2147663809}
!6858 = !DILocation(line: 320, column: 1, scope: !6238)
!6859 = !{i64 2147663937, i64 2147663980, i64 2147664020}
!6860 = !DILocation(line: 321, column: 1, scope: !6238)
!6861 = !{i64 2147664127, i64 2147664170, i64 2147664210}
!6862 = !DILocation(line: 322, column: 1, scope: !6238)
!6863 = !{i64 2147664341, i64 2147664384, i64 2147664424}
!6864 = !DILocation(line: 323, column: 1, scope: !6238)
!6865 = !{i64 2147664540, i64 2147664583, i64 2147664623}
!6866 = !DILocation(line: 324, column: 1, scope: !6238)
!6867 = !{i64 2147664727, i64 2147664770, i64 2147664810}
!6868 = !DILocation(line: 325, column: 1, scope: !6238)
!6869 = !{i64 2147664935, i64 2147664978, i64 2147665018}
!6870 = !DILocation(line: 326, column: 1, scope: !6238)
!6871 = !{i64 2147665164, i64 2147665207, i64 2147665247}
!6872 = !DILocation(line: 327, column: 1, scope: !6238)
!6873 = !{i64 2147665366, i64 2147665409, i64 2147665449}
!6874 = !DILocation(line: 328, column: 1, scope: !6238)
!6875 = !{i64 2147665565, i64 2147665608, i64 2147665648}
!6876 = !DILocation(line: 329, column: 1, scope: !6238)
!6877 = !{i64 2147665782, i64 2147665825, i64 2147665865}
!6878 = !DILocation(line: 331, column: 1, scope: !6238)
!6879 = distinct !DISubprogram(name: "st_stm32f4_init", scope: !592, file: !592, line: 30, type: !598, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !575, retainedNodes: !6880)
!6880 = !{!6881, !6882}
!6881 = !DILocalVariable(name: "arg", arg: 1, scope: !6879, file: !592, line: 30, type: !600)
!6882 = !DILocalVariable(name: "key", scope: !6879, file: !592, line: 32, type: !113)
!6883 = !DILocation(line: 0, scope: !6879)
!6884 = !DILocation(line: 37, column: 2, scope: !6879)
!6885 = !DILocation(line: 38, column: 2, scope: !6879)
!6886 = !DILocation(line: 55, column: 2, scope: !6887, inlinedAt: !6891)
!6887 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4225, file: !4225, line: 42, type: !4226, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !575, retainedNodes: !6888)
!6888 = !{!6889, !6890}
!6889 = !DILocalVariable(name: "key", scope: !6887, file: !4225, line: 44, type: !32)
!6890 = !DILocalVariable(name: "tmp", scope: !6887, file: !4225, line: 53, type: !32)
!6891 = distinct !DILocation(line: 40, column: 8, scope: !6879)
!6892 = !{i64 2523873}
!6893 = !DILocation(line: 0, scope: !6887, inlinedAt: !6891)
!6894 = !DILocalVariable(name: "key", arg: 1, scope: !6895, file: !4225, line: 84, type: !32)
!6895 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4225, file: !4225, line: 84, type: !4238, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !575, retainedNodes: !6896)
!6896 = !{!6894}
!6897 = !DILocation(line: 0, scope: !6895, inlinedAt: !6898)
!6898 = distinct !DILocation(line: 47, column: 2, scope: !6879)
!6899 = !DILocation(line: 95, column: 2, scope: !6895, inlinedAt: !6898)
!6900 = !{i64 2524690}
!6901 = !DILocation(line: 51, column: 18, scope: !6879)
!6902 = !DILocation(line: 53, column: 2, scope: !6879)
!6903 = distinct !DISubprogram(name: "LL_FLASH_EnableInstCache", scope: !6904, file: !6904, line: 1609, type: !3551, scopeLine: 1610, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !575, retainedNodes: !437)
!6904 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_system.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6905 = !DILocation(line: 1611, column: 3, scope: !6903)
!6906 = !DILocation(line: 1612, column: 1, scope: !6903)
!6907 = distinct !DISubprogram(name: "LL_FLASH_EnableDataCache", scope: !6904, file: !6904, line: 1629, type: !3551, scopeLine: 1630, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !575, retainedNodes: !437)
!6908 = !DILocation(line: 1631, column: 3, scope: !6907)
!6909 = !DILocation(line: 1632, column: 1, scope: !6907)
!6910 = distinct !DISubprogram(name: "st_stm32_common_config", scope: !621, file: !621, line: 26, type: !627, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !618, retainedNodes: !6911)
!6911 = !{!6912}
!6912 = !DILocalVariable(name: "dev", arg: 1, scope: !6910, file: !621, line: 26, type: !629)
!6913 = !DILocation(line: 0, scope: !6910)
!6914 = !DILocation(line: 68, column: 2, scope: !6910)
!6915 = distinct !DISubprogram(name: "z_log_minimal_printk", scope: !6916, file: !6916, line: 14, type: !5219, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3008, retainedNodes: !6917)
!6916 = !DIFile(filename: "zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6917 = !{!6918, !6919}
!6918 = !DILocalVariable(name: "fmt", arg: 1, scope: !6915, file: !6916, line: 14, type: !105)
!6919 = !DILocalVariable(name: "ap", scope: !6915, file: !6916, line: 16, type: !6920)
!6920 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !4286, line: 99, baseType: !6921)
!6921 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !4286, line: 40, baseType: !6922)
!6922 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !6916, baseType: !6923)
!6923 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !6924)
!6924 = !{!6925}
!6925 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !6923, file: !6916, line: 16, baseType: !104, size: 32)
!6926 = !DILocation(line: 0, scope: !6915)
!6927 = !DILocation(line: 16, column: 2, scope: !6915)
!6928 = !DILocation(line: 16, column: 10, scope: !6915)
!6929 = !DILocation(line: 18, column: 2, scope: !6915)
!6930 = !DILocation(line: 19, column: 2, scope: !6915)
!6931 = !DILocation(line: 20, column: 2, scope: !6915)
!6932 = !DILocation(line: 21, column: 1, scope: !6915)
!6933 = distinct !DISubprogram(name: "z_log_minimal_vprintk", scope: !6916, file: !6916, line: 23, type: !6934, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3008, retainedNodes: !6936)
!6934 = !DISubroutineType(types: !6935)
!6935 = !{null, !105, !6920}
!6936 = !{!6937, !6938}
!6937 = !DILocalVariable(name: "fmt", arg: 1, scope: !6933, file: !6916, line: 23, type: !105)
!6938 = !DILocalVariable(name: "ap", arg: 2, scope: !6933, file: !6916, line: 23, type: !6920)
!6939 = !DILocation(line: 0, scope: !6933)
!6940 = !DILocation(line: 25, column: 2, scope: !6933)
!6941 = !DILocation(line: 26, column: 1, scope: !6933)
!6942 = distinct !DISubprogram(name: "z_log_minimal_hexdump_print", scope: !6916, file: !6916, line: 52, type: !6943, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3008, retainedNodes: !6945)
!6943 = !DISubroutineType(types: !6944)
!6944 = !{null, !108, !13, !439}
!6945 = !{!6946, !6947, !6948, !6949}
!6946 = !DILocalVariable(name: "level", arg: 1, scope: !6942, file: !6916, line: 52, type: !108)
!6947 = !DILocalVariable(name: "data", arg: 2, scope: !6942, file: !6916, line: 52, type: !13)
!6948 = !DILocalVariable(name: "size", arg: 3, scope: !6942, file: !6916, line: 52, type: !439)
!6949 = !DILocalVariable(name: "data_buffer", scope: !6942, file: !6916, line: 54, type: !105)
!6950 = !DILocation(line: 0, scope: !6942)
!6951 = !DILocation(line: 55, column: 14, scope: !6942)
!6952 = !DILocation(line: 55, column: 2, scope: !6942)
!6953 = !DILocation(line: 56, column: 3, scope: !6954)
!6954 = distinct !DILexicalBlock(scope: !6942, file: !6916, line: 55, column: 20)
!6955 = !DILocation(line: 57, column: 3, scope: !6954)
!6956 = !DILocation(line: 59, column: 7, scope: !6954)
!6957 = distinct !{!6957, !6952, !6958}
!6958 = !DILocation(line: 65, column: 2, scope: !6942)
!6959 = !DILocation(line: 66, column: 1, scope: !6942)
!6960 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !3837, file: !3837, line: 175, type: !3838, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3008, retainedNodes: !6961)
!6961 = !{!6962}
!6962 = !DILocalVariable(name: "level", arg: 1, scope: !6960, file: !3837, line: 175, type: !108)
!6963 = !DILocation(line: 0, scope: !6960)
!6964 = !DILocation(line: 177, column: 2, scope: !6960)
!6965 = !DILocation(line: 189, column: 1, scope: !6960)
!6966 = distinct !DISubprogram(name: "minimal_hexdump_line_print", scope: !6916, file: !6916, line: 28, type: !6967, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3008, retainedNodes: !6969)
!6967 = !DISubroutineType(types: !6968)
!6968 = !{null, !105, !439}
!6969 = !{!6970, !6971, !6972, !6974, !6976}
!6970 = !DILocalVariable(name: "data", arg: 1, scope: !6966, file: !6916, line: 28, type: !105)
!6971 = !DILocalVariable(name: "length", arg: 2, scope: !6966, file: !6916, line: 28, type: !439)
!6972 = !DILocalVariable(name: "i", scope: !6973, file: !6916, line: 30, type: !439)
!6973 = distinct !DILexicalBlock(scope: !6966, file: !6916, line: 30, column: 2)
!6974 = !DILocalVariable(name: "i", scope: !6975, file: !6916, line: 40, type: !439)
!6975 = distinct !DILexicalBlock(scope: !6966, file: !6916, line: 40, column: 2)
!6976 = !DILocalVariable(name: "c", scope: !6977, file: !6916, line: 42, type: !165)
!6977 = distinct !DILexicalBlock(scope: !6978, file: !6916, line: 41, column: 19)
!6978 = distinct !DILexicalBlock(scope: !6979, file: !6916, line: 41, column: 7)
!6979 = distinct !DILexicalBlock(scope: !6980, file: !6916, line: 40, column: 54)
!6980 = distinct !DILexicalBlock(scope: !6975, file: !6916, line: 40, column: 2)
!6981 = !DILocation(line: 0, scope: !6966)
!6982 = !DILocation(line: 0, scope: !6973)
!6983 = !DILocation(line: 30, column: 2, scope: !6973)
!6984 = !DILocation(line: 38, column: 2, scope: !6966)
!6985 = !DILocation(line: 0, scope: !6975)
!6986 = !DILocation(line: 40, column: 2, scope: !6975)
!6987 = !DILocation(line: 31, column: 9, scope: !6988)
!6988 = distinct !DILexicalBlock(scope: !6989, file: !6916, line: 31, column: 7)
!6989 = distinct !DILexicalBlock(scope: !6990, file: !6916, line: 30, column: 54)
!6990 = distinct !DILexicalBlock(scope: !6973, file: !6916, line: 30, column: 2)
!6991 = !DILocation(line: 31, column: 7, scope: !6989)
!6992 = !DILocation(line: 32, column: 35, scope: !6993)
!6993 = distinct !DILexicalBlock(scope: !6988, file: !6916, line: 31, column: 19)
!6994 = !DILocation(line: 32, column: 20, scope: !6993)
!6995 = !DILocation(line: 32, column: 4, scope: !6993)
!6996 = !DILocation(line: 33, column: 3, scope: !6993)
!6997 = !DILocation(line: 34, column: 4, scope: !6998)
!6998 = distinct !DILexicalBlock(scope: !6988, file: !6916, line: 33, column: 10)
!6999 = !DILocation(line: 30, column: 50, scope: !6990)
!7000 = !DILocation(line: 30, column: 24, scope: !6990)
!7001 = distinct !{!7001, !6983, !7002}
!7002 = !DILocation(line: 36, column: 2, scope: !6973)
!7003 = !DILocation(line: 49, column: 2, scope: !6966)
!7004 = !DILocation(line: 50, column: 1, scope: !6966)
!7005 = !DILocation(line: 41, column: 9, scope: !6978)
!7006 = !DILocation(line: 41, column: 7, scope: !6979)
!7007 = !DILocation(line: 42, column: 22, scope: !6977)
!7008 = !DILocation(line: 0, scope: !6977)
!7009 = !DILocation(line: 44, column: 25, scope: !6977)
!7010 = !DILocation(line: 44, column: 17, scope: !6977)
!7011 = !DILocation(line: 44, column: 33, scope: !6977)
!7012 = !DILocation(line: 44, column: 4, scope: !6977)
!7013 = !DILocation(line: 45, column: 3, scope: !6977)
!7014 = !DILocation(line: 46, column: 4, scope: !7015)
!7015 = distinct !DILexicalBlock(scope: !6978, file: !6916, line: 45, column: 10)
!7016 = !DILocation(line: 40, column: 50, scope: !6980)
!7017 = !DILocation(line: 40, column: 24, scope: !6980)
!7018 = distinct !{!7018, !6986, !7019}
!7019 = !DILocation(line: 48, column: 2, scope: !6975)
!7020 = distinct !DISubprogram(name: "isprint", scope: !6011, file: !6011, line: 37, type: !571, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3008, retainedNodes: !7021)
!7021 = !{!7022}
!7022 = !DILocalVariable(name: "c", arg: 1, scope: !7020, file: !6011, line: 37, type: !108)
!7023 = !DILocation(line: 0, scope: !7020)
!7024 = !DILocation(line: 39, column: 38, scope: !7020)
!7025 = !DILocation(line: 39, column: 2, scope: !7020)
!7026 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !7027, file: !7027, line: 57, type: !7028, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3011, retainedNodes: !7074)
!7027 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7028 = !DISubroutineType(types: !7029)
!7029 = !{null, !32, !7030}
!7030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7031, size: 32)
!7031 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7032)
!7032 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !3131, line: 141, baseType: !7033)
!7033 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !3131, line: 97, size: 256, elements: !7034)
!7034 = !{!7035}
!7035 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !7033, file: !3131, line: 107, baseType: !7036, size: 256)
!7036 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !3131, line: 98, size: 256, elements: !7037)
!7037 = !{!7038, !7043, !7048, !7053, !7058, !7063, !7068, !7073}
!7038 = !DIDerivedType(tag: DW_TAG_member, scope: !7036, file: !3131, line: 99, baseType: !7039, size: 32)
!7039 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7036, file: !3131, line: 99, size: 32, elements: !7040)
!7040 = !{!7041, !7042}
!7041 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !7039, file: !3131, line: 99, baseType: !113, size: 32)
!7042 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !7039, file: !3131, line: 99, baseType: !113, size: 32)
!7043 = !DIDerivedType(tag: DW_TAG_member, scope: !7036, file: !3131, line: 100, baseType: !7044, size: 32, offset: 32)
!7044 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7036, file: !3131, line: 100, size: 32, elements: !7045)
!7045 = !{!7046, !7047}
!7046 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !7044, file: !3131, line: 100, baseType: !113, size: 32)
!7047 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !7044, file: !3131, line: 100, baseType: !113, size: 32)
!7048 = !DIDerivedType(tag: DW_TAG_member, scope: !7036, file: !3131, line: 101, baseType: !7049, size: 32, offset: 64)
!7049 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7036, file: !3131, line: 101, size: 32, elements: !7050)
!7050 = !{!7051, !7052}
!7051 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !7049, file: !3131, line: 101, baseType: !113, size: 32)
!7052 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !7049, file: !3131, line: 101, baseType: !113, size: 32)
!7053 = !DIDerivedType(tag: DW_TAG_member, scope: !7036, file: !3131, line: 102, baseType: !7054, size: 32, offset: 96)
!7054 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7036, file: !3131, line: 102, size: 32, elements: !7055)
!7055 = !{!7056, !7057}
!7056 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !7054, file: !3131, line: 102, baseType: !113, size: 32)
!7057 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !7054, file: !3131, line: 102, baseType: !113, size: 32)
!7058 = !DIDerivedType(tag: DW_TAG_member, scope: !7036, file: !3131, line: 103, baseType: !7059, size: 32, offset: 128)
!7059 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7036, file: !3131, line: 103, size: 32, elements: !7060)
!7060 = !{!7061, !7062}
!7061 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !7059, file: !3131, line: 103, baseType: !113, size: 32)
!7062 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !7059, file: !3131, line: 103, baseType: !113, size: 32)
!7063 = !DIDerivedType(tag: DW_TAG_member, scope: !7036, file: !3131, line: 104, baseType: !7064, size: 32, offset: 160)
!7064 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7036, file: !3131, line: 104, size: 32, elements: !7065)
!7065 = !{!7066, !7067}
!7066 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !7064, file: !3131, line: 104, baseType: !113, size: 32)
!7067 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !7064, file: !3131, line: 104, baseType: !113, size: 32)
!7068 = !DIDerivedType(tag: DW_TAG_member, scope: !7036, file: !3131, line: 105, baseType: !7069, size: 32, offset: 192)
!7069 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7036, file: !3131, line: 105, size: 32, elements: !7070)
!7070 = !{!7071, !7072}
!7071 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !7069, file: !3131, line: 105, baseType: !113, size: 32)
!7072 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !7069, file: !3131, line: 105, baseType: !113, size: 32)
!7073 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !7036, file: !3131, line: 106, baseType: !113, size: 32, offset: 224)
!7074 = !{!7075, !7076}
!7075 = !DILocalVariable(name: "reason", arg: 1, scope: !7026, file: !7027, line: 57, type: !32)
!7076 = !DILocalVariable(name: "esf", arg: 2, scope: !7026, file: !7027, line: 57, type: !7030)
!7077 = !DILocation(line: 0, scope: !7026)
!7078 = !DILocation(line: 60, column: 10, scope: !7079)
!7079 = distinct !DILexicalBlock(scope: !7026, file: !7027, line: 60, column: 6)
!7080 = !DILocation(line: 60, column: 6, scope: !7026)
!7081 = !DILocation(line: 61, column: 3, scope: !7082)
!7082 = distinct !DILexicalBlock(scope: !7079, file: !7027, line: 60, column: 19)
!7083 = !DILocation(line: 62, column: 2, scope: !7082)
!7084 = !DILocation(line: 63, column: 2, scope: !7026)
!7085 = !DILocation(line: 64, column: 1, scope: !7026)
!7086 = distinct !DISubprogram(name: "esf_dump", scope: !7027, file: !7027, line: 20, type: !7087, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3011, retainedNodes: !7089)
!7087 = !DISubroutineType(types: !7088)
!7088 = !{null, !7030}
!7089 = !{!7090}
!7090 = !DILocalVariable(name: "esf", arg: 1, scope: !7086, file: !7027, line: 20, type: !7030)
!7091 = !DILocation(line: 0, scope: !7086)
!7092 = !DILocation(line: 22, column: 2, scope: !7093)
!7093 = distinct !DILexicalBlock(scope: !7094, file: !7027, line: 22, column: 2)
!7094 = distinct !DILexicalBlock(scope: !7095, file: !7027, line: 22, column: 2)
!7095 = distinct !DILexicalBlock(scope: !7096, file: !7027, line: 22, column: 2)
!7096 = distinct !DILexicalBlock(scope: !7086, file: !7027, line: 22, column: 2)
!7097 = !DILocation(line: 24, column: 2, scope: !7098)
!7098 = distinct !DILexicalBlock(scope: !7099, file: !7027, line: 24, column: 2)
!7099 = distinct !DILexicalBlock(scope: !7100, file: !7027, line: 24, column: 2)
!7100 = distinct !DILexicalBlock(scope: !7101, file: !7027, line: 24, column: 2)
!7101 = distinct !DILexicalBlock(scope: !7086, file: !7027, line: 24, column: 2)
!7102 = !DILocation(line: 26, column: 2, scope: !7103)
!7103 = distinct !DILexicalBlock(scope: !7104, file: !7027, line: 26, column: 2)
!7104 = distinct !DILexicalBlock(scope: !7105, file: !7027, line: 26, column: 2)
!7105 = distinct !DILexicalBlock(scope: !7106, file: !7027, line: 26, column: 2)
!7106 = distinct !DILexicalBlock(scope: !7086, file: !7027, line: 26, column: 2)
!7107 = !DILocation(line: 53, column: 2, scope: !7108)
!7108 = distinct !DILexicalBlock(scope: !7109, file: !7027, line: 53, column: 2)
!7109 = distinct !DILexicalBlock(scope: !7110, file: !7027, line: 53, column: 2)
!7110 = distinct !DILexicalBlock(scope: !7111, file: !7027, line: 53, column: 2)
!7111 = distinct !DILexicalBlock(scope: !7086, file: !7027, line: 53, column: 2)
!7112 = !DILocation(line: 55, column: 1, scope: !7086)
!7113 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !7027, file: !7027, line: 82, type: !7114, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3011, retainedNodes: !7129)
!7114 = !DISubroutineType(types: !7115)
!7115 = !{null, !7030, !7116}
!7116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7117, size: 32)
!7117 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !726, line: 37, baseType: !7118)
!7118 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !726, line: 25, size: 288, elements: !7119)
!7119 = !{!7120, !7121, !7122, !7123, !7124, !7125, !7126, !7127, !7128}
!7120 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7118, file: !726, line: 26, baseType: !113, size: 32)
!7121 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7118, file: !726, line: 27, baseType: !113, size: 32, offset: 32)
!7122 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7118, file: !726, line: 28, baseType: !113, size: 32, offset: 64)
!7123 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7118, file: !726, line: 29, baseType: !113, size: 32, offset: 96)
!7124 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7118, file: !726, line: 30, baseType: !113, size: 32, offset: 128)
!7125 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7118, file: !726, line: 31, baseType: !113, size: 32, offset: 160)
!7126 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7118, file: !726, line: 32, baseType: !113, size: 32, offset: 192)
!7127 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7118, file: !726, line: 33, baseType: !113, size: 32, offset: 224)
!7128 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7118, file: !726, line: 34, baseType: !113, size: 32, offset: 256)
!7129 = !{!7130, !7131, !7132}
!7130 = !DILocalVariable(name: "esf", arg: 1, scope: !7113, file: !7027, line: 82, type: !7030)
!7131 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !7113, file: !7027, line: 82, type: !7116)
!7132 = !DILocalVariable(name: "reason", scope: !7113, file: !7027, line: 88, type: !32)
!7133 = !DILocation(line: 0, scope: !7113)
!7134 = !DILocation(line: 88, column: 35, scope: !7113)
!7135 = !DILocation(line: 108, column: 2, scope: !7113)
!7136 = !DILocation(line: 131, column: 1, scope: !7113)
!7137 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !7027, file: !7027, line: 133, type: !7138, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3011, retainedNodes: !7140)
!7138 = !DISubroutineType(types: !7139)
!7139 = !{null, !104}
!7140 = !{!7141, !7142, !7143}
!7141 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !7137, file: !7027, line: 133, type: !104)
!7142 = !DILocalVariable(name: "ssf_contents", scope: !7137, file: !7027, line: 135, type: !1255)
!7143 = !DILocalVariable(name: "oops_esf", scope: !7137, file: !7027, line: 136, type: !7032)
!7144 = !DILocation(line: 0, scope: !7137)
!7145 = !DILocation(line: 136, column: 2, scope: !7137)
!7146 = !DILocation(line: 136, column: 15, scope: !7137)
!7147 = !DILocation(line: 139, column: 22, scope: !7137)
!7148 = !DILocation(line: 139, column: 17, scope: !7137)
!7149 = !DILocation(line: 139, column: 20, scope: !7137)
!7150 = !DILocation(line: 141, column: 2, scope: !7137)
!7151 = !DILocation(line: 142, column: 2, scope: !7137)
!7152 = distinct !DISubprogram(name: "arch_irq_enable", scope: !7153, file: !7153, line: 40, type: !4238, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3022, retainedNodes: !7154)
!7153 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7154 = !{!7155}
!7155 = !DILocalVariable(name: "irq", arg: 1, scope: !7152, file: !7153, line: 40, type: !32)
!7156 = !DILocation(line: 0, scope: !7152)
!7157 = !DILocation(line: 42, column: 2, scope: !7152)
!7158 = !DILocation(line: 43, column: 1, scope: !7152)
!7159 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !802, file: !802, line: 1684, type: !7160, scopeLine: 1685, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3022, retainedNodes: !7162)
!7160 = !DISubroutineType(types: !7161)
!7161 = !{null, !1193}
!7162 = !{!7163}
!7163 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7159, file: !802, line: 1684, type: !1193)
!7164 = !DILocation(line: 0, scope: !7159)
!7165 = !DILocation(line: 1686, column: 23, scope: !7166)
!7166 = distinct !DILexicalBlock(scope: !7159, file: !802, line: 1686, column: 7)
!7167 = !DILocation(line: 1686, column: 7, scope: !7159)
!7168 = !DILocation(line: 1688, column: 5, scope: !7169)
!7169 = distinct !DILexicalBlock(scope: !7166, file: !802, line: 1687, column: 3)
!7170 = !{i64 2151656383}
!7171 = !DILocation(line: 1689, column: 81, scope: !7169)
!7172 = !DILocation(line: 1689, column: 60, scope: !7169)
!7173 = !DILocation(line: 1689, column: 34, scope: !7169)
!7174 = !DILocation(line: 1689, column: 5, scope: !7169)
!7175 = !DILocation(line: 1689, column: 43, scope: !7169)
!7176 = !DILocation(line: 1690, column: 5, scope: !7169)
!7177 = !{i64 2151656497}
!7178 = !DILocation(line: 1691, column: 3, scope: !7169)
!7179 = !DILocation(line: 1692, column: 1, scope: !7159)
!7180 = distinct !DISubprogram(name: "arch_irq_disable", scope: !7153, file: !7153, line: 45, type: !4238, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3022, retainedNodes: !7181)
!7181 = !{!7182}
!7182 = !DILocalVariable(name: "irq", arg: 1, scope: !7180, file: !7153, line: 45, type: !32)
!7183 = !DILocation(line: 0, scope: !7180)
!7184 = !DILocation(line: 47, column: 2, scope: !7180)
!7185 = !DILocation(line: 48, column: 1, scope: !7180)
!7186 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !802, file: !802, line: 1722, type: !7160, scopeLine: 1723, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3022, retainedNodes: !7187)
!7187 = !{!7188}
!7188 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7186, file: !802, line: 1722, type: !1193)
!7189 = !DILocation(line: 0, scope: !7186)
!7190 = !DILocation(line: 1724, column: 23, scope: !7191)
!7191 = distinct !DILexicalBlock(scope: !7186, file: !802, line: 1724, column: 7)
!7192 = !DILocation(line: 1724, column: 7, scope: !7186)
!7193 = !DILocation(line: 1726, column: 81, scope: !7194)
!7194 = distinct !DILexicalBlock(scope: !7191, file: !802, line: 1725, column: 3)
!7195 = !DILocation(line: 1726, column: 60, scope: !7194)
!7196 = !DILocation(line: 1726, column: 34, scope: !7194)
!7197 = !DILocation(line: 1726, column: 5, scope: !7194)
!7198 = !DILocation(line: 1726, column: 43, scope: !7194)
!7199 = !DILocation(line: 271, column: 3, scope: !7200, inlinedAt: !7202)
!7200 = distinct !DISubprogram(name: "__DSB", scope: !7201, file: !7201, line: 269, type: !3551, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3022, retainedNodes: !437)
!7201 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7202 = distinct !DILocation(line: 1727, column: 5, scope: !7194)
!7203 = !{i64 4110766}
!7204 = !DILocation(line: 260, column: 3, scope: !7205, inlinedAt: !7206)
!7205 = distinct !DISubprogram(name: "__ISB", scope: !7201, file: !7201, line: 258, type: !3551, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3022, retainedNodes: !437)
!7206 = distinct !DILocation(line: 1728, column: 5, scope: !7194)
!7207 = !{i64 4110483}
!7208 = !DILocation(line: 1729, column: 3, scope: !7194)
!7209 = !DILocation(line: 1730, column: 1, scope: !7186)
!7210 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !7153, file: !7153, line: 50, type: !7211, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3022, retainedNodes: !7213)
!7211 = !DISubroutineType(types: !7212)
!7212 = !{!108, !32}
!7213 = !{!7214}
!7214 = !DILocalVariable(name: "irq", arg: 1, scope: !7210, file: !7153, line: 50, type: !32)
!7215 = !DILocation(line: 0, scope: !7210)
!7216 = !DILocation(line: 52, column: 20, scope: !7210)
!7217 = !DILocation(line: 52, column: 9, scope: !7210)
!7218 = !DILocation(line: 52, column: 41, scope: !7210)
!7219 = !DILocation(line: 52, column: 39, scope: !7210)
!7220 = !DILocation(line: 52, column: 2, scope: !7210)
!7221 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !7153, file: !7153, line: 64, type: !7222, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3022, retainedNodes: !7224)
!7222 = !DISubroutineType(types: !7223)
!7223 = !{null, !32, !32, !113}
!7224 = !{!7225, !7226, !7227}
!7225 = !DILocalVariable(name: "irq", arg: 1, scope: !7221, file: !7153, line: 64, type: !32)
!7226 = !DILocalVariable(name: "prio", arg: 2, scope: !7221, file: !7153, line: 64, type: !32)
!7227 = !DILocalVariable(name: "flags", arg: 3, scope: !7221, file: !7153, line: 64, type: !113)
!7228 = !DILocation(line: 0, scope: !7221)
!7229 = !DILocation(line: 83, column: 8, scope: !7230)
!7230 = distinct !DILexicalBlock(scope: !7231, file: !7153, line: 82, column: 9)
!7231 = distinct !DILexicalBlock(scope: !7221, file: !7153, line: 76, column: 6)
!7232 = !DILocation(line: 95, column: 2, scope: !7221)
!7233 = !DILocation(line: 96, column: 1, scope: !7221)
!7234 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !802, file: !802, line: 1814, type: !7235, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3022, retainedNodes: !7237)
!7235 = !DISubroutineType(types: !7236)
!7236 = !{null, !1193, !113}
!7237 = !{!7238, !7239}
!7238 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7234, file: !802, line: 1814, type: !1193)
!7239 = !DILocalVariable(name: "priority", arg: 2, scope: !7234, file: !802, line: 1814, type: !113)
!7240 = !DILocation(line: 0, scope: !7234)
!7241 = !DILocation(line: 0, scope: !7242)
!7242 = distinct !DILexicalBlock(scope: !7234, file: !802, line: 1816, column: 7)
!7243 = !DILocation(line: 1816, column: 7, scope: !7234)
!7244 = !DILocation(line: 1824, column: 1, scope: !7234)
!7245 = distinct !DISubprogram(name: "z_irq_spurious", scope: !7153, file: !7153, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3022, retainedNodes: !7246)
!7246 = !{!7247}
!7247 = !DILocalVariable(name: "unused", arg: 1, scope: !7245, file: !7153, line: 155, type: !13)
!7248 = !DILocation(line: 0, scope: !7245)
!7249 = !DILocation(line: 159, column: 2, scope: !7245)
!7250 = !DILocation(line: 160, column: 1, scope: !7245)
!7251 = distinct !DISubprogram(name: "z_arm_nmi", scope: !7252, file: !7252, line: 87, type: !3551, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3068, retainedNodes: !437)
!7252 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7253 = !DILocation(line: 89, column: 2, scope: !7251)
!7254 = !DILocation(line: 90, column: 2, scope: !7251)
!7255 = !DILocation(line: 91, column: 1, scope: !7251)
!7256 = !DISubprogram(name: "z_SysNmiOnReset", scope: !7252, file: !7252, line: 23, type: !3551, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !437)
!7257 = !DISubprogram(name: "z_arm_int_exit", scope: !7258, file: !7258, line: 153, type: !3551, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !437)
!7258 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7259 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !7260, file: !7260, line: 256, type: !3551, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3070, retainedNodes: !437)
!7260 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7261 = !DILocation(line: 258, column: 2, scope: !7259)
!7262 = !DILocation(line: 260, column: 2, scope: !7259)
!7263 = !DILocation(line: 262, column: 2, scope: !7259)
!7264 = !DILocation(line: 263, column: 2, scope: !7259)
!7265 = !DILocation(line: 267, column: 2, scope: !7259)
!7266 = !DILocation(line: 268, column: 2, scope: !7259)
!7267 = distinct !DISubprogram(name: "relocate_vector_table", scope: !7260, file: !7260, line: 53, type: !3551, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3070, retainedNodes: !437)
!7268 = !DILocation(line: 55, column: 12, scope: !7267)
!7269 = !DILocation(line: 271, column: 3, scope: !7270, inlinedAt: !7271)
!7270 = distinct !DISubprogram(name: "__DSB", scope: !7201, file: !7201, line: 269, type: !3551, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3070, retainedNodes: !437)
!7271 = distinct !DILocation(line: 56, column: 2, scope: !7267)
!7272 = !{i64 4109437}
!7273 = !DILocation(line: 260, column: 3, scope: !7274, inlinedAt: !7275)
!7274 = distinct !DISubprogram(name: "__ISB", scope: !7201, file: !7201, line: 258, type: !3551, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3070, retainedNodes: !437)
!7275 = distinct !DILocation(line: 57, column: 2, scope: !7267)
!7276 = !{i64 4109154}
!7277 = !DILocation(line: 58, column: 1, scope: !7267)
!7278 = distinct !DISubprogram(name: "z_arm_floating_point_init", scope: !7260, file: !7260, line: 96, type: !3551, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3070, retainedNodes: !437)
!7279 = !DILocation(line: 103, column: 13, scope: !7278)
!7280 = !DILocation(line: 975, column: 3, scope: !7281, inlinedAt: !7286)
!7281 = distinct !DISubprogram(name: "__get_CONTROL", scope: !7201, file: !7201, line: 971, type: !7282, scopeLine: 972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3070, retainedNodes: !7284)
!7282 = !DISubroutineType(types: !7283)
!7283 = !{!113}
!7284 = !{!7285}
!7285 = !DILocalVariable(name: "result", scope: !7281, file: !7201, line: 973, type: !113)
!7286 = distinct !DILocation(line: 189, column: 16, scope: !7278)
!7287 = !{i64 4130267}
!7288 = !DILocation(line: 0, scope: !7281, inlinedAt: !7286)
!7289 = !DILocation(line: 189, column: 32, scope: !7278)
!7290 = !DILocalVariable(name: "control", arg: 1, scope: !7291, file: !7201, line: 1001, type: !113)
!7291 = distinct !DISubprogram(name: "__set_CONTROL", scope: !7201, file: !7201, line: 1001, type: !7292, scopeLine: 1002, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3070, retainedNodes: !7294)
!7292 = !DISubroutineType(types: !7293)
!7293 = !{null, !113}
!7294 = !{!7290}
!7295 = !DILocation(line: 0, scope: !7291, inlinedAt: !7296)
!7296 = distinct !DILocation(line: 189, column: 2, scope: !7278)
!7297 = !DILocation(line: 1003, column: 3, scope: !7291, inlinedAt: !7296)
!7298 = !{i64 4130987}
!7299 = !DILocation(line: 260, column: 3, scope: !7274, inlinedAt: !7300)
!7300 = distinct !DILocation(line: 1004, column: 3, scope: !7291, inlinedAt: !7296)
!7301 = !DILocation(line: 191, column: 1, scope: !7278)
!7302 = distinct !DISubprogram(name: "arch_swap", scope: !7303, file: !7303, line: 33, type: !7211, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3098, retainedNodes: !7304)
!7303 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7304 = !{!7305}
!7305 = !DILocalVariable(name: "key", arg: 1, scope: !7302, file: !7303, line: 33, type: !32)
!7306 = !DILocation(line: 0, scope: !7302)
!7307 = !DILocation(line: 36, column: 2, scope: !7302)
!7308 = !DILocation(line: 36, column: 17, scope: !7302)
!7309 = !DILocation(line: 36, column: 25, scope: !7302)
!7310 = !DILocation(line: 37, column: 37, scope: !7302)
!7311 = !DILocation(line: 37, column: 17, scope: !7302)
!7312 = !DILocation(line: 37, column: 35, scope: !7302)
!7313 = !DILocation(line: 41, column: 12, scope: !7302)
!7314 = !DILocalVariable(name: "key", arg: 1, scope: !7315, file: !4225, line: 84, type: !32)
!7315 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4225, file: !4225, line: 84, type: !4238, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3098, retainedNodes: !7316)
!7316 = !{!7314}
!7317 = !DILocation(line: 0, scope: !7315, inlinedAt: !7318)
!7318 = distinct !DILocation(line: 44, column: 2, scope: !7302)
!7319 = !DILocation(line: 95, column: 2, scope: !7315, inlinedAt: !7318)
!7320 = !{i64 2610281}
!7321 = !DILocation(line: 53, column: 9, scope: !7302)
!7322 = !DILocation(line: 53, column: 24, scope: !7302)
!7323 = !DILocation(line: 53, column: 2, scope: !7302)
!7324 = distinct !DISubprogram(name: "arch_new_thread", scope: !7325, file: !7325, line: 56, type: !7326, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3126, retainedNodes: !7433)
!7325 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7326 = !DISubroutineType(types: !7327)
!7327 = !{null, !7328, !7428, !443, !5317, !104, !104, !104}
!7328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7329, size: 32)
!7329 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !659, line: 245, size: 1024, elements: !7330)
!7330 = !{!7331, !7389, !7401, !7402, !7403, !7404, !7410, !7423}
!7331 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !7329, file: !659, line: 247, baseType: !7332, size: 384)
!7332 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !659, line: 57, size: 384, elements: !7333)
!7333 = !{!7334, !7358, !7365, !7366, !7367, !7376, !7377, !7378}
!7334 = !DIDerivedType(tag: DW_TAG_member, scope: !7332, file: !659, line: 60, baseType: !7335, size: 64)
!7335 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7332, file: !659, line: 60, size: 64, elements: !7336)
!7336 = !{!7337, !7352}
!7337 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !7335, file: !659, line: 61, baseType: !7338, size: 64)
!7338 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !367, line: 49, baseType: !7339)
!7339 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !367, line: 37, size: 64, elements: !7340)
!7340 = !{!7341, !7347}
!7341 = !DIDerivedType(tag: DW_TAG_member, scope: !7339, file: !367, line: 38, baseType: !7342, size: 32)
!7342 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7339, file: !367, line: 38, size: 32, elements: !7343)
!7343 = !{!7344, !7346}
!7344 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7342, file: !367, line: 39, baseType: !7345, size: 32)
!7345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7339, size: 32)
!7346 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7342, file: !367, line: 40, baseType: !7345, size: 32)
!7347 = !DIDerivedType(tag: DW_TAG_member, scope: !7339, file: !367, line: 42, baseType: !7348, size: 32, offset: 32)
!7348 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7339, file: !367, line: 42, size: 32, elements: !7349)
!7349 = !{!7350, !7351}
!7350 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7348, file: !367, line: 43, baseType: !7345, size: 32)
!7351 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7348, file: !367, line: 44, baseType: !7345, size: 32)
!7352 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !7335, file: !659, line: 62, baseType: !7353, size: 64)
!7353 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !684, line: 49, size: 64, elements: !7354)
!7354 = !{!7355}
!7355 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !7353, file: !684, line: 50, baseType: !7356, size: 64)
!7356 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7357, size: 64, elements: !689)
!7357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7353, size: 32)
!7358 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !7332, file: !659, line: 68, baseType: !7359, size: 32, offset: 64)
!7359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7360, size: 32)
!7360 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !363, line: 233, baseType: !7361)
!7361 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !363, line: 231, size: 64, elements: !7362)
!7362 = !{!7363}
!7363 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !7361, file: !363, line: 232, baseType: !7364, size: 64)
!7364 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !367, line: 48, baseType: !7339)
!7365 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !7332, file: !659, line: 71, baseType: !164, size: 8, offset: 96)
!7366 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !7332, file: !659, line: 74, baseType: !164, size: 8, offset: 104)
!7367 = !DIDerivedType(tag: DW_TAG_member, scope: !7332, file: !659, line: 90, baseType: !7368, size: 16, offset: 112)
!7368 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7332, file: !659, line: 90, size: 16, elements: !7369)
!7369 = !{!7370, !7375}
!7370 = !DIDerivedType(tag: DW_TAG_member, scope: !7368, file: !659, line: 91, baseType: !7371, size: 16)
!7371 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7368, file: !659, line: 91, size: 16, elements: !7372)
!7372 = !{!7373, !7374}
!7373 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !7371, file: !659, line: 96, baseType: !707, size: 8)
!7374 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !7371, file: !659, line: 97, baseType: !164, size: 8, offset: 8)
!7375 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !7368, file: !659, line: 100, baseType: !168, size: 16)
!7376 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !7332, file: !659, line: 107, baseType: !113, size: 32, offset: 128)
!7377 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !7332, file: !659, line: 127, baseType: !104, size: 32, offset: 160)
!7378 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !7332, file: !659, line: 131, baseType: !7379, size: 192, offset: 192)
!7379 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !363, line: 244, size: 192, elements: !7380)
!7380 = !{!7381, !7382, !7388}
!7381 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !7379, file: !363, line: 245, baseType: !7338, size: 64)
!7382 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !7379, file: !363, line: 246, baseType: !7383, size: 32, offset: 64)
!7383 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !363, line: 242, baseType: !7384)
!7384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7385, size: 32)
!7385 = !DISubroutineType(types: !7386)
!7386 = !{null, !7387}
!7387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7379, size: 32)
!7388 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !7379, file: !363, line: 249, baseType: !111, size: 64, offset: 128)
!7389 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !7329, file: !659, line: 250, baseType: !7390, size: 288, offset: 384)
!7390 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !726, line: 25, size: 288, elements: !7391)
!7391 = !{!7392, !7393, !7394, !7395, !7396, !7397, !7398, !7399, !7400}
!7392 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7390, file: !726, line: 26, baseType: !113, size: 32)
!7393 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7390, file: !726, line: 27, baseType: !113, size: 32, offset: 32)
!7394 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7390, file: !726, line: 28, baseType: !113, size: 32, offset: 64)
!7395 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7390, file: !726, line: 29, baseType: !113, size: 32, offset: 96)
!7396 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7390, file: !726, line: 30, baseType: !113, size: 32, offset: 128)
!7397 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7390, file: !726, line: 31, baseType: !113, size: 32, offset: 160)
!7398 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7390, file: !726, line: 32, baseType: !113, size: 32, offset: 192)
!7399 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7390, file: !726, line: 33, baseType: !113, size: 32, offset: 224)
!7400 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7390, file: !726, line: 34, baseType: !113, size: 32, offset: 256)
!7401 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !7329, file: !659, line: 253, baseType: !104, size: 32, offset: 672)
!7402 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !7329, file: !659, line: 256, baseType: !7360, size: 64, offset: 704)
!7403 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !7329, file: !659, line: 294, baseType: !108, size: 32, offset: 768)
!7404 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !7329, file: !659, line: 300, baseType: !7405, size: 96, offset: 800)
!7405 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !659, line: 149, size: 96, elements: !7406)
!7406 = !{!7407, !7408, !7409}
!7407 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7405, file: !659, line: 153, baseType: !22, size: 32)
!7408 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7405, file: !659, line: 162, baseType: !439, size: 32, offset: 32)
!7409 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !7405, file: !659, line: 168, baseType: !439, size: 32, offset: 64)
!7410 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !7329, file: !659, line: 325, baseType: !7411, size: 32, offset: 896)
!7411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7412, size: 32)
!7412 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !359, line: 5073, size: 160, elements: !7413)
!7413 = !{!7414, !7420, !7421}
!7414 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7412, file: !359, line: 5074, baseType: !7415, size: 96)
!7415 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !752, line: 56, size: 96, elements: !7416)
!7416 = !{!7417, !7418, !7419}
!7417 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7415, file: !752, line: 57, baseType: !755, size: 32)
!7418 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !7415, file: !752, line: 58, baseType: !104, size: 32, offset: 32)
!7419 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !7415, file: !752, line: 59, baseType: !439, size: 32, offset: 64)
!7420 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !7412, file: !359, line: 5075, baseType: !7360, size: 64, offset: 96)
!7421 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7412, file: !359, line: 5076, baseType: !7422, offset: 160)
!7422 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !436, line: 43, elements: !437)
!7423 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !7329, file: !659, line: 343, baseType: !7424, size: 64, offset: 928)
!7424 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !726, line: 60, size: 64, elements: !7425)
!7425 = !{!7426, !7427}
!7426 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !7424, file: !726, line: 63, baseType: !113, size: 32)
!7427 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !7424, file: !726, line: 66, baseType: !113, size: 32, offset: 32)
!7428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7429, size: 32)
!7429 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !5318, line: 44, baseType: !7430)
!7430 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !2512, line: 47, size: 8, elements: !7431)
!7431 = !{!7432}
!7432 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !7430, file: !2512, line: 48, baseType: !107, size: 8)
!7433 = !{!7434, !7435, !7436, !7437, !7438, !7439, !7440, !7441}
!7434 = !DILocalVariable(name: "thread", arg: 1, scope: !7324, file: !7325, line: 56, type: !7328)
!7435 = !DILocalVariable(name: "stack", arg: 2, scope: !7324, file: !7325, line: 56, type: !7428)
!7436 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !7324, file: !7325, line: 57, type: !443)
!7437 = !DILocalVariable(name: "entry", arg: 4, scope: !7324, file: !7325, line: 57, type: !5317)
!7438 = !DILocalVariable(name: "p1", arg: 5, scope: !7324, file: !7325, line: 58, type: !104)
!7439 = !DILocalVariable(name: "p2", arg: 6, scope: !7324, file: !7325, line: 58, type: !104)
!7440 = !DILocalVariable(name: "p3", arg: 7, scope: !7324, file: !7325, line: 58, type: !104)
!7441 = !DILocalVariable(name: "iframe", scope: !7324, file: !7325, line: 60, type: !3129)
!7442 = !DILocation(line: 0, scope: !7324)
!7443 = !DILocation(line: 85, column: 11, scope: !7324)
!7444 = !DILocation(line: 93, column: 10, scope: !7324)
!7445 = !DILocation(line: 98, column: 13, scope: !7324)
!7446 = !DILocation(line: 100, column: 15, scope: !7324)
!7447 = !DILocation(line: 100, column: 10, scope: !7324)
!7448 = !DILocation(line: 100, column: 13, scope: !7324)
!7449 = !DILocation(line: 101, column: 15, scope: !7324)
!7450 = !DILocation(line: 101, column: 10, scope: !7324)
!7451 = !DILocation(line: 101, column: 13, scope: !7324)
!7452 = !DILocation(line: 102, column: 15, scope: !7324)
!7453 = !DILocation(line: 102, column: 10, scope: !7324)
!7454 = !DILocation(line: 102, column: 13, scope: !7324)
!7455 = !DILocation(line: 103, column: 15, scope: !7324)
!7456 = !DILocation(line: 103, column: 10, scope: !7324)
!7457 = !DILocation(line: 103, column: 13, scope: !7324)
!7458 = !DILocation(line: 106, column: 10, scope: !7324)
!7459 = !DILocation(line: 106, column: 15, scope: !7324)
!7460 = !DILocation(line: 122, column: 29, scope: !7324)
!7461 = !DILocation(line: 122, column: 23, scope: !7324)
!7462 = !DILocation(line: 122, column: 27, scope: !7324)
!7463 = !DILocation(line: 123, column: 15, scope: !7324)
!7464 = !DILocation(line: 123, column: 23, scope: !7324)
!7465 = !DILocation(line: 143, column: 1, scope: !7324)
!7466 = distinct !DISubprogram(name: "z_check_thread_stack_fail", scope: !7325, file: !7325, line: 385, type: !7467, scopeLine: 386, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3126, retainedNodes: !7470)
!7467 = !DISubroutineType(types: !7468)
!7468 = !{!113, !7469, !7469}
!7469 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !113)
!7470 = !{!7471, !7472, !7473, !7476}
!7471 = !DILocalVariable(name: "fault_addr", arg: 1, scope: !7466, file: !7325, line: 385, type: !7469)
!7472 = !DILocalVariable(name: "psp", arg: 2, scope: !7466, file: !7325, line: 385, type: !7469)
!7473 = !DILocalVariable(name: "thread", scope: !7466, file: !7325, line: 388, type: !7474)
!7474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7475, size: 32)
!7475 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7329)
!7476 = !DILocalVariable(name: "guard_len", scope: !7466, file: !7325, line: 405, type: !113)
!7477 = !DILocation(line: 0, scope: !7466)
!7478 = !DILocation(line: 388, column: 34, scope: !7466)
!7479 = !DILocation(line: 390, column: 13, scope: !7480)
!7480 = distinct !DILexicalBlock(scope: !7466, file: !7325, line: 390, column: 6)
!7481 = !DILocation(line: 390, column: 6, scope: !7466)
!7482 = !DILocation(line: 438, column: 6, scope: !7483)
!7483 = distinct !DILexicalBlock(scope: !7466, file: !7325, line: 438, column: 6)
!7484 = !DILocation(line: 438, column: 6, scope: !7466)
!7485 = !DILocation(line: 442, column: 3, scope: !7486)
!7486 = distinct !DILexicalBlock(scope: !7483, file: !7325, line: 440, column: 22)
!7487 = !DILocation(line: 455, column: 1, scope: !7466)
!7488 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !7325, file: !7325, line: 530, type: !7489, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3126, retainedNodes: !7491)
!7489 = !DISubroutineType(types: !7490)
!7490 = !{null, !7328, !443, !5317}
!7491 = !{!7492, !7493, !7494}
!7492 = !DILocalVariable(name: "main_thread", arg: 1, scope: !7488, file: !7325, line: 530, type: !7328)
!7493 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !7488, file: !7325, line: 530, type: !443)
!7494 = !DILocalVariable(name: "_main", arg: 3, scope: !7488, file: !7325, line: 531, type: !5317)
!7495 = !DILocation(line: 0, scope: !7488)
!7496 = !DILocation(line: 535, column: 11, scope: !7488)
!7497 = !DILocation(line: 560, column: 2, scope: !7488)
!7498 = !DILocation(line: 576, column: 2, scope: !7488)
!7499 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!7500 = !DILocation(line: 603, column: 2, scope: !7488)
!7501 = distinct !DISubprogram(name: "z_arm_fault", scope: !7502, file: !7502, line: 1036, type: !7503, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3169, retainedNodes: !7518)
!7502 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7503 = !DISubroutineType(types: !7504)
!7504 = !{null, !113, !113, !113, !7505}
!7505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7506, size: 32)
!7506 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !726, line: 37, baseType: !7507)
!7507 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !726, line: 25, size: 288, elements: !7508)
!7508 = !{!7509, !7510, !7511, !7512, !7513, !7514, !7515, !7516, !7517}
!7509 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7507, file: !726, line: 26, baseType: !113, size: 32)
!7510 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7507, file: !726, line: 27, baseType: !113, size: 32, offset: 32)
!7511 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7507, file: !726, line: 28, baseType: !113, size: 32, offset: 64)
!7512 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7507, file: !726, line: 29, baseType: !113, size: 32, offset: 96)
!7513 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7507, file: !726, line: 30, baseType: !113, size: 32, offset: 128)
!7514 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7507, file: !726, line: 31, baseType: !113, size: 32, offset: 160)
!7515 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7507, file: !726, line: 32, baseType: !113, size: 32, offset: 192)
!7516 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7507, file: !726, line: 33, baseType: !113, size: 32, offset: 224)
!7517 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7507, file: !726, line: 34, baseType: !113, size: 32, offset: 256)
!7518 = !{!7519, !7520, !7521, !7522, !7523, !7524, !7525, !7526, !7527, !7528}
!7519 = !DILocalVariable(name: "msp", arg: 1, scope: !7501, file: !7502, line: 1036, type: !113)
!7520 = !DILocalVariable(name: "psp", arg: 2, scope: !7501, file: !7502, line: 1036, type: !113)
!7521 = !DILocalVariable(name: "exc_return", arg: 3, scope: !7501, file: !7502, line: 1036, type: !113)
!7522 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !7501, file: !7502, line: 1037, type: !7505)
!7523 = !DILocalVariable(name: "reason", scope: !7501, file: !7502, line: 1039, type: !113)
!7524 = !DILocalVariable(name: "fault", scope: !7501, file: !7502, line: 1040, type: !108)
!7525 = !DILocalVariable(name: "recoverable", scope: !7501, file: !7502, line: 1041, type: !422)
!7526 = !DILocalVariable(name: "nested_exc", scope: !7501, file: !7502, line: 1041, type: !422)
!7527 = !DILocalVariable(name: "esf", scope: !7501, file: !7502, line: 1042, type: !3197)
!7528 = !DILocalVariable(name: "esf_copy", scope: !7501, file: !7502, line: 1047, type: !3198)
!7529 = !DILocation(line: 0, scope: !7501)
!7530 = !DILocation(line: 1040, column: 19, scope: !7501)
!7531 = !DILocation(line: 1040, column: 24, scope: !7501)
!7532 = !DILocation(line: 1041, column: 2, scope: !7501)
!7533 = !DILocation(line: 1047, column: 2, scope: !7501)
!7534 = !DILocation(line: 1047, column: 15, scope: !7501)
!7535 = !DILocalVariable(name: "key", arg: 1, scope: !7536, file: !4225, line: 84, type: !32)
!7536 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4225, file: !4225, line: 84, type: !4238, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3169, retainedNodes: !7537)
!7537 = !{!7535}
!7538 = !DILocation(line: 0, scope: !7536, inlinedAt: !7539)
!7539 = distinct !DILocation(line: 1050, column: 2, scope: !7501)
!7540 = !DILocation(line: 95, column: 2, scope: !7536, inlinedAt: !7539)
!7541 = !{i64 2643525}
!7542 = !DILocation(line: 1055, column: 9, scope: !7501)
!7543 = !DILocation(line: 1063, column: 11, scope: !7501)
!7544 = !DILocation(line: 1064, column: 6, scope: !7545)
!7545 = distinct !DILexicalBlock(scope: !7501, file: !7502, line: 1064, column: 6)
!7546 = !{i8 0, i8 2}
!7547 = !DILocation(line: 1064, column: 6, scope: !7501)
!7548 = !DILocation(line: 1070, column: 20, scope: !7501)
!7549 = !DILocation(line: 1070, column: 2, scope: !7501)
!7550 = !DILocation(line: 1089, column: 6, scope: !7551)
!7551 = distinct !DILexicalBlock(scope: !7501, file: !7502, line: 1089, column: 6)
!7552 = !DILocation(line: 0, scope: !7551)
!7553 = !DILocation(line: 1089, column: 6, scope: !7501)
!7554 = !DILocation(line: 1090, column: 28, scope: !7555)
!7555 = distinct !DILexicalBlock(scope: !7556, file: !7502, line: 1090, column: 7)
!7556 = distinct !DILexicalBlock(scope: !7551, file: !7502, line: 1089, column: 18)
!7557 = !DILocation(line: 1090, column: 44, scope: !7555)
!7558 = !DILocation(line: 1090, column: 7, scope: !7556)
!7559 = !DILocation(line: 1091, column: 24, scope: !7560)
!7560 = distinct !DILexicalBlock(scope: !7555, file: !7502, line: 1090, column: 50)
!7561 = !DILocation(line: 1092, column: 3, scope: !7560)
!7562 = !DILocation(line: 1094, column: 23, scope: !7563)
!7563 = distinct !DILexicalBlock(scope: !7551, file: !7502, line: 1093, column: 9)
!7564 = !DILocation(line: 1097, column: 2, scope: !7501)
!7565 = !DILocation(line: 1098, column: 1, scope: !7501)
!7566 = distinct !DISubprogram(name: "get_esf", scope: !7502, file: !7502, line: 894, type: !7567, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3169, retainedNodes: !7570)
!7567 = !DISubroutineType(types: !7568)
!7568 = !{!3197, !113, !113, !113, !7569}
!7569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !422, size: 32)
!7570 = !{!7571, !7572, !7573, !7574, !7575, !7576}
!7571 = !DILocalVariable(name: "msp", arg: 1, scope: !7566, file: !7502, line: 894, type: !113)
!7572 = !DILocalVariable(name: "psp", arg: 2, scope: !7566, file: !7502, line: 894, type: !113)
!7573 = !DILocalVariable(name: "exc_return", arg: 3, scope: !7566, file: !7502, line: 894, type: !113)
!7574 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !7566, file: !7502, line: 895, type: !7569)
!7575 = !DILocalVariable(name: "alternative_state_exc", scope: !7566, file: !7502, line: 897, type: !422)
!7576 = !DILocalVariable(name: "ptr_esf", scope: !7566, file: !7502, line: 898, type: !3197)
!7577 = !DILocation(line: 0, scope: !7566)
!7578 = !DILocation(line: 900, column: 14, scope: !7566)
!7579 = !DILocation(line: 902, column: 49, scope: !7580)
!7580 = distinct !DILexicalBlock(scope: !7566, file: !7502, line: 902, column: 6)
!7581 = !DILocation(line: 902, column: 6, scope: !7566)
!7582 = !DILocation(line: 983, column: 44, scope: !7583)
!7583 = distinct !DILexicalBlock(scope: !7566, file: !7502, line: 983, column: 6)
!7584 = !DILocation(line: 985, column: 3, scope: !7585)
!7585 = distinct !DILexicalBlock(scope: !7586, file: !7502, line: 985, column: 3)
!7586 = distinct !DILexicalBlock(scope: !7587, file: !7502, line: 985, column: 3)
!7587 = distinct !DILexicalBlock(scope: !7588, file: !7502, line: 985, column: 3)
!7588 = distinct !DILexicalBlock(scope: !7589, file: !7502, line: 985, column: 3)
!7589 = distinct !DILexicalBlock(scope: !7583, file: !7502, line: 984, column: 47)
!7590 = !DILocation(line: 986, column: 3, scope: !7589)
!7591 = !DILocation(line: 983, column: 18, scope: !7583)
!7592 = !DILocation(line: 991, column: 7, scope: !7593)
!7593 = distinct !DILexicalBlock(scope: !7594, file: !7502, line: 990, column: 30)
!7594 = distinct !DILexicalBlock(scope: !7566, file: !7502, line: 990, column: 6)
!7595 = !DILocation(line: 998, column: 16, scope: !7596)
!7596 = distinct !DILexicalBlock(scope: !7597, file: !7502, line: 995, column: 10)
!7597 = distinct !DILexicalBlock(scope: !7593, file: !7502, line: 991, column: 7)
!7598 = !DILocation(line: 1002, column: 2, scope: !7566)
!7599 = !DILocation(line: 1003, column: 1, scope: !7566)
!7600 = distinct !DISubprogram(name: "fault_handle", scope: !7502, file: !7502, line: 786, type: !7601, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3169, retainedNodes: !7603)
!7601 = !DISubroutineType(types: !7602)
!7602 = !{!113, !3197, !108, !7569}
!7603 = !{!7604, !7605, !7606, !7607}
!7604 = !DILocalVariable(name: "esf", arg: 1, scope: !7600, file: !7502, line: 786, type: !3197)
!7605 = !DILocalVariable(name: "fault", arg: 2, scope: !7600, file: !7502, line: 786, type: !108)
!7606 = !DILocalVariable(name: "recoverable", arg: 3, scope: !7600, file: !7502, line: 786, type: !7569)
!7607 = !DILocalVariable(name: "reason", scope: !7600, file: !7502, line: 788, type: !113)
!7608 = !DILocation(line: 0, scope: !7600)
!7609 = !DILocation(line: 790, column: 15, scope: !7600)
!7610 = !DILocation(line: 792, column: 2, scope: !7600)
!7611 = !DILocation(line: 794, column: 12, scope: !7612)
!7612 = distinct !DILexicalBlock(scope: !7600, file: !7502, line: 792, column: 17)
!7613 = !DILocation(line: 795, column: 3, scope: !7612)
!7614 = !DILocation(line: 800, column: 12, scope: !7612)
!7615 = !DILocation(line: 801, column: 3, scope: !7612)
!7616 = !DILocation(line: 803, column: 12, scope: !7612)
!7617 = !DILocation(line: 804, column: 3, scope: !7612)
!7618 = !DILocation(line: 806, column: 12, scope: !7612)
!7619 = !DILocation(line: 807, column: 3, scope: !7612)
!7620 = !DILocation(line: 814, column: 3, scope: !7612)
!7621 = !DILocation(line: 815, column: 3, scope: !7612)
!7622 = !DILocation(line: 820, column: 3, scope: !7612)
!7623 = !DILocation(line: 821, column: 3, scope: !7612)
!7624 = !DILocation(line: 829, column: 2, scope: !7600)
!7625 = distinct !DISubprogram(name: "hard_fault", scope: !7502, file: !7502, line: 709, type: !7626, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3169, retainedNodes: !7628)
!7626 = !DISubroutineType(types: !7627)
!7627 = !{!113, !3197, !7569}
!7628 = !{!7629, !7630, !7631}
!7629 = !DILocalVariable(name: "esf", arg: 1, scope: !7625, file: !7502, line: 709, type: !3197)
!7630 = !DILocalVariable(name: "recoverable", arg: 2, scope: !7625, file: !7502, line: 709, type: !7569)
!7631 = !DILocalVariable(name: "reason", scope: !7625, file: !7502, line: 711, type: !113)
!7632 = !DILocation(line: 0, scope: !7625)
!7633 = !DILocation(line: 713, column: 2, scope: !7634)
!7634 = distinct !DILexicalBlock(scope: !7635, file: !7502, line: 713, column: 2)
!7635 = distinct !DILexicalBlock(scope: !7636, file: !7502, line: 713, column: 2)
!7636 = distinct !DILexicalBlock(scope: !7637, file: !7502, line: 713, column: 2)
!7637 = distinct !DILexicalBlock(scope: !7625, file: !7502, line: 713, column: 2)
!7638 = !DILocation(line: 732, column: 15, scope: !7625)
!7639 = !DILocation(line: 734, column: 12, scope: !7640)
!7640 = distinct !DILexicalBlock(scope: !7625, file: !7502, line: 734, column: 6)
!7641 = !DILocation(line: 734, column: 17, scope: !7640)
!7642 = !DILocation(line: 734, column: 41, scope: !7640)
!7643 = !DILocation(line: 734, column: 6, scope: !7625)
!7644 = !DILocation(line: 735, column: 3, scope: !7645)
!7645 = distinct !DILexicalBlock(scope: !7646, file: !7502, line: 735, column: 3)
!7646 = distinct !DILexicalBlock(scope: !7647, file: !7502, line: 735, column: 3)
!7647 = distinct !DILexicalBlock(scope: !7648, file: !7502, line: 735, column: 3)
!7648 = distinct !DILexicalBlock(scope: !7649, file: !7502, line: 735, column: 3)
!7649 = distinct !DILexicalBlock(scope: !7640, file: !7502, line: 734, column: 47)
!7650 = !DILocation(line: 736, column: 2, scope: !7649)
!7651 = !DILocation(line: 736, column: 19, scope: !7652)
!7652 = distinct !DILexicalBlock(scope: !7640, file: !7502, line: 736, column: 13)
!7653 = !DILocation(line: 736, column: 49, scope: !7652)
!7654 = !DILocation(line: 736, column: 13, scope: !7640)
!7655 = !DILocation(line: 737, column: 3, scope: !7656)
!7656 = distinct !DILexicalBlock(scope: !7657, file: !7502, line: 737, column: 3)
!7657 = distinct !DILexicalBlock(scope: !7658, file: !7502, line: 737, column: 3)
!7658 = distinct !DILexicalBlock(scope: !7659, file: !7502, line: 737, column: 3)
!7659 = distinct !DILexicalBlock(scope: !7660, file: !7502, line: 737, column: 3)
!7660 = distinct !DILexicalBlock(scope: !7652, file: !7502, line: 736, column: 55)
!7661 = !DILocation(line: 738, column: 2, scope: !7660)
!7662 = !DILocation(line: 738, column: 19, scope: !7663)
!7663 = distinct !DILexicalBlock(scope: !7652, file: !7502, line: 738, column: 13)
!7664 = !DILocation(line: 738, column: 24, scope: !7663)
!7665 = !DILocation(line: 738, column: 47, scope: !7663)
!7666 = !DILocation(line: 738, column: 13, scope: !7652)
!7667 = !DILocation(line: 739, column: 3, scope: !7668)
!7668 = distinct !DILexicalBlock(scope: !7669, file: !7502, line: 739, column: 3)
!7669 = distinct !DILexicalBlock(scope: !7670, file: !7502, line: 739, column: 3)
!7670 = distinct !DILexicalBlock(scope: !7671, file: !7502, line: 739, column: 3)
!7671 = distinct !DILexicalBlock(scope: !7672, file: !7502, line: 739, column: 3)
!7672 = distinct !DILexicalBlock(scope: !7663, file: !7502, line: 738, column: 53)
!7673 = !DILocation(line: 740, column: 7, scope: !7674)
!7674 = distinct !DILexicalBlock(scope: !7672, file: !7502, line: 740, column: 7)
!7675 = !DILocation(line: 740, column: 7, scope: !7672)
!7676 = !DILocation(line: 741, column: 4, scope: !7677)
!7677 = distinct !DILexicalBlock(scope: !7678, file: !7502, line: 741, column: 4)
!7678 = distinct !DILexicalBlock(scope: !7679, file: !7502, line: 741, column: 4)
!7679 = distinct !DILexicalBlock(scope: !7680, file: !7502, line: 741, column: 4)
!7680 = distinct !DILexicalBlock(scope: !7681, file: !7502, line: 741, column: 4)
!7681 = distinct !DILexicalBlock(scope: !7674, file: !7502, line: 740, column: 38)
!7682 = !DILocation(line: 742, column: 24, scope: !7681)
!7683 = !DILocation(line: 743, column: 3, scope: !7681)
!7684 = !DILocation(line: 743, column: 20, scope: !7685)
!7685 = distinct !DILexicalBlock(scope: !7674, file: !7502, line: 743, column: 14)
!7686 = !DILocation(line: 743, column: 25, scope: !7685)
!7687 = !DILocation(line: 743, column: 52, scope: !7685)
!7688 = !DILocation(line: 743, column: 14, scope: !7674)
!7689 = !DILocation(line: 744, column: 13, scope: !7690)
!7690 = distinct !DILexicalBlock(scope: !7685, file: !7502, line: 743, column: 58)
!7691 = !DILocation(line: 745, column: 3, scope: !7690)
!7692 = !DILocation(line: 745, column: 20, scope: !7693)
!7693 = distinct !DILexicalBlock(scope: !7685, file: !7502, line: 745, column: 14)
!7694 = !DILocation(line: 745, column: 25, scope: !7693)
!7695 = !DILocation(line: 745, column: 52, scope: !7693)
!7696 = !DILocation(line: 745, column: 14, scope: !7685)
!7697 = !DILocation(line: 746, column: 13, scope: !7698)
!7698 = distinct !DILexicalBlock(scope: !7693, file: !7502, line: 745, column: 58)
!7699 = !DILocation(line: 747, column: 3, scope: !7698)
!7700 = !DILocation(line: 747, column: 20, scope: !7701)
!7701 = distinct !DILexicalBlock(scope: !7693, file: !7502, line: 747, column: 14)
!7702 = !DILocation(line: 747, column: 52, scope: !7701)
!7703 = !DILocation(line: 747, column: 14, scope: !7693)
!7704 = !DILocation(line: 748, column: 13, scope: !7705)
!7705 = distinct !DILexicalBlock(scope: !7701, file: !7502, line: 747, column: 58)
!7706 = !DILocation(line: 753, column: 3, scope: !7705)
!7707 = !DILocation(line: 766, column: 2, scope: !7625)
!7708 = distinct !DISubprogram(name: "mem_manage_fault", scope: !7502, file: !7502, line: 229, type: !7601, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3169, retainedNodes: !7709)
!7709 = !{!7710, !7711, !7712, !7713, !7714, !7715, !7718}
!7710 = !DILocalVariable(name: "esf", arg: 1, scope: !7708, file: !7502, line: 229, type: !3197)
!7711 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !7708, file: !7502, line: 229, type: !108)
!7712 = !DILocalVariable(name: "recoverable", arg: 3, scope: !7708, file: !7502, line: 230, type: !7569)
!7713 = !DILocalVariable(name: "reason", scope: !7708, file: !7502, line: 232, type: !113)
!7714 = !DILocalVariable(name: "mmfar", scope: !7708, file: !7502, line: 233, type: !113)
!7715 = !DILocalVariable(name: "temp", scope: !7716, file: !7502, line: 254, type: !113)
!7716 = distinct !DILexicalBlock(scope: !7717, file: !7502, line: 244, column: 48)
!7717 = distinct !DILexicalBlock(scope: !7708, file: !7502, line: 244, column: 6)
!7718 = !DILocalVariable(name: "min_stack_ptr", scope: !7719, file: !7502, line: 309, type: !113)
!7719 = distinct !DILexicalBlock(scope: !7720, file: !7502, line: 308, column: 43)
!7720 = distinct !DILexicalBlock(scope: !7721, file: !7502, line: 308, column: 7)
!7721 = distinct !DILexicalBlock(scope: !7722, file: !7502, line: 289, column: 40)
!7722 = distinct !DILexicalBlock(scope: !7708, file: !7502, line: 288, column: 6)
!7723 = !DILocation(line: 0, scope: !7708)
!7724 = !DILocation(line: 235, column: 2, scope: !7725)
!7725 = distinct !DILexicalBlock(scope: !7726, file: !7502, line: 235, column: 2)
!7726 = distinct !DILexicalBlock(scope: !7727, file: !7502, line: 235, column: 2)
!7727 = distinct !DILexicalBlock(scope: !7728, file: !7502, line: 235, column: 2)
!7728 = distinct !DILexicalBlock(scope: !7708, file: !7502, line: 235, column: 2)
!7729 = !DILocation(line: 237, column: 12, scope: !7730)
!7730 = distinct !DILexicalBlock(scope: !7708, file: !7502, line: 237, column: 6)
!7731 = !DILocation(line: 237, column: 17, scope: !7730)
!7732 = !DILocation(line: 237, column: 41, scope: !7730)
!7733 = !DILocation(line: 237, column: 6, scope: !7708)
!7734 = !DILocation(line: 238, column: 3, scope: !7735)
!7735 = distinct !DILexicalBlock(scope: !7736, file: !7502, line: 238, column: 3)
!7736 = distinct !DILexicalBlock(scope: !7737, file: !7502, line: 238, column: 3)
!7737 = distinct !DILexicalBlock(scope: !7738, file: !7502, line: 238, column: 3)
!7738 = distinct !DILexicalBlock(scope: !7739, file: !7502, line: 238, column: 3)
!7739 = distinct !DILexicalBlock(scope: !7730, file: !7502, line: 237, column: 47)
!7740 = !DILocation(line: 240, column: 2, scope: !7739)
!7741 = !DILocation(line: 241, column: 12, scope: !7742)
!7742 = distinct !DILexicalBlock(scope: !7708, file: !7502, line: 241, column: 6)
!7743 = !DILocation(line: 241, column: 17, scope: !7742)
!7744 = !DILocation(line: 241, column: 43, scope: !7742)
!7745 = !DILocation(line: 241, column: 6, scope: !7708)
!7746 = !DILocation(line: 242, column: 3, scope: !7747)
!7747 = distinct !DILexicalBlock(scope: !7748, file: !7502, line: 242, column: 3)
!7748 = distinct !DILexicalBlock(scope: !7749, file: !7502, line: 242, column: 3)
!7749 = distinct !DILexicalBlock(scope: !7750, file: !7502, line: 242, column: 3)
!7750 = distinct !DILexicalBlock(scope: !7751, file: !7502, line: 242, column: 3)
!7751 = distinct !DILexicalBlock(scope: !7742, file: !7502, line: 241, column: 49)
!7752 = !DILocation(line: 243, column: 2, scope: !7751)
!7753 = !DILocation(line: 244, column: 12, scope: !7717)
!7754 = !DILocation(line: 244, column: 17, scope: !7717)
!7755 = !DILocation(line: 244, column: 42, scope: !7717)
!7756 = !DILocation(line: 244, column: 6, scope: !7708)
!7757 = !DILocation(line: 245, column: 3, scope: !7758)
!7758 = distinct !DILexicalBlock(scope: !7759, file: !7502, line: 245, column: 3)
!7759 = distinct !DILexicalBlock(scope: !7760, file: !7502, line: 245, column: 3)
!7760 = distinct !DILexicalBlock(scope: !7761, file: !7502, line: 245, column: 3)
!7761 = distinct !DILexicalBlock(scope: !7716, file: !7502, line: 245, column: 3)
!7762 = !DILocation(line: 254, column: 24, scope: !7716)
!7763 = !DILocation(line: 0, scope: !7716)
!7764 = !DILocation(line: 256, column: 13, scope: !7765)
!7765 = distinct !DILexicalBlock(scope: !7716, file: !7502, line: 256, column: 7)
!7766 = !DILocation(line: 256, column: 18, scope: !7765)
!7767 = !DILocation(line: 256, column: 44, scope: !7765)
!7768 = !DILocation(line: 256, column: 7, scope: !7716)
!7769 = !DILocation(line: 258, column: 4, scope: !7770)
!7770 = distinct !DILexicalBlock(scope: !7771, file: !7502, line: 258, column: 4)
!7771 = distinct !DILexicalBlock(scope: !7772, file: !7502, line: 258, column: 4)
!7772 = distinct !DILexicalBlock(scope: !7773, file: !7502, line: 258, column: 4)
!7773 = distinct !DILexicalBlock(scope: !7774, file: !7502, line: 258, column: 4)
!7774 = distinct !DILexicalBlock(scope: !7765, file: !7502, line: 256, column: 50)
!7775 = !DILocation(line: 259, column: 24, scope: !7776)
!7776 = distinct !DILexicalBlock(scope: !7774, file: !7502, line: 259, column: 8)
!7777 = !DILocation(line: 259, column: 8, scope: !7774)
!7778 = !DILocation(line: 261, column: 15, scope: !7779)
!7779 = distinct !DILexicalBlock(scope: !7776, file: !7502, line: 259, column: 30)
!7780 = !DILocation(line: 262, column: 4, scope: !7779)
!7781 = !DILocation(line: 265, column: 12, scope: !7782)
!7782 = distinct !DILexicalBlock(scope: !7708, file: !7502, line: 265, column: 6)
!7783 = !DILocation(line: 265, column: 17, scope: !7782)
!7784 = !DILocation(line: 265, column: 42, scope: !7782)
!7785 = !DILocation(line: 265, column: 6, scope: !7708)
!7786 = !DILocation(line: 266, column: 3, scope: !7787)
!7787 = distinct !DILexicalBlock(scope: !7788, file: !7502, line: 266, column: 3)
!7788 = distinct !DILexicalBlock(scope: !7789, file: !7502, line: 266, column: 3)
!7789 = distinct !DILexicalBlock(scope: !7790, file: !7502, line: 266, column: 3)
!7790 = distinct !DILexicalBlock(scope: !7791, file: !7502, line: 266, column: 3)
!7791 = distinct !DILexicalBlock(scope: !7782, file: !7502, line: 265, column: 48)
!7792 = !DILocation(line: 267, column: 2, scope: !7791)
!7793 = !DILocation(line: 269, column: 12, scope: !7794)
!7794 = distinct !DILexicalBlock(scope: !7708, file: !7502, line: 269, column: 6)
!7795 = !DILocation(line: 269, column: 17, scope: !7794)
!7796 = !DILocation(line: 269, column: 41, scope: !7794)
!7797 = !DILocation(line: 269, column: 6, scope: !7708)
!7798 = !DILocation(line: 270, column: 3, scope: !7799)
!7799 = distinct !DILexicalBlock(scope: !7800, file: !7502, line: 270, column: 3)
!7800 = distinct !DILexicalBlock(scope: !7801, file: !7502, line: 270, column: 3)
!7801 = distinct !DILexicalBlock(scope: !7802, file: !7502, line: 270, column: 3)
!7802 = distinct !DILexicalBlock(scope: !7803, file: !7502, line: 270, column: 3)
!7803 = distinct !DILexicalBlock(scope: !7794, file: !7502, line: 269, column: 47)
!7804 = !DILocation(line: 272, column: 2, scope: !7803)
!7805 = !DILocation(line: 288, column: 12, scope: !7722)
!7806 = !DILocation(line: 288, column: 17, scope: !7722)
!7807 = !DILocation(line: 288, column: 41, scope: !7722)
!7808 = !DILocation(line: 289, column: 9, scope: !7722)
!7809 = !DILocation(line: 289, column: 14, scope: !7722)
!7810 = !DILocation(line: 288, column: 6, scope: !7708)
!7811 = !DILocation(line: 308, column: 12, scope: !7720)
!7812 = !DILocation(line: 308, column: 17, scope: !7720)
!7813 = !DILocation(line: 308, column: 7, scope: !7721)
!7814 = !DILocation(line: 310, column: 6, scope: !7719)
!7815 = !DILocation(line: 309, column: 29, scope: !7719)
!7816 = !DILocation(line: 0, scope: !7719)
!7817 = !DILocation(line: 312, column: 8, scope: !7818)
!7818 = distinct !DILexicalBlock(scope: !7719, file: !7502, line: 312, column: 8)
!7819 = !DILocation(line: 312, column: 8, scope: !7719)
!7820 = !DILocalVariable(name: "topOfProcStack", arg: 1, scope: !7821, file: !7201, line: 1099, type: !113)
!7821 = distinct !DISubprogram(name: "__set_PSP", scope: !7201, file: !7201, line: 1099, type: !7292, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3169, retainedNodes: !7822)
!7822 = !{!7820}
!7823 = !DILocation(line: 0, scope: !7821, inlinedAt: !7824)
!7824 = distinct !DILocation(line: 338, column: 5, scope: !7825)
!7825 = distinct !DILexicalBlock(scope: !7818, file: !7502, line: 312, column: 23)
!7826 = !DILocation(line: 1101, column: 3, scope: !7821, inlinedAt: !7824)
!7827 = !{i64 4160406}
!7828 = !DILocation(line: 341, column: 4, scope: !7825)
!7829 = !DILocation(line: 360, column: 12, scope: !7830)
!7830 = distinct !DILexicalBlock(scope: !7708, file: !7502, line: 360, column: 6)
!7831 = !DILocation(line: 360, column: 17, scope: !7830)
!7832 = !DILocation(line: 360, column: 41, scope: !7830)
!7833 = !DILocation(line: 360, column: 6, scope: !7708)
!7834 = !DILocation(line: 361, column: 14, scope: !7835)
!7835 = distinct !DILexicalBlock(scope: !7830, file: !7502, line: 360, column: 47)
!7836 = !DILocation(line: 362, column: 2, scope: !7835)
!7837 = !DILocation(line: 366, column: 12, scope: !7708)
!7838 = !DILocation(line: 369, column: 15, scope: !7708)
!7839 = !DILocation(line: 371, column: 2, scope: !7708)
!7840 = distinct !DISubprogram(name: "bus_fault", scope: !7502, file: !7502, line: 383, type: !7841, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3169, retainedNodes: !7843)
!7841 = !DISubroutineType(types: !7842)
!7842 = !{!108, !3197, !108, !7569}
!7843 = !{!7844, !7845, !7846, !7847, !7848}
!7844 = !DILocalVariable(name: "esf", arg: 1, scope: !7840, file: !7502, line: 383, type: !3197)
!7845 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !7840, file: !7502, line: 383, type: !108)
!7846 = !DILocalVariable(name: "recoverable", arg: 3, scope: !7840, file: !7502, line: 383, type: !7569)
!7847 = !DILocalVariable(name: "reason", scope: !7840, file: !7502, line: 385, type: !113)
!7848 = !DILocalVariable(name: "bfar", scope: !7849, file: !7502, line: 405, type: !113)
!7849 = distinct !DILexicalBlock(scope: !7850, file: !7502, line: 395, column: 42)
!7850 = distinct !DILexicalBlock(scope: !7840, file: !7502, line: 395, column: 6)
!7851 = !DILocation(line: 0, scope: !7840)
!7852 = !DILocation(line: 387, column: 2, scope: !7853)
!7853 = distinct !DILexicalBlock(scope: !7854, file: !7502, line: 387, column: 2)
!7854 = distinct !DILexicalBlock(scope: !7855, file: !7502, line: 387, column: 2)
!7855 = distinct !DILexicalBlock(scope: !7856, file: !7502, line: 387, column: 2)
!7856 = distinct !DILexicalBlock(scope: !7840, file: !7502, line: 387, column: 2)
!7857 = !DILocation(line: 389, column: 11, scope: !7858)
!7858 = distinct !DILexicalBlock(scope: !7840, file: !7502, line: 389, column: 6)
!7859 = !DILocation(line: 389, column: 16, scope: !7858)
!7860 = !DILocation(line: 389, column: 6, scope: !7840)
!7861 = !DILocation(line: 390, column: 3, scope: !7862)
!7862 = distinct !DILexicalBlock(scope: !7863, file: !7502, line: 390, column: 3)
!7863 = distinct !DILexicalBlock(scope: !7864, file: !7502, line: 390, column: 3)
!7864 = distinct !DILexicalBlock(scope: !7865, file: !7502, line: 390, column: 3)
!7865 = distinct !DILexicalBlock(scope: !7866, file: !7502, line: 390, column: 3)
!7866 = distinct !DILexicalBlock(scope: !7858, file: !7502, line: 389, column: 39)
!7867 = !DILocation(line: 391, column: 2, scope: !7866)
!7868 = !DILocation(line: 392, column: 11, scope: !7869)
!7869 = distinct !DILexicalBlock(scope: !7840, file: !7502, line: 392, column: 6)
!7870 = !DILocation(line: 392, column: 16, scope: !7869)
!7871 = !DILocation(line: 392, column: 6, scope: !7840)
!7872 = !DILocation(line: 393, column: 3, scope: !7873)
!7873 = distinct !DILexicalBlock(scope: !7874, file: !7502, line: 393, column: 3)
!7874 = distinct !DILexicalBlock(scope: !7875, file: !7502, line: 393, column: 3)
!7875 = distinct !DILexicalBlock(scope: !7876, file: !7502, line: 393, column: 3)
!7876 = distinct !DILexicalBlock(scope: !7877, file: !7502, line: 393, column: 3)
!7877 = distinct !DILexicalBlock(scope: !7869, file: !7502, line: 392, column: 41)
!7878 = !DILocation(line: 394, column: 2, scope: !7877)
!7879 = !DILocation(line: 395, column: 11, scope: !7850)
!7880 = !DILocation(line: 395, column: 16, scope: !7850)
!7881 = !DILocation(line: 395, column: 6, scope: !7840)
!7882 = !DILocation(line: 396, column: 3, scope: !7883)
!7883 = distinct !DILexicalBlock(scope: !7884, file: !7502, line: 396, column: 3)
!7884 = distinct !DILexicalBlock(scope: !7885, file: !7502, line: 396, column: 3)
!7885 = distinct !DILexicalBlock(scope: !7886, file: !7502, line: 396, column: 3)
!7886 = distinct !DILexicalBlock(scope: !7849, file: !7502, line: 396, column: 3)
!7887 = !DILocation(line: 405, column: 3, scope: !7849)
!7888 = !DILocation(line: 0, scope: !7849)
!7889 = !DILocation(line: 407, column: 13, scope: !7890)
!7890 = distinct !DILexicalBlock(scope: !7849, file: !7502, line: 407, column: 7)
!7891 = !DILocation(line: 407, column: 18, scope: !7890)
!7892 = !DILocation(line: 407, column: 44, scope: !7890)
!7893 = !DILocation(line: 407, column: 7, scope: !7849)
!7894 = !DILocation(line: 408, column: 4, scope: !7895)
!7895 = distinct !DILexicalBlock(scope: !7896, file: !7502, line: 408, column: 4)
!7896 = distinct !DILexicalBlock(scope: !7897, file: !7502, line: 408, column: 4)
!7897 = distinct !DILexicalBlock(scope: !7898, file: !7502, line: 408, column: 4)
!7898 = distinct !DILexicalBlock(scope: !7899, file: !7502, line: 408, column: 4)
!7899 = distinct !DILexicalBlock(scope: !7890, file: !7502, line: 407, column: 50)
!7900 = !DILocation(line: 409, column: 24, scope: !7901)
!7901 = distinct !DILexicalBlock(scope: !7899, file: !7502, line: 409, column: 8)
!7902 = !DILocation(line: 409, column: 8, scope: !7899)
!7903 = !DILocation(line: 411, column: 15, scope: !7904)
!7904 = distinct !DILexicalBlock(scope: !7901, file: !7502, line: 409, column: 30)
!7905 = !DILocation(line: 412, column: 4, scope: !7904)
!7906 = !DILocation(line: 415, column: 11, scope: !7907)
!7907 = distinct !DILexicalBlock(scope: !7840, file: !7502, line: 415, column: 6)
!7908 = !DILocation(line: 415, column: 16, scope: !7907)
!7909 = !DILocation(line: 415, column: 6, scope: !7840)
!7910 = !DILocation(line: 416, column: 3, scope: !7911)
!7911 = distinct !DILexicalBlock(scope: !7912, file: !7502, line: 416, column: 3)
!7912 = distinct !DILexicalBlock(scope: !7913, file: !7502, line: 416, column: 3)
!7913 = distinct !DILexicalBlock(scope: !7914, file: !7502, line: 416, column: 3)
!7914 = distinct !DILexicalBlock(scope: !7915, file: !7502, line: 416, column: 3)
!7915 = distinct !DILexicalBlock(scope: !7907, file: !7502, line: 415, column: 44)
!7916 = !DILocation(line: 417, column: 2, scope: !7915)
!7917 = !DILocation(line: 418, column: 12, scope: !7918)
!7918 = distinct !DILexicalBlock(scope: !7840, file: !7502, line: 418, column: 6)
!7919 = !DILocation(line: 418, column: 17, scope: !7918)
!7920 = !DILocation(line: 418, column: 41, scope: !7918)
!7921 = !DILocation(line: 418, column: 6, scope: !7840)
!7922 = !DILocation(line: 423, column: 18, scope: !7923)
!7923 = distinct !DILexicalBlock(scope: !7918, file: !7502, line: 423, column: 13)
!7924 = !DILocation(line: 423, column: 23, scope: !7923)
!7925 = !DILocation(line: 423, column: 13, scope: !7918)
!7926 = !DILocation(line: 0, scope: !7918)
!7927 = !DILocation(line: 524, column: 12, scope: !7840)
!7928 = !DILocation(line: 526, column: 15, scope: !7840)
!7929 = !DILocation(line: 528, column: 2, scope: !7840)
!7930 = distinct !DISubprogram(name: "usage_fault", scope: !7502, file: !7502, line: 539, type: !7931, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3169, retainedNodes: !7935)
!7931 = !DISubroutineType(types: !7932)
!7932 = !{!113, !7933}
!7933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7934, size: 32)
!7934 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3198)
!7935 = !{!7936, !7937}
!7936 = !DILocalVariable(name: "esf", arg: 1, scope: !7930, file: !7502, line: 539, type: !7933)
!7937 = !DILocalVariable(name: "reason", scope: !7930, file: !7502, line: 541, type: !113)
!7938 = !DILocation(line: 0, scope: !7930)
!7939 = !DILocation(line: 543, column: 2, scope: !7940)
!7940 = distinct !DILexicalBlock(scope: !7941, file: !7502, line: 543, column: 2)
!7941 = distinct !DILexicalBlock(scope: !7942, file: !7502, line: 543, column: 2)
!7942 = distinct !DILexicalBlock(scope: !7943, file: !7502, line: 543, column: 2)
!7943 = distinct !DILexicalBlock(scope: !7930, file: !7502, line: 543, column: 2)
!7944 = !DILocation(line: 546, column: 12, scope: !7945)
!7945 = distinct !DILexicalBlock(scope: !7930, file: !7502, line: 546, column: 6)
!7946 = !DILocation(line: 546, column: 17, scope: !7945)
!7947 = !DILocation(line: 546, column: 43, scope: !7945)
!7948 = !DILocation(line: 546, column: 6, scope: !7930)
!7949 = !DILocation(line: 547, column: 3, scope: !7950)
!7950 = distinct !DILexicalBlock(scope: !7951, file: !7502, line: 547, column: 3)
!7951 = distinct !DILexicalBlock(scope: !7952, file: !7502, line: 547, column: 3)
!7952 = distinct !DILexicalBlock(scope: !7953, file: !7502, line: 547, column: 3)
!7953 = distinct !DILexicalBlock(scope: !7954, file: !7502, line: 547, column: 3)
!7954 = distinct !DILexicalBlock(scope: !7945, file: !7502, line: 546, column: 49)
!7955 = !DILocation(line: 548, column: 2, scope: !7954)
!7956 = !DILocation(line: 549, column: 12, scope: !7957)
!7957 = distinct !DILexicalBlock(scope: !7930, file: !7502, line: 549, column: 6)
!7958 = !DILocation(line: 549, column: 17, scope: !7957)
!7959 = !DILocation(line: 549, column: 43, scope: !7957)
!7960 = !DILocation(line: 549, column: 6, scope: !7930)
!7961 = !DILocation(line: 550, column: 3, scope: !7962)
!7962 = distinct !DILexicalBlock(scope: !7963, file: !7502, line: 550, column: 3)
!7963 = distinct !DILexicalBlock(scope: !7964, file: !7502, line: 550, column: 3)
!7964 = distinct !DILexicalBlock(scope: !7965, file: !7502, line: 550, column: 3)
!7965 = distinct !DILexicalBlock(scope: !7966, file: !7502, line: 550, column: 3)
!7966 = distinct !DILexicalBlock(scope: !7957, file: !7502, line: 549, column: 49)
!7967 = !DILocation(line: 551, column: 2, scope: !7966)
!7968 = !DILocation(line: 567, column: 12, scope: !7969)
!7969 = distinct !DILexicalBlock(scope: !7930, file: !7502, line: 567, column: 6)
!7970 = !DILocation(line: 567, column: 17, scope: !7969)
!7971 = !DILocation(line: 567, column: 38, scope: !7969)
!7972 = !DILocation(line: 567, column: 6, scope: !7930)
!7973 = !DILocation(line: 568, column: 3, scope: !7974)
!7974 = distinct !DILexicalBlock(scope: !7975, file: !7502, line: 568, column: 3)
!7975 = distinct !DILexicalBlock(scope: !7976, file: !7502, line: 568, column: 3)
!7976 = distinct !DILexicalBlock(scope: !7977, file: !7502, line: 568, column: 3)
!7977 = distinct !DILexicalBlock(scope: !7978, file: !7502, line: 568, column: 3)
!7978 = distinct !DILexicalBlock(scope: !7969, file: !7502, line: 567, column: 44)
!7979 = !DILocation(line: 569, column: 2, scope: !7978)
!7980 = !DILocation(line: 570, column: 12, scope: !7981)
!7981 = distinct !DILexicalBlock(scope: !7930, file: !7502, line: 570, column: 6)
!7982 = !DILocation(line: 570, column: 17, scope: !7981)
!7983 = !DILocation(line: 570, column: 39, scope: !7981)
!7984 = !DILocation(line: 570, column: 6, scope: !7930)
!7985 = !DILocation(line: 571, column: 3, scope: !7986)
!7986 = distinct !DILexicalBlock(scope: !7987, file: !7502, line: 571, column: 3)
!7987 = distinct !DILexicalBlock(scope: !7988, file: !7502, line: 571, column: 3)
!7988 = distinct !DILexicalBlock(scope: !7989, file: !7502, line: 571, column: 3)
!7989 = distinct !DILexicalBlock(scope: !7990, file: !7502, line: 571, column: 3)
!7990 = distinct !DILexicalBlock(scope: !7981, file: !7502, line: 570, column: 45)
!7991 = !DILocation(line: 572, column: 2, scope: !7990)
!7992 = !DILocation(line: 573, column: 12, scope: !7993)
!7993 = distinct !DILexicalBlock(scope: !7930, file: !7502, line: 573, column: 6)
!7994 = !DILocation(line: 573, column: 17, scope: !7993)
!7995 = !DILocation(line: 573, column: 42, scope: !7993)
!7996 = !DILocation(line: 573, column: 6, scope: !7930)
!7997 = !DILocation(line: 574, column: 3, scope: !7998)
!7998 = distinct !DILexicalBlock(scope: !7999, file: !7502, line: 574, column: 3)
!7999 = distinct !DILexicalBlock(scope: !8000, file: !7502, line: 574, column: 3)
!8000 = distinct !DILexicalBlock(scope: !8001, file: !7502, line: 574, column: 3)
!8001 = distinct !DILexicalBlock(scope: !8002, file: !7502, line: 574, column: 3)
!8002 = distinct !DILexicalBlock(scope: !7993, file: !7502, line: 573, column: 48)
!8003 = !DILocation(line: 575, column: 2, scope: !8002)
!8004 = !DILocation(line: 576, column: 12, scope: !8005)
!8005 = distinct !DILexicalBlock(scope: !7930, file: !7502, line: 576, column: 6)
!8006 = !DILocation(line: 576, column: 17, scope: !8005)
!8007 = !DILocation(line: 576, column: 44, scope: !8005)
!8008 = !DILocation(line: 576, column: 6, scope: !7930)
!8009 = !DILocation(line: 577, column: 3, scope: !8010)
!8010 = distinct !DILexicalBlock(scope: !8011, file: !7502, line: 577, column: 3)
!8011 = distinct !DILexicalBlock(scope: !8012, file: !7502, line: 577, column: 3)
!8012 = distinct !DILexicalBlock(scope: !8013, file: !7502, line: 577, column: 3)
!8013 = distinct !DILexicalBlock(scope: !8014, file: !7502, line: 577, column: 3)
!8014 = distinct !DILexicalBlock(scope: !8005, file: !7502, line: 576, column: 50)
!8015 = !DILocation(line: 578, column: 2, scope: !8014)
!8016 = !DILocation(line: 581, column: 12, scope: !7930)
!8017 = !DILocation(line: 583, column: 2, scope: !7930)
!8018 = distinct !DISubprogram(name: "debug_monitor", scope: !7502, file: !7502, line: 632, type: !8019, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3169, retainedNodes: !8021)
!8019 = !DISubroutineType(types: !8020)
!8020 = !{null, !3197, !7569}
!8021 = !{!8022, !8023}
!8022 = !DILocalVariable(name: "esf", arg: 1, scope: !8018, file: !7502, line: 632, type: !3197)
!8023 = !DILocalVariable(name: "recoverable", arg: 2, scope: !8018, file: !7502, line: 632, type: !7569)
!8024 = !DILocation(line: 0, scope: !8018)
!8025 = !DILocation(line: 634, column: 15, scope: !8018)
!8026 = !DILocation(line: 636, column: 2, scope: !8027)
!8027 = distinct !DILexicalBlock(scope: !8028, file: !7502, line: 636, column: 2)
!8028 = distinct !DILexicalBlock(scope: !8029, file: !7502, line: 636, column: 2)
!8029 = distinct !DILexicalBlock(scope: !8030, file: !7502, line: 636, column: 2)
!8030 = distinct !DILexicalBlock(scope: !8018, file: !7502, line: 636, column: 2)
!8031 = !DILocation(line: 652, column: 1, scope: !8018)
!8032 = distinct !DISubprogram(name: "reserved_exception", scope: !7502, file: !7502, line: 776, type: !8033, scopeLine: 777, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3169, retainedNodes: !8035)
!8033 = !DISubroutineType(types: !8034)
!8034 = !{null, !7933, !108}
!8035 = !{!8036, !8037}
!8036 = !DILocalVariable(name: "esf", arg: 1, scope: !8032, file: !7502, line: 776, type: !7933)
!8037 = !DILocalVariable(name: "fault", arg: 2, scope: !8032, file: !7502, line: 776, type: !108)
!8038 = !DILocation(line: 0, scope: !8032)
!8039 = !DILocation(line: 780, column: 2, scope: !8040)
!8040 = distinct !DILexicalBlock(scope: !8041, file: !7502, line: 780, column: 2)
!8041 = distinct !DILexicalBlock(scope: !8042, file: !7502, line: 780, column: 2)
!8042 = distinct !DILexicalBlock(scope: !8043, file: !7502, line: 780, column: 2)
!8043 = distinct !DILexicalBlock(scope: !8032, file: !7502, line: 780, column: 2)
!8044 = !DILocation(line: 783, column: 1, scope: !8032)
!8045 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !7502, file: !7502, line: 658, type: !8046, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3169, retainedNodes: !8048)
!8046 = !DISubroutineType(types: !8047)
!8047 = !{!422, !3197}
!8048 = !{!8049, !8050, !8051}
!8049 = !DILocalVariable(name: "esf", arg: 1, scope: !8045, file: !7502, line: 658, type: !3197)
!8050 = !DILocalVariable(name: "ret_addr", scope: !8045, file: !7502, line: 660, type: !3240)
!8051 = !DILocalVariable(name: "fault_insn", scope: !8045, file: !7502, line: 686, type: !168)
!8052 = !DILocation(line: 0, scope: !8045)
!8053 = !DILocation(line: 660, column: 46, scope: !8045)
!8054 = !DILocation(line: 660, column: 23, scope: !8045)
!8055 = !DILocation(line: 682, column: 11, scope: !8045)
!8056 = !DILocation(line: 271, column: 3, scope: !8057, inlinedAt: !8058)
!8057 = distinct !DISubprogram(name: "__DSB", scope: !7201, file: !7201, line: 269, type: !3551, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3169, retainedNodes: !437)
!8058 = distinct !DILocation(line: 683, column: 2, scope: !8045)
!8059 = !{i64 4136541}
!8060 = !DILocation(line: 260, column: 3, scope: !8061, inlinedAt: !8062)
!8061 = distinct !DISubprogram(name: "__ISB", scope: !7201, file: !7201, line: 258, type: !3551, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3169, retainedNodes: !437)
!8062 = distinct !DILocation(line: 684, column: 2, scope: !8045)
!8063 = !{i64 4136258}
!8064 = !DILocation(line: 686, column: 35, scope: !8045)
!8065 = !DILocation(line: 686, column: 24, scope: !8045)
!8066 = !DILocation(line: 688, column: 11, scope: !8045)
!8067 = !DILocation(line: 271, column: 3, scope: !8057, inlinedAt: !8068)
!8068 = distinct !DILocation(line: 689, column: 2, scope: !8045)
!8069 = !DILocation(line: 260, column: 3, scope: !8061, inlinedAt: !8070)
!8070 = distinct !DILocation(line: 690, column: 2, scope: !8045)
!8071 = !DILocation(line: 693, column: 45, scope: !8072)
!8072 = distinct !DILexicalBlock(scope: !8045, file: !7502, line: 693, column: 6)
!8073 = !DILocation(line: 699, column: 1, scope: !8045)
!8074 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !7502, file: !7502, line: 1107, type: !3551, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3169, retainedNodes: !437)
!8075 = !DILocation(line: 1111, column: 11, scope: !8074)
!8076 = !DILocation(line: 1136, column: 1, scope: !8074)
!8077 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !8078, file: !8078, line: 26, type: !3551, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3241, retainedNodes: !8079)
!8078 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8079 = !{!8080}
!8080 = !DILocalVariable(name: "irq", scope: !8077, file: !8078, line: 28, type: !108)
!8081 = !DILocation(line: 0, scope: !8077)
!8082 = !DILocation(line: 30, column: 2, scope: !8083)
!8083 = distinct !DILexicalBlock(scope: !8077, file: !8078, line: 30, column: 2)
!8084 = !DILocation(line: 31, column: 3, scope: !8085)
!8085 = distinct !DILexicalBlock(scope: !8086, file: !8078, line: 30, column: 39)
!8086 = distinct !DILexicalBlock(scope: !8083, file: !8078, line: 30, column: 2)
!8087 = !DILocation(line: 30, column: 35, scope: !8086)
!8088 = !DILocation(line: 30, column: 13, scope: !8086)
!8089 = distinct !{!8089, !8082, !8090}
!8090 = !DILocation(line: 32, column: 2, scope: !8083)
!8091 = !DILocation(line: 33, column: 1, scope: !8077)
!8092 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !802, file: !802, line: 1814, type: !7235, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3241, retainedNodes: !8093)
!8093 = !{!8094, !8095}
!8094 = !DILocalVariable(name: "IRQn", arg: 1, scope: !8092, file: !802, line: 1814, type: !1193)
!8095 = !DILocalVariable(name: "priority", arg: 2, scope: !8092, file: !802, line: 1814, type: !113)
!8096 = !DILocation(line: 0, scope: !8092)
!8097 = !DILocation(line: 1816, column: 7, scope: !8092)
!8098 = !DILocation(line: 0, scope: !8099)
!8099 = distinct !DILexicalBlock(scope: !8092, file: !802, line: 1816, column: 7)
!8100 = !DILocation(line: 1824, column: 1, scope: !8092)
!8101 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !8102, file: !8102, line: 27, type: !8103, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3286, retainedNodes: !8206)
!8102 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8103 = !DISubroutineType(types: !8104)
!8104 = !{null, !8105}
!8105 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !659, line: 347, baseType: !8106)
!8106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8107, size: 32)
!8107 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !659, line: 245, size: 1024, elements: !8108)
!8108 = !{!8109, !8167, !8179, !8180, !8181, !8182, !8188, !8201}
!8109 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !8107, file: !659, line: 247, baseType: !8110, size: 384)
!8110 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !659, line: 57, size: 384, elements: !8111)
!8111 = !{!8112, !8136, !8143, !8144, !8145, !8154, !8155, !8156}
!8112 = !DIDerivedType(tag: DW_TAG_member, scope: !8110, file: !659, line: 60, baseType: !8113, size: 64)
!8113 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8110, file: !659, line: 60, size: 64, elements: !8114)
!8114 = !{!8115, !8130}
!8115 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !8113, file: !659, line: 61, baseType: !8116, size: 64)
!8116 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !367, line: 49, baseType: !8117)
!8117 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !367, line: 37, size: 64, elements: !8118)
!8118 = !{!8119, !8125}
!8119 = !DIDerivedType(tag: DW_TAG_member, scope: !8117, file: !367, line: 38, baseType: !8120, size: 32)
!8120 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8117, file: !367, line: 38, size: 32, elements: !8121)
!8121 = !{!8122, !8124}
!8122 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !8120, file: !367, line: 39, baseType: !8123, size: 32)
!8123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8117, size: 32)
!8124 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !8120, file: !367, line: 40, baseType: !8123, size: 32)
!8125 = !DIDerivedType(tag: DW_TAG_member, scope: !8117, file: !367, line: 42, baseType: !8126, size: 32, offset: 32)
!8126 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8117, file: !367, line: 42, size: 32, elements: !8127)
!8127 = !{!8128, !8129}
!8128 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !8126, file: !367, line: 43, baseType: !8123, size: 32)
!8129 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !8126, file: !367, line: 44, baseType: !8123, size: 32)
!8130 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !8113, file: !659, line: 62, baseType: !8131, size: 64)
!8131 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !684, line: 49, size: 64, elements: !8132)
!8132 = !{!8133}
!8133 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !8131, file: !684, line: 50, baseType: !8134, size: 64)
!8134 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8135, size: 64, elements: !689)
!8135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8131, size: 32)
!8136 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !8110, file: !659, line: 68, baseType: !8137, size: 32, offset: 64)
!8137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8138, size: 32)
!8138 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !363, line: 233, baseType: !8139)
!8139 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !363, line: 231, size: 64, elements: !8140)
!8140 = !{!8141}
!8141 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !8139, file: !363, line: 232, baseType: !8142, size: 64)
!8142 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !367, line: 48, baseType: !8117)
!8143 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !8110, file: !659, line: 71, baseType: !164, size: 8, offset: 96)
!8144 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !8110, file: !659, line: 74, baseType: !164, size: 8, offset: 104)
!8145 = !DIDerivedType(tag: DW_TAG_member, scope: !8110, file: !659, line: 90, baseType: !8146, size: 16, offset: 112)
!8146 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8110, file: !659, line: 90, size: 16, elements: !8147)
!8147 = !{!8148, !8153}
!8148 = !DIDerivedType(tag: DW_TAG_member, scope: !8146, file: !659, line: 91, baseType: !8149, size: 16)
!8149 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8146, file: !659, line: 91, size: 16, elements: !8150)
!8150 = !{!8151, !8152}
!8151 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !8149, file: !659, line: 96, baseType: !707, size: 8)
!8152 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !8149, file: !659, line: 97, baseType: !164, size: 8, offset: 8)
!8153 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !8146, file: !659, line: 100, baseType: !168, size: 16)
!8154 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !8110, file: !659, line: 107, baseType: !113, size: 32, offset: 128)
!8155 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !8110, file: !659, line: 127, baseType: !104, size: 32, offset: 160)
!8156 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !8110, file: !659, line: 131, baseType: !8157, size: 192, offset: 192)
!8157 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !363, line: 244, size: 192, elements: !8158)
!8158 = !{!8159, !8160, !8166}
!8159 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !8157, file: !363, line: 245, baseType: !8116, size: 64)
!8160 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !8157, file: !363, line: 246, baseType: !8161, size: 32, offset: 64)
!8161 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !363, line: 242, baseType: !8162)
!8162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8163, size: 32)
!8163 = !DISubroutineType(types: !8164)
!8164 = !{null, !8165}
!8165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8157, size: 32)
!8166 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !8157, file: !363, line: 249, baseType: !111, size: 64, offset: 128)
!8167 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !8107, file: !659, line: 250, baseType: !8168, size: 288, offset: 384)
!8168 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !726, line: 25, size: 288, elements: !8169)
!8169 = !{!8170, !8171, !8172, !8173, !8174, !8175, !8176, !8177, !8178}
!8170 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !8168, file: !726, line: 26, baseType: !113, size: 32)
!8171 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !8168, file: !726, line: 27, baseType: !113, size: 32, offset: 32)
!8172 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !8168, file: !726, line: 28, baseType: !113, size: 32, offset: 64)
!8173 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !8168, file: !726, line: 29, baseType: !113, size: 32, offset: 96)
!8174 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !8168, file: !726, line: 30, baseType: !113, size: 32, offset: 128)
!8175 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !8168, file: !726, line: 31, baseType: !113, size: 32, offset: 160)
!8176 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !8168, file: !726, line: 32, baseType: !113, size: 32, offset: 192)
!8177 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !8168, file: !726, line: 33, baseType: !113, size: 32, offset: 224)
!8178 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !8168, file: !726, line: 34, baseType: !113, size: 32, offset: 256)
!8179 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !8107, file: !659, line: 253, baseType: !104, size: 32, offset: 672)
!8180 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !8107, file: !659, line: 256, baseType: !8138, size: 64, offset: 704)
!8181 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !8107, file: !659, line: 294, baseType: !108, size: 32, offset: 768)
!8182 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !8107, file: !659, line: 300, baseType: !8183, size: 96, offset: 800)
!8183 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !659, line: 149, size: 96, elements: !8184)
!8184 = !{!8185, !8186, !8187}
!8185 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !8183, file: !659, line: 153, baseType: !22, size: 32)
!8186 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !8183, file: !659, line: 162, baseType: !439, size: 32, offset: 32)
!8187 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !8183, file: !659, line: 168, baseType: !439, size: 32, offset: 64)
!8188 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !8107, file: !659, line: 325, baseType: !8189, size: 32, offset: 896)
!8189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8190, size: 32)
!8190 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !359, line: 5073, size: 160, elements: !8191)
!8191 = !{!8192, !8198, !8199}
!8192 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !8190, file: !359, line: 5074, baseType: !8193, size: 96)
!8193 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !752, line: 56, size: 96, elements: !8194)
!8194 = !{!8195, !8196, !8197}
!8195 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !8193, file: !752, line: 57, baseType: !755, size: 32)
!8196 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !8193, file: !752, line: 58, baseType: !104, size: 32, offset: 32)
!8197 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !8193, file: !752, line: 59, baseType: !439, size: 32, offset: 64)
!8198 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !8190, file: !359, line: 5075, baseType: !8138, size: 64, offset: 96)
!8199 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !8190, file: !359, line: 5076, baseType: !8200, offset: 160)
!8200 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !436, line: 43, elements: !437)
!8201 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !8107, file: !659, line: 343, baseType: !8202, size: 64, offset: 928)
!8202 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !726, line: 60, size: 64, elements: !8203)
!8203 = !{!8204, !8205}
!8204 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !8202, file: !726, line: 63, baseType: !113, size: 32)
!8205 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !8202, file: !726, line: 66, baseType: !113, size: 32, offset: 32)
!8206 = !{!8207}
!8207 = !DILocalVariable(name: "thread", arg: 1, scope: !8101, file: !8102, line: 27, type: !8105)
!8208 = !DILocation(line: 0, scope: !8101)
!8209 = !DILocation(line: 29, column: 6, scope: !8210)
!8210 = distinct !DILexicalBlock(scope: !8101, file: !8102, line: 29, column: 6)
!8211 = !DILocation(line: 29, column: 15, scope: !8210)
!8212 = !DILocation(line: 29, column: 6, scope: !8101)
!8213 = !DILocation(line: 1031, column: 3, scope: !8214, inlinedAt: !8217)
!8214 = distinct !DISubprogram(name: "__get_IPSR", scope: !7201, file: !7201, line: 1027, type: !7282, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3286, retainedNodes: !8215)
!8215 = !{!8216}
!8216 = !DILocalVariable(name: "result", scope: !8214, file: !7201, line: 1029, type: !113)
!8217 = distinct !DILocation(line: 48, column: 10, scope: !8218, inlinedAt: !8222)
!8218 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8219, file: !8219, line: 46, type: !8220, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3286, retainedNodes: !437)
!8219 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8220 = !DISubroutineType(types: !8221)
!8221 = !{!422}
!8222 = distinct !DILocation(line: 30, column: 7, scope: !8223)
!8223 = distinct !DILexicalBlock(scope: !8224, file: !8102, line: 30, column: 7)
!8224 = distinct !DILexicalBlock(scope: !8210, file: !8102, line: 29, column: 26)
!8225 = !{i64 4125389}
!8226 = !DILocation(line: 0, scope: !8214, inlinedAt: !8217)
!8227 = !DILocation(line: 48, column: 9, scope: !8218, inlinedAt: !8222)
!8228 = !DILocation(line: 30, column: 7, scope: !8224)
!8229 = !DILocation(line: 42, column: 14, scope: !8230)
!8230 = distinct !DILexicalBlock(scope: !8223, file: !8102, line: 30, column: 25)
!8231 = !DILocation(line: 48, column: 15, scope: !8230)
!8232 = !DILocation(line: 49, column: 3, scope: !8230)
!8233 = !DILocation(line: 52, column: 2, scope: !8101)
!8234 = !DILocation(line: 53, column: 1, scope: !8101)
!8235 = distinct !DISubprogram(name: "z_arm_configure_static_mpu_regions", scope: !654, file: !654, line: 127, type: !3551, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !647, retainedNodes: !437)
!8236 = !DILocation(line: 134, column: 2, scope: !8235)
!8237 = !DILocation(line: 156, column: 1, scope: !8235)
!8238 = !DILocation(line: 0, scope: !653)
!8239 = !DILocation(line: 289, column: 36, scope: !8240)
!8240 = distinct !DILexicalBlock(scope: !653, file: !654, line: 285, column: 2)
!8241 = !DILocation(line: 289, column: 42, scope: !8240)
!8242 = !DILocation(line: 300, column: 36, scope: !653)
!8243 = !DILocation(line: 301, column: 35, scope: !653)
!8244 = !DILocation(line: 302, column: 37, scope: !653)
!8245 = !DILocation(line: 311, column: 2, scope: !653)
!8246 = !DILocation(line: 316, column: 1, scope: !653)
!8247 = distinct !DISubprogram(name: "arm_core_mpu_enable", scope: !830, file: !830, line: 180, type: !3551, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !797, retainedNodes: !437)
!8248 = !DILocation(line: 188, column: 12, scope: !8247)
!8249 = !DILocation(line: 271, column: 3, scope: !8250, inlinedAt: !8251)
!8250 = distinct !DISubprogram(name: "__DSB", scope: !7201, file: !7201, line: 269, type: !3551, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !797, retainedNodes: !437)
!8251 = distinct !DILocation(line: 192, column: 2, scope: !8247)
!8252 = !{i64 4319960}
!8253 = !DILocation(line: 260, column: 3, scope: !8254, inlinedAt: !8255)
!8254 = distinct !DISubprogram(name: "__ISB", scope: !7201, file: !7201, line: 258, type: !3551, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !797, retainedNodes: !437)
!8255 = distinct !DILocation(line: 193, column: 2, scope: !8247)
!8256 = !{i64 4319677}
!8257 = !DILocation(line: 194, column: 1, scope: !8247)
!8258 = distinct !DISubprogram(name: "arm_core_mpu_disable", scope: !830, file: !830, line: 199, type: !3551, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !797, retainedNodes: !437)
!8259 = !DILocation(line: 282, column: 3, scope: !8260, inlinedAt: !8261)
!8260 = distinct !DISubprogram(name: "__DMB", scope: !7201, file: !7201, line: 280, type: !3551, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !797, retainedNodes: !437)
!8261 = distinct !DILocation(line: 202, column: 2, scope: !8258)
!8262 = !{i64 4320236}
!8263 = !DILocation(line: 205, column: 12, scope: !8258)
!8264 = !DILocation(line: 206, column: 1, scope: !8258)
!8265 = distinct !DISubprogram(name: "arm_core_mpu_configure_static_mpu_regions", scope: !830, file: !830, line: 275, type: !8266, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !797, retainedNodes: !8279)
!8266 = !DISubroutineType(types: !8267)
!8267 = !{null, !8268, !2289, !7469, !7469}
!8268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8269, size: 32)
!8269 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8270)
!8270 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !774, line: 52, size: 96, elements: !8271)
!8271 = !{!8272, !8273, !8274}
!8272 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !8270, file: !774, line: 53, baseType: !22, size: 32)
!8273 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !8270, file: !774, line: 54, baseType: !439, size: 32, offset: 32)
!8274 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !8270, file: !774, line: 55, baseType: !8275, size: 32, offset: 64)
!8275 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !780, line: 151, baseType: !8276)
!8276 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !780, line: 149, size: 32, elements: !8277)
!8277 = !{!8278}
!8278 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !8276, file: !780, line: 150, baseType: !113, size: 32)
!8279 = !{!8280, !8281, !8282, !8283}
!8280 = !DILocalVariable(name: "static_regions", arg: 1, scope: !8265, file: !830, line: 276, type: !8268)
!8281 = !DILocalVariable(name: "regions_num", arg: 2, scope: !8265, file: !830, line: 276, type: !2289)
!8282 = !DILocalVariable(name: "background_area_start", arg: 3, scope: !8265, file: !830, line: 277, type: !7469)
!8283 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !8265, file: !830, line: 277, type: !7469)
!8284 = !DILocation(line: 0, scope: !8265)
!8285 = !DILocation(line: 279, column: 6, scope: !8286)
!8286 = distinct !DILexicalBlock(scope: !8265, file: !830, line: 279, column: 6)
!8287 = !DILocation(line: 285, column: 1, scope: !8265)
!8288 = distinct !DISubprogram(name: "mpu_configure_static_mpu_regions", scope: !8289, file: !8289, line: 220, type: !8290, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !797, retainedNodes: !8292)
!8289 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu_v7_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8290 = !DISubroutineType(types: !8291)
!8291 = !{!108, !8268, !2289, !7469, !7469}
!8292 = !{!8293, !8294, !8295, !8296, !8297}
!8293 = !DILocalVariable(name: "static_regions", arg: 1, scope: !8288, file: !8289, line: 221, type: !8268)
!8294 = !DILocalVariable(name: "regions_num", arg: 2, scope: !8288, file: !8289, line: 221, type: !2289)
!8295 = !DILocalVariable(name: "background_area_base", arg: 3, scope: !8288, file: !8289, line: 222, type: !7469)
!8296 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !8288, file: !8289, line: 223, type: !7469)
!8297 = !DILocalVariable(name: "mpu_reg_index", scope: !8288, file: !8289, line: 225, type: !108)
!8298 = !DILocation(line: 0, scope: !8288)
!8299 = !DILocation(line: 225, column: 22, scope: !8288)
!8300 = !DILocation(line: 233, column: 18, scope: !8288)
!8301 = !DILocation(line: 236, column: 23, scope: !8288)
!8302 = !DILocation(line: 236, column: 21, scope: !8288)
!8303 = !DILocation(line: 238, column: 2, scope: !8288)
!8304 = distinct !DISubprogram(name: "mpu_configure_regions", scope: !830, file: !830, line: 105, type: !8305, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !797, retainedNodes: !8307)
!8305 = !DISubroutineType(types: !8306)
!8306 = !{!108, !8268, !164, !164, !422}
!8307 = !{!8308, !8309, !8310, !8311, !8312, !8313}
!8308 = !DILocalVariable(name: "regions", arg: 1, scope: !8304, file: !830, line: 106, type: !8268)
!8309 = !DILocalVariable(name: "regions_num", arg: 2, scope: !8304, file: !830, line: 106, type: !164)
!8310 = !DILocalVariable(name: "start_reg_index", arg: 3, scope: !8304, file: !830, line: 106, type: !164)
!8311 = !DILocalVariable(name: "do_sanity_check", arg: 4, scope: !8304, file: !830, line: 107, type: !422)
!8312 = !DILocalVariable(name: "i", scope: !8304, file: !830, line: 109, type: !108)
!8313 = !DILocalVariable(name: "reg_index", scope: !8304, file: !830, line: 110, type: !108)
!8314 = !DILocation(line: 0, scope: !8304)
!8315 = !DILocation(line: 110, column: 18, scope: !8304)
!8316 = !DILocation(line: 112, column: 16, scope: !8317)
!8317 = distinct !DILexicalBlock(scope: !8318, file: !830, line: 112, column: 2)
!8318 = distinct !DILexicalBlock(scope: !8304, file: !830, line: 112, column: 2)
!8319 = !DILocation(line: 112, column: 2, scope: !8318)
!8320 = !DILocation(line: 113, column: 7, scope: !8321)
!8321 = distinct !DILexicalBlock(scope: !8322, file: !830, line: 113, column: 7)
!8322 = distinct !DILexicalBlock(scope: !8317, file: !830, line: 112, column: 36)
!8323 = !DILocation(line: 113, column: 18, scope: !8321)
!8324 = !DILocation(line: 113, column: 23, scope: !8321)
!8325 = !DILocation(line: 113, column: 7, scope: !8322)
!8326 = !DILocation(line: 118, column: 23, scope: !8327)
!8327 = distinct !DILexicalBlock(scope: !8322, file: !830, line: 118, column: 7)
!8328 = !DILocation(line: 119, column: 7, scope: !8327)
!8329 = !DILocation(line: 118, column: 7, scope: !8322)
!8330 = !DILocation(line: 120, column: 4, scope: !8331)
!8331 = distinct !DILexicalBlock(scope: !8332, file: !830, line: 120, column: 4)
!8332 = distinct !DILexicalBlock(scope: !8333, file: !830, line: 120, column: 4)
!8333 = distinct !DILexicalBlock(scope: !8334, file: !830, line: 120, column: 4)
!8334 = distinct !DILexicalBlock(scope: !8335, file: !830, line: 120, column: 4)
!8335 = distinct !DILexicalBlock(scope: !8327, file: !830, line: 119, column: 45)
!8336 = !DILocation(line: 121, column: 4, scope: !8335)
!8337 = !DILocation(line: 124, column: 36, scope: !8322)
!8338 = !DILocation(line: 124, column: 15, scope: !8322)
!8339 = !DILocation(line: 126, column: 17, scope: !8340)
!8340 = distinct !DILexicalBlock(scope: !8322, file: !830, line: 126, column: 7)
!8341 = !DILocation(line: 126, column: 7, scope: !8322)
!8342 = !DILocation(line: 131, column: 12, scope: !8322)
!8343 = !DILocation(line: 132, column: 2, scope: !8322)
!8344 = !DILocation(line: 112, column: 32, scope: !8317)
!8345 = distinct !{!8345, !8319, !8346}
!8346 = !DILocation(line: 132, column: 2, scope: !8318)
!8347 = !DILocation(line: 135, column: 1, scope: !8304)
!8348 = distinct !DISubprogram(name: "mpu_partition_is_valid", scope: !8289, file: !8289, line: 63, type: !8349, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !797, retainedNodes: !8351)
!8349 = !DISubroutineType(types: !8350)
!8350 = !{!108, !8268}
!8351 = !{!8352, !8353}
!8352 = !DILocalVariable(name: "part", arg: 1, scope: !8348, file: !8289, line: 63, type: !8268)
!8353 = !DILocalVariable(name: "partition_is_valid", scope: !8348, file: !8289, line: 70, type: !108)
!8354 = !DILocation(line: 0, scope: !8348)
!8355 = !DILocation(line: 71, column: 11, scope: !8348)
!8356 = !DILocation(line: 71, column: 37, scope: !8348)
!8357 = !{i32 0, i32 33}
!8358 = !DILocation(line: 72, column: 3, scope: !8348)
!8359 = !DILocation(line: 71, column: 30, scope: !8348)
!8360 = !DILocation(line: 75, column: 11, scope: !8348)
!8361 = !DILocation(line: 75, column: 17, scope: !8348)
!8362 = !DILocation(line: 75, column: 38, scope: !8348)
!8363 = !DILocation(line: 77, column: 2, scope: !8348)
!8364 = distinct !DISubprogram(name: "mpu_configure_region", scope: !830, file: !830, line: 79, type: !8365, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !797, retainedNodes: !8367)
!8365 = !DISubroutineType(types: !8366)
!8366 = !{!108, !2289, !8268}
!8367 = !{!8368, !8369, !8370}
!8368 = !DILocalVariable(name: "index", arg: 1, scope: !8364, file: !830, line: 79, type: !2289)
!8369 = !DILocalVariable(name: "new_region", arg: 2, scope: !8364, file: !830, line: 80, type: !8268)
!8370 = !DILocalVariable(name: "region_conf", scope: !8364, file: !830, line: 82, type: !819)
!8371 = !DILocation(line: 0, scope: !8364)
!8372 = !DILocation(line: 82, column: 2, scope: !8364)
!8373 = !DILocation(line: 82, column: 24, scope: !8364)
!8374 = !DILocation(line: 87, column: 33, scope: !8364)
!8375 = !DILocation(line: 87, column: 14, scope: !8364)
!8376 = !DILocation(line: 87, column: 19, scope: !8364)
!8377 = !DILocation(line: 91, column: 55, scope: !8364)
!8378 = !DILocation(line: 92, column: 16, scope: !8364)
!8379 = !DILocation(line: 92, column: 53, scope: !8364)
!8380 = !DILocation(line: 91, column: 2, scope: !8364)
!8381 = !DILocation(line: 95, column: 9, scope: !8364)
!8382 = !DILocation(line: 97, column: 1, scope: !8364)
!8383 = !DILocation(line: 95, column: 2, scope: !8364)
!8384 = distinct !DISubprogram(name: "get_region_attr_from_mpu_partition_info", scope: !8289, file: !8289, line: 113, type: !8385, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !797, retainedNodes: !8390)
!8385 = !DISubroutineType(types: !8386)
!8386 = !{null, !8387, !8388, !113, !113}
!8387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !825, size: 32)
!8388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8389, size: 32)
!8389 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8275)
!8390 = !{!8391, !8392, !8393, !8394}
!8391 = !DILocalVariable(name: "p_attr", arg: 1, scope: !8384, file: !8289, line: 114, type: !8387)
!8392 = !DILocalVariable(name: "attr", arg: 2, scope: !8384, file: !8289, line: 115, type: !8388)
!8393 = !DILocalVariable(name: "base", arg: 3, scope: !8384, file: !8289, line: 115, type: !113)
!8394 = !DILocalVariable(name: "size", arg: 4, scope: !8384, file: !8289, line: 115, type: !113)
!8395 = !DILocation(line: 0, scope: !8384)
!8396 = !DILocation(line: 127, column: 23, scope: !8384)
!8397 = !DILocation(line: 127, column: 35, scope: !8384)
!8398 = !DILocation(line: 127, column: 33, scope: !8384)
!8399 = !DILocation(line: 127, column: 10, scope: !8384)
!8400 = !DILocation(line: 127, column: 15, scope: !8384)
!8401 = !DILocation(line: 129, column: 1, scope: !8384)
!8402 = distinct !DISubprogram(name: "region_allocate_and_init", scope: !830, file: !830, line: 57, type: !8403, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !797, retainedNodes: !8405)
!8403 = !DISubroutineType(types: !8404)
!8404 = !{!108, !2289, !817}
!8405 = !{!8406, !8407}
!8406 = !DILocalVariable(name: "index", arg: 1, scope: !8402, file: !830, line: 57, type: !2289)
!8407 = !DILocalVariable(name: "region_conf", arg: 2, scope: !8402, file: !830, line: 58, type: !817)
!8408 = !DILocation(line: 0, scope: !8402)
!8409 = !DILocation(line: 61, column: 6, scope: !8410)
!8410 = distinct !DILexicalBlock(scope: !8402, file: !830, line: 61, column: 6)
!8411 = !DILocation(line: 61, column: 12, scope: !8410)
!8412 = !DILocation(line: 61, column: 6, scope: !8402)
!8413 = !DILocation(line: 64, column: 3, scope: !8414)
!8414 = distinct !DILexicalBlock(scope: !8415, file: !830, line: 64, column: 3)
!8415 = distinct !DILexicalBlock(scope: !8416, file: !830, line: 64, column: 3)
!8416 = distinct !DILexicalBlock(scope: !8417, file: !830, line: 64, column: 3)
!8417 = distinct !DILexicalBlock(scope: !8418, file: !830, line: 64, column: 3)
!8418 = distinct !DILexicalBlock(scope: !8410, file: !830, line: 61, column: 40)
!8419 = !DILocation(line: 65, column: 3, scope: !8418)
!8420 = !DILocation(line: 71, column: 2, scope: !8402)
!8421 = !DILocation(line: 73, column: 2, scope: !8402)
!8422 = !DILocation(line: 74, column: 1, scope: !8402)
!8423 = distinct !DISubprogram(name: "region_init", scope: !8289, file: !8289, line: 29, type: !8424, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !797, retainedNodes: !8426)
!8424 = !DISubroutineType(types: !8425)
!8425 = !{null, !7469, !817}
!8426 = !{!8427, !8428}
!8427 = !DILocalVariable(name: "index", arg: 1, scope: !8423, file: !8289, line: 29, type: !7469)
!8428 = !DILocalVariable(name: "region_conf", arg: 2, scope: !8423, file: !8289, line: 30, type: !817)
!8429 = !DILocation(line: 0, scope: !8423)
!8430 = !DILocation(line: 33, column: 2, scope: !8423)
!8431 = !DILocation(line: 47, column: 28, scope: !8423)
!8432 = !DILocation(line: 47, column: 33, scope: !8423)
!8433 = !DILocation(line: 48, column: 26, scope: !8423)
!8434 = !DILocation(line: 47, column: 12, scope: !8423)
!8435 = !DILocation(line: 49, column: 32, scope: !8423)
!8436 = !DILocation(line: 49, column: 37, scope: !8423)
!8437 = !DILocation(line: 49, column: 12, scope: !8423)
!8438 = !DILocation(line: 53, column: 1, scope: !8423)
!8439 = distinct !DISubprogram(name: "set_region_number", scope: !8440, file: !8440, line: 32, type: !7292, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !797, retainedNodes: !8441)
!8440 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/cortex_m/arm_mpu_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8441 = !{!8442}
!8442 = !DILocalVariable(name: "index", arg: 1, scope: !8439, file: !8440, line: 32, type: !113)
!8443 = !DILocation(line: 0, scope: !8439)
!8444 = !DILocation(line: 34, column: 11, scope: !8439)
!8445 = !DILocation(line: 35, column: 1, scope: !8439)
!8446 = distinct !DISubprogram(name: "size_to_mpu_rasr_size", scope: !8289, file: !8289, line: 88, type: !8447, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !797, retainedNodes: !8449)
!8447 = !DISubroutineType(types: !8448)
!8448 = !{!113, !113}
!8449 = !{!8450}
!8450 = !DILocalVariable(name: "size", arg: 1, scope: !8446, file: !8289, line: 88, type: !113)
!8451 = !DILocation(line: 0, scope: !8446)
!8452 = !DILocation(line: 91, column: 11, scope: !8453)
!8453 = distinct !DILexicalBlock(scope: !8446, file: !8289, line: 91, column: 6)
!8454 = !DILocation(line: 91, column: 6, scope: !8446)
!8455 = !DILocation(line: 100, column: 11, scope: !8456)
!8456 = distinct !DILexicalBlock(scope: !8446, file: !8289, line: 100, column: 6)
!8457 = !DILocation(line: 100, column: 6, scope: !8446)
!8458 = !DILocation(line: 104, column: 35, scope: !8446)
!8459 = !DILocation(line: 104, column: 16, scope: !8446)
!8460 = !DILocation(line: 104, column: 50, scope: !8446)
!8461 = !DILocation(line: 104, column: 72, scope: !8446)
!8462 = !DILocation(line: 104, column: 2, scope: !8446)
!8463 = !DILocation(line: 106, column: 1, scope: !8446)
!8464 = distinct !DISubprogram(name: "arm_core_mpu_configure_dynamic_mpu_regions", scope: !830, file: !830, line: 307, type: !8465, scopeLine: 309, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !797, retainedNodes: !8467)
!8465 = !DISubroutineType(types: !8466)
!8466 = !{null, !8268, !164}
!8467 = !{!8468, !8469}
!8468 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !8464, file: !830, line: 308, type: !8268)
!8469 = !DILocalVariable(name: "regions_num", arg: 2, scope: !8464, file: !830, line: 308, type: !164)
!8470 = !DILocation(line: 0, scope: !8464)
!8471 = !DILocation(line: 310, column: 6, scope: !8472)
!8472 = distinct !DILexicalBlock(scope: !8464, file: !830, line: 310, column: 6)
!8473 = !DILocation(line: 316, column: 1, scope: !8464)
!8474 = distinct !DISubprogram(name: "mpu_configure_dynamic_mpu_regions", scope: !8289, file: !8289, line: 249, type: !8475, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !797, retainedNodes: !8477)
!8475 = !DISubroutineType(types: !8476)
!8476 = !{!108, !8268, !164}
!8477 = !{!8478, !8479, !8480, !8481}
!8478 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !8474, file: !8289, line: 250, type: !8268)
!8479 = !DILocalVariable(name: "regions_num", arg: 2, scope: !8474, file: !8289, line: 250, type: !164)
!8480 = !DILocalVariable(name: "mpu_reg_index", scope: !8474, file: !8289, line: 252, type: !108)
!8481 = !DILocalVariable(name: "i", scope: !8482, file: !8289, line: 264, type: !108)
!8482 = distinct !DILexicalBlock(scope: !8483, file: !8289, line: 264, column: 3)
!8483 = distinct !DILexicalBlock(scope: !8484, file: !8289, line: 261, column: 32)
!8484 = distinct !DILexicalBlock(scope: !8474, file: !8289, line: 261, column: 6)
!8485 = !DILocation(line: 0, scope: !8474)
!8486 = !DILocation(line: 252, column: 22, scope: !8474)
!8487 = !DILocation(line: 258, column: 18, scope: !8474)
!8488 = !DILocation(line: 261, column: 20, scope: !8484)
!8489 = !DILocation(line: 261, column: 6, scope: !8474)
!8490 = !DILocation(line: 0, scope: !8482)
!8491 = !DILocation(line: 265, column: 4, scope: !8492)
!8492 = distinct !DILexicalBlock(scope: !8493, file: !8289, line: 264, column: 59)
!8493 = distinct !DILexicalBlock(scope: !8482, file: !8289, line: 264, column: 3)
!8494 = !DILocation(line: 264, column: 55, scope: !8493)
!8495 = !DILocation(line: 264, column: 33, scope: !8493)
!8496 = !DILocation(line: 264, column: 3, scope: !8482)
!8497 = distinct !{!8497, !8496, !8498}
!8498 = !DILocation(line: 266, column: 3, scope: !8482)
!8499 = !DILocation(line: 269, column: 2, scope: !8474)
!8500 = distinct !DISubprogram(name: "ARM_MPU_ClrRegion", scope: !8501, file: !8501, line: 218, type: !7292, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !797, retainedNodes: !8502)
!8501 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/mpu_armv7.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8502 = !{!8503}
!8503 = !DILocalVariable(name: "rnr", arg: 1, scope: !8500, file: !8501, line: 218, type: !113)
!8504 = !DILocation(line: 0, scope: !8500)
!8505 = !DILocation(line: 220, column: 12, scope: !8500)
!8506 = !DILocation(line: 221, column: 13, scope: !8500)
!8507 = !DILocation(line: 222, column: 1, scope: !8500)
!8508 = distinct !DISubprogram(name: "z_arm_mpu_init", scope: !830, file: !830, line: 326, type: !8509, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !797, retainedNodes: !8511)
!8509 = !DISubroutineType(types: !8510)
!8510 = !{!108}
!8511 = !{!8512}
!8512 = !DILocalVariable(name: "r_index", scope: !8508, file: !830, line: 328, type: !113)
!8513 = !DILocation(line: 330, column: 17, scope: !8514)
!8514 = distinct !DILexicalBlock(scope: !8508, file: !830, line: 330, column: 6)
!8515 = !DILocation(line: 330, column: 29, scope: !8514)
!8516 = !DILocation(line: 330, column: 6, scope: !8508)
!8517 = !DILocation(line: 347, column: 2, scope: !8508)
!8518 = !DILocation(line: 0, scope: !8508)
!8519 = !DILocation(line: 364, column: 29, scope: !8520)
!8520 = distinct !DILexicalBlock(scope: !8521, file: !830, line: 364, column: 2)
!8521 = distinct !DILexicalBlock(scope: !8508, file: !830, line: 364, column: 2)
!8522 = !DILocation(line: 364, column: 2, scope: !8521)
!8523 = !DILocation(line: 365, column: 25, scope: !8524)
!8524 = distinct !DILexicalBlock(scope: !8520, file: !830, line: 364, column: 66)
!8525 = !DILocation(line: 365, column: 3, scope: !8524)
!8526 = !DILocation(line: 364, column: 62, scope: !8520)
!8527 = distinct !{!8527, !8522, !8528}
!8528 = !DILocation(line: 366, column: 2, scope: !8521)
!8529 = !DILocation(line: 369, column: 23, scope: !8508)
!8530 = !DILocation(line: 369, column: 21, scope: !8508)
!8531 = !DILocation(line: 372, column: 2, scope: !8508)
!8532 = !DILocation(line: 443, column: 2, scope: !8508)
!8533 = !DILocation(line: 444, column: 1, scope: !8508)
!8534 = distinct !DISubprogram(name: "strcpy", scope: !8535, file: !8535, line: 20, type: !8536, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3314, retainedNodes: !8540)
!8535 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8536 = !DISubroutineType(types: !8537)
!8537 = !{!443, !8538, !8539}
!8538 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !443)
!8539 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !105)
!8540 = !{!8541, !8542, !8543}
!8541 = !DILocalVariable(name: "d", arg: 1, scope: !8534, file: !8535, line: 20, type: !8538)
!8542 = !DILocalVariable(name: "s", arg: 2, scope: !8534, file: !8535, line: 20, type: !8539)
!8543 = !DILocalVariable(name: "dest", scope: !8534, file: !8535, line: 22, type: !443)
!8544 = !DILocation(line: 0, scope: !8534)
!8545 = !DILocation(line: 24, column: 9, scope: !8534)
!8546 = !DILocation(line: 24, column: 12, scope: !8534)
!8547 = !DILocation(line: 24, column: 2, scope: !8534)
!8548 = !DILocation(line: 25, column: 6, scope: !8549)
!8549 = distinct !DILexicalBlock(scope: !8534, file: !8535, line: 24, column: 21)
!8550 = !DILocation(line: 26, column: 4, scope: !8549)
!8551 = !DILocation(line: 27, column: 4, scope: !8549)
!8552 = distinct !{!8552, !8547, !8553}
!8553 = !DILocation(line: 28, column: 2, scope: !8534)
!8554 = !DILocation(line: 30, column: 5, scope: !8534)
!8555 = !DILocation(line: 32, column: 2, scope: !8534)
!8556 = distinct !DISubprogram(name: "strncpy", scope: !8535, file: !8535, line: 42, type: !8557, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3314, retainedNodes: !8559)
!8557 = !DISubroutineType(types: !8558)
!8558 = !{!443, !8538, !8539, !439}
!8559 = !{!8560, !8561, !8562, !8563}
!8560 = !DILocalVariable(name: "d", arg: 1, scope: !8556, file: !8535, line: 42, type: !8538)
!8561 = !DILocalVariable(name: "s", arg: 2, scope: !8556, file: !8535, line: 42, type: !8539)
!8562 = !DILocalVariable(name: "n", arg: 3, scope: !8556, file: !8535, line: 42, type: !439)
!8563 = !DILocalVariable(name: "dest", scope: !8556, file: !8535, line: 44, type: !443)
!8564 = !DILocation(line: 0, scope: !8556)
!8565 = !DILocation(line: 46, column: 12, scope: !8556)
!8566 = !DILocation(line: 46, column: 17, scope: !8556)
!8567 = !DILocation(line: 46, column: 20, scope: !8556)
!8568 = !DILocation(line: 46, column: 23, scope: !8556)
!8569 = !DILocation(line: 46, column: 2, scope: !8556)
!8570 = !DILocation(line: 47, column: 6, scope: !8571)
!8571 = distinct !DILexicalBlock(scope: !8556, file: !8535, line: 46, column: 32)
!8572 = !DILocation(line: 48, column: 4, scope: !8571)
!8573 = !DILocation(line: 49, column: 4, scope: !8571)
!8574 = !DILocation(line: 50, column: 4, scope: !8571)
!8575 = distinct !{!8575, !8569, !8576}
!8576 = !DILocation(line: 51, column: 2, scope: !8556)
!8577 = !DILocation(line: 54, column: 6, scope: !8578)
!8578 = distinct !DILexicalBlock(scope: !8556, file: !8535, line: 53, column: 16)
!8579 = !DILocation(line: 55, column: 4, scope: !8578)
!8580 = !DILocation(line: 56, column: 4, scope: !8578)
!8581 = !DILocation(line: 53, column: 11, scope: !8556)
!8582 = !DILocation(line: 53, column: 2, scope: !8556)
!8583 = distinct !{!8583, !8582, !8584}
!8584 = !DILocation(line: 57, column: 2, scope: !8556)
!8585 = !DILocation(line: 59, column: 2, scope: !8556)
!8586 = distinct !DISubprogram(name: "strchr", scope: !8535, file: !8535, line: 69, type: !8587, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3314, retainedNodes: !8589)
!8587 = !DISubroutineType(types: !8588)
!8588 = !{!443, !105, !108}
!8589 = !{!8590, !8591, !8592}
!8590 = !DILocalVariable(name: "s", arg: 1, scope: !8586, file: !8535, line: 69, type: !105)
!8591 = !DILocalVariable(name: "c", arg: 2, scope: !8586, file: !8535, line: 69, type: !108)
!8592 = !DILocalVariable(name: "tmp", scope: !8586, file: !8535, line: 71, type: !107)
!8593 = !DILocation(line: 0, scope: !8586)
!8594 = !DILocation(line: 73, column: 2, scope: !8586)
!8595 = !DILocation(line: 73, column: 10, scope: !8586)
!8596 = !DILocation(line: 73, column: 13, scope: !8586)
!8597 = !DILocation(line: 73, column: 21, scope: !8586)
!8598 = !DILocation(line: 74, column: 4, scope: !8599)
!8599 = distinct !DILexicalBlock(scope: !8586, file: !8535, line: 73, column: 38)
!8600 = distinct !{!8600, !8594, !8601}
!8601 = !DILocation(line: 75, column: 2, scope: !8586)
!8602 = !DILocation(line: 77, column: 9, scope: !8586)
!8603 = !DILocation(line: 77, column: 2, scope: !8586)
!8604 = distinct !DISubprogram(name: "strrchr", scope: !8535, file: !8535, line: 87, type: !8587, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3314, retainedNodes: !8605)
!8605 = !{!8606, !8607, !8608}
!8606 = !DILocalVariable(name: "s", arg: 1, scope: !8604, file: !8535, line: 87, type: !105)
!8607 = !DILocalVariable(name: "c", arg: 2, scope: !8604, file: !8535, line: 87, type: !108)
!8608 = !DILocalVariable(name: "match", scope: !8604, file: !8535, line: 89, type: !443)
!8609 = !DILocation(line: 0, scope: !8604)
!8610 = !DILocation(line: 91, column: 2, scope: !8604)
!8611 = !DILocation(line: 92, column: 7, scope: !8612)
!8612 = distinct !DILexicalBlock(scope: !8613, file: !8535, line: 92, column: 7)
!8613 = distinct !DILexicalBlock(scope: !8604, file: !8535, line: 91, column: 5)
!8614 = !DILocation(line: 92, column: 10, scope: !8612)
!8615 = !DILocation(line: 92, column: 7, scope: !8613)
!8616 = !DILocation(line: 95, column: 13, scope: !8604)
!8617 = !DILocation(line: 95, column: 2, scope: !8613)
!8618 = distinct !{!8618, !8610, !8619}
!8619 = !DILocation(line: 95, column: 15, scope: !8604)
!8620 = !DILocation(line: 97, column: 2, scope: !8604)
!8621 = distinct !DISubprogram(name: "strlen", scope: !8535, file: !8535, line: 107, type: !8622, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3314, retainedNodes: !8624)
!8622 = !DISubroutineType(types: !8623)
!8623 = !{!439, !105}
!8624 = !{!8625, !8626}
!8625 = !DILocalVariable(name: "s", arg: 1, scope: !8621, file: !8535, line: 107, type: !105)
!8626 = !DILocalVariable(name: "n", scope: !8621, file: !8535, line: 109, type: !439)
!8627 = !DILocation(line: 0, scope: !8621)
!8628 = !DILocation(line: 111, column: 9, scope: !8621)
!8629 = !DILocation(line: 111, column: 12, scope: !8621)
!8630 = !DILocation(line: 111, column: 2, scope: !8621)
!8631 = !DILocation(line: 112, column: 4, scope: !8632)
!8632 = distinct !DILexicalBlock(scope: !8621, file: !8535, line: 111, column: 21)
!8633 = !DILocation(line: 113, column: 4, scope: !8632)
!8634 = distinct !{!8634, !8630, !8635}
!8635 = !DILocation(line: 114, column: 2, scope: !8621)
!8636 = !DILocation(line: 116, column: 2, scope: !8621)
!8637 = distinct !DISubprogram(name: "strnlen", scope: !8535, file: !8535, line: 126, type: !8638, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3314, retainedNodes: !8640)
!8638 = !DISubroutineType(types: !8639)
!8639 = !{!439, !105, !439}
!8640 = !{!8641, !8642, !8643}
!8641 = !DILocalVariable(name: "s", arg: 1, scope: !8637, file: !8535, line: 126, type: !105)
!8642 = !DILocalVariable(name: "maxlen", arg: 2, scope: !8637, file: !8535, line: 126, type: !439)
!8643 = !DILocalVariable(name: "n", scope: !8637, file: !8535, line: 128, type: !439)
!8644 = !DILocation(line: 0, scope: !8637)
!8645 = !DILocation(line: 130, column: 9, scope: !8637)
!8646 = !DILocation(line: 130, column: 12, scope: !8637)
!8647 = !DILocation(line: 130, column: 20, scope: !8637)
!8648 = !DILocation(line: 130, column: 2, scope: !8637)
!8649 = !DILocation(line: 131, column: 4, scope: !8650)
!8650 = distinct !DILexicalBlock(scope: !8637, file: !8535, line: 130, column: 35)
!8651 = !DILocation(line: 132, column: 4, scope: !8650)
!8652 = distinct !{!8652, !8648, !8653}
!8653 = !DILocation(line: 133, column: 2, scope: !8637)
!8654 = !DILocation(line: 135, column: 2, scope: !8637)
!8655 = distinct !DISubprogram(name: "strcmp", scope: !8535, file: !8535, line: 145, type: !8656, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3314, retainedNodes: !8658)
!8656 = !DISubroutineType(types: !8657)
!8657 = !{!108, !105, !105}
!8658 = !{!8659, !8660}
!8659 = !DILocalVariable(name: "s1", arg: 1, scope: !8655, file: !8535, line: 145, type: !105)
!8660 = !DILocalVariable(name: "s2", arg: 2, scope: !8655, file: !8535, line: 145, type: !105)
!8661 = !DILocation(line: 0, scope: !8655)
!8662 = !DILocation(line: 147, column: 10, scope: !8655)
!8663 = !DILocation(line: 147, column: 17, scope: !8655)
!8664 = !DILocation(line: 147, column: 14, scope: !8655)
!8665 = !DILocation(line: 147, column: 22, scope: !8655)
!8666 = !DILocation(line: 148, column: 5, scope: !8667)
!8667 = distinct !DILexicalBlock(scope: !8655, file: !8535, line: 147, column: 40)
!8668 = !DILocation(line: 149, column: 5, scope: !8667)
!8669 = distinct !{!8669, !8670, !8671}
!8670 = !DILocation(line: 147, column: 2, scope: !8655)
!8671 = !DILocation(line: 150, column: 2, scope: !8655)
!8672 = !DILocation(line: 152, column: 9, scope: !8655)
!8673 = !DILocation(line: 152, column: 15, scope: !8655)
!8674 = !DILocation(line: 152, column: 13, scope: !8655)
!8675 = !DILocation(line: 152, column: 2, scope: !8655)
!8676 = distinct !DISubprogram(name: "strncmp", scope: !8535, file: !8535, line: 162, type: !8677, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3314, retainedNodes: !8679)
!8677 = !DISubroutineType(types: !8678)
!8678 = !{!108, !105, !105, !439}
!8679 = !{!8680, !8681, !8682}
!8680 = !DILocalVariable(name: "s1", arg: 1, scope: !8676, file: !8535, line: 162, type: !105)
!8681 = !DILocalVariable(name: "s2", arg: 2, scope: !8676, file: !8535, line: 162, type: !105)
!8682 = !DILocalVariable(name: "n", arg: 3, scope: !8676, file: !8535, line: 162, type: !439)
!8683 = !DILocation(line: 0, scope: !8676)
!8684 = !DILocation(line: 164, column: 17, scope: !8676)
!8685 = !DILocation(line: 164, column: 21, scope: !8676)
!8686 = !DILocation(line: 164, column: 28, scope: !8676)
!8687 = !DILocation(line: 164, column: 25, scope: !8676)
!8688 = !DILocation(line: 164, column: 33, scope: !8676)
!8689 = !DILocation(line: 165, column: 5, scope: !8690)
!8690 = distinct !DILexicalBlock(scope: !8676, file: !8535, line: 164, column: 51)
!8691 = !DILocation(line: 166, column: 5, scope: !8690)
!8692 = !DILocation(line: 167, column: 4, scope: !8690)
!8693 = distinct !{!8693, !8694, !8695}
!8694 = !DILocation(line: 164, column: 2, scope: !8676)
!8695 = !DILocation(line: 168, column: 2, scope: !8676)
!8696 = !DILocation(line: 170, column: 25, scope: !8676)
!8697 = !DILocation(line: 170, column: 31, scope: !8676)
!8698 = !DILocation(line: 170, column: 29, scope: !8676)
!8699 = !DILocation(line: 170, column: 9, scope: !8676)
!8700 = !DILocation(line: 170, column: 2, scope: !8676)
!8701 = distinct !DISubprogram(name: "strtok_r", scope: !8535, file: !8535, line: 180, type: !8702, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3314, retainedNodes: !8704)
!8702 = !DISubroutineType(types: !8703)
!8703 = !{!443, !443, !105, !555}
!8704 = !{!8705, !8706, !8707, !8708, !8709}
!8705 = !DILocalVariable(name: "str", arg: 1, scope: !8701, file: !8535, line: 180, type: !443)
!8706 = !DILocalVariable(name: "sep", arg: 2, scope: !8701, file: !8535, line: 180, type: !105)
!8707 = !DILocalVariable(name: "state", arg: 3, scope: !8701, file: !8535, line: 180, type: !555)
!8708 = !DILocalVariable(name: "start", scope: !8701, file: !8535, line: 182, type: !443)
!8709 = !DILocalVariable(name: "end", scope: !8701, file: !8535, line: 182, type: !443)
!8710 = !DILocation(line: 0, scope: !8701)
!8711 = !DILocation(line: 184, column: 10, scope: !8701)
!8712 = !DILocation(line: 184, column: 22, scope: !8701)
!8713 = !DILocation(line: 187, column: 9, scope: !8701)
!8714 = !DILocation(line: 187, column: 16, scope: !8701)
!8715 = !DILocation(line: 187, column: 19, scope: !8701)
!8716 = !DILocation(line: 187, column: 2, scope: !8701)
!8717 = !DILocation(line: 188, column: 8, scope: !8718)
!8718 = distinct !DILexicalBlock(scope: !8701, file: !8535, line: 187, column: 40)
!8719 = distinct !{!8719, !8716, !8720}
!8720 = !DILocation(line: 189, column: 2, scope: !8701)
!8721 = !DILocation(line: 198, column: 9, scope: !8701)
!8722 = !DILocation(line: 198, column: 18, scope: !8701)
!8723 = !DILocation(line: 198, column: 17, scope: !8701)
!8724 = !DILocation(line: 198, column: 2, scope: !8701)
!8725 = !DILocation(line: 199, column: 6, scope: !8726)
!8726 = distinct !DILexicalBlock(scope: !8701, file: !8535, line: 198, column: 37)
!8727 = !DILocation(line: 198, column: 14, scope: !8701)
!8728 = distinct !{!8728, !8724, !8729}
!8729 = !DILocation(line: 200, column: 2, scope: !8701)
!8730 = !DILocation(line: 203, column: 8, scope: !8731)
!8731 = distinct !DILexicalBlock(scope: !8732, file: !8535, line: 202, column: 20)
!8732 = distinct !DILexicalBlock(scope: !8701, file: !8535, line: 202, column: 6)
!8733 = !DILocation(line: 204, column: 16, scope: !8731)
!8734 = !DILocation(line: 205, column: 2, scope: !8731)
!8735 = !DILocation(line: 210, column: 1, scope: !8701)
!8736 = distinct !DISubprogram(name: "strcat", scope: !8535, file: !8535, line: 212, type: !8536, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3314, retainedNodes: !8737)
!8737 = !{!8738, !8739}
!8738 = !DILocalVariable(name: "dest", arg: 1, scope: !8736, file: !8535, line: 212, type: !8538)
!8739 = !DILocalVariable(name: "src", arg: 2, scope: !8736, file: !8535, line: 212, type: !8539)
!8740 = !DILocation(line: 0, scope: !8736)
!8741 = !DILocation(line: 214, column: 16, scope: !8736)
!8742 = !DILocation(line: 214, column: 14, scope: !8736)
!8743 = !DILocation(line: 214, column: 2, scope: !8736)
!8744 = !DILocation(line: 215, column: 2, scope: !8736)
!8745 = distinct !DISubprogram(name: "strncat", scope: !8535, file: !8535, line: 218, type: !8557, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3314, retainedNodes: !8746)
!8746 = !{!8747, !8748, !8749, !8750, !8751}
!8747 = !DILocalVariable(name: "dest", arg: 1, scope: !8745, file: !8535, line: 218, type: !8538)
!8748 = !DILocalVariable(name: "src", arg: 2, scope: !8745, file: !8535, line: 218, type: !8539)
!8749 = !DILocalVariable(name: "n", arg: 3, scope: !8745, file: !8535, line: 219, type: !439)
!8750 = !DILocalVariable(name: "orig_dest", scope: !8745, file: !8535, line: 221, type: !443)
!8751 = !DILocalVariable(name: "len", scope: !8745, file: !8535, line: 222, type: !439)
!8752 = !DILocation(line: 0, scope: !8745)
!8753 = !DILocation(line: 222, column: 15, scope: !8745)
!8754 = !DILocation(line: 224, column: 7, scope: !8745)
!8755 = !DILocation(line: 225, column: 14, scope: !8745)
!8756 = !DILocation(line: 225, column: 19, scope: !8745)
!8757 = !DILocation(line: 225, column: 11, scope: !8745)
!8758 = !DILocation(line: 225, column: 23, scope: !8745)
!8759 = !DILocation(line: 225, column: 28, scope: !8745)
!8760 = !DILocation(line: 225, column: 2, scope: !8745)
!8761 = !DILocation(line: 226, column: 17, scope: !8762)
!8762 = distinct !DILexicalBlock(scope: !8745, file: !8535, line: 225, column: 38)
!8763 = !DILocation(line: 226, column: 8, scope: !8762)
!8764 = !DILocation(line: 226, column: 11, scope: !8762)
!8765 = distinct !{!8765, !8760, !8766}
!8766 = !DILocation(line: 227, column: 2, scope: !8745)
!8767 = !DILocation(line: 228, column: 8, scope: !8745)
!8768 = !DILocation(line: 230, column: 2, scope: !8745)
!8769 = distinct !DISubprogram(name: "memcmp", scope: !8535, file: !8535, line: 239, type: !8770, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3314, retainedNodes: !8772)
!8770 = !DISubroutineType(types: !8771)
!8771 = !{!108, !13, !13, !439}
!8772 = !{!8773, !8774, !8775, !8776, !8777}
!8773 = !DILocalVariable(name: "m1", arg: 1, scope: !8769, file: !8535, line: 239, type: !13)
!8774 = !DILocalVariable(name: "m2", arg: 2, scope: !8769, file: !8535, line: 239, type: !13)
!8775 = !DILocalVariable(name: "n", arg: 3, scope: !8769, file: !8535, line: 239, type: !439)
!8776 = !DILocalVariable(name: "c1", scope: !8769, file: !8535, line: 241, type: !105)
!8777 = !DILocalVariable(name: "c2", scope: !8769, file: !8535, line: 242, type: !105)
!8778 = !DILocation(line: 0, scope: !8769)
!8779 = !DILocation(line: 244, column: 7, scope: !8780)
!8780 = distinct !DILexicalBlock(scope: !8769, file: !8535, line: 244, column: 6)
!8781 = !DILocation(line: 244, column: 6, scope: !8769)
!8782 = !DILocation(line: 248, column: 10, scope: !8769)
!8783 = !DILocation(line: 248, column: 14, scope: !8769)
!8784 = !DILocation(line: 248, column: 19, scope: !8769)
!8785 = !DILocation(line: 248, column: 2, scope: !8769)
!8786 = !DILocation(line: 248, column: 23, scope: !8769)
!8787 = !DILocation(line: 248, column: 30, scope: !8769)
!8788 = !DILocation(line: 248, column: 27, scope: !8769)
!8789 = !DILocation(line: 249, column: 5, scope: !8790)
!8790 = distinct !DILexicalBlock(scope: !8769, file: !8535, line: 248, column: 36)
!8791 = !DILocation(line: 250, column: 5, scope: !8790)
!8792 = distinct !{!8792, !8785, !8793}
!8793 = !DILocation(line: 251, column: 2, scope: !8769)
!8794 = !DILocation(line: 253, column: 9, scope: !8769)
!8795 = !DILocation(line: 253, column: 15, scope: !8769)
!8796 = !DILocation(line: 253, column: 13, scope: !8769)
!8797 = !DILocation(line: 253, column: 2, scope: !8769)
!8798 = !DILocation(line: 254, column: 1, scope: !8769)
!8799 = distinct !DISubprogram(name: "memmove", scope: !8535, file: !8535, line: 263, type: !8800, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3314, retainedNodes: !8802)
!8800 = !DISubroutineType(types: !8801)
!8801 = !{!104, !104, !13, !439}
!8802 = !{!8803, !8804, !8805, !8806, !8807}
!8803 = !DILocalVariable(name: "d", arg: 1, scope: !8799, file: !8535, line: 263, type: !104)
!8804 = !DILocalVariable(name: "s", arg: 2, scope: !8799, file: !8535, line: 263, type: !13)
!8805 = !DILocalVariable(name: "n", arg: 3, scope: !8799, file: !8535, line: 263, type: !439)
!8806 = !DILocalVariable(name: "dest", scope: !8799, file: !8535, line: 265, type: !443)
!8807 = !DILocalVariable(name: "src", scope: !8799, file: !8535, line: 266, type: !105)
!8808 = !DILocation(line: 0, scope: !8799)
!8809 = !DILocation(line: 268, column: 21, scope: !8810)
!8810 = distinct !DILexicalBlock(scope: !8799, file: !8535, line: 268, column: 6)
!8811 = !DILocation(line: 268, column: 28, scope: !8810)
!8812 = !DILocation(line: 268, column: 6, scope: !8799)
!8813 = !DILocation(line: 280, column: 12, scope: !8814)
!8814 = distinct !DILexicalBlock(scope: !8810, file: !8535, line: 278, column: 9)
!8815 = !DILocation(line: 280, column: 3, scope: !8814)
!8816 = !DILocation(line: 275, column: 5, scope: !8817)
!8817 = distinct !DILexicalBlock(scope: !8818, file: !8535, line: 274, column: 17)
!8818 = distinct !DILexicalBlock(scope: !8810, file: !8535, line: 268, column: 33)
!8819 = !DILocation(line: 276, column: 14, scope: !8817)
!8820 = !DILocation(line: 276, column: 4, scope: !8817)
!8821 = !DILocation(line: 276, column: 12, scope: !8817)
!8822 = !DILocation(line: 274, column: 12, scope: !8818)
!8823 = !DILocation(line: 274, column: 3, scope: !8818)
!8824 = distinct !{!8824, !8823, !8825}
!8825 = !DILocation(line: 277, column: 3, scope: !8818)
!8826 = !DILocation(line: 281, column: 12, scope: !8827)
!8827 = distinct !DILexicalBlock(scope: !8814, file: !8535, line: 280, column: 17)
!8828 = !DILocation(line: 281, column: 10, scope: !8827)
!8829 = !DILocation(line: 282, column: 8, scope: !8827)
!8830 = !DILocation(line: 283, column: 7, scope: !8827)
!8831 = !DILocation(line: 284, column: 5, scope: !8827)
!8832 = distinct !{!8832, !8815, !8833}
!8833 = !DILocation(line: 285, column: 3, scope: !8814)
!8834 = !DILocation(line: 288, column: 2, scope: !8799)
!8835 = distinct !DISubprogram(name: "memcpy", scope: !8535, file: !8535, line: 298, type: !8836, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3314, retainedNodes: !8840)
!8836 = !DISubroutineType(types: !8837)
!8837 = !{!104, !8838, !8839, !439}
!8838 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !104)
!8839 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!8840 = !{!8841, !8842, !8843, !8844, !8845}
!8841 = !DILocalVariable(name: "d", arg: 1, scope: !8835, file: !8535, line: 298, type: !8838)
!8842 = !DILocalVariable(name: "s", arg: 2, scope: !8835, file: !8535, line: 298, type: !8839)
!8843 = !DILocalVariable(name: "n", arg: 3, scope: !8835, file: !8535, line: 298, type: !439)
!8844 = !DILocalVariable(name: "d_byte", scope: !8835, file: !8535, line: 302, type: !1360)
!8845 = !DILocalVariable(name: "s_byte", scope: !8835, file: !8535, line: 303, type: !3317)
!8846 = !DILocation(line: 0, scope: !8835)
!8847 = !DILocation(line: 337, column: 11, scope: !8835)
!8848 = !DILocation(line: 337, column: 2, scope: !8835)
!8849 = !DILocation(line: 338, column: 25, scope: !8850)
!8850 = distinct !DILexicalBlock(scope: !8835, file: !8535, line: 337, column: 16)
!8851 = !DILocation(line: 338, column: 17, scope: !8850)
!8852 = !DILocation(line: 338, column: 11, scope: !8850)
!8853 = !DILocation(line: 338, column: 15, scope: !8850)
!8854 = !DILocation(line: 339, column: 4, scope: !8850)
!8855 = distinct !{!8855, !8848, !8856}
!8856 = !DILocation(line: 340, column: 2, scope: !8835)
!8857 = !DILocation(line: 342, column: 2, scope: !8835)
!8858 = distinct !DISubprogram(name: "memset", scope: !8535, file: !8535, line: 352, type: !8859, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3314, retainedNodes: !8861)
!8859 = !DISubroutineType(types: !8860)
!8860 = !{!104, !104, !108, !439}
!8861 = !{!8862, !8863, !8864, !8865, !8866}
!8862 = !DILocalVariable(name: "buf", arg: 1, scope: !8858, file: !8535, line: 352, type: !104)
!8863 = !DILocalVariable(name: "c", arg: 2, scope: !8858, file: !8535, line: 352, type: !108)
!8864 = !DILocalVariable(name: "n", arg: 3, scope: !8858, file: !8535, line: 352, type: !439)
!8865 = !DILocalVariable(name: "d_byte", scope: !8858, file: !8535, line: 356, type: !1360)
!8866 = !DILocalVariable(name: "c_byte", scope: !8858, file: !8535, line: 357, type: !165)
!8867 = !DILocation(line: 0, scope: !8858)
!8868 = !DILocation(line: 357, column: 25, scope: !8858)
!8869 = !DILocation(line: 389, column: 11, scope: !8858)
!8870 = !DILocation(line: 389, column: 2, scope: !8858)
!8871 = !DILocation(line: 390, column: 11, scope: !8872)
!8872 = distinct !DILexicalBlock(scope: !8858, file: !8535, line: 389, column: 16)
!8873 = !DILocation(line: 390, column: 15, scope: !8872)
!8874 = !DILocation(line: 391, column: 4, scope: !8872)
!8875 = distinct !{!8875, !8870, !8876}
!8876 = !DILocation(line: 392, column: 2, scope: !8858)
!8877 = !DILocation(line: 394, column: 2, scope: !8858)
!8878 = distinct !DISubprogram(name: "memchr", scope: !8535, file: !8535, line: 404, type: !8879, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3314, retainedNodes: !8881)
!8879 = !DISubroutineType(types: !8880)
!8880 = !{!104, !13, !108, !439}
!8881 = !{!8882, !8883, !8884, !8885}
!8882 = !DILocalVariable(name: "s", arg: 1, scope: !8878, file: !8535, line: 404, type: !13)
!8883 = !DILocalVariable(name: "c", arg: 2, scope: !8878, file: !8535, line: 404, type: !108)
!8884 = !DILocalVariable(name: "n", arg: 3, scope: !8878, file: !8535, line: 404, type: !439)
!8885 = !DILocalVariable(name: "p", scope: !8886, file: !8535, line: 407, type: !3317)
!8886 = distinct !DILexicalBlock(scope: !8887, file: !8535, line: 406, column: 14)
!8887 = distinct !DILexicalBlock(scope: !8878, file: !8535, line: 406, column: 6)
!8888 = !DILocation(line: 0, scope: !8878)
!8889 = !DILocation(line: 406, column: 8, scope: !8887)
!8890 = !DILocation(line: 406, column: 6, scope: !8878)
!8891 = !DILocation(line: 409, column: 3, scope: !8886)
!8892 = !DILocation(line: 0, scope: !8886)
!8893 = !DILocation(line: 410, column: 8, scope: !8894)
!8894 = distinct !DILexicalBlock(scope: !8895, file: !8535, line: 410, column: 8)
!8895 = distinct !DILexicalBlock(scope: !8886, file: !8535, line: 409, column: 6)
!8896 = !DILocation(line: 410, column: 13, scope: !8894)
!8897 = !DILocation(line: 410, column: 8, scope: !8895)
!8898 = distinct !{!8898, !8891, !8899}
!8899 = !DILocation(line: 414, column: 20, scope: !8886)
!8900 = !DILocation(line: 417, column: 2, scope: !8878)
!8901 = !DILocation(line: 418, column: 1, scope: !8878)
!8902 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !840, file: !840, line: 23, type: !5141, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !833, retainedNodes: !8903)
!8903 = !{!8904}
!8904 = !DILocalVariable(name: "hook", arg: 1, scope: !8902, file: !840, line: 23, type: !570)
!8905 = !DILocation(line: 0, scope: !8902)
!8906 = !DILocation(line: 25, column: 15, scope: !8902)
!8907 = !DILocation(line: 26, column: 1, scope: !8902)
!8908 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !840, file: !840, line: 14, type: !571, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !833, retainedNodes: !8909)
!8909 = !{!8910}
!8910 = !DILocalVariable(name: "c", arg: 1, scope: !8908, file: !840, line: 14, type: !108)
!8911 = !DILocation(line: 0, scope: !8908)
!8912 = !DILocation(line: 18, column: 2, scope: !8908)
!8913 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !840, file: !840, line: 28, type: !8914, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !833, retainedNodes: !8916)
!8914 = !DISubroutineType(types: !8915)
!8915 = !{!108, !108, !836}
!8916 = !{!8917, !8918}
!8917 = !DILocalVariable(name: "c", arg: 1, scope: !8913, file: !840, line: 28, type: !108)
!8918 = !DILocalVariable(name: "stream", arg: 2, scope: !8913, file: !840, line: 28, type: !836)
!8919 = !DILocation(line: 0, scope: !8913)
!8920 = !DILocation(line: 30, column: 27, scope: !8913)
!8921 = !DILocation(line: 30, column: 50, scope: !8913)
!8922 = !DILocation(line: 30, column: 9, scope: !8913)
!8923 = !DILocation(line: 30, column: 2, scope: !8913)
!8924 = distinct !DISubprogram(name: "fputc", scope: !840, file: !840, line: 41, type: !8914, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !833, retainedNodes: !8925)
!8925 = !{!8926, !8927}
!8926 = !DILocalVariable(name: "c", arg: 1, scope: !8924, file: !840, line: 41, type: !108)
!8927 = !DILocalVariable(name: "stream", arg: 2, scope: !8924, file: !840, line: 41, type: !836)
!8928 = !DILocation(line: 0, scope: !8924)
!8929 = !DILocation(line: 43, column: 9, scope: !8924)
!8930 = !DILocation(line: 43, column: 2, scope: !8924)
!8931 = distinct !DISubprogram(name: "zephyr_fputc", scope: !8932, file: !8932, line: 72, type: !8914, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !833, retainedNodes: !8933)
!8932 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/sensor_batch_processing")
!8933 = !{!8934, !8935}
!8934 = !DILocalVariable(name: "c", arg: 1, scope: !8931, file: !8932, line: 72, type: !108)
!8935 = !DILocalVariable(name: "stream", arg: 2, scope: !8931, file: !8932, line: 72, type: !836)
!8936 = !DILocation(line: 0, scope: !8931)
!8937 = !DILocation(line: 81, column: 2, scope: !8938)
!8938 = distinct !DILexicalBlock(scope: !8931, file: !8932, line: 81, column: 2)
!8939 = !{i64 2155517846}
!8940 = !DILocation(line: 82, column: 9, scope: !8931)
!8941 = !DILocation(line: 82, column: 2, scope: !8931)
!8942 = distinct !DISubprogram(name: "fputs", scope: !840, file: !840, line: 46, type: !8943, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !833, retainedNodes: !8946)
!8943 = !DISubroutineType(types: !8944)
!8944 = !{!108, !8539, !8945}
!8945 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !836)
!8946 = !{!8947, !8948, !8949, !8950}
!8947 = !DILocalVariable(name: "s", arg: 1, scope: !8942, file: !840, line: 46, type: !8539)
!8948 = !DILocalVariable(name: "stream", arg: 2, scope: !8942, file: !840, line: 46, type: !8945)
!8949 = !DILocalVariable(name: "len", scope: !8942, file: !840, line: 48, type: !108)
!8950 = !DILocalVariable(name: "ret", scope: !8942, file: !840, line: 49, type: !108)
!8951 = !DILocation(line: 0, scope: !8942)
!8952 = !DILocation(line: 48, column: 12, scope: !8942)
!8953 = !DILocation(line: 51, column: 8, scope: !8942)
!8954 = !DILocation(line: 53, column: 13, scope: !8942)
!8955 = !DILocation(line: 53, column: 9, scope: !8942)
!8956 = !DILocation(line: 53, column: 2, scope: !8942)
!8957 = distinct !DISubprogram(name: "fwrite", scope: !840, file: !840, line: 99, type: !8958, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !833, retainedNodes: !8960)
!8958 = !DISubroutineType(types: !8959)
!8959 = !{!439, !8839, !439, !439, !8945}
!8960 = !{!8961, !8962, !8963, !8964}
!8961 = !DILocalVariable(name: "ptr", arg: 1, scope: !8957, file: !840, line: 99, type: !8839)
!8962 = !DILocalVariable(name: "size", arg: 2, scope: !8957, file: !840, line: 99, type: !439)
!8963 = !DILocalVariable(name: "nitems", arg: 3, scope: !8957, file: !840, line: 99, type: !439)
!8964 = !DILocalVariable(name: "stream", arg: 4, scope: !8957, file: !840, line: 100, type: !8945)
!8965 = !DILocation(line: 0, scope: !8957)
!8966 = !DILocation(line: 102, column: 9, scope: !8957)
!8967 = !DILocation(line: 102, column: 2, scope: !8957)
!8968 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !8932, file: !8932, line: 96, type: !8958, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !833, retainedNodes: !8969)
!8969 = !{!8970, !8971, !8972, !8973}
!8970 = !DILocalVariable(name: "ptr", arg: 1, scope: !8968, file: !8932, line: 96, type: !8839)
!8971 = !DILocalVariable(name: "size", arg: 2, scope: !8968, file: !8932, line: 96, type: !439)
!8972 = !DILocalVariable(name: "nitems", arg: 3, scope: !8968, file: !8932, line: 96, type: !439)
!8973 = !DILocalVariable(name: "stream", arg: 4, scope: !8968, file: !8932, line: 96, type: !8945)
!8974 = !DILocation(line: 0, scope: !8968)
!8975 = !DILocation(line: 107, column: 2, scope: !8976)
!8976 = distinct !DILexicalBlock(scope: !8968, file: !8932, line: 107, column: 2)
!8977 = !{i64 2155517950}
!8978 = !DILocation(line: 108, column: 9, scope: !8968)
!8979 = !DILocation(line: 108, column: 2, scope: !8968)
!8980 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !840, file: !840, line: 56, type: !8958, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !833, retainedNodes: !8981)
!8981 = !{!8982, !8983, !8984, !8985, !8986, !8987, !8988, !8989}
!8982 = !DILocalVariable(name: "ptr", arg: 1, scope: !8980, file: !840, line: 56, type: !8839)
!8983 = !DILocalVariable(name: "size", arg: 2, scope: !8980, file: !840, line: 56, type: !439)
!8984 = !DILocalVariable(name: "nitems", arg: 3, scope: !8980, file: !840, line: 57, type: !439)
!8985 = !DILocalVariable(name: "stream", arg: 4, scope: !8980, file: !840, line: 57, type: !8945)
!8986 = !DILocalVariable(name: "i", scope: !8980, file: !840, line: 59, type: !439)
!8987 = !DILocalVariable(name: "j", scope: !8980, file: !840, line: 60, type: !439)
!8988 = !DILocalVariable(name: "p", scope: !8980, file: !840, line: 61, type: !3317)
!8989 = !DILabel(scope: !8980, name: "done", file: !840, line: 82)
!8990 = !DILocation(line: 0, scope: !8980)
!8991 = !DILocation(line: 63, column: 14, scope: !8992)
!8992 = distinct !DILexicalBlock(scope: !8980, file: !840, line: 63, column: 6)
!8993 = !DILocation(line: 63, column: 24, scope: !8992)
!8994 = !DILocation(line: 72, column: 3, scope: !8995)
!8995 = distinct !DILexicalBlock(scope: !8980, file: !840, line: 70, column: 5)
!8996 = !DILocation(line: 0, scope: !8995)
!8997 = !DILocation(line: 73, column: 8, scope: !8998)
!8998 = distinct !DILexicalBlock(scope: !8999, file: !840, line: 73, column: 8)
!8999 = distinct !DILexicalBlock(scope: !8995, file: !840, line: 72, column: 6)
!9000 = !DILocation(line: 73, column: 29, scope: !8998)
!9001 = !DILocation(line: 73, column: 27, scope: !8998)
!9002 = !DILocation(line: 73, column: 21, scope: !8998)
!9003 = !DILocation(line: 73, column: 33, scope: !8998)
!9004 = !DILocation(line: 73, column: 8, scope: !8999)
!9005 = !DILocation(line: 76, column: 5, scope: !8999)
!9006 = !DILocation(line: 77, column: 14, scope: !8995)
!9007 = !DILocation(line: 77, column: 3, scope: !8999)
!9008 = distinct !{!9008, !8994, !9009}
!9009 = !DILocation(line: 77, column: 17, scope: !8995)
!9010 = !DILocation(line: 79, column: 4, scope: !8995)
!9011 = !DILocation(line: 80, column: 13, scope: !8980)
!9012 = !DILocation(line: 80, column: 2, scope: !8995)
!9013 = distinct !{!9013, !9014, !9015}
!9014 = !DILocation(line: 70, column: 2, scope: !8980)
!9015 = !DILocation(line: 80, column: 16, scope: !8980)
!9016 = !DILocation(line: 82, column: 1, scope: !8980)
!9017 = !DILocation(line: 83, column: 17, scope: !8980)
!9018 = !DILocation(line: 83, column: 2, scope: !8980)
!9019 = !DILocation(line: 84, column: 1, scope: !8980)
!9020 = distinct !DISubprogram(name: "puts", scope: !840, file: !840, line: 106, type: !9021, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !833, retainedNodes: !9023)
!9021 = !DISubroutineType(types: !9022)
!9022 = !{!108, !105}
!9023 = !{!9024}
!9024 = !DILocalVariable(name: "s", arg: 1, scope: !9020, file: !840, line: 106, type: !105)
!9025 = !DILocation(line: 0, scope: !9020)
!9026 = !DILocation(line: 108, column: 6, scope: !9027)
!9027 = distinct !DILexicalBlock(scope: !9020, file: !840, line: 108, column: 6)
!9028 = !DILocation(line: 108, column: 23, scope: !9027)
!9029 = !DILocation(line: 108, column: 6, scope: !9020)
!9030 = !DILocation(line: 112, column: 9, scope: !9020)
!9031 = !DILocation(line: 112, column: 29, scope: !9020)
!9032 = !DILocation(line: 112, column: 2, scope: !9020)
!9033 = !DILocation(line: 113, column: 1, scope: !9020)
!9034 = distinct !DISubprogram(name: "rtio_simple_submit", scope: !871, file: !871, line: 25, type: !9035, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !868, retainedNodes: !9124)
!9035 = !DISubroutineType(types: !9036)
!9036 = !{!108, !9037}
!9037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9038, size: 32)
!9038 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio", file: !125, line: 222, size: 128, elements: !9039)
!9039 = !{!9040, !9105, !9106, !9113}
!9040 = !DIDerivedType(tag: DW_TAG_member, name: "executor", scope: !9038, file: !125, line: 228, baseType: !9041, size: 32)
!9041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9042, size: 32)
!9042 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_executor", file: !125, line: 210, size: 32, elements: !9043)
!9043 = !{!9044}
!9044 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !9042, file: !125, line: 211, baseType: !9045, size: 32)
!9045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9046, size: 32)
!9046 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9047)
!9047 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_executor_api", file: !125, line: 168, size: 96, elements: !9048)
!9048 = !{!9049, !9051, !9104}
!9049 = !DIDerivedType(tag: DW_TAG_member, name: "submit", scope: !9047, file: !125, line: 177, baseType: !9050, size: 32)
!9050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9035, size: 32)
!9051 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !9047, file: !125, line: 182, baseType: !9052, size: 32, offset: 32)
!9052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9053, size: 32)
!9053 = !DISubroutineType(types: !9054)
!9054 = !{null, !9037, !9055, !108}
!9055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9056, size: 32)
!9056 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9057)
!9057 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_sqe", file: !125, line: 109, size: 160, elements: !9058)
!9058 = !{!9059, !9060, !9061, !9062, !9095, !9096}
!9059 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !9057, file: !125, line: 110, baseType: !164, size: 8)
!9060 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !9057, file: !125, line: 112, baseType: !164, size: 8, offset: 8)
!9061 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !9057, file: !125, line: 114, baseType: !168, size: 16, offset: 16)
!9062 = !DIDerivedType(tag: DW_TAG_member, name: "iodev", scope: !9057, file: !125, line: 116, baseType: !9063, size: 32, offset: 32)
!9063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9064, size: 32)
!9064 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9065)
!9065 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_iodev", file: !125, line: 306, size: 96, elements: !9066)
!9066 = !{!9067, !9076, !9094}
!9067 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !9065, file: !125, line: 308, baseType: !9068, size: 32)
!9068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9069, size: 32)
!9069 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9070)
!9070 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_iodev_api", file: !125, line: 263, size: 32, elements: !9071)
!9071 = !{!9072}
!9072 = !DIDerivedType(tag: DW_TAG_member, name: "submit", scope: !9070, file: !125, line: 271, baseType: !9073, size: 32)
!9073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9074, size: 32)
!9074 = !DISubroutineType(types: !9075)
!9075 = !{null, !9055, !9037}
!9076 = !DIDerivedType(tag: DW_TAG_member, name: "iodev_sq", scope: !9065, file: !125, line: 311, baseType: !9077, size: 32, offset: 32)
!9077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9078, size: 32)
!9078 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_iodev_sq", file: !125, line: 298, size: 160, elements: !9079)
!9079 = !{!9080, !9088}
!9080 = !DIDerivedType(tag: DW_TAG_member, name: "_spsc", scope: !9078, file: !125, line: 299, baseType: !9081, size: 160)
!9081 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_spsc", file: !151, line: 58, size: 160, elements: !9082)
!9082 = !{!9083, !9084, !9085, !9086, !9087}
!9083 = !DIDerivedType(tag: DW_TAG_member, name: "acquire", scope: !9081, file: !151, line: 60, baseType: !24, size: 32)
!9084 = !DIDerivedType(tag: DW_TAG_member, name: "consume", scope: !9081, file: !151, line: 63, baseType: !24, size: 32, offset: 32)
!9085 = !DIDerivedType(tag: DW_TAG_member, name: "in", scope: !9081, file: !151, line: 66, baseType: !142, size: 32, offset: 64)
!9086 = !DIDerivedType(tag: DW_TAG_member, name: "out", scope: !9081, file: !151, line: 69, baseType: !142, size: 32, offset: 96)
!9087 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !9081, file: !151, line: 72, baseType: !158, size: 32, offset: 128)
!9088 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !9078, file: !125, line: 300, baseType: !9089, offset: 160)
!9089 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9090, elements: !197)
!9090 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_iodev_sqe", file: !125, line: 288, size: 64, elements: !9091)
!9091 = !{!9092, !9093}
!9092 = !DIDerivedType(tag: DW_TAG_member, name: "sqe", scope: !9090, file: !125, line: 289, baseType: !9055, size: 32)
!9093 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !9090, file: !125, line: 290, baseType: !9037, size: 32, offset: 32)
!9094 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !9065, file: !125, line: 314, baseType: !104, size: 32, offset: 64)
!9095 = !DIDerivedType(tag: DW_TAG_member, name: "userdata", scope: !9057, file: !125, line: 125, baseType: !104, size: 32, offset: 64)
!9096 = !DIDerivedType(tag: DW_TAG_member, scope: !9057, file: !125, line: 127, baseType: !9097, size: 64, offset: 96)
!9097 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9057, file: !125, line: 127, size: 64, elements: !9098)
!9098 = !{!9099}
!9099 = !DIDerivedType(tag: DW_TAG_member, scope: !9097, file: !125, line: 128, baseType: !9100, size: 64)
!9100 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !9097, file: !125, line: 128, size: 64, elements: !9101)
!9101 = !{!9102, !9103}
!9102 = !DIDerivedType(tag: DW_TAG_member, name: "buf_len", scope: !9100, file: !125, line: 129, baseType: !113, size: 32)
!9103 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !9100, file: !125, line: 131, baseType: !209, size: 32, offset: 32)
!9104 = !DIDerivedType(tag: DW_TAG_member, name: "err", scope: !9047, file: !125, line: 187, baseType: !9052, size: 32, offset: 64)
!9105 = !DIDerivedType(tag: DW_TAG_member, name: "xcqcnt", scope: !9038, file: !125, line: 251, baseType: !142, size: 32, offset: 32)
!9106 = !DIDerivedType(tag: DW_TAG_member, name: "sq", scope: !9038, file: !125, line: 254, baseType: !9107, size: 32, offset: 64)
!9107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9108, size: 32)
!9108 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_sq", file: !125, line: 142, size: 160, elements: !9109)
!9109 = !{!9110, !9111}
!9110 = !DIDerivedType(tag: DW_TAG_member, name: "_spsc", scope: !9108, file: !125, line: 143, baseType: !9081, size: 160)
!9111 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !9108, file: !125, line: 144, baseType: !9112, offset: 160)
!9112 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9057, elements: !197)
!9113 = !DIDerivedType(tag: DW_TAG_member, name: "cq", scope: !9038, file: !125, line: 257, baseType: !9114, size: 32, offset: 96)
!9114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9115, size: 32)
!9115 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_cq", file: !125, line: 161, size: 160, elements: !9116)
!9116 = !{!9117, !9118}
!9117 = !DIDerivedType(tag: DW_TAG_member, name: "_spsc", scope: !9115, file: !125, line: 162, baseType: !9081, size: 160)
!9118 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !9115, file: !125, line: 163, baseType: !9119, offset: 160)
!9119 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9120, elements: !197)
!9120 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_cqe", file: !125, line: 150, size: 64, elements: !9121)
!9121 = !{!9122, !9123}
!9122 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !9120, file: !125, line: 151, baseType: !220, size: 32)
!9123 = !DIDerivedType(tag: DW_TAG_member, name: "userdata", scope: !9120, file: !125, line: 152, baseType: !104, size: 32, offset: 32)
!9124 = !{!9125, !9126, !9128, !9130}
!9125 = !DILocalVariable(name: "r", arg: 1, scope: !9034, file: !871, line: 25, type: !9037)
!9126 = !DILocalVariable(name: "sqe", scope: !9034, file: !871, line: 30, type: !9127)
!9127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9057, size: 32)
!9128 = !DILocalVariable(name: "idx", scope: !9129, file: !871, line: 30, type: !24)
!9129 = distinct !DILexicalBlock(scope: !9034, file: !871, line: 30, column: 25)
!9130 = !DILocalVariable(name: "has_consumable", scope: !9129, file: !871, line: 30, type: !422)
!9131 = !DILocation(line: 0, scope: !9034)
!9132 = !DILocation(line: 30, column: 25, scope: !9129)
!9133 = !DILocation(line: 0, scope: !9129)
!9134 = !DILocation(line: 30, column: 25, scope: !9135)
!9135 = distinct !DILexicalBlock(scope: !9136, file: !871, line: 30, column: 25)
!9136 = distinct !DILexicalBlock(scope: !9129, file: !871, line: 30, column: 25)
!9137 = !DILocation(line: 33, column: 3, scope: !9138)
!9138 = distinct !DILexicalBlock(scope: !9139, file: !871, line: 32, column: 19)
!9139 = distinct !DILexicalBlock(scope: !9034, file: !871, line: 32, column: 6)
!9140 = !DILocation(line: 34, column: 2, scope: !9138)
!9141 = !DILocation(line: 36, column: 2, scope: !9034)
!9142 = distinct !DISubprogram(name: "atomic_get", scope: !3846, file: !3846, line: 159, type: !3847, scopeLine: 160, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !868, retainedNodes: !9143)
!9143 = !{!9144}
!9144 = !DILocalVariable(name: "target", arg: 1, scope: !9142, file: !3846, line: 159, type: !3850)
!9145 = !DILocation(line: 0, scope: !9142)
!9146 = !DILocation(line: 161, column: 9, scope: !9142)
!9147 = !DILocation(line: 161, column: 2, scope: !9142)
!9148 = distinct !DISubprogram(name: "rtio_iodev_submit", scope: !125, file: !125, line: 457, type: !9074, scopeLine: 458, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !868, retainedNodes: !9149)
!9149 = !{!9150, !9151}
!9150 = !DILocalVariable(name: "sqe", arg: 1, scope: !9148, file: !125, line: 457, type: !9055)
!9151 = !DILocalVariable(name: "r", arg: 2, scope: !9148, file: !125, line: 457, type: !9037)
!9152 = !DILocation(line: 0, scope: !9148)
!9153 = !DILocation(line: 459, column: 7, scope: !9148)
!9154 = !DILocation(line: 459, column: 14, scope: !9148)
!9155 = !DILocation(line: 459, column: 19, scope: !9148)
!9156 = !DILocation(line: 459, column: 2, scope: !9148)
!9157 = !DILocation(line: 460, column: 1, scope: !9148)
!9158 = distinct !DISubprogram(name: "rtio_simple_ok", scope: !871, file: !871, line: 42, type: !9053, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !868, retainedNodes: !9159)
!9159 = !{!9160, !9161, !9162, !9163}
!9160 = !DILocalVariable(name: "r", arg: 1, scope: !9158, file: !871, line: 42, type: !9037)
!9161 = !DILocalVariable(name: "sqe", arg: 2, scope: !9158, file: !871, line: 42, type: !9055)
!9162 = !DILocalVariable(name: "result", arg: 3, scope: !9158, file: !871, line: 42, type: !108)
!9163 = !DILocalVariable(name: "userdata", scope: !9158, file: !871, line: 44, type: !104)
!9164 = !DILocation(line: 0, scope: !9158)
!9165 = !DILocation(line: 44, column: 24, scope: !9158)
!9166 = !DILocation(line: 46, column: 2, scope: !9167)
!9167 = distinct !DILexicalBlock(scope: !9168, file: !871, line: 46, column: 2)
!9168 = distinct !DILexicalBlock(scope: !9158, file: !871, line: 46, column: 2)
!9169 = !DILocation(line: 46, column: 2, scope: !9168)
!9170 = !DILocation(line: 46, column: 2, scope: !9171)
!9171 = distinct !DILexicalBlock(scope: !9167, file: !871, line: 46, column: 2)
!9172 = !DILocation(line: 47, column: 2, scope: !9158)
!9173 = !DILocation(line: 48, column: 2, scope: !9158)
!9174 = !DILocation(line: 49, column: 1, scope: !9158)
!9175 = distinct !DISubprogram(name: "atomic_add", scope: !3846, file: !3846, line: 86, type: !3882, scopeLine: 87, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !868, retainedNodes: !9176)
!9176 = !{!9177, !9178}
!9177 = !DILocalVariable(name: "target", arg: 1, scope: !9175, file: !3846, line: 86, type: !3884)
!9178 = !DILocalVariable(name: "value", arg: 2, scope: !9175, file: !3846, line: 86, type: !3849)
!9179 = !DILocation(line: 0, scope: !9175)
!9180 = !DILocation(line: 88, column: 9, scope: !9175)
!9181 = !DILocation(line: 88, column: 2, scope: !9175)
!9182 = distinct !DISubprogram(name: "rtio_cqe_submit", scope: !125, file: !125, line: 607, type: !9183, scopeLine: 608, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !868, retainedNodes: !9185)
!9183 = !DISubroutineType(types: !9184)
!9184 = !{null, !9037, !108, !104}
!9185 = !{!9186, !9187, !9188, !9189, !9191, !9193}
!9186 = !DILocalVariable(name: "r", arg: 1, scope: !9182, file: !125, line: 607, type: !9037)
!9187 = !DILocalVariable(name: "result", arg: 2, scope: !9182, file: !125, line: 607, type: !108)
!9188 = !DILocalVariable(name: "userdata", arg: 3, scope: !9182, file: !125, line: 607, type: !104)
!9189 = !DILocalVariable(name: "cqe", scope: !9182, file: !125, line: 609, type: !9190)
!9190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9120, size: 32)
!9191 = !DILocalVariable(name: "idx", scope: !9192, file: !125, line: 609, type: !24)
!9192 = distinct !DILexicalBlock(scope: !9182, file: !125, line: 609, column: 25)
!9193 = !DILocalVariable(name: "acq", scope: !9192, file: !125, line: 609, type: !422)
!9194 = !DILocation(line: 0, scope: !9182)
!9195 = !DILocation(line: 609, column: 25, scope: !9192)
!9196 = !DILocation(line: 0, scope: !9192)
!9197 = !DILocation(line: 612, column: 18, scope: !9198)
!9198 = distinct !DILexicalBlock(scope: !9199, file: !125, line: 611, column: 19)
!9199 = distinct !DILexicalBlock(scope: !9182, file: !125, line: 611, column: 6)
!9200 = !DILocation(line: 612, column: 3, scope: !9198)
!9201 = !DILocation(line: 613, column: 2, scope: !9198)
!9202 = !DILocation(line: 609, column: 25, scope: !9203)
!9203 = distinct !DILexicalBlock(scope: !9204, file: !125, line: 609, column: 25)
!9204 = distinct !DILexicalBlock(scope: !9192, file: !125, line: 609, column: 25)
!9205 = !DILocation(line: 614, column: 8, scope: !9206)
!9206 = distinct !DILexicalBlock(scope: !9199, file: !125, line: 613, column: 9)
!9207 = !DILocation(line: 614, column: 15, scope: !9206)
!9208 = !DILocation(line: 615, column: 8, scope: !9206)
!9209 = !DILocation(line: 615, column: 17, scope: !9206)
!9210 = !DILocation(line: 616, column: 3, scope: !9211)
!9211 = distinct !DILexicalBlock(scope: !9212, file: !125, line: 616, column: 3)
!9212 = distinct !DILexicalBlock(scope: !9206, file: !125, line: 616, column: 3)
!9213 = !DILocation(line: 616, column: 3, scope: !9212)
!9214 = !DILocation(line: 616, column: 3, scope: !9215)
!9215 = distinct !DILexicalBlock(scope: !9211, file: !125, line: 616, column: 3)
!9216 = !DILocation(line: 629, column: 1, scope: !9182)
!9217 = distinct !DISubprogram(name: "atomic_inc", scope: !3846, file: !3846, line: 123, type: !9218, scopeLine: 124, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !868, retainedNodes: !9220)
!9218 = !DISubroutineType(types: !9219)
!9219 = !{!3849, !3884}
!9220 = !{!9221}
!9221 = !DILocalVariable(name: "target", arg: 1, scope: !9217, file: !3846, line: 123, type: !3884)
!9222 = !DILocation(line: 0, scope: !9217)
!9223 = !DILocation(line: 125, column: 9, scope: !9217)
!9224 = !DILocation(line: 125, column: 2, scope: !9217)
!9225 = distinct !DISubprogram(name: "rtio_simple_err", scope: !871, file: !871, line: 54, type: !9053, scopeLine: 55, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !868, retainedNodes: !9226)
!9226 = !{!9227, !9228, !9229, !9230, !9231, !9232, !9233, !9237, !9238, !9241}
!9227 = !DILocalVariable(name: "r", arg: 1, scope: !9225, file: !871, line: 54, type: !9037)
!9228 = !DILocalVariable(name: "sqe", arg: 2, scope: !9225, file: !871, line: 54, type: !9055)
!9229 = !DILocalVariable(name: "result", arg: 3, scope: !9225, file: !871, line: 54, type: !108)
!9230 = !DILocalVariable(name: "nsqe", scope: !9225, file: !871, line: 56, type: !9127)
!9231 = !DILocalVariable(name: "userdata", scope: !9225, file: !871, line: 57, type: !104)
!9232 = !DILocalVariable(name: "chained", scope: !9225, file: !871, line: 58, type: !422)
!9233 = !DILocalVariable(name: "idx", scope: !9234, file: !871, line: 65, type: !24)
!9234 = distinct !DILexicalBlock(scope: !9235, file: !871, line: 65, column: 10)
!9235 = distinct !DILexicalBlock(scope: !9236, file: !871, line: 63, column: 15)
!9236 = distinct !DILexicalBlock(scope: !9225, file: !871, line: 63, column: 6)
!9237 = !DILocalVariable(name: "has_consumable", scope: !9234, file: !871, line: 65, type: !422)
!9238 = !DILocalVariable(name: "idx", scope: !9239, file: !871, line: 70, type: !24)
!9239 = distinct !DILexicalBlock(scope: !9240, file: !871, line: 70, column: 11)
!9240 = distinct !DILexicalBlock(scope: !9235, file: !871, line: 66, column: 58)
!9241 = !DILocalVariable(name: "has_consumable", scope: !9239, file: !871, line: 70, type: !422)
!9242 = !DILocation(line: 0, scope: !9225)
!9243 = !DILocation(line: 57, column: 24, scope: !9225)
!9244 = !DILocation(line: 58, column: 22, scope: !9225)
!9245 = !DILocation(line: 58, column: 28, scope: !9225)
!9246 = !DILocation(line: 58, column: 17, scope: !9225)
!9247 = !DILocation(line: 60, column: 2, scope: !9248)
!9248 = distinct !DILexicalBlock(scope: !9249, file: !871, line: 60, column: 2)
!9249 = distinct !DILexicalBlock(scope: !9225, file: !871, line: 60, column: 2)
!9250 = !DILocation(line: 60, column: 2, scope: !9249)
!9251 = !DILocation(line: 60, column: 2, scope: !9252)
!9252 = distinct !DILexicalBlock(scope: !9248, file: !871, line: 60, column: 2)
!9253 = !DILocation(line: 61, column: 34, scope: !9225)
!9254 = !DILocation(line: 61, column: 2, scope: !9225)
!9255 = !DILocation(line: 63, column: 6, scope: !9225)
!9256 = !DILocation(line: 65, column: 10, scope: !9234)
!9257 = !DILocation(line: 0, scope: !9234)
!9258 = !DILocation(line: 0, scope: !9235)
!9259 = !DILocation(line: 66, column: 32, scope: !9235)
!9260 = !DILocation(line: 66, column: 38, scope: !9235)
!9261 = !DILocation(line: 66, column: 23, scope: !9235)
!9262 = !DILocation(line: 66, column: 3, scope: !9235)
!9263 = !DILocation(line: 67, column: 21, scope: !9240)
!9264 = !DILocation(line: 68, column: 4, scope: !9265)
!9265 = distinct !DILexicalBlock(scope: !9266, file: !871, line: 68, column: 4)
!9266 = distinct !DILexicalBlock(scope: !9240, file: !871, line: 68, column: 4)
!9267 = !DILocation(line: 68, column: 4, scope: !9266)
!9268 = !DILocation(line: 68, column: 4, scope: !9269)
!9269 = distinct !DILexicalBlock(scope: !9265, file: !871, line: 68, column: 4)
!9270 = !DILocation(line: 69, column: 4, scope: !9240)
!9271 = !DILocation(line: 70, column: 11, scope: !9239)
!9272 = !DILocation(line: 0, scope: !9239)
!9273 = !DILocation(line: 74, column: 4, scope: !9274)
!9274 = distinct !DILexicalBlock(scope: !9275, file: !871, line: 73, column: 21)
!9275 = distinct !DILexicalBlock(scope: !9235, file: !871, line: 73, column: 7)
!9276 = !DILocation(line: 75, column: 3, scope: !9274)
!9277 = !DILocation(line: 79, column: 3, scope: !9278)
!9278 = distinct !DILexicalBlock(scope: !9236, file: !871, line: 77, column: 9)
!9279 = !DILocation(line: 81, column: 1, scope: !9225)
!9280 = distinct !DISubprogram(name: "rtio_concurrent_submit", scope: !988, file: !988, line: 119, type: !896, scopeLine: 120, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !879, retainedNodes: !9281)
!9281 = !{!9282, !9283, !9284, !9285, !9286, !9291, !9295, !9296, !9299, !9300, !9302, !9305, !9306, !9308, !9309, !9312}
!9282 = !DILocalVariable(name: "r", arg: 1, scope: !9280, file: !988, line: 119, type: !898)
!9283 = !DILocalVariable(name: "exc", scope: !9280, file: !988, line: 124, type: !882)
!9284 = !DILocalVariable(name: "sqe", scope: !9280, file: !988, line: 126, type: !982)
!9285 = !DILocalVariable(name: "last_sqe", scope: !9280, file: !988, line: 127, type: !982)
!9286 = !DILocalVariable(name: "key", scope: !9280, file: !988, line: 128, type: !9287)
!9287 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !436, line: 106, baseType: !9288)
!9288 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !436, line: 32, size: 32, elements: !9289)
!9289 = !{!9290}
!9290 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !9288, file: !436, line: 33, baseType: !108, size: 32)
!9291 = !DILocalVariable(name: "idx", scope: !9292, file: !988, line: 137, type: !24)
!9292 = distinct !DILexicalBlock(scope: !9293, file: !988, line: 137, column: 9)
!9293 = distinct !DILexicalBlock(scope: !9294, file: !988, line: 136, column: 29)
!9294 = distinct !DILexicalBlock(scope: !9280, file: !988, line: 136, column: 6)
!9295 = !DILocalVariable(name: "has_consumable", scope: !9292, file: !988, line: 137, type: !422)
!9296 = !DILocalVariable(name: "idx", scope: !9297, file: !988, line: 140, type: !24)
!9297 = distinct !DILexicalBlock(scope: !9298, file: !988, line: 140, column: 9)
!9298 = distinct !DILexicalBlock(scope: !9294, file: !988, line: 138, column: 9)
!9299 = !DILocalVariable(name: "has_next", scope: !9297, file: !988, line: 140, type: !422)
!9300 = !DILocalVariable(name: "task_idx", scope: !9301, file: !988, line: 148, type: !168)
!9301 = distinct !DILexicalBlock(scope: !9280, file: !988, line: 144, column: 46)
!9302 = !DILocalVariable(name: "idx", scope: !9303, file: !988, line: 159, type: !24)
!9303 = distinct !DILexicalBlock(scope: !9304, file: !988, line: 159, column: 10)
!9304 = distinct !DILexicalBlock(scope: !9301, file: !988, line: 158, column: 58)
!9305 = !DILocalVariable(name: "has_next", scope: !9303, file: !988, line: 159, type: !422)
!9306 = !DILocalVariable(name: "idx", scope: !9307, file: !988, line: 167, type: !24)
!9307 = distinct !DILexicalBlock(scope: !9301, file: !988, line: 167, column: 9)
!9308 = !DILocalVariable(name: "has_next", scope: !9307, file: !988, line: 167, type: !422)
!9309 = !DILocalVariable(name: "idx", scope: !9310, file: !988, line: 181, type: !24)
!9310 = distinct !DILexicalBlock(scope: !9311, file: !988, line: 181, column: 9)
!9311 = distinct !DILexicalBlock(scope: !9280, file: !988, line: 179, column: 22)
!9312 = !DILocalVariable(name: "has_next", scope: !9310, file: !988, line: 181, type: !422)
!9313 = !DILocation(line: 0, scope: !9280)
!9314 = !DILocation(line: 122, column: 2, scope: !9315)
!9315 = distinct !DILexicalBlock(scope: !9316, file: !988, line: 122, column: 2)
!9316 = distinct !DILexicalBlock(scope: !9317, file: !988, line: 122, column: 2)
!9317 = distinct !DILexicalBlock(scope: !9318, file: !988, line: 122, column: 2)
!9318 = distinct !DILexicalBlock(scope: !9280, file: !988, line: 122, column: 2)
!9319 = !DILocation(line: 125, column: 41, scope: !9280)
!9320 = !DILocalVariable(name: "l", arg: 1, scope: !9321, file: !436, line: 136, type: !9324)
!9321 = distinct !DISubprogram(name: "k_spin_lock", scope: !436, file: !436, line: 136, type: !9322, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !879, retainedNodes: !9325)
!9322 = !DISubroutineType(types: !9323)
!9323 = !{!9287, !9324}
!9324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !977, size: 32)
!9325 = !{!9320, !9326}
!9326 = !DILocalVariable(name: "k", scope: !9321, file: !436, line: 139, type: !9287)
!9327 = !DILocation(line: 0, scope: !9321, inlinedAt: !9328)
!9328 = distinct !DILocation(line: 130, column: 8, scope: !9280)
!9329 = !DILocation(line: 55, column: 2, scope: !9330, inlinedAt: !9334)
!9330 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4225, file: !4225, line: 42, type: !4226, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !879, retainedNodes: !9331)
!9331 = !{!9332, !9333}
!9332 = !DILocalVariable(name: "key", scope: !9330, file: !4225, line: 44, type: !32)
!9333 = !DILocalVariable(name: "tmp", scope: !9330, file: !4225, line: 53, type: !32)
!9334 = distinct !DILocation(line: 145, column: 10, scope: !9321, inlinedAt: !9328)
!9335 = !{i64 2342609}
!9336 = !DILocation(line: 0, scope: !9330, inlinedAt: !9334)
!9337 = !DILocation(line: 136, column: 11, scope: !9294)
!9338 = !DILocation(line: 136, column: 20, scope: !9294)
!9339 = !DILocation(line: 0, scope: !9294)
!9340 = !DILocation(line: 136, column: 6, scope: !9280)
!9341 = !DILocation(line: 137, column: 9, scope: !9292)
!9342 = !DILocation(line: 0, scope: !9292)
!9343 = !DILocation(line: 140, column: 9, scope: !9297)
!9344 = !DILocation(line: 0, scope: !9297)
!9345 = !DILocation(line: 173, column: 7, scope: !9280)
!9346 = !DILocation(line: 173, column: 19, scope: !9280)
!9347 = !DILocation(line: 179, column: 2, scope: !9280)
!9348 = !DILocation(line: 144, column: 24, scope: !9280)
!9349 = !DILocation(line: 144, column: 2, scope: !9280)
!9350 = !DILocation(line: 145, column: 3, scope: !9351)
!9351 = distinct !DILexicalBlock(scope: !9352, file: !988, line: 145, column: 3)
!9352 = distinct !DILexicalBlock(scope: !9353, file: !988, line: 145, column: 3)
!9353 = distinct !DILexicalBlock(scope: !9354, file: !988, line: 145, column: 3)
!9354 = distinct !DILexicalBlock(scope: !9301, file: !988, line: 145, column: 3)
!9355 = !DILocation(line: 148, column: 23, scope: !9301)
!9356 = !DILocation(line: 0, scope: !9301)
!9357 = !DILocation(line: 150, column: 3, scope: !9358)
!9358 = distinct !DILexicalBlock(scope: !9359, file: !988, line: 150, column: 3)
!9359 = distinct !DILexicalBlock(scope: !9360, file: !988, line: 150, column: 3)
!9360 = distinct !DILexicalBlock(scope: !9361, file: !988, line: 150, column: 3)
!9361 = distinct !DILexicalBlock(scope: !9301, file: !988, line: 150, column: 3)
!9362 = !DILocation(line: 153, column: 8, scope: !9301)
!9363 = !DILocation(line: 153, column: 3, scope: !9301)
!9364 = !DILocation(line: 153, column: 27, scope: !9301)
!9365 = !DILocation(line: 154, column: 8, scope: !9301)
!9366 = !DILocation(line: 154, column: 3, scope: !9301)
!9367 = !DILocation(line: 154, column: 30, scope: !9301)
!9368 = !DILocation(line: 156, column: 3, scope: !9369)
!9369 = distinct !DILexicalBlock(scope: !9370, file: !988, line: 156, column: 3)
!9370 = distinct !DILexicalBlock(scope: !9371, file: !988, line: 156, column: 3)
!9371 = distinct !DILexicalBlock(scope: !9372, file: !988, line: 156, column: 3)
!9372 = distinct !DILexicalBlock(scope: !9301, file: !988, line: 156, column: 3)
!9373 = !DILocation(line: 158, column: 22, scope: !9301)
!9374 = !DILocation(line: 158, column: 31, scope: !9301)
!9375 = !DILocation(line: 158, column: 37, scope: !9301)
!9376 = !DILocation(line: 158, column: 3, scope: !9301)
!9377 = !DILocation(line: 159, column: 10, scope: !9303)
!9378 = !DILocation(line: 0, scope: !9303)
!9379 = !DILocation(line: 162, column: 3, scope: !9380)
!9380 = distinct !DILexicalBlock(scope: !9381, file: !988, line: 162, column: 3)
!9381 = distinct !DILexicalBlock(scope: !9382, file: !988, line: 162, column: 3)
!9382 = distinct !DILexicalBlock(scope: !9383, file: !988, line: 162, column: 3)
!9383 = distinct !DILexicalBlock(scope: !9301, file: !988, line: 162, column: 3)
!9384 = !DILocation(line: 167, column: 9, scope: !9307)
!9385 = !DILocation(line: 0, scope: !9307)
!9386 = !DILocation(line: 144, column: 21, scope: !9280)
!9387 = !DILocation(line: 179, column: 13, scope: !9280)
!9388 = !DILocation(line: 181, column: 9, scope: !9310)
!9389 = !DILocation(line: 0, scope: !9310)
!9390 = !DILocation(line: 185, column: 16, scope: !9280)
!9391 = !DILocation(line: 188, column: 2, scope: !9280)
!9392 = !DILocalVariable(name: "key", arg: 2, scope: !9393, file: !436, line: 190, type: !9287)
!9393 = distinct !DISubprogram(name: "k_spin_unlock", scope: !436, file: !436, line: 189, type: !9394, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !879, retainedNodes: !9396)
!9394 = !DISubroutineType(types: !9395)
!9395 = !{null, !9324, !9287}
!9396 = !{!9397, !9392}
!9397 = !DILocalVariable(name: "l", arg: 1, scope: !9393, file: !436, line: 189, type: !9324)
!9398 = !DILocation(line: 0, scope: !9393, inlinedAt: !9399)
!9399 = distinct !DILocation(line: 190, column: 2, scope: !9280)
!9400 = !DILocalVariable(name: "key", arg: 1, scope: !9401, file: !4225, line: 84, type: !32)
!9401 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4225, file: !4225, line: 84, type: !4238, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !879, retainedNodes: !9402)
!9402 = !{!9400}
!9403 = !DILocation(line: 0, scope: !9401, inlinedAt: !9404)
!9404 = distinct !DILocation(line: 215, column: 2, scope: !9393, inlinedAt: !9399)
!9405 = !DILocation(line: 95, column: 2, scope: !9401, inlinedAt: !9404)
!9406 = !{i64 2343426}
!9407 = !DILocation(line: 192, column: 2, scope: !9280)
!9408 = distinct !DISubprogram(name: "atomic_get", scope: !3846, file: !3846, line: 159, type: !3847, scopeLine: 160, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !879, retainedNodes: !9409)
!9409 = !{!9410}
!9410 = !DILocalVariable(name: "target", arg: 1, scope: !9408, file: !3846, line: 159, type: !3850)
!9411 = !DILocation(line: 0, scope: !9408)
!9412 = !DILocation(line: 161, column: 9, scope: !9408)
!9413 = !DILocation(line: 161, column: 2, scope: !9408)
!9414 = distinct !DISubprogram(name: "conex_task_free", scope: !988, file: !988, line: 39, type: !9415, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !879, retainedNodes: !9417)
!9415 = !DISubroutineType(types: !9416)
!9416 = !{!422, !882}
!9417 = !{!9418}
!9418 = !DILocalVariable(name: "exc", arg: 1, scope: !9414, file: !988, line: 39, type: !882)
!9419 = !DILocation(line: 0, scope: !9414)
!9420 = !DILocation(line: 41, column: 15, scope: !9414)
!9421 = !DILocation(line: 41, column: 10, scope: !9414)
!9422 = !DILocation(line: 41, column: 30, scope: !9414)
!9423 = !DILocation(line: 41, column: 25, scope: !9414)
!9424 = !DILocation(line: 41, column: 23, scope: !9414)
!9425 = !DILocation(line: 41, column: 48, scope: !9414)
!9426 = !DILocation(line: 41, column: 43, scope: !9414)
!9427 = !DILocation(line: 41, column: 40, scope: !9414)
!9428 = !DILocation(line: 41, column: 2, scope: !9414)
!9429 = distinct !DISubprogram(name: "conex_task_next", scope: !988, file: !988, line: 47, type: !9430, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !879, retainedNodes: !9432)
!9430 = !DISubroutineType(types: !9431)
!9431 = !{!168, !882}
!9432 = !{!9433, !9434}
!9433 = !DILocalVariable(name: "exc", arg: 1, scope: !9429, file: !988, line: 47, type: !882)
!9434 = !DILocalVariable(name: "task_id", scope: !9429, file: !988, line: 49, type: !168)
!9435 = !DILocation(line: 0, scope: !9429)
!9436 = !DILocation(line: 49, column: 26, scope: !9429)
!9437 = !DILocation(line: 51, column: 14, scope: !9429)
!9438 = !DILocation(line: 52, column: 2, scope: !9429)
!9439 = distinct !DISubprogram(name: "conex_resume", scope: !988, file: !988, line: 94, type: !9440, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !879, retainedNodes: !9442)
!9440 = !DISubroutineType(types: !9441)
!9441 = !{null, !898, !882}
!9442 = !{!9443, !9444, !9445}
!9443 = !DILocalVariable(name: "r", arg: 1, scope: !9439, file: !988, line: 94, type: !898)
!9444 = !DILocalVariable(name: "exc", arg: 2, scope: !9439, file: !988, line: 94, type: !882)
!9445 = !DILocalVariable(name: "task_id", scope: !9446, file: !988, line: 97, type: !168)
!9446 = distinct !DILexicalBlock(scope: !9439, file: !988, line: 97, column: 2)
!9447 = !DILocation(line: 0, scope: !9439)
!9448 = !DILocation(line: 97, column: 31, scope: !9446)
!9449 = !DILocation(line: 0, scope: !9446)
!9450 = !DILocation(line: 97, column: 56, scope: !9451)
!9451 = distinct !DILexicalBlock(scope: !9446, file: !988, line: 97, column: 2)
!9452 = !DILocation(line: 97, column: 49, scope: !9451)
!9453 = !DILocation(line: 97, column: 2, scope: !9446)
!9454 = !DILocation(line: 104, column: 1, scope: !9439)
!9455 = !DILocation(line: 98, column: 12, scope: !9456)
!9456 = distinct !DILexicalBlock(scope: !9457, file: !988, line: 98, column: 7)
!9457 = distinct !DILexicalBlock(scope: !9451, file: !988, line: 97, column: 76)
!9458 = !DILocation(line: 98, column: 39, scope: !9456)
!9459 = !DILocation(line: 98, column: 32, scope: !9456)
!9460 = !DILocation(line: 98, column: 7, scope: !9456)
!9461 = !DILocation(line: 98, column: 50, scope: !9456)
!9462 = !DILocation(line: 98, column: 7, scope: !9457)
!9463 = !DILocation(line: 99, column: 4, scope: !9464)
!9464 = distinct !DILexicalBlock(scope: !9465, file: !988, line: 99, column: 4)
!9465 = distinct !DILexicalBlock(scope: !9466, file: !988, line: 99, column: 4)
!9466 = distinct !DILexicalBlock(scope: !9467, file: !988, line: 99, column: 4)
!9467 = distinct !DILexicalBlock(scope: !9468, file: !988, line: 99, column: 4)
!9468 = distinct !DILexicalBlock(scope: !9456, file: !988, line: 98, column: 74)
!9469 = !DILocation(line: 100, column: 9, scope: !9468)
!9470 = !DILocation(line: 100, column: 4, scope: !9468)
!9471 = !DILocation(line: 100, column: 30, scope: !9468)
!9472 = !DILocation(line: 101, column: 27, scope: !9468)
!9473 = !DILocation(line: 101, column: 22, scope: !9468)
!9474 = !DILocation(line: 101, column: 4, scope: !9468)
!9475 = !DILocation(line: 102, column: 3, scope: !9468)
!9476 = !DILocation(line: 97, column: 72, scope: !9451)
!9477 = distinct !{!9477, !9453, !9478}
!9478 = !DILocation(line: 103, column: 2, scope: !9446)
!9479 = distinct !DISubprogram(name: "rtio_iodev_submit", scope: !125, file: !125, line: 457, type: !935, scopeLine: 458, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !879, retainedNodes: !9480)
!9480 = !{!9481, !9482}
!9481 = !DILocalVariable(name: "sqe", arg: 1, scope: !9479, file: !125, line: 457, type: !937)
!9482 = !DILocalVariable(name: "r", arg: 2, scope: !9479, file: !125, line: 457, type: !898)
!9483 = !DILocation(line: 0, scope: !9479)
!9484 = !DILocation(line: 459, column: 7, scope: !9479)
!9485 = !DILocation(line: 459, column: 14, scope: !9479)
!9486 = !DILocation(line: 459, column: 19, scope: !9479)
!9487 = !DILocation(line: 459, column: 2, scope: !9479)
!9488 = !DILocation(line: 460, column: 1, scope: !9479)
!9489 = distinct !DISubprogram(name: "rtio_concurrent_ok", scope: !988, file: !988, line: 198, type: !973, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !879, retainedNodes: !9490)
!9490 = !{!9491, !9492, !9493, !9494, !9495, !9496, !9497, !9498, !9502}
!9491 = !DILocalVariable(name: "r", arg: 1, scope: !9489, file: !988, line: 198, type: !898)
!9492 = !DILocalVariable(name: "sqe", arg: 2, scope: !9489, file: !988, line: 198, type: !937)
!9493 = !DILocalVariable(name: "result", arg: 3, scope: !9489, file: !988, line: 198, type: !108)
!9494 = !DILocalVariable(name: "next_sqe", scope: !9489, file: !988, line: 200, type: !982)
!9495 = !DILocalVariable(name: "key", scope: !9489, file: !988, line: 201, type: !9287)
!9496 = !DILocalVariable(name: "exc", scope: !9489, file: !988, line: 202, type: !882)
!9497 = !DILocalVariable(name: "task_id", scope: !9489, file: !988, line: 216, type: !168)
!9498 = !DILocalVariable(name: "idx", scope: !9499, file: !988, line: 219, type: !24)
!9499 = distinct !DILexicalBlock(scope: !9500, file: !988, line: 219, column: 14)
!9500 = distinct !DILexicalBlock(scope: !9501, file: !988, line: 218, column: 37)
!9501 = distinct !DILexicalBlock(scope: !9489, file: !988, line: 218, column: 6)
!9502 = !DILocalVariable(name: "has_next", scope: !9499, file: !988, line: 219, type: !422)
!9503 = !DILocation(line: 0, scope: !9489)
!9504 = !DILocation(line: 202, column: 79, scope: !9489)
!9505 = !DILocation(line: 0, scope: !9321, inlinedAt: !9506)
!9506 = distinct !DILocation(line: 211, column: 8, scope: !9489)
!9507 = !DILocation(line: 55, column: 2, scope: !9330, inlinedAt: !9508)
!9508 = distinct !DILocation(line: 145, column: 10, scope: !9321, inlinedAt: !9506)
!9509 = !DILocation(line: 0, scope: !9330, inlinedAt: !9508)
!9510 = !DILocation(line: 213, column: 34, scope: !9489)
!9511 = !DILocation(line: 213, column: 2, scope: !9489)
!9512 = !DILocation(line: 216, column: 21, scope: !9489)
!9513 = !DILocation(line: 218, column: 11, scope: !9501)
!9514 = !DILocation(line: 218, column: 17, scope: !9501)
!9515 = !DILocation(line: 218, column: 6, scope: !9489)
!9516 = !DILocation(line: 219, column: 14, scope: !9499)
!9517 = !DILocation(line: 0, scope: !9499)
!9518 = !DILocation(line: 221, column: 3, scope: !9500)
!9519 = !DILocation(line: 223, column: 8, scope: !9500)
!9520 = !DILocation(line: 223, column: 3, scope: !9500)
!9521 = !DILocation(line: 223, column: 26, scope: !9500)
!9522 = !DILocation(line: 224, column: 2, scope: !9500)
!9523 = !DILocation(line: 225, column: 8, scope: !9524)
!9524 = distinct !DILexicalBlock(scope: !9501, file: !988, line: 224, column: 9)
!9525 = !DILocation(line: 225, column: 3, scope: !9524)
!9526 = !DILocation(line: 225, column: 30, scope: !9524)
!9527 = !DILocation(line: 233, column: 2, scope: !9489)
!9528 = !DILocation(line: 0, scope: !9393, inlinedAt: !9529)
!9529 = distinct !DILocation(line: 235, column: 2, scope: !9489)
!9530 = !DILocation(line: 0, scope: !9401, inlinedAt: !9531)
!9531 = distinct !DILocation(line: 215, column: 2, scope: !9393, inlinedAt: !9529)
!9532 = !DILocation(line: 95, column: 2, scope: !9401, inlinedAt: !9531)
!9533 = !DILocation(line: 236, column: 1, scope: !9489)
!9534 = distinct !DISubprogram(name: "rtio_cqe_submit", scope: !125, file: !125, line: 607, type: !9535, scopeLine: 608, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !879, retainedNodes: !9537)
!9535 = !DISubroutineType(types: !9536)
!9536 = !{null, !898, !108, !104}
!9537 = !{!9538, !9539, !9540, !9541, !9543, !9545}
!9538 = !DILocalVariable(name: "r", arg: 1, scope: !9534, file: !125, line: 607, type: !898)
!9539 = !DILocalVariable(name: "result", arg: 2, scope: !9534, file: !125, line: 607, type: !108)
!9540 = !DILocalVariable(name: "userdata", arg: 3, scope: !9534, file: !125, line: 607, type: !104)
!9541 = !DILocalVariable(name: "cqe", scope: !9534, file: !125, line: 609, type: !9542)
!9542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !967, size: 32)
!9543 = !DILocalVariable(name: "idx", scope: !9544, file: !125, line: 609, type: !24)
!9544 = distinct !DILexicalBlock(scope: !9534, file: !125, line: 609, column: 25)
!9545 = !DILocalVariable(name: "acq", scope: !9544, file: !125, line: 609, type: !422)
!9546 = !DILocation(line: 0, scope: !9534)
!9547 = !DILocation(line: 609, column: 25, scope: !9544)
!9548 = !DILocation(line: 0, scope: !9544)
!9549 = !DILocation(line: 612, column: 18, scope: !9550)
!9550 = distinct !DILexicalBlock(scope: !9551, file: !125, line: 611, column: 19)
!9551 = distinct !DILexicalBlock(scope: !9534, file: !125, line: 611, column: 6)
!9552 = !DILocation(line: 612, column: 3, scope: !9550)
!9553 = !DILocation(line: 613, column: 2, scope: !9550)
!9554 = !DILocation(line: 609, column: 25, scope: !9555)
!9555 = distinct !DILexicalBlock(scope: !9556, file: !125, line: 609, column: 25)
!9556 = distinct !DILexicalBlock(scope: !9544, file: !125, line: 609, column: 25)
!9557 = !DILocation(line: 614, column: 8, scope: !9558)
!9558 = distinct !DILexicalBlock(scope: !9551, file: !125, line: 613, column: 9)
!9559 = !DILocation(line: 614, column: 15, scope: !9558)
!9560 = !DILocation(line: 615, column: 8, scope: !9558)
!9561 = !DILocation(line: 615, column: 17, scope: !9558)
!9562 = !DILocation(line: 616, column: 3, scope: !9563)
!9563 = distinct !DILexicalBlock(scope: !9564, file: !125, line: 616, column: 3)
!9564 = distinct !DILexicalBlock(scope: !9558, file: !125, line: 616, column: 3)
!9565 = !DILocation(line: 616, column: 3, scope: !9564)
!9566 = !DILocation(line: 616, column: 3, scope: !9567)
!9567 = distinct !DILexicalBlock(scope: !9563, file: !125, line: 616, column: 3)
!9568 = !DILocation(line: 629, column: 1, scope: !9534)
!9569 = distinct !DISubprogram(name: "conex_task_id", scope: !988, file: !988, line: 55, type: !9570, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !879, retainedNodes: !9572)
!9570 = !DISubroutineType(types: !9571)
!9571 = !{!168, !882, !937}
!9572 = !{!9573, !9574, !9575}
!9573 = !DILocalVariable(name: "exc", arg: 1, scope: !9569, file: !988, line: 55, type: !882)
!9574 = !DILocalVariable(name: "sqe", arg: 2, scope: !9569, file: !988, line: 56, type: !937)
!9575 = !DILocalVariable(name: "task_id", scope: !9569, file: !988, line: 58, type: !168)
!9576 = !DILocation(line: 0, scope: !9569)
!9577 = !DILocation(line: 58, column: 26, scope: !9569)
!9578 = !DILocation(line: 60, column: 17, scope: !9579)
!9579 = distinct !DILexicalBlock(scope: !9580, file: !988, line: 60, column: 2)
!9580 = distinct !DILexicalBlock(scope: !9569, file: !988, line: 60, column: 2)
!9581 = !DILocation(line: 60, column: 2, scope: !9580)
!9582 = !DILocation(line: 61, column: 12, scope: !9583)
!9583 = distinct !DILexicalBlock(scope: !9584, file: !988, line: 61, column: 7)
!9584 = distinct !DILexicalBlock(scope: !9579, file: !988, line: 60, column: 44)
!9585 = !DILocation(line: 61, column: 29, scope: !9583)
!9586 = !DILocation(line: 61, column: 7, scope: !9583)
!9587 = !DILocation(line: 61, column: 47, scope: !9583)
!9588 = !DILocation(line: 61, column: 7, scope: !9584)
!9589 = !DILocation(line: 60, column: 40, scope: !9579)
!9590 = distinct !{!9590, !9581, !9591}
!9591 = !DILocation(line: 64, column: 2, scope: !9580)
!9592 = !DILocation(line: 65, column: 2, scope: !9569)
!9593 = distinct !DISubprogram(name: "conex_sweep_resume", scope: !988, file: !988, line: 106, type: !9440, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !879, retainedNodes: !9594)
!9594 = !{!9595, !9596}
!9595 = !DILocalVariable(name: "r", arg: 1, scope: !9593, file: !988, line: 106, type: !898)
!9596 = !DILocalVariable(name: "exc", arg: 2, scope: !9593, file: !988, line: 106, type: !882)
!9597 = !DILocation(line: 0, scope: !9593)
!9598 = !DILocation(line: 108, column: 2, scope: !9593)
!9599 = !DILocation(line: 109, column: 2, scope: !9593)
!9600 = !DILocation(line: 110, column: 1, scope: !9593)
!9601 = distinct !DISubprogram(name: "conex_sweep", scope: !988, file: !988, line: 80, type: !9440, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !879, retainedNodes: !9602)
!9602 = !{!9603, !9604, !9605}
!9603 = !DILocalVariable(name: "r", arg: 1, scope: !9601, file: !988, line: 80, type: !898)
!9604 = !DILocalVariable(name: "exc", arg: 2, scope: !9601, file: !988, line: 80, type: !882)
!9605 = !DILocalVariable(name: "task_id", scope: !9606, file: !988, line: 83, type: !168)
!9606 = distinct !DILexicalBlock(scope: !9601, file: !988, line: 83, column: 2)
!9607 = !DILocation(line: 0, scope: !9601)
!9608 = !DILocation(line: 83, column: 31, scope: !9606)
!9609 = !DILocation(line: 0, scope: !9606)
!9610 = !DILocation(line: 84, column: 12, scope: !9611)
!9611 = distinct !DILexicalBlock(scope: !9612, file: !988, line: 84, column: 7)
!9612 = distinct !DILexicalBlock(scope: !9613, file: !988, line: 83, column: 76)
!9613 = distinct !DILexicalBlock(scope: !9606, file: !988, line: 83, column: 2)
!9614 = !DILocation(line: 83, column: 56, scope: !9613)
!9615 = !DILocation(line: 83, column: 49, scope: !9613)
!9616 = !DILocation(line: 83, column: 2, scope: !9606)
!9617 = !DILocation(line: 84, column: 39, scope: !9611)
!9618 = !DILocation(line: 84, column: 32, scope: !9611)
!9619 = !DILocation(line: 84, column: 7, scope: !9611)
!9620 = !DILocation(line: 84, column: 50, scope: !9611)
!9621 = !DILocation(line: 84, column: 7, scope: !9612)
!9622 = !DILocation(line: 85, column: 4, scope: !9623)
!9623 = distinct !DILexicalBlock(scope: !9624, file: !988, line: 85, column: 4)
!9624 = distinct !DILexicalBlock(scope: !9625, file: !988, line: 85, column: 4)
!9625 = distinct !DILexicalBlock(scope: !9626, file: !988, line: 85, column: 4)
!9626 = distinct !DILexicalBlock(scope: !9627, file: !988, line: 85, column: 4)
!9627 = distinct !DILexicalBlock(scope: !9611, file: !988, line: 84, column: 73)
!9628 = !DILocation(line: 86, column: 4, scope: !9627)
!9629 = !DILocation(line: 87, column: 17, scope: !9627)
!9630 = !DILocation(line: 83, column: 72, scope: !9613)
!9631 = distinct !{!9631, !9616, !9632}
!9632 = !DILocation(line: 91, column: 2, scope: !9606)
!9633 = !DILocation(line: 92, column: 1, scope: !9601)
!9634 = distinct !DISubprogram(name: "conex_sweep_task", scope: !988, file: !988, line: 68, type: !9440, scopeLine: 69, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !879, retainedNodes: !9635)
!9635 = !{!9636, !9637, !9638, !9639, !9641, !9642, !9645}
!9636 = !DILocalVariable(name: "r", arg: 1, scope: !9634, file: !988, line: 68, type: !898)
!9637 = !DILocalVariable(name: "exc", arg: 2, scope: !9634, file: !988, line: 68, type: !882)
!9638 = !DILocalVariable(name: "sqe", scope: !9634, file: !988, line: 70, type: !982)
!9639 = !DILocalVariable(name: "idx", scope: !9640, file: !988, line: 70, type: !24)
!9640 = distinct !DILexicalBlock(scope: !9634, file: !988, line: 70, column: 25)
!9641 = !DILocalVariable(name: "has_consumable", scope: !9640, file: !988, line: 70, type: !422)
!9642 = !DILocalVariable(name: "idx", scope: !9643, file: !988, line: 74, type: !24)
!9643 = distinct !DILexicalBlock(scope: !9644, file: !988, line: 74, column: 9)
!9644 = distinct !DILexicalBlock(scope: !9634, file: !988, line: 72, column: 55)
!9645 = !DILocalVariable(name: "has_consumable", scope: !9643, file: !988, line: 74, type: !422)
!9646 = !DILocation(line: 0, scope: !9634)
!9647 = !DILocation(line: 70, column: 25, scope: !9640)
!9648 = !DILocation(line: 0, scope: !9640)
!9649 = !DILocation(line: 72, column: 29, scope: !9634)
!9650 = !DILocation(line: 72, column: 35, scope: !9634)
!9651 = !DILocation(line: 72, column: 21, scope: !9634)
!9652 = !DILocation(line: 72, column: 2, scope: !9634)
!9653 = !DILocation(line: 73, column: 3, scope: !9654)
!9654 = distinct !DILexicalBlock(scope: !9655, file: !988, line: 73, column: 3)
!9655 = distinct !DILexicalBlock(scope: !9644, file: !988, line: 73, column: 3)
!9656 = !DILocation(line: 73, column: 3, scope: !9655)
!9657 = !DILocation(line: 73, column: 3, scope: !9658)
!9658 = distinct !DILexicalBlock(scope: !9654, file: !988, line: 73, column: 3)
!9659 = !DILocation(line: 74, column: 9, scope: !9643)
!9660 = !DILocation(line: 0, scope: !9643)
!9661 = !DILocation(line: 77, column: 2, scope: !9662)
!9662 = distinct !DILexicalBlock(scope: !9663, file: !988, line: 77, column: 2)
!9663 = distinct !DILexicalBlock(scope: !9634, file: !988, line: 77, column: 2)
!9664 = !DILocation(line: 77, column: 2, scope: !9663)
!9665 = !DILocation(line: 77, column: 2, scope: !9666)
!9666 = distinct !DILexicalBlock(scope: !9662, file: !988, line: 77, column: 2)
!9667 = !DILocation(line: 78, column: 1, scope: !9634)
!9668 = distinct !DISubprogram(name: "atomic_add", scope: !3846, file: !3846, line: 86, type: !3882, scopeLine: 87, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !879, retainedNodes: !9669)
!9669 = !{!9670, !9671}
!9670 = !DILocalVariable(name: "target", arg: 1, scope: !9668, file: !3846, line: 86, type: !3884)
!9671 = !DILocalVariable(name: "value", arg: 2, scope: !9668, file: !3846, line: 86, type: !3849)
!9672 = !DILocation(line: 0, scope: !9668)
!9673 = !DILocation(line: 88, column: 9, scope: !9668)
!9674 = !DILocation(line: 88, column: 2, scope: !9668)
!9675 = distinct !DISubprogram(name: "atomic_inc", scope: !3846, file: !3846, line: 123, type: !9218, scopeLine: 124, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !879, retainedNodes: !9676)
!9676 = !{!9677}
!9677 = !DILocalVariable(name: "target", arg: 1, scope: !9675, file: !3846, line: 123, type: !3884)
!9678 = !DILocation(line: 0, scope: !9675)
!9679 = !DILocation(line: 125, column: 9, scope: !9675)
!9680 = !DILocation(line: 125, column: 2, scope: !9675)
!9681 = distinct !DISubprogram(name: "rtio_concurrent_err", scope: !988, file: !988, line: 241, type: !973, scopeLine: 242, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !879, retainedNodes: !9682)
!9682 = !{!9683, !9684, !9685, !9686, !9687, !9688, !9689, !9690, !9694, !9695, !9698}
!9683 = !DILocalVariable(name: "r", arg: 1, scope: !9681, file: !988, line: 241, type: !898)
!9684 = !DILocalVariable(name: "sqe", arg: 2, scope: !9681, file: !988, line: 241, type: !937)
!9685 = !DILocalVariable(name: "result", arg: 3, scope: !9681, file: !988, line: 241, type: !108)
!9686 = !DILocalVariable(name: "nsqe", scope: !9681, file: !988, line: 243, type: !982)
!9687 = !DILocalVariable(name: "key", scope: !9681, file: !988, line: 244, type: !9287)
!9688 = !DILocalVariable(name: "exc", scope: !9681, file: !988, line: 245, type: !882)
!9689 = !DILocalVariable(name: "task_id", scope: !9681, file: !988, line: 260, type: !168)
!9690 = !DILocalVariable(name: "idx", scope: !9691, file: !988, line: 265, type: !24)
!9691 = distinct !DILexicalBlock(scope: !9692, file: !988, line: 265, column: 10)
!9692 = distinct !DILexicalBlock(scope: !9693, file: !988, line: 264, column: 37)
!9693 = distinct !DILexicalBlock(scope: !9681, file: !988, line: 264, column: 6)
!9694 = !DILocalVariable(name: "has_next", scope: !9691, file: !988, line: 265, type: !422)
!9695 = !DILocalVariable(name: "idx", scope: !9696, file: !988, line: 268, type: !24)
!9696 = distinct !DILexicalBlock(scope: !9697, file: !988, line: 268, column: 11)
!9697 = distinct !DILexicalBlock(scope: !9692, file: !988, line: 266, column: 58)
!9698 = !DILocalVariable(name: "has_next", scope: !9696, file: !988, line: 268, type: !422)
!9699 = !DILocation(line: 0, scope: !9681)
!9700 = !DILocation(line: 245, column: 79, scope: !9681)
!9701 = !DILocation(line: 0, scope: !9321, inlinedAt: !9702)
!9702 = distinct !DILocation(line: 255, column: 8, scope: !9681)
!9703 = !DILocation(line: 55, column: 2, scope: !9330, inlinedAt: !9704)
!9704 = distinct !DILocation(line: 145, column: 10, scope: !9321, inlinedAt: !9702)
!9705 = !DILocation(line: 0, scope: !9330, inlinedAt: !9704)
!9706 = !DILocation(line: 257, column: 34, scope: !9681)
!9707 = !DILocation(line: 257, column: 2, scope: !9681)
!9708 = !DILocation(line: 260, column: 21, scope: !9681)
!9709 = !DILocation(line: 264, column: 11, scope: !9693)
!9710 = !DILocation(line: 264, column: 17, scope: !9693)
!9711 = !DILocation(line: 264, column: 6, scope: !9681)
!9712 = !DILocation(line: 265, column: 10, scope: !9691)
!9713 = !DILocation(line: 0, scope: !9691)
!9714 = !DILocation(line: 266, column: 23, scope: !9692)
!9715 = !DILocation(line: 266, column: 3, scope: !9692)
!9716 = !DILocation(line: 266, column: 32, scope: !9692)
!9717 = !DILocation(line: 266, column: 38, scope: !9692)
!9718 = !DILocation(line: 267, column: 41, scope: !9697)
!9719 = !DILocation(line: 267, column: 4, scope: !9697)
!9720 = !DILocation(line: 268, column: 11, scope: !9696)
!9721 = !DILocation(line: 0, scope: !9696)
!9722 = !DILocation(line: 273, column: 7, scope: !9681)
!9723 = !DILocation(line: 273, column: 2, scope: !9681)
!9724 = !DILocation(line: 273, column: 28, scope: !9681)
!9725 = !DILocation(line: 275, column: 2, scope: !9681)
!9726 = !DILocation(line: 0, scope: !9393, inlinedAt: !9727)
!9727 = distinct !DILocation(line: 277, column: 2, scope: !9681)
!9728 = !DILocation(line: 0, scope: !9401, inlinedAt: !9729)
!9729 = distinct !DILocation(line: 215, column: 2, scope: !9393, inlinedAt: !9727)
!9730 = !DILocation(line: 95, column: 2, scope: !9401, inlinedAt: !9729)
!9731 = !DILocation(line: 278, column: 1, scope: !9681)
!9732 = distinct !DISubprogram(name: "__stm32_exti_isr_9_5", scope: !1111, file: !1111, line: 368, type: !1161, scopeLine: 369, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !996, retainedNodes: !9733)
!9733 = !{!9734}
!9734 = !DILocalVariable(name: "dev", arg: 1, scope: !9732, file: !1111, line: 368, type: !1137)
!9735 = !DILocation(line: 0, scope: !9732)
!9736 = !DILocation(line: 370, column: 2, scope: !9732)
!9737 = !DILocation(line: 371, column: 1, scope: !9732)
!9738 = distinct !DISubprogram(name: "__stm32_exti_isr", scope: !1111, file: !1111, line: 243, type: !9739, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !996, retainedNodes: !9741)
!9739 = !DISubroutineType(types: !9740)
!9740 = !{null, !108, !108, !1137}
!9741 = !{!9742, !9743, !9744, !9745, !9747}
!9742 = !DILocalVariable(name: "min", arg: 1, scope: !9738, file: !1111, line: 243, type: !108)
!9743 = !DILocalVariable(name: "max", arg: 2, scope: !9738, file: !1111, line: 243, type: !108)
!9744 = !DILocalVariable(name: "dev", arg: 3, scope: !9738, file: !1111, line: 243, type: !1137)
!9745 = !DILocalVariable(name: "data", scope: !9738, file: !1111, line: 245, type: !9746)
!9746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1141, size: 32)
!9747 = !DILocalVariable(name: "line", scope: !9738, file: !1111, line: 246, type: !108)
!9748 = !DILocation(line: 0, scope: !9738)
!9749 = !DILocation(line: 245, column: 38, scope: !9738)
!9750 = !DILocation(line: 249, column: 24, scope: !9751)
!9751 = distinct !DILexicalBlock(scope: !9752, file: !1111, line: 249, column: 2)
!9752 = distinct !DILexicalBlock(scope: !9738, file: !1111, line: 249, column: 2)
!9753 = !DILocation(line: 249, column: 2, scope: !9752)
!9754 = !DILocation(line: 251, column: 7, scope: !9755)
!9755 = distinct !DILexicalBlock(scope: !9756, file: !1111, line: 251, column: 7)
!9756 = distinct !DILexicalBlock(scope: !9751, file: !1111, line: 249, column: 39)
!9757 = !DILocation(line: 251, column: 7, scope: !9756)
!9758 = !DILocation(line: 253, column: 4, scope: !9759)
!9759 = distinct !DILexicalBlock(scope: !9755, file: !1111, line: 251, column: 36)
!9760 = !DILocation(line: 256, column: 24, scope: !9761)
!9761 = distinct !DILexicalBlock(scope: !9759, file: !1111, line: 256, column: 8)
!9762 = !DILocation(line: 256, column: 9, scope: !9761)
!9763 = !DILocation(line: 256, column: 8, scope: !9759)
!9764 = !DILocation(line: 260, column: 43, scope: !9759)
!9765 = !DILocation(line: 260, column: 4, scope: !9759)
!9766 = !DILocation(line: 261, column: 3, scope: !9759)
!9767 = !DILocation(line: 249, column: 35, scope: !9751)
!9768 = distinct !{!9768, !9753, !9769}
!9769 = !DILocation(line: 262, column: 2, scope: !9752)
!9770 = !DILocation(line: 263, column: 1, scope: !9738)
!9771 = distinct !DISubprogram(name: "stm32_exti_is_pending", scope: !1111, file: !1111, line: 158, type: !571, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !996, retainedNodes: !9772)
!9772 = !{!9773}
!9773 = !DILocalVariable(name: "line", arg: 1, scope: !9771, file: !1111, line: 158, type: !108)
!9774 = !DILocation(line: 0, scope: !9771)
!9775 = !DILocation(line: 170, column: 38, scope: !9776)
!9776 = distinct !DILexicalBlock(scope: !9777, file: !1111, line: 160, column: 17)
!9777 = distinct !DILexicalBlock(scope: !9771, file: !1111, line: 160, column: 6)
!9778 = !DILocation(line: 170, column: 10, scope: !9776)
!9779 = !DILocation(line: 176, column: 1, scope: !9771)
!9780 = distinct !DISubprogram(name: "stm32_exti_clear_pending", scope: !1111, file: !1111, line: 183, type: !9781, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !996, retainedNodes: !9783)
!9781 = !DISubroutineType(types: !9782)
!9782 = !{null, !108}
!9783 = !{!9784}
!9784 = !DILocalVariable(name: "line", arg: 1, scope: !9780, file: !1111, line: 183, type: !108)
!9785 = !DILocation(line: 0, scope: !9780)
!9786 = !DILocation(line: 195, column: 28, scope: !9787)
!9787 = distinct !DILexicalBlock(scope: !9788, file: !1111, line: 185, column: 17)
!9788 = distinct !DILexicalBlock(scope: !9780, file: !1111, line: 185, column: 6)
!9789 = !DILocation(line: 195, column: 3, scope: !9787)
!9790 = !DILocation(line: 200, column: 1, scope: !9780)
!9791 = distinct !DISubprogram(name: "LL_EXTI_ClearFlag_0_31", scope: !9792, file: !9792, line: 910, type: !7292, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !996, retainedNodes: !9793)
!9792 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_exti.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9793 = !{!9794}
!9794 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9791, file: !9792, line: 910, type: !113)
!9795 = !DILocation(line: 0, scope: !9791)
!9796 = !DILocation(line: 912, column: 3, scope: !9791)
!9797 = !DILocation(line: 913, column: 1, scope: !9791)
!9798 = distinct !DISubprogram(name: "LL_EXTI_IsActiveFlag_0_31", scope: !9792, file: !9792, line: 834, type: !8447, scopeLine: 835, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !996, retainedNodes: !9799)
!9799 = !{!9800}
!9800 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9798, file: !9792, line: 834, type: !113)
!9801 = !DILocation(line: 0, scope: !9798)
!9802 = !DILocation(line: 836, column: 11, scope: !9798)
!9803 = !DILocation(line: 836, column: 40, scope: !9798)
!9804 = !DILocation(line: 836, column: 3, scope: !9798)
!9805 = distinct !DISubprogram(name: "__stm32_exti_isr_4", scope: !1111, file: !1111, line: 304, type: !1161, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !996, retainedNodes: !9806)
!9806 = !{!9807}
!9807 = !DILocalVariable(name: "dev", arg: 1, scope: !9805, file: !1111, line: 304, type: !1137)
!9808 = !DILocation(line: 0, scope: !9805)
!9809 = !DILocation(line: 306, column: 2, scope: !9805)
!9810 = !DILocation(line: 307, column: 1, scope: !9805)
!9811 = distinct !DISubprogram(name: "__stm32_exti_isr_3", scope: !1111, file: !1111, line: 299, type: !1161, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !996, retainedNodes: !9812)
!9812 = !{!9813}
!9813 = !DILocalVariable(name: "dev", arg: 1, scope: !9811, file: !1111, line: 299, type: !1137)
!9814 = !DILocation(line: 0, scope: !9811)
!9815 = !DILocation(line: 301, column: 2, scope: !9811)
!9816 = !DILocation(line: 302, column: 1, scope: !9811)
!9817 = distinct !DISubprogram(name: "__stm32_exti_isr_2", scope: !1111, file: !1111, line: 294, type: !1161, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !996, retainedNodes: !9818)
!9818 = !{!9819}
!9819 = !DILocalVariable(name: "dev", arg: 1, scope: !9817, file: !1111, line: 294, type: !1137)
!9820 = !DILocation(line: 0, scope: !9817)
!9821 = !DILocation(line: 296, column: 2, scope: !9817)
!9822 = !DILocation(line: 297, column: 1, scope: !9817)
!9823 = distinct !DISubprogram(name: "__stm32_exti_isr_22", scope: !1111, file: !1111, line: 397, type: !1161, scopeLine: 398, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !996, retainedNodes: !9824)
!9824 = !{!9825}
!9825 = !DILocalVariable(name: "dev", arg: 1, scope: !9823, file: !1111, line: 397, type: !1137)
!9826 = !DILocation(line: 0, scope: !9823)
!9827 = !DILocation(line: 399, column: 2, scope: !9823)
!9828 = !DILocation(line: 400, column: 1, scope: !9823)
!9829 = distinct !DISubprogram(name: "__stm32_exti_isr_21", scope: !1111, file: !1111, line: 392, type: !1161, scopeLine: 393, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !996, retainedNodes: !9830)
!9830 = !{!9831}
!9831 = !DILocalVariable(name: "dev", arg: 1, scope: !9829, file: !1111, line: 392, type: !1137)
!9832 = !DILocation(line: 0, scope: !9829)
!9833 = !DILocation(line: 394, column: 2, scope: !9829)
!9834 = !DILocation(line: 395, column: 1, scope: !9829)
!9835 = distinct !DISubprogram(name: "__stm32_exti_isr_1", scope: !1111, file: !1111, line: 289, type: !1161, scopeLine: 290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !996, retainedNodes: !9836)
!9836 = !{!9837}
!9837 = !DILocalVariable(name: "dev", arg: 1, scope: !9835, file: !1111, line: 289, type: !1137)
!9838 = !DILocation(line: 0, scope: !9835)
!9839 = !DILocation(line: 291, column: 2, scope: !9835)
!9840 = !DILocation(line: 292, column: 1, scope: !9835)
!9841 = distinct !DISubprogram(name: "__stm32_exti_isr_18", scope: !1111, file: !1111, line: 387, type: !1161, scopeLine: 388, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !996, retainedNodes: !9842)
!9842 = !{!9843}
!9843 = !DILocalVariable(name: "dev", arg: 1, scope: !9841, file: !1111, line: 387, type: !1137)
!9844 = !DILocation(line: 0, scope: !9841)
!9845 = !DILocation(line: 389, column: 2, scope: !9841)
!9846 = !DILocation(line: 390, column: 1, scope: !9841)
!9847 = distinct !DISubprogram(name: "__stm32_exti_isr_16", scope: !1111, file: !1111, line: 382, type: !1161, scopeLine: 383, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !996, retainedNodes: !9848)
!9848 = !{!9849}
!9849 = !DILocalVariable(name: "dev", arg: 1, scope: !9847, file: !1111, line: 382, type: !1137)
!9850 = !DILocation(line: 0, scope: !9847)
!9851 = !DILocation(line: 384, column: 2, scope: !9847)
!9852 = !DILocation(line: 385, column: 1, scope: !9847)
!9853 = distinct !DISubprogram(name: "__stm32_exti_isr_15_10", scope: !1111, file: !1111, line: 373, type: !1161, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !996, retainedNodes: !9854)
!9854 = !{!9855}
!9855 = !DILocalVariable(name: "dev", arg: 1, scope: !9853, file: !1111, line: 373, type: !1137)
!9856 = !DILocation(line: 0, scope: !9853)
!9857 = !DILocation(line: 375, column: 2, scope: !9853)
!9858 = !DILocation(line: 376, column: 1, scope: !9853)
!9859 = distinct !DISubprogram(name: "__stm32_exti_isr_0", scope: !1111, file: !1111, line: 284, type: !1161, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !996, retainedNodes: !9860)
!9860 = !{!9861}
!9861 = !DILocalVariable(name: "dev", arg: 1, scope: !9859, file: !1111, line: 284, type: !1137)
!9862 = !DILocation(line: 0, scope: !9859)
!9863 = !DILocation(line: 286, column: 2, scope: !9859)
!9864 = !DILocation(line: 287, column: 1, scope: !9859)
!9865 = distinct !DISubprogram(name: "stm32_exti_init", scope: !1111, file: !1111, line: 416, type: !1135, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !996, retainedNodes: !9866)
!9866 = !{!9867}
!9867 = !DILocalVariable(name: "dev", arg: 1, scope: !9865, file: !1111, line: 416, type: !1137)
!9868 = !DILocation(line: 0, scope: !9865)
!9869 = !DILocation(line: 418, column: 2, scope: !9865)
!9870 = !DILocation(line: 420, column: 2, scope: !9865)
!9871 = !DILocation(line: 0, scope: !1160)
!9872 = !DILocation(line: 493, column: 2, scope: !9873)
!9873 = distinct !DILexicalBlock(scope: !1160, file: !1111, line: 493, column: 2)
!9874 = !DILocation(line: 497, column: 2, scope: !9875)
!9875 = distinct !DILexicalBlock(scope: !1160, file: !1111, line: 497, column: 2)
!9876 = !DILocation(line: 507, column: 2, scope: !9877)
!9877 = distinct !DILexicalBlock(scope: !1160, file: !1111, line: 507, column: 2)
!9878 = !DILocation(line: 512, column: 2, scope: !9879)
!9879 = distinct !DILexicalBlock(scope: !1160, file: !1111, line: 512, column: 2)
!9880 = !DILocation(line: 516, column: 2, scope: !9881)
!9881 = distinct !DILexicalBlock(scope: !1160, file: !1111, line: 516, column: 2)
!9882 = !DILocation(line: 523, column: 2, scope: !9883)
!9883 = distinct !DILexicalBlock(scope: !1160, file: !1111, line: 523, column: 2)
!9884 = !DILocation(line: 527, column: 2, scope: !9885)
!9885 = distinct !DILexicalBlock(scope: !1160, file: !1111, line: 527, column: 2)
!9886 = !DILocation(line: 581, column: 2, scope: !9887)
!9887 = distinct !DILexicalBlock(scope: !1160, file: !1111, line: 581, column: 2)
!9888 = !DILocation(line: 586, column: 2, scope: !9889)
!9889 = distinct !DILexicalBlock(scope: !1160, file: !1111, line: 586, column: 2)
!9890 = !DILocation(line: 591, column: 2, scope: !9891)
!9891 = distinct !DILexicalBlock(scope: !1160, file: !1111, line: 591, column: 2)
!9892 = !DILocation(line: 595, column: 2, scope: !9893)
!9893 = distinct !DILexicalBlock(scope: !1160, file: !1111, line: 595, column: 2)
!9894 = !DILocation(line: 607, column: 1, scope: !1160)
!9895 = distinct !DISubprogram(name: "stm32_exti_enable", scope: !1111, file: !1111, line: 112, type: !9781, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !996, retainedNodes: !9896)
!9896 = !{!9897, !9898}
!9897 = !DILocalVariable(name: "line", arg: 1, scope: !9895, file: !1111, line: 112, type: !108)
!9898 = !DILocalVariable(name: "irqnum", scope: !9895, file: !1111, line: 114, type: !108)
!9899 = !DILocation(line: 0, scope: !9895)
!9900 = !DILocation(line: 121, column: 11, scope: !9895)
!9901 = !DILocation(line: 130, column: 26, scope: !9895)
!9902 = !DILocation(line: 130, column: 2, scope: !9895)
!9903 = !DILocation(line: 134, column: 2, scope: !9895)
!9904 = !DILocation(line: 135, column: 1, scope: !9895)
!9905 = distinct !DISubprogram(name: "LL_EXTI_EnableIT_0_31", scope: !9792, file: !9792, line: 268, type: !7292, scopeLine: 269, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !996, retainedNodes: !9906)
!9906 = !{!9907}
!9907 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9905, file: !9792, line: 268, type: !113)
!9908 = !DILocation(line: 0, scope: !9905)
!9909 = !DILocation(line: 270, column: 3, scope: !9905)
!9910 = !DILocation(line: 271, column: 1, scope: !9905)
!9911 = distinct !DISubprogram(name: "stm32_exti_disable", scope: !1111, file: !1111, line: 137, type: !9781, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !996, retainedNodes: !9912)
!9912 = !{!9913}
!9913 = !DILocalVariable(name: "line", arg: 1, scope: !9911, file: !1111, line: 137, type: !108)
!9914 = !DILocation(line: 0, scope: !9911)
!9915 = !DILocation(line: 141, column: 11, scope: !9916)
!9916 = distinct !DILexicalBlock(scope: !9911, file: !1111, line: 141, column: 6)
!9917 = !DILocation(line: 141, column: 6, scope: !9911)
!9918 = !DILocation(line: 145, column: 28, scope: !9919)
!9919 = distinct !DILexicalBlock(scope: !9916, file: !1111, line: 141, column: 17)
!9920 = !DILocation(line: 145, column: 3, scope: !9919)
!9921 = !DILocation(line: 147, column: 2, scope: !9919)
!9922 = !DILocation(line: 151, column: 1, scope: !9911)
!9923 = distinct !DISubprogram(name: "LL_EXTI_DisableIT_0_31", scope: !9792, file: !9792, line: 309, type: !7292, scopeLine: 310, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !996, retainedNodes: !9924)
!9924 = !{!9925}
!9925 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9923, file: !9792, line: 309, type: !113)
!9926 = !DILocation(line: 0, scope: !9923)
!9927 = !DILocation(line: 311, column: 3, scope: !9923)
!9928 = !DILocation(line: 312, column: 1, scope: !9923)
!9929 = distinct !DISubprogram(name: "stm32_exti_trigger", scope: !1111, file: !1111, line: 202, type: !9930, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !996, retainedNodes: !9932)
!9930 = !DISubroutineType(types: !9931)
!9931 = !{null, !108, !108}
!9932 = !{!9933, !9934}
!9933 = !DILocalVariable(name: "line", arg: 1, scope: !9929, file: !1111, line: 202, type: !108)
!9934 = !DILocalVariable(name: "trigger", arg: 2, scope: !9929, file: !1111, line: 202, type: !108)
!9935 = !DILocation(line: 0, scope: !9929)
!9936 = !DILocation(line: 211, column: 2, scope: !9929)
!9937 = !DILocation(line: 213, column: 36, scope: !9938)
!9938 = distinct !DILexicalBlock(scope: !9929, file: !1111, line: 211, column: 19)
!9939 = !DILocation(line: 213, column: 3, scope: !9938)
!9940 = !DILocation(line: 214, column: 3, scope: !9938)
!9941 = !DILocation(line: 215, column: 3, scope: !9938)
!9942 = !DILocation(line: 217, column: 35, scope: !9938)
!9943 = !DILocation(line: 217, column: 3, scope: !9938)
!9944 = !DILocation(line: 218, column: 3, scope: !9938)
!9945 = !DILocation(line: 219, column: 3, scope: !9938)
!9946 = !DILocation(line: 221, column: 36, scope: !9938)
!9947 = !DILocation(line: 221, column: 3, scope: !9938)
!9948 = !DILocation(line: 222, column: 3, scope: !9938)
!9949 = !DILocation(line: 223, column: 3, scope: !9938)
!9950 = !DILocation(line: 225, column: 35, scope: !9938)
!9951 = !DILocation(line: 225, column: 3, scope: !9938)
!9952 = !DILocation(line: 226, column: 3, scope: !9938)
!9953 = !DILocation(line: 227, column: 3, scope: !9938)
!9954 = !DILocation(line: 232, column: 1, scope: !9929)
!9955 = distinct !DISubprogram(name: "LL_EXTI_DisableRisingTrig_0_31", scope: !9792, file: !9792, line: 573, type: !7292, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !996, retainedNodes: !9956)
!9956 = !{!9957}
!9957 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9955, file: !9792, line: 573, type: !113)
!9958 = !DILocation(line: 0, scope: !9955)
!9959 = !DILocation(line: 575, column: 3, scope: !9955)
!9960 = !DILocation(line: 577, column: 1, scope: !9955)
!9961 = distinct !DISubprogram(name: "LL_EXTI_DisableFallingTrig_0_31", scope: !9792, file: !9792, line: 703, type: !7292, scopeLine: 704, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !996, retainedNodes: !9962)
!9962 = !{!9963}
!9963 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9961, file: !9792, line: 703, type: !113)
!9964 = !DILocation(line: 0, scope: !9961)
!9965 = !DILocation(line: 705, column: 3, scope: !9961)
!9966 = !DILocation(line: 706, column: 1, scope: !9961)
!9967 = distinct !DISubprogram(name: "LL_EXTI_EnableRisingTrig_0_31", scope: !9792, file: !9792, line: 529, type: !7292, scopeLine: 530, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !996, retainedNodes: !9968)
!9968 = !{!9969}
!9969 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9967, file: !9792, line: 529, type: !113)
!9970 = !DILocation(line: 0, scope: !9967)
!9971 = !DILocation(line: 531, column: 3, scope: !9967)
!9972 = !DILocation(line: 533, column: 1, scope: !9967)
!9973 = distinct !DISubprogram(name: "LL_EXTI_EnableFallingTrig_0_31", scope: !9792, file: !9792, line: 661, type: !7292, scopeLine: 662, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !996, retainedNodes: !9974)
!9974 = !{!9975}
!9975 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9973, file: !9792, line: 661, type: !113)
!9976 = !DILocation(line: 0, scope: !9973)
!9977 = !DILocation(line: 663, column: 3, scope: !9973)
!9978 = !DILocation(line: 664, column: 1, scope: !9973)
!9979 = distinct !DISubprogram(name: "stm32_exti_set_callback", scope: !1111, file: !1111, line: 433, type: !9980, scopeLine: 434, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !996, retainedNodes: !9982)
!9980 = !DISubroutineType(types: !9981)
!9981 = !{!108, !108, !1148, !104}
!9982 = !{!9983, !9984, !9985, !9986, !9988}
!9983 = !DILocalVariable(name: "line", arg: 1, scope: !9979, file: !1111, line: 433, type: !108)
!9984 = !DILocalVariable(name: "cb", arg: 2, scope: !9979, file: !1111, line: 433, type: !1148)
!9985 = !DILocalVariable(name: "arg", arg: 3, scope: !9979, file: !1111, line: 433, type: !104)
!9986 = !DILocalVariable(name: "dev", scope: !9979, file: !1111, line: 435, type: !9987)
!9987 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1137)
!9988 = !DILocalVariable(name: "data", scope: !9979, file: !1111, line: 436, type: !9746)
!9989 = !DILocation(line: 0, scope: !9979)
!9990 = !DILocation(line: 438, column: 21, scope: !9991)
!9991 = distinct !DILexicalBlock(scope: !9979, file: !1111, line: 438, column: 6)
!9992 = !DILocation(line: 438, column: 6, scope: !9991)
!9993 = !DILocation(line: 438, column: 6, scope: !9979)
!9994 = !DILocation(line: 442, column: 20, scope: !9979)
!9995 = !DILocation(line: 443, column: 17, scope: !9979)
!9996 = !DILocation(line: 443, column: 22, scope: !9979)
!9997 = !DILocation(line: 445, column: 2, scope: !9979)
!9998 = !DILocation(line: 446, column: 1, scope: !9979)
!9999 = distinct !DISubprogram(name: "stm32_exti_unset_callback", scope: !1111, file: !1111, line: 448, type: !9781, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !996, retainedNodes: !10000)
!10000 = !{!10001, !10002, !10003}
!10001 = !DILocalVariable(name: "line", arg: 1, scope: !9999, file: !1111, line: 448, type: !108)
!10002 = !DILocalVariable(name: "dev", scope: !9999, file: !1111, line: 450, type: !9987)
!10003 = !DILocalVariable(name: "data", scope: !9999, file: !1111, line: 451, type: !9746)
!10004 = !DILocation(line: 0, scope: !9999)
!10005 = !DILocation(line: 453, column: 17, scope: !9999)
!10006 = !DILocation(line: 453, column: 20, scope: !9999)
!10007 = !DILocation(line: 454, column: 17, scope: !9999)
!10008 = !DILocation(line: 454, column: 22, scope: !9999)
!10009 = !DILocation(line: 455, column: 1, scope: !9999)
!10010 = distinct !DISubprogram(name: "stm32_clock_control_on", scope: !1259, file: !1259, line: 183, type: !1297, scopeLine: 185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1196, retainedNodes: !10011)
!10011 = !{!10012, !10013, !10014, !10015, !10016}
!10012 = !DILocalVariable(name: "dev", arg: 1, scope: !10010, file: !1259, line: 183, type: !1288)
!10013 = !DILocalVariable(name: "sub_system", arg: 2, scope: !10010, file: !1259, line: 184, type: !1299)
!10014 = !DILocalVariable(name: "pclken", scope: !10010, file: !1259, line: 186, type: !1249)
!10015 = !DILocalVariable(name: "reg", scope: !10010, file: !1259, line: 187, type: !1873)
!10016 = !DILocalVariable(name: "reg_val", scope: !10010, file: !1259, line: 188, type: !113)
!10017 = !DILocation(line: 0, scope: !10010)
!10018 = !DILocation(line: 192, column: 6, scope: !10019)
!10019 = distinct !DILexicalBlock(scope: !10010, file: !1259, line: 192, column: 6)
!10020 = !DILocation(line: 192, column: 6, scope: !10010)
!10021 = !DILocation(line: 197, column: 52, scope: !10010)
!10022 = !DILocation(line: 197, column: 8, scope: !10010)
!10023 = !DILocation(line: 198, column: 12, scope: !10010)
!10024 = !DILocation(line: 199, column: 21, scope: !10010)
!10025 = !DILocation(line: 199, column: 10, scope: !10010)
!10026 = !DILocation(line: 200, column: 7, scope: !10010)
!10027 = !DILocation(line: 202, column: 2, scope: !10010)
!10028 = !DILocation(line: 203, column: 1, scope: !10010)
!10029 = distinct !DISubprogram(name: "stm32_clock_control_off", scope: !1259, file: !1259, line: 205, type: !1297, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1196, retainedNodes: !10030)
!10030 = !{!10031, !10032, !10033, !10034, !10035}
!10031 = !DILocalVariable(name: "dev", arg: 1, scope: !10029, file: !1259, line: 205, type: !1288)
!10032 = !DILocalVariable(name: "sub_system", arg: 2, scope: !10029, file: !1259, line: 206, type: !1299)
!10033 = !DILocalVariable(name: "pclken", scope: !10029, file: !1259, line: 208, type: !1249)
!10034 = !DILocalVariable(name: "reg", scope: !10029, file: !1259, line: 209, type: !1873)
!10035 = !DILocalVariable(name: "reg_val", scope: !10029, file: !1259, line: 210, type: !113)
!10036 = !DILocation(line: 0, scope: !10029)
!10037 = !DILocation(line: 214, column: 6, scope: !10038)
!10038 = distinct !DILexicalBlock(scope: !10029, file: !1259, line: 214, column: 6)
!10039 = !DILocation(line: 214, column: 6, scope: !10029)
!10040 = !DILocation(line: 219, column: 52, scope: !10029)
!10041 = !DILocation(line: 219, column: 8, scope: !10029)
!10042 = !DILocation(line: 220, column: 12, scope: !10029)
!10043 = !DILocation(line: 221, column: 22, scope: !10029)
!10044 = !DILocation(line: 221, column: 13, scope: !10029)
!10045 = !DILocation(line: 221, column: 10, scope: !10029)
!10046 = !DILocation(line: 222, column: 7, scope: !10029)
!10047 = !DILocation(line: 224, column: 2, scope: !10029)
!10048 = !DILocation(line: 225, column: 1, scope: !10029)
!10049 = distinct !DISubprogram(name: "stm32_clock_control_get_subsys_rate", scope: !1259, file: !1259, line: 262, type: !1313, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1196, retainedNodes: !10050)
!10050 = !{!10051, !10052, !10053, !10054, !10055, !10056, !10057, !10058}
!10051 = !DILocalVariable(name: "clock", arg: 1, scope: !10049, file: !1259, line: 262, type: !1288)
!10052 = !DILocalVariable(name: "sub_system", arg: 2, scope: !10049, file: !1259, line: 263, type: !1299)
!10053 = !DILocalVariable(name: "rate", arg: 3, scope: !10049, file: !1259, line: 264, type: !1255)
!10054 = !DILocalVariable(name: "pclken", scope: !10049, file: !1259, line: 266, type: !1249)
!10055 = !DILocalVariable(name: "ahb_clock", scope: !10049, file: !1259, line: 273, type: !113)
!10056 = !DILocalVariable(name: "apb1_clock", scope: !10049, file: !1259, line: 274, type: !113)
!10057 = !DILocalVariable(name: "apb2_clock", scope: !10049, file: !1259, line: 276, type: !113)
!10058 = !DILocalVariable(name: "ahb3_clock", scope: !10049, file: !1259, line: 286, type: !113)
!10059 = !DILocation(line: 0, scope: !10049)
!10060 = !DILocation(line: 273, column: 23, scope: !10049)
!10061 = !DILocation(line: 299, column: 18, scope: !10049)
!10062 = !DILocation(line: 299, column: 2, scope: !10049)
!10063 = !DILocation(line: 274, column: 24, scope: !10049)
!10064 = !DILocation(line: 319, column: 3, scope: !10065)
!10065 = distinct !DILexicalBlock(scope: !10049, file: !1259, line: 299, column: 23)
!10066 = !DILocation(line: 276, column: 24, scope: !10049)
!10067 = !DILocation(line: 323, column: 3, scope: !10065)
!10068 = !DILocation(line: 346, column: 33, scope: !10065)
!10069 = !DILocation(line: 346, column: 11, scope: !10065)
!10070 = !DILocation(line: 350, column: 3, scope: !10065)
!10071 = !DILocation(line: 354, column: 33, scope: !10065)
!10072 = !DILocation(line: 354, column: 11, scope: !10065)
!10073 = !DILocation(line: 358, column: 3, scope: !10065)
!10074 = !DILocation(line: 374, column: 3, scope: !10065)
!10075 = !DILocation(line: 379, column: 3, scope: !10065)
!10076 = !DILocation(line: 0, scope: !10065)
!10077 = !DILocation(line: 396, column: 1, scope: !10049)
!10078 = distinct !DISubprogram(name: "stm32_clock_control_configure", scope: !1259, file: !1259, line: 227, type: !1329, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1196, retainedNodes: !10079)
!10079 = !{!10080, !10081, !10082, !10083, !10084, !10085, !10086, !10087}
!10080 = !DILocalVariable(name: "dev", arg: 1, scope: !10078, file: !1259, line: 227, type: !1288)
!10081 = !DILocalVariable(name: "sub_system", arg: 2, scope: !10078, file: !1259, line: 228, type: !1299)
!10082 = !DILocalVariable(name: "data", arg: 3, scope: !10078, file: !1259, line: 229, type: !104)
!10083 = !DILocalVariable(name: "pclken", scope: !10078, file: !1259, line: 233, type: !1249)
!10084 = !DILocalVariable(name: "reg", scope: !10078, file: !1259, line: 234, type: !1873)
!10085 = !DILocalVariable(name: "reg_val", scope: !10078, file: !1259, line: 235, type: !113)
!10086 = !DILocalVariable(name: "dt_val", scope: !10078, file: !1259, line: 235, type: !113)
!10087 = !DILocalVariable(name: "err", scope: !10078, file: !1259, line: 236, type: !108)
!10088 = !DILocation(line: 0, scope: !10078)
!10089 = !DILocation(line: 241, column: 30, scope: !10078)
!10090 = !DILocation(line: 241, column: 8, scope: !10078)
!10091 = !DILocation(line: 242, column: 10, scope: !10092)
!10092 = distinct !DILexicalBlock(scope: !10078, file: !1259, line: 242, column: 6)
!10093 = !DILocation(line: 242, column: 6, scope: !10078)
!10094 = !DILocation(line: 247, column: 11, scope: !10078)
!10095 = !DILocation(line: 248, column: 6, scope: !10078)
!10096 = !DILocation(line: 247, column: 44, scope: !10078)
!10097 = !DILocation(line: 250, column: 6, scope: !10078)
!10098 = !DILocation(line: 249, column: 52, scope: !10078)
!10099 = !DILocation(line: 249, column: 8, scope: !10078)
!10100 = !DILocation(line: 251, column: 12, scope: !10078)
!10101 = !DILocation(line: 252, column: 10, scope: !10078)
!10102 = !DILocation(line: 253, column: 7, scope: !10078)
!10103 = !DILocation(line: 255, column: 2, scope: !10078)
!10104 = !DILocation(line: 260, column: 1, scope: !10078)
!10105 = distinct !DISubprogram(name: "enabled_clock", scope: !1259, file: !1259, line: 100, type: !10106, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1196, retainedNodes: !10108)
!10106 = !DISubroutineType(types: !10107)
!10107 = !{!108, !113}
!10108 = !{!10109, !10110}
!10109 = !DILocalVariable(name: "src_clk", arg: 1, scope: !10105, file: !1259, line: 100, type: !113)
!10110 = !DILocalVariable(name: "r", scope: !10105, file: !1259, line: 102, type: !108)
!10111 = !DILocation(line: 0, scope: !10105)
!10112 = !DILocation(line: 104, column: 2, scope: !10105)
!10113 = !DILocation(line: 180, column: 2, scope: !10105)
!10114 = !DILocation(line: 181, column: 1, scope: !10105)
!10115 = distinct !DISubprogram(name: "get_bus_clock", scope: !1259, file: !1259, line: 79, type: !10116, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1196, retainedNodes: !10118)
!10116 = !DISubroutineType(types: !10117)
!10117 = !{!113, !113, !113}
!10118 = !{!10119, !10120}
!10119 = !DILocalVariable(name: "clock", arg: 1, scope: !10115, file: !1259, line: 79, type: !113)
!10120 = !DILocalVariable(name: "prescaler", arg: 2, scope: !10115, file: !1259, line: 79, type: !113)
!10121 = !DILocation(line: 0, scope: !10115)
!10122 = !DILocation(line: 81, column: 15, scope: !10115)
!10123 = !DILocation(line: 81, column: 2, scope: !10115)
!10124 = distinct !DISubprogram(name: "get_pll_div_frequency", scope: !1259, file: !1259, line: 68, type: !10125, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1196, retainedNodes: !10127)
!10125 = !DISubroutineType(types: !10126)
!10126 = !{!113, !113, !108, !108, !108}
!10127 = !{!10128, !10129, !10130, !10131}
!10128 = !DILocalVariable(name: "pllsrc_freq", arg: 1, scope: !10124, file: !1259, line: 68, type: !113)
!10129 = !DILocalVariable(name: "pllm_div", arg: 2, scope: !10124, file: !1259, line: 69, type: !108)
!10130 = !DILocalVariable(name: "plln_mul", arg: 3, scope: !10124, file: !1259, line: 70, type: !108)
!10131 = !DILocalVariable(name: "pllout_div", arg: 4, scope: !10124, file: !1259, line: 71, type: !108)
!10132 = !DILocation(line: 0, scope: !10124)
!10133 = !DILocation(line: 75, column: 22, scope: !10124)
!10134 = !DILocation(line: 76, column: 13, scope: !10124)
!10135 = !DILocation(line: 75, column: 34, scope: !10124)
!10136 = !DILocation(line: 75, column: 2, scope: !10124)
!10137 = distinct !DISubprogram(name: "stm32_clock_control_init", scope: !1259, file: !1259, line: 641, type: !1286, scopeLine: 642, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1196, retainedNodes: !10138)
!10138 = !{!10139, !10140, !10141}
!10139 = !DILocalVariable(name: "dev", arg: 1, scope: !10137, file: !1259, line: 641, type: !1288)
!10140 = !DILocalVariable(name: "old_flash_freq", scope: !10137, file: !1259, line: 664, type: !113)
!10141 = !DILocalVariable(name: "new_flash_freq", scope: !10137, file: !1259, line: 665, type: !113)
!10142 = !DILocation(line: 0, scope: !10137)
!10143 = !DILocation(line: 646, column: 2, scope: !10137)
!10144 = !DILocation(line: 667, column: 19, scope: !10137)
!10145 = !DILocation(line: 674, column: 21, scope: !10146)
!10146 = distinct !DILexicalBlock(scope: !10137, file: !1259, line: 674, column: 6)
!10147 = !DILocation(line: 674, column: 6, scope: !10137)
!10148 = !DILocation(line: 675, column: 3, scope: !10149)
!10149 = distinct !DILexicalBlock(scope: !10146, file: !1259, line: 674, column: 59)
!10150 = !DILocation(line: 676, column: 2, scope: !10149)
!10151 = !DILocation(line: 680, column: 2, scope: !10137)
!10152 = !DILocation(line: 683, column: 2, scope: !10137)
!10153 = !DILocation(line: 690, column: 3, scope: !10154)
!10154 = distinct !DILexicalBlock(scope: !10155, file: !1259, line: 689, column: 9)
!10155 = distinct !DILexicalBlock(scope: !10137, file: !1259, line: 685, column: 6)
!10156 = !DILocation(line: 695, column: 2, scope: !10137)
!10157 = !DILocation(line: 696, column: 2, scope: !10137)
!10158 = !DILocation(line: 696, column: 9, scope: !10137)
!10159 = !DILocation(line: 696, column: 34, scope: !10137)
!10160 = distinct !{!10160, !10157, !10161}
!10161 = !DILocation(line: 697, column: 2, scope: !10137)
!10162 = !DILocation(line: 720, column: 21, scope: !10163)
!10163 = distinct !DILexicalBlock(scope: !10137, file: !1259, line: 720, column: 6)
!10164 = !DILocation(line: 720, column: 6, scope: !10137)
!10165 = !DILocation(line: 721, column: 3, scope: !10166)
!10166 = distinct !DILexicalBlock(scope: !10163, file: !1259, line: 720, column: 60)
!10167 = !DILocation(line: 722, column: 2, scope: !10166)
!10168 = !DILocation(line: 725, column: 18, scope: !10137)
!10169 = !DILocation(line: 728, column: 2, scope: !10137)
!10170 = !DILocation(line: 730, column: 2, scope: !10137)
!10171 = !DILocation(line: 745, column: 2, scope: !10137)
!10172 = distinct !DISubprogram(name: "LL_RCC_GetAHBPrescaler", scope: !10173, file: !10173, line: 3275, type: !7282, scopeLine: 3276, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1196, retainedNodes: !437)
!10173 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10174 = !DILocation(line: 3277, column: 21, scope: !10172)
!10175 = !DILocation(line: 3277, column: 3, scope: !10172)
!10176 = distinct !DISubprogram(name: "set_up_fixed_clock_sources", scope: !1259, file: !1259, line: 507, type: !3551, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1196, retainedNodes: !437)
!10177 = !DILocation(line: 516, column: 4, scope: !10178)
!10178 = distinct !DILexicalBlock(scope: !10179, file: !1259, line: 515, column: 10)
!10179 = distinct !DILexicalBlock(scope: !10180, file: !1259, line: 513, column: 7)
!10180 = distinct !DILexicalBlock(scope: !10181, file: !1259, line: 510, column: 37)
!10181 = distinct !DILexicalBlock(scope: !10176, file: !1259, line: 510, column: 6)
!10182 = !DILocation(line: 526, column: 3, scope: !10180)
!10183 = !DILocation(line: 527, column: 3, scope: !10180)
!10184 = !DILocation(line: 527, column: 10, scope: !10180)
!10185 = !DILocation(line: 527, column: 31, scope: !10180)
!10186 = distinct !{!10186, !10183, !10187}
!10187 = !DILocation(line: 529, column: 3, scope: !10180)
!10188 = !DILocation(line: 627, column: 1, scope: !10176)
!10189 = distinct !DISubprogram(name: "set_up_plls", scope: !1259, file: !1259, line: 448, type: !3551, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1196, retainedNodes: !437)
!10190 = !DILocation(line: 460, column: 6, scope: !10191)
!10191 = distinct !DILexicalBlock(scope: !10189, file: !1259, line: 460, column: 6)
!10192 = !DILocation(line: 460, column: 31, scope: !10191)
!10193 = !DILocation(line: 460, column: 6, scope: !10189)
!10194 = !DILocation(line: 461, column: 3, scope: !10195)
!10195 = distinct !DILexicalBlock(scope: !10191, file: !1259, line: 460, column: 67)
!10196 = !DILocation(line: 462, column: 3, scope: !10195)
!10197 = !DILocation(line: 463, column: 2, scope: !10195)
!10198 = !DILocation(line: 464, column: 2, scope: !10189)
!10199 = !DILocation(line: 488, column: 2, scope: !10189)
!10200 = !DILocation(line: 492, column: 2, scope: !10189)
!10201 = !DILocation(line: 496, column: 2, scope: !10189)
!10202 = !DILocation(line: 499, column: 2, scope: !10189)
!10203 = !DILocation(line: 500, column: 2, scope: !10189)
!10204 = !DILocation(line: 500, column: 9, scope: !10189)
!10205 = !DILocation(line: 500, column: 30, scope: !10189)
!10206 = distinct !{!10206, !10203, !10207}
!10207 = !DILocation(line: 502, column: 2, scope: !10189)
!10208 = !DILocation(line: 505, column: 1, scope: !10189)
!10209 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !10173, file: !10173, line: 3224, type: !7292, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1196, retainedNodes: !10210)
!10210 = !{!10211}
!10211 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !10209, file: !10173, line: 3224, type: !113)
!10212 = !DILocation(line: 0, scope: !10209)
!10213 = !DILocation(line: 3226, column: 3, scope: !10209)
!10214 = !DILocation(line: 3227, column: 1, scope: !10209)
!10215 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !10173, file: !10173, line: 3188, type: !7292, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1196, retainedNodes: !10216)
!10216 = !{!10217}
!10217 = !DILocalVariable(name: "Source", arg: 1, scope: !10215, file: !10173, line: 3188, type: !113)
!10218 = !DILocation(line: 0, scope: !10215)
!10219 = !DILocation(line: 3190, column: 3, scope: !10215)
!10220 = !DILocation(line: 3191, column: 1, scope: !10215)
!10221 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !10173, file: !10173, line: 3204, type: !7282, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1196, retainedNodes: !437)
!10222 = !DILocation(line: 3206, column: 21, scope: !10221)
!10223 = !DILocation(line: 3206, column: 3, scope: !10221)
!10224 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !10173, file: !10173, line: 3240, type: !7292, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1196, retainedNodes: !10225)
!10225 = !{!10226}
!10226 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !10224, file: !10173, line: 3240, type: !113)
!10227 = !DILocation(line: 0, scope: !10224)
!10228 = !DILocation(line: 3242, column: 3, scope: !10224)
!10229 = !DILocation(line: 3243, column: 1, scope: !10224)
!10230 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !10173, file: !10173, line: 3256, type: !7292, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1196, retainedNodes: !10231)
!10231 = !{!10232}
!10232 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !10230, file: !10173, line: 3256, type: !113)
!10233 = !DILocation(line: 0, scope: !10230)
!10234 = !DILocation(line: 3258, column: 3, scope: !10230)
!10235 = !DILocation(line: 3259, column: 1, scope: !10230)
!10236 = distinct !DISubprogram(name: "stm32_clock_switch_to_hsi", scope: !1259, file: !1259, line: 409, type: !3551, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1196, retainedNodes: !437)
!10237 = !DILocation(line: 412, column: 6, scope: !10238)
!10238 = distinct !DILexicalBlock(scope: !10236, file: !1259, line: 412, column: 6)
!10239 = !DILocation(line: 412, column: 27, scope: !10238)
!10240 = !DILocation(line: 412, column: 6, scope: !10236)
!10241 = !DILocation(line: 414, column: 3, scope: !10242)
!10242 = distinct !DILexicalBlock(scope: !10238, file: !1259, line: 412, column: 33)
!10243 = !DILocation(line: 415, column: 3, scope: !10242)
!10244 = !DILocation(line: 415, column: 10, scope: !10242)
!10245 = !DILocation(line: 415, column: 31, scope: !10242)
!10246 = distinct !{!10246, !10243, !10247}
!10247 = !DILocation(line: 417, column: 3, scope: !10242)
!10248 = !DILocation(line: 421, column: 2, scope: !10236)
!10249 = !DILocation(line: 422, column: 2, scope: !10236)
!10250 = !DILocation(line: 422, column: 9, scope: !10236)
!10251 = !DILocation(line: 422, column: 34, scope: !10236)
!10252 = distinct !{!10252, !10249, !10253}
!10253 = !DILocation(line: 423, column: 2, scope: !10236)
!10254 = !DILocation(line: 424, column: 1, scope: !10236)
!10255 = distinct !DISubprogram(name: "LL_RCC_PLL_Disable", scope: !10173, file: !10173, line: 4195, type: !3551, scopeLine: 4196, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1196, retainedNodes: !437)
!10256 = !DILocation(line: 4197, column: 3, scope: !10255)
!10257 = !DILocation(line: 4198, column: 1, scope: !10255)
!10258 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !10173, file: !10173, line: 4184, type: !3551, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1196, retainedNodes: !437)
!10259 = !DILocation(line: 4186, column: 3, scope: !10258)
!10260 = !DILocation(line: 4187, column: 1, scope: !10258)
!10261 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !10173, file: !10173, line: 4205, type: !7282, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1196, retainedNodes: !437)
!10262 = !DILocation(line: 4207, column: 11, scope: !10261)
!10263 = !DILocation(line: 4207, column: 44, scope: !10261)
!10264 = !DILocation(line: 4207, column: 3, scope: !10261)
!10265 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !10173, file: !10173, line: 3007, type: !7282, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1196, retainedNodes: !437)
!10266 = !DILocation(line: 3009, column: 11, scope: !10265)
!10267 = !DILocation(line: 3009, column: 44, scope: !10265)
!10268 = !DILocation(line: 3009, column: 3, scope: !10265)
!10269 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !10173, file: !10173, line: 2987, type: !3551, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1196, retainedNodes: !437)
!10270 = !DILocation(line: 2989, column: 3, scope: !10269)
!10271 = !DILocation(line: 2990, column: 1, scope: !10269)
!10272 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !10173, file: !10173, line: 2939, type: !3551, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1196, retainedNodes: !437)
!10273 = !DILocation(line: 2941, column: 3, scope: !10272)
!10274 = !DILocation(line: 2942, column: 1, scope: !10272)
!10275 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !10173, file: !10173, line: 2949, type: !3551, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1196, retainedNodes: !437)
!10276 = !DILocation(line: 2951, column: 3, scope: !10275)
!10277 = !DILocation(line: 2952, column: 1, scope: !10275)
!10278 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !10173, file: !10173, line: 2969, type: !7282, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1196, retainedNodes: !437)
!10279 = !DILocation(line: 2971, column: 11, scope: !10278)
!10280 = !DILocation(line: 2971, column: 44, scope: !10278)
!10281 = !DILocation(line: 2971, column: 3, scope: !10278)
!10282 = distinct !DISubprogram(name: "get_pllsrc_frequency", scope: !10283, file: !10283, line: 40, type: !7282, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3319, retainedNodes: !437)
!10283 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10284 = !DILocation(line: 45, column: 3, scope: !10285)
!10285 = distinct !DILexicalBlock(scope: !10286, file: !10283, line: 44, column: 44)
!10286 = distinct !DILexicalBlock(scope: !10287, file: !10283, line: 44, column: 13)
!10287 = distinct !DILexicalBlock(scope: !10282, file: !10283, line: 42, column: 6)
!10288 = distinct !DISubprogram(name: "config_pll_sysclock", scope: !10283, file: !10283, line: 56, type: !3551, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3319, retainedNodes: !437)
!10289 = !DILocation(line: 58, column: 2, scope: !10288)
!10290 = !DILocation(line: 62, column: 1, scope: !10288)
!10291 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !10173, file: !10173, line: 4304, type: !10292, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3319, retainedNodes: !10294)
!10292 = !DISubroutineType(types: !10293)
!10293 = !{null, !113, !113, !113, !113}
!10294 = !{!10295, !10296, !10297, !10298}
!10295 = !DILocalVariable(name: "Source", arg: 1, scope: !10291, file: !10173, line: 4304, type: !113)
!10296 = !DILocalVariable(name: "PLLM", arg: 2, scope: !10291, file: !10173, line: 4304, type: !113)
!10297 = !DILocalVariable(name: "PLLN", arg: 3, scope: !10291, file: !10173, line: 4304, type: !113)
!10298 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !10291, file: !10173, line: 4304, type: !113)
!10299 = !DILocation(line: 0, scope: !10291)
!10300 = !DILocation(line: 4306, column: 3, scope: !10291)
!10301 = !DILocation(line: 4308, column: 3, scope: !10291)
!10302 = !DILocation(line: 4312, column: 1, scope: !10291)
!10303 = distinct !DISubprogram(name: "config_enable_default_clocks", scope: !10283, file: !10283, line: 69, type: !3551, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3319, retainedNodes: !437)
!10304 = !DILocation(line: 72, column: 2, scope: !10303)
!10305 = !DILocation(line: 73, column: 1, scope: !10303)
!10306 = distinct !DISubprogram(name: "LL_APB1_GRP1_EnableClock", scope: !10307, file: !10307, line: 1185, type: !7292, scopeLine: 1186, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3319, retainedNodes: !10308)
!10307 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_bus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10308 = !{!10309, !10310}
!10309 = !DILocalVariable(name: "Periphs", arg: 1, scope: !10306, file: !10307, line: 1185, type: !113)
!10310 = !DILocalVariable(name: "tmpreg", scope: !10306, file: !10307, line: 1187, type: !584)
!10311 = !DILocation(line: 0, scope: !10306)
!10312 = !DILocation(line: 1187, column: 3, scope: !10306)
!10313 = !DILocation(line: 1187, column: 17, scope: !10306)
!10314 = !DILocation(line: 1188, column: 3, scope: !10306)
!10315 = !DILocation(line: 1190, column: 12, scope: !10306)
!10316 = !DILocation(line: 1190, column: 10, scope: !10306)
!10317 = !DILocation(line: 1191, column: 9, scope: !10306)
!10318 = !DILocation(line: 1192, column: 1, scope: !10306)
!10319 = distinct !DISubprogram(name: "uart_console_init", scope: !1390, file: !1390, line: 588, type: !1367, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1333, retainedNodes: !10320)
!10320 = !{!10321}
!10321 = !DILocalVariable(name: "arg", arg: 1, scope: !10319, file: !1390, line: 588, type: !1345)
!10322 = !DILocation(line: 0, scope: !10319)
!10323 = !DILocation(line: 593, column: 7, scope: !10324)
!10324 = distinct !DILexicalBlock(scope: !10319, file: !1390, line: 593, column: 6)
!10325 = !DILocation(line: 593, column: 6, scope: !10319)
!10326 = !DILocation(line: 597, column: 2, scope: !10319)
!10327 = !DILocation(line: 599, column: 2, scope: !10319)
!10328 = !DILocation(line: 600, column: 1, scope: !10319)
!10329 = distinct !DISubprogram(name: "device_is_ready", scope: !10330, file: !10330, line: 47, type: !10331, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1333, retainedNodes: !10333)
!10330 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/sensor_batch_processing")
!10331 = !DISubroutineType(types: !10332)
!10332 = !{!422, !1345}
!10333 = !{!10334}
!10334 = !DILocalVariable(name: "dev", arg: 1, scope: !10329, file: !10330, line: 47, type: !1345)
!10335 = !DILocation(line: 0, scope: !10329)
!10336 = !DILocation(line: 55, column: 2, scope: !10337)
!10337 = distinct !DILexicalBlock(scope: !10329, file: !10330, line: 55, column: 2)
!10338 = !{i64 2155687692}
!10339 = !DILocation(line: 56, column: 9, scope: !10329)
!10340 = !DILocation(line: 56, column: 2, scope: !10329)
!10341 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !1390, file: !1390, line: 573, type: !3551, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1333, retainedNodes: !437)
!10342 = !DILocation(line: 576, column: 2, scope: !10341)
!10343 = !DILocation(line: 579, column: 2, scope: !10341)
!10344 = !DILocation(line: 581, column: 1, scope: !10341)
!10345 = distinct !DISubprogram(name: "console_out", scope: !1390, file: !1390, line: 77, type: !571, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1333, retainedNodes: !10346)
!10346 = !{!10347}
!10347 = !DILocalVariable(name: "c", arg: 1, scope: !10345, file: !1390, line: 77, type: !108)
!10348 = !DILocation(line: 0, scope: !10345)
!10349 = !DILocation(line: 89, column: 11, scope: !10350)
!10350 = distinct !DILexicalBlock(scope: !10345, file: !1390, line: 89, column: 6)
!10351 = !DILocation(line: 89, column: 6, scope: !10345)
!10352 = !DILocation(line: 90, column: 3, scope: !10353)
!10353 = distinct !DILexicalBlock(scope: !10350, file: !1390, line: 89, column: 17)
!10354 = !DILocation(line: 91, column: 2, scope: !10353)
!10355 = !DILocation(line: 92, column: 34, scope: !10345)
!10356 = !DILocation(line: 92, column: 2, scope: !10345)
!10357 = !DILocation(line: 94, column: 2, scope: !10345)
!10358 = distinct !DISubprogram(name: "uart_poll_out", scope: !10359, file: !10359, line: 95, type: !1363, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1333, retainedNodes: !10360)
!10359 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/sensor_batch_processing")
!10360 = !{!10361, !10362}
!10361 = !DILocalVariable(name: "dev", arg: 1, scope: !10358, file: !10359, line: 95, type: !1345)
!10362 = !DILocalVariable(name: "out_char", arg: 2, scope: !10358, file: !10359, line: 95, type: !165)
!10363 = !DILocation(line: 0, scope: !10358)
!10364 = !DILocation(line: 105, column: 2, scope: !10365)
!10365 = distinct !DILexicalBlock(scope: !10358, file: !10359, line: 105, column: 2)
!10366 = !{i64 2155771083}
!10367 = !DILocation(line: 106, column: 2, scope: !10358)
!10368 = !DILocation(line: 107, column: 1, scope: !10358)
!10369 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !1339, file: !1339, line: 574, type: !1363, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1333, retainedNodes: !10370)
!10370 = !{!10371, !10372, !10373}
!10371 = !DILocalVariable(name: "dev", arg: 1, scope: !10369, file: !1339, line: 574, type: !1345)
!10372 = !DILocalVariable(name: "out_char", arg: 2, scope: !10369, file: !1339, line: 575, type: !165)
!10373 = !DILocalVariable(name: "api", scope: !10369, file: !1339, line: 577, type: !1336)
!10374 = !DILocation(line: 0, scope: !10369)
!10375 = !DILocation(line: 578, column: 40, scope: !10369)
!10376 = !DILocation(line: 580, column: 7, scope: !10369)
!10377 = !DILocation(line: 580, column: 2, scope: !10369)
!10378 = !DILocation(line: 581, column: 1, scope: !10369)
!10379 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !411, file: !411, line: 730, type: !10331, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1333, retainedNodes: !10380)
!10380 = !{!10381}
!10381 = !DILocalVariable(name: "dev", arg: 1, scope: !10379, file: !411, line: 730, type: !1345)
!10382 = !DILocation(line: 0, scope: !10379)
!10383 = !DILocation(line: 732, column: 9, scope: !10379)
!10384 = !DILocation(line: 732, column: 2, scope: !10379)
!10385 = distinct !DISubprogram(name: "uart_register_input", scope: !1390, file: !1390, line: 560, type: !10386, scopeLine: 562, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1333, retainedNodes: !10431)
!10386 = !DISubroutineType(types: !10387)
!10387 = !{null, !10388, !10388, !10428}
!10388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10389, size: 32)
!10389 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !359, line: 2208, size: 128, elements: !10390)
!10390 = !{!10391}
!10391 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !10389, file: !359, line: 2209, baseType: !10392, size: 128)
!10392 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !359, line: 1709, size: 128, elements: !10393)
!10393 = !{!10394, !10407, !10409}
!10394 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !10392, file: !359, line: 1710, baseType: !10395, size: 64)
!10395 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !10396, line: 46, baseType: !10397)
!10396 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !10396, line: 41, size: 64, elements: !10398)
!10398 = !{!10399, !10406}
!10399 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !10397, file: !10396, line: 42, baseType: !10400, size: 32)
!10400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10401, size: 32)
!10401 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !10396, line: 39, baseType: !10402)
!10402 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !10396, line: 35, size: 32, elements: !10403)
!10403 = !{!10404}
!10404 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !10402, file: !10396, line: 36, baseType: !10405, size: 32)
!10405 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !10396, line: 32, baseType: !113)
!10406 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !10397, file: !10396, line: 43, baseType: !10400, size: 32, offset: 32)
!10407 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !10392, file: !359, line: 1711, baseType: !10408, offset: 64)
!10408 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !436, line: 43, elements: !437)
!10409 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !10392, file: !359, line: 1712, baseType: !10410, size: 64, offset: 64)
!10410 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !363, line: 233, baseType: !10411)
!10411 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !363, line: 231, size: 64, elements: !10412)
!10412 = !{!10413}
!10413 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !10411, file: !363, line: 232, baseType: !10414, size: 64)
!10414 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !367, line: 48, baseType: !10415)
!10415 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !367, line: 37, size: 64, elements: !10416)
!10416 = !{!10417, !10423}
!10417 = !DIDerivedType(tag: DW_TAG_member, scope: !10415, file: !367, line: 38, baseType: !10418, size: 32)
!10418 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10415, file: !367, line: 38, size: 32, elements: !10419)
!10419 = !{!10420, !10422}
!10420 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !10418, file: !367, line: 39, baseType: !10421, size: 32)
!10421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10415, size: 32)
!10422 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !10418, file: !367, line: 40, baseType: !10421, size: 32)
!10423 = !DIDerivedType(tag: DW_TAG_member, scope: !10415, file: !367, line: 42, baseType: !10424, size: 32, offset: 32)
!10424 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10415, file: !367, line: 42, size: 32, elements: !10425)
!10425 = !{!10426, !10427}
!10426 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !10424, file: !367, line: 43, baseType: !10421, size: 32)
!10427 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !10424, file: !367, line: 44, baseType: !10421, size: 32)
!10428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10429, size: 32)
!10429 = !DISubroutineType(types: !10430)
!10430 = !{!164, !443, !164}
!10431 = !{!10432, !10433, !10434}
!10432 = !DILocalVariable(name: "avail", arg: 1, scope: !10385, file: !1390, line: 560, type: !10388)
!10433 = !DILocalVariable(name: "lines", arg: 2, scope: !10385, file: !1390, line: 560, type: !10388)
!10434 = !DILocalVariable(name: "completion", arg: 3, scope: !10385, file: !1390, line: 561, type: !10428)
!10435 = !DILocation(line: 0, scope: !10385)
!10436 = !DILocation(line: 566, column: 1, scope: !10385)
!10437 = distinct !DISubprogram(name: "gpio_stm32_config", scope: !1568, file: !1568, line: 523, type: !1426, scopeLine: 525, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1399, retainedNodes: !10438)
!10438 = !{!10439, !10440, !10441, !10442, !10443}
!10439 = !DILocalVariable(name: "dev", arg: 1, scope: !10437, file: !1568, line: 523, type: !1428)
!10440 = !DILocalVariable(name: "pin", arg: 2, scope: !10437, file: !1568, line: 524, type: !1443)
!10441 = !DILocalVariable(name: "flags", arg: 3, scope: !10437, file: !1568, line: 524, type: !1444)
!10442 = !DILocalVariable(name: "err", scope: !10437, file: !1568, line: 526, type: !108)
!10443 = !DILocalVariable(name: "pincfg", scope: !10437, file: !1568, line: 527, type: !108)
!10444 = !DILocation(line: 0, scope: !10437)
!10445 = !DILocation(line: 527, column: 2, scope: !10437)
!10446 = !DILocation(line: 532, column: 8, scope: !10437)
!10447 = !DILocation(line: 533, column: 10, scope: !10448)
!10448 = distinct !DILexicalBlock(scope: !10437, file: !1568, line: 533, column: 6)
!10449 = !DILocation(line: 533, column: 6, scope: !10437)
!10450 = !DILocation(line: 543, column: 13, scope: !10451)
!10451 = distinct !DILexicalBlock(scope: !10437, file: !1568, line: 543, column: 6)
!10452 = !DILocation(line: 543, column: 28, scope: !10451)
!10453 = !DILocation(line: 543, column: 6, scope: !10437)
!10454 = !DILocation(line: 544, column: 14, scope: !10455)
!10455 = distinct !DILexicalBlock(scope: !10456, file: !1568, line: 544, column: 7)
!10456 = distinct !DILexicalBlock(scope: !10451, file: !1568, line: 543, column: 34)
!10457 = !DILocation(line: 544, column: 39, scope: !10455)
!10458 = !DILocation(line: 544, column: 7, scope: !10456)
!10459 = !DILocation(line: 545, column: 38, scope: !10460)
!10460 = distinct !DILexicalBlock(scope: !10455, file: !1568, line: 544, column: 45)
!10461 = !DILocation(line: 545, column: 4, scope: !10460)
!10462 = !DILocation(line: 546, column: 3, scope: !10460)
!10463 = !DILocation(line: 546, column: 21, scope: !10464)
!10464 = distinct !DILexicalBlock(scope: !10455, file: !1568, line: 546, column: 14)
!10465 = !DILocation(line: 546, column: 45, scope: !10464)
!10466 = !DILocation(line: 546, column: 14, scope: !10455)
!10467 = !DILocation(line: 547, column: 40, scope: !10468)
!10468 = distinct !DILexicalBlock(scope: !10464, file: !1568, line: 546, column: 51)
!10469 = !DILocation(line: 547, column: 4, scope: !10468)
!10470 = !DILocation(line: 548, column: 3, scope: !10468)
!10471 = !DILocation(line: 551, column: 32, scope: !10437)
!10472 = !DILocation(line: 551, column: 37, scope: !10437)
!10473 = !DILocation(line: 551, column: 2, scope: !10437)
!10474 = !DILocation(line: 554, column: 6, scope: !10437)
!10475 = !DILocation(line: 562, column: 1, scope: !10437)
!10476 = distinct !DISubprogram(name: "gpio_stm32_port_get_raw", scope: !1568, file: !1568, line: 410, type: !10477, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1399, retainedNodes: !10479)
!10477 = !DISubroutineType(types: !10478)
!10478 = !{!108, !1428, !1255}
!10479 = !{!10480, !10481, !10482, !10484}
!10480 = !DILocalVariable(name: "dev", arg: 1, scope: !10476, file: !1568, line: 410, type: !1428)
!10481 = !DILocalVariable(name: "value", arg: 2, scope: !10476, file: !1568, line: 410, type: !1255)
!10482 = !DILocalVariable(name: "cfg", scope: !10476, file: !1568, line: 412, type: !10483)
!10483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1707, size: 32)
!10484 = !DILocalVariable(name: "gpio", scope: !10476, file: !1568, line: 413, type: !1501)
!10485 = !DILocation(line: 0, scope: !10476)
!10486 = !DILocation(line: 412, column: 45, scope: !10476)
!10487 = !DILocation(line: 413, column: 44, scope: !10476)
!10488 = !DILocation(line: 415, column: 11, scope: !10476)
!10489 = !DILocation(line: 415, column: 9, scope: !10476)
!10490 = !DILocation(line: 417, column: 2, scope: !10476)
!10491 = distinct !DISubprogram(name: "gpio_stm32_port_set_masked_raw", scope: !1568, file: !1568, line: 420, type: !1453, scopeLine: 423, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1399, retainedNodes: !10492)
!10492 = !{!10493, !10494, !10495, !10496, !10497, !10498}
!10493 = !DILocalVariable(name: "dev", arg: 1, scope: !10491, file: !1568, line: 420, type: !1428)
!10494 = !DILocalVariable(name: "mask", arg: 2, scope: !10491, file: !1568, line: 421, type: !1455)
!10495 = !DILocalVariable(name: "value", arg: 3, scope: !10491, file: !1568, line: 422, type: !1450)
!10496 = !DILocalVariable(name: "cfg", scope: !10491, file: !1568, line: 424, type: !10483)
!10497 = !DILocalVariable(name: "gpio", scope: !10491, file: !1568, line: 425, type: !1501)
!10498 = !DILocalVariable(name: "port_value", scope: !10491, file: !1568, line: 426, type: !113)
!10499 = !DILocation(line: 0, scope: !10491)
!10500 = !DILocation(line: 424, column: 45, scope: !10491)
!10501 = !DILocation(line: 425, column: 44, scope: !10491)
!10502 = !DILocation(line: 430, column: 15, scope: !10491)
!10503 = !DILocation(line: 431, column: 46, scope: !10491)
!10504 = !DILocation(line: 431, column: 44, scope: !10491)
!10505 = !DILocation(line: 431, column: 61, scope: !10491)
!10506 = !DILocation(line: 431, column: 53, scope: !10491)
!10507 = !DILocation(line: 431, column: 2, scope: !10491)
!10508 = !DILocation(line: 435, column: 2, scope: !10491)
!10509 = distinct !DISubprogram(name: "gpio_stm32_port_set_bits_raw", scope: !1568, file: !1568, line: 438, type: !1458, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1399, retainedNodes: !10510)
!10510 = !{!10511, !10512, !10513, !10514}
!10511 = !DILocalVariable(name: "dev", arg: 1, scope: !10509, file: !1568, line: 438, type: !1428)
!10512 = !DILocalVariable(name: "pins", arg: 2, scope: !10509, file: !1568, line: 439, type: !1455)
!10513 = !DILocalVariable(name: "cfg", scope: !10509, file: !1568, line: 441, type: !10483)
!10514 = !DILocalVariable(name: "gpio", scope: !10509, file: !1568, line: 442, type: !1501)
!10515 = !DILocation(line: 0, scope: !10509)
!10516 = !DILocation(line: 441, column: 45, scope: !10509)
!10517 = !DILocation(line: 442, column: 44, scope: !10509)
!10518 = !DILocation(line: 448, column: 2, scope: !10509)
!10519 = !DILocation(line: 450, column: 2, scope: !10509)
!10520 = distinct !DISubprogram(name: "gpio_stm32_port_clear_bits_raw", scope: !1568, file: !1568, line: 453, type: !1458, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1399, retainedNodes: !10521)
!10521 = !{!10522, !10523, !10524, !10525}
!10522 = !DILocalVariable(name: "dev", arg: 1, scope: !10520, file: !1568, line: 453, type: !1428)
!10523 = !DILocalVariable(name: "pins", arg: 2, scope: !10520, file: !1568, line: 454, type: !1455)
!10524 = !DILocalVariable(name: "cfg", scope: !10520, file: !1568, line: 456, type: !10483)
!10525 = !DILocalVariable(name: "gpio", scope: !10520, file: !1568, line: 457, type: !1501)
!10526 = !DILocation(line: 0, scope: !10520)
!10527 = !DILocation(line: 456, column: 45, scope: !10520)
!10528 = !DILocation(line: 457, column: 44, scope: !10520)
!10529 = !DILocation(line: 467, column: 2, scope: !10520)
!10530 = !DILocation(line: 470, column: 2, scope: !10520)
!10531 = distinct !DISubprogram(name: "gpio_stm32_port_toggle_bits", scope: !1568, file: !1568, line: 473, type: !1458, scopeLine: 475, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1399, retainedNodes: !10532)
!10532 = !{!10533, !10534, !10535, !10536}
!10533 = !DILocalVariable(name: "dev", arg: 1, scope: !10531, file: !1568, line: 473, type: !1428)
!10534 = !DILocalVariable(name: "pins", arg: 2, scope: !10531, file: !1568, line: 474, type: !1455)
!10535 = !DILocalVariable(name: "cfg", scope: !10531, file: !1568, line: 476, type: !10483)
!10536 = !DILocalVariable(name: "gpio", scope: !10531, file: !1568, line: 477, type: !1501)
!10537 = !DILocation(line: 0, scope: !10531)
!10538 = !DILocation(line: 476, column: 45, scope: !10531)
!10539 = !DILocation(line: 477, column: 44, scope: !10531)
!10540 = !DILocation(line: 484, column: 2, scope: !10531)
!10541 = !DILocation(line: 487, column: 2, scope: !10531)
!10542 = distinct !DISubprogram(name: "gpio_stm32_pin_interrupt_configure", scope: !1568, file: !1568, line: 594, type: !1464, scopeLine: 598, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1399, retainedNodes: !10543)
!10543 = !{!10544, !10545, !10546, !10547, !10548, !10549, !10551, !10552, !10553}
!10544 = !DILocalVariable(name: "dev", arg: 1, scope: !10542, file: !1568, line: 594, type: !1428)
!10545 = !DILocalVariable(name: "pin", arg: 2, scope: !10542, file: !1568, line: 595, type: !1443)
!10546 = !DILocalVariable(name: "mode", arg: 3, scope: !10542, file: !1568, line: 596, type: !1402)
!10547 = !DILocalVariable(name: "trig", arg: 4, scope: !10542, file: !1568, line: 597, type: !1408)
!10548 = !DILocalVariable(name: "cfg", scope: !10542, file: !1568, line: 599, type: !10483)
!10549 = !DILocalVariable(name: "data", scope: !10542, file: !1568, line: 600, type: !10550)
!10550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1649, size: 32)
!10551 = !DILocalVariable(name: "edge", scope: !10542, file: !1568, line: 601, type: !108)
!10552 = !DILocalVariable(name: "err", scope: !10542, file: !1568, line: 602, type: !108)
!10553 = !DILabel(scope: !10542, name: "exit", file: !1568, line: 643)
!10554 = !DILocation(line: 0, scope: !10542)
!10555 = !DILocation(line: 599, column: 45, scope: !10542)
!10556 = !DILocation(line: 604, column: 6, scope: !10542)
!10557 = !DILocation(line: 605, column: 34, scope: !10558)
!10558 = distinct !DILexicalBlock(scope: !10559, file: !1568, line: 605, column: 7)
!10559 = distinct !DILexicalBlock(scope: !10560, file: !1568, line: 604, column: 38)
!10560 = distinct !DILexicalBlock(scope: !10542, file: !1568, line: 604, column: 6)
!10561 = !DILocation(line: 605, column: 7, scope: !10558)
!10562 = !DILocation(line: 605, column: 47, scope: !10558)
!10563 = !DILocation(line: 605, column: 39, scope: !10558)
!10564 = !DILocation(line: 605, column: 7, scope: !10559)
!10565 = !DILocation(line: 606, column: 4, scope: !10566)
!10566 = distinct !DILexicalBlock(scope: !10558, file: !1568, line: 605, column: 53)
!10567 = !DILocation(line: 607, column: 4, scope: !10566)
!10568 = !DILocation(line: 608, column: 4, scope: !10566)
!10569 = !DILocation(line: 609, column: 3, scope: !10566)
!10570 = !DILocation(line: 600, column: 38, scope: !10542)
!10571 = !DILocation(line: 620, column: 30, scope: !10572)
!10572 = distinct !DILexicalBlock(scope: !10542, file: !1568, line: 620, column: 6)
!10573 = !DILocation(line: 620, column: 6, scope: !10572)
!10574 = !DILocation(line: 620, column: 57, scope: !10572)
!10575 = !DILocation(line: 620, column: 6, scope: !10542)
!10576 = !DILocation(line: 625, column: 29, scope: !10542)
!10577 = !DILocation(line: 625, column: 2, scope: !10542)
!10578 = !DILocation(line: 627, column: 2, scope: !10542)
!10579 = !DILocation(line: 630, column: 3, scope: !10580)
!10580 = distinct !DILexicalBlock(scope: !10542, file: !1568, line: 627, column: 16)
!10581 = !DILocation(line: 633, column: 3, scope: !10580)
!10582 = !DILocation(line: 636, column: 3, scope: !10580)
!10583 = !DILocation(line: 639, column: 2, scope: !10542)
!10584 = !DILocation(line: 641, column: 2, scope: !10542)
!10585 = !DILocation(line: 643, column: 1, scope: !10542)
!10586 = !DILocation(line: 644, column: 2, scope: !10542)
!10587 = distinct !DISubprogram(name: "gpio_stm32_manage_callback", scope: !1568, file: !1568, line: 647, type: !1468, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1399, retainedNodes: !10588)
!10588 = !{!10589, !10590, !10591, !10592}
!10589 = !DILocalVariable(name: "dev", arg: 1, scope: !10587, file: !1568, line: 647, type: !1428)
!10590 = !DILocalVariable(name: "callback", arg: 2, scope: !10587, file: !1568, line: 648, type: !1470)
!10591 = !DILocalVariable(name: "set", arg: 3, scope: !10587, file: !1568, line: 649, type: !422)
!10592 = !DILocalVariable(name: "data", scope: !10587, file: !1568, line: 651, type: !10550)
!10593 = !DILocation(line: 0, scope: !10587)
!10594 = !DILocation(line: 651, column: 38, scope: !10587)
!10595 = !DILocation(line: 653, column: 37, scope: !10587)
!10596 = !DILocation(line: 653, column: 9, scope: !10587)
!10597 = !DILocation(line: 653, column: 2, scope: !10587)
!10598 = distinct !DISubprogram(name: "gpio_manage_callback", scope: !10599, file: !10599, line: 38, type: !10600, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1399, retainedNodes: !10603)
!10599 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio/gpio_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10600 = !DISubroutineType(types: !10601)
!10601 = !{!108, !10602, !1470, !422}
!10602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1655, size: 32)
!10603 = !{!10604, !10605, !10606}
!10604 = !DILocalVariable(name: "callbacks", arg: 1, scope: !10598, file: !10599, line: 38, type: !10602)
!10605 = !DILocalVariable(name: "callback", arg: 2, scope: !10598, file: !10599, line: 39, type: !1470)
!10606 = !DILocalVariable(name: "set", arg: 3, scope: !10598, file: !10599, line: 40, type: !422)
!10607 = !DILocation(line: 0, scope: !10598)
!10608 = !DILocation(line: 45, column: 7, scope: !10609)
!10609 = distinct !DILexicalBlock(scope: !10598, file: !10599, line: 45, column: 6)
!10610 = !DILocation(line: 45, column: 6, scope: !10598)
!10611 = !DILocation(line: 46, column: 56, scope: !10612)
!10612 = distinct !DILexicalBlock(scope: !10613, file: !10599, line: 46, column: 7)
!10613 = distinct !DILexicalBlock(scope: !10609, file: !10599, line: 45, column: 38)
!10614 = !DILocation(line: 46, column: 8, scope: !10612)
!10615 = !DILocation(line: 46, column: 7, scope: !10613)
!10616 = !DILocation(line: 51, column: 13, scope: !10609)
!10617 = !DILocation(line: 56, column: 43, scope: !10618)
!10618 = distinct !DILexicalBlock(scope: !10619, file: !10599, line: 55, column: 11)
!10619 = distinct !DILexicalBlock(scope: !10598, file: !10599, line: 55, column: 6)
!10620 = !DILocation(line: 56, column: 3, scope: !10618)
!10621 = !DILocation(line: 57, column: 2, scope: !10618)
!10622 = !DILocation(line: 60, column: 1, scope: !10598)
!10623 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !1475, file: !1475, line: 261, type: !10624, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1399, retainedNodes: !10626)
!10624 = !DISubroutineType(types: !10625)
!10625 = !{!422, !10602}
!10626 = !{!10627}
!10627 = !DILocalVariable(name: "list", arg: 1, scope: !10623, file: !1475, line: 261, type: !10602)
!10628 = !DILocation(line: 0, scope: !10623)
!10629 = !DILocation(line: 261, column: 1, scope: !10623)
!10630 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !1475, file: !1475, line: 417, type: !10631, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1399, retainedNodes: !10633)
!10631 = !DISubroutineType(types: !10632)
!10632 = !{!422, !10602, !1659}
!10633 = !{!10634, !10635, !10636, !10637}
!10634 = !DILocalVariable(name: "list", arg: 1, scope: !10630, file: !1475, line: 417, type: !10602)
!10635 = !DILocalVariable(name: "node", arg: 2, scope: !10630, file: !1475, line: 417, type: !1659)
!10636 = !DILocalVariable(name: "prev", scope: !10630, file: !1475, line: 417, type: !1659)
!10637 = !DILocalVariable(name: "test", scope: !10630, file: !1475, line: 417, type: !1659)
!10638 = !DILocation(line: 0, scope: !10630)
!10639 = !DILocation(line: 417, column: 1, scope: !10640)
!10640 = distinct !DILexicalBlock(scope: !10630, file: !1475, line: 417, column: 1)
!10641 = !DILocation(line: 417, column: 1, scope: !10642)
!10642 = distinct !DILexicalBlock(scope: !10640, file: !1475, line: 417, column: 1)
!10643 = !DILocation(line: 417, column: 1, scope: !10644)
!10644 = distinct !DILexicalBlock(scope: !10645, file: !1475, line: 417, column: 1)
!10645 = distinct !DILexicalBlock(scope: !10642, file: !1475, line: 417, column: 1)
!10646 = !DILocation(line: 417, column: 1, scope: !10645)
!10647 = distinct !{!10647, !10639, !10639}
!10648 = !DILocation(line: 417, column: 1, scope: !10649)
!10649 = distinct !DILexicalBlock(scope: !10644, file: !1475, line: 417, column: 1)
!10650 = !DILocation(line: 417, column: 1, scope: !10630)
!10651 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !1475, file: !1475, line: 298, type: !10652, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1399, retainedNodes: !10654)
!10652 = !DISubroutineType(types: !10653)
!10653 = !{null, !10602, !1659}
!10654 = !{!10655, !10656}
!10655 = !DILocalVariable(name: "list", arg: 1, scope: !10651, file: !1475, line: 298, type: !10602)
!10656 = !DILocalVariable(name: "node", arg: 2, scope: !10651, file: !1475, line: 298, type: !1659)
!10657 = !DILocation(line: 0, scope: !10651)
!10658 = !DILocation(line: 298, column: 1, scope: !10651)
!10659 = !DILocation(line: 298, column: 1, scope: !10660)
!10660 = distinct !DILexicalBlock(scope: !10651, file: !1475, line: 298, column: 1)
!10661 = !DILocation(line: 298, column: 1, scope: !10662)
!10662 = distinct !DILexicalBlock(scope: !10660, file: !1475, line: 298, column: 1)
!10663 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !1475, file: !1475, line: 231, type: !10664, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1399, retainedNodes: !10666)
!10664 = !DISubroutineType(types: !10665)
!10665 = !{!1659, !10602}
!10666 = !{!10667}
!10667 = !DILocalVariable(name: "list", arg: 1, scope: !10663, file: !1475, line: 231, type: !10602)
!10668 = !DILocation(line: 0, scope: !10663)
!10669 = !DILocation(line: 233, column: 15, scope: !10663)
!10670 = !DILocation(line: 233, column: 2, scope: !10663)
!10671 = distinct !DISubprogram(name: "z_snode_next_set", scope: !1475, file: !1475, line: 209, type: !10672, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1399, retainedNodes: !10674)
!10672 = !DISubroutineType(types: !10673)
!10673 = !{null, !1659, !1659}
!10674 = !{!10675, !10676}
!10675 = !DILocalVariable(name: "parent", arg: 1, scope: !10671, file: !1475, line: 209, type: !1659)
!10676 = !DILocalVariable(name: "child", arg: 2, scope: !10671, file: !1475, line: 209, type: !1659)
!10677 = !DILocation(line: 0, scope: !10671)
!10678 = !DILocation(line: 211, column: 10, scope: !10671)
!10679 = !DILocation(line: 211, column: 15, scope: !10671)
!10680 = !DILocation(line: 212, column: 1, scope: !10671)
!10681 = distinct !DISubprogram(name: "z_slist_head_set", scope: !1475, file: !1475, line: 214, type: !10652, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1399, retainedNodes: !10682)
!10682 = !{!10683, !10684}
!10683 = !DILocalVariable(name: "list", arg: 1, scope: !10681, file: !1475, line: 214, type: !10602)
!10684 = !DILocalVariable(name: "node", arg: 2, scope: !10681, file: !1475, line: 214, type: !1659)
!10685 = !DILocation(line: 0, scope: !10681)
!10686 = !DILocation(line: 216, column: 8, scope: !10681)
!10687 = !DILocation(line: 216, column: 13, scope: !10681)
!10688 = !DILocation(line: 217, column: 1, scope: !10681)
!10689 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !1475, file: !1475, line: 243, type: !10664, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1399, retainedNodes: !10690)
!10690 = !{!10691}
!10691 = !DILocalVariable(name: "list", arg: 1, scope: !10689, file: !1475, line: 243, type: !10602)
!10692 = !DILocation(line: 0, scope: !10689)
!10693 = !DILocation(line: 245, column: 15, scope: !10689)
!10694 = !DILocation(line: 245, column: 2, scope: !10689)
!10695 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !1475, file: !1475, line: 219, type: !10652, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1399, retainedNodes: !10696)
!10696 = !{!10697, !10698}
!10697 = !DILocalVariable(name: "list", arg: 1, scope: !10695, file: !1475, line: 219, type: !10602)
!10698 = !DILocalVariable(name: "node", arg: 2, scope: !10695, file: !1475, line: 219, type: !1659)
!10699 = !DILocation(line: 0, scope: !10695)
!10700 = !DILocation(line: 221, column: 8, scope: !10695)
!10701 = !DILocation(line: 221, column: 13, scope: !10695)
!10702 = !DILocation(line: 222, column: 1, scope: !10695)
!10703 = distinct !DISubprogram(name: "sys_slist_remove", scope: !1475, file: !1475, line: 401, type: !10704, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1399, retainedNodes: !10706)
!10704 = !DISubroutineType(types: !10705)
!10705 = !{null, !10602, !1659, !1659}
!10706 = !{!10707, !10708, !10709}
!10707 = !DILocalVariable(name: "list", arg: 1, scope: !10703, file: !1475, line: 401, type: !10602)
!10708 = !DILocalVariable(name: "prev_node", arg: 2, scope: !10703, file: !1475, line: 401, type: !1659)
!10709 = !DILocalVariable(name: "node", arg: 3, scope: !10703, file: !1475, line: 401, type: !1659)
!10710 = !DILocation(line: 0, scope: !10703)
!10711 = !DILocation(line: 401, column: 1, scope: !10712)
!10712 = distinct !DILexicalBlock(scope: !10703, file: !1475, line: 401, column: 1)
!10713 = !DILocation(line: 0, scope: !10712)
!10714 = !DILocation(line: 401, column: 1, scope: !10703)
!10715 = !DILocation(line: 401, column: 1, scope: !10716)
!10716 = distinct !DILexicalBlock(scope: !10712, file: !1475, line: 401, column: 1)
!10717 = !DILocation(line: 401, column: 1, scope: !10718)
!10718 = distinct !DILexicalBlock(scope: !10716, file: !1475, line: 401, column: 1)
!10719 = !DILocation(line: 401, column: 1, scope: !10720)
!10720 = distinct !DILexicalBlock(scope: !10718, file: !1475, line: 401, column: 1)
!10721 = !DILocation(line: 401, column: 1, scope: !10722)
!10722 = distinct !DILexicalBlock(scope: !10712, file: !1475, line: 401, column: 1)
!10723 = !DILocation(line: 401, column: 1, scope: !10724)
!10724 = distinct !DILexicalBlock(scope: !10722, file: !1475, line: 401, column: 1)
!10725 = !DILocation(line: 401, column: 1, scope: !10726)
!10726 = distinct !DILexicalBlock(scope: !10724, file: !1475, line: 401, column: 1)
!10727 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !1475, file: !1475, line: 285, type: !10728, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1399, retainedNodes: !10730)
!10728 = !DISubroutineType(types: !10729)
!10729 = !{!1659, !1659}
!10730 = !{!10731}
!10731 = !DILocalVariable(name: "node", arg: 1, scope: !10727, file: !1475, line: 285, type: !1659)
!10732 = !DILocation(line: 0, scope: !10727)
!10733 = !DILocation(line: 285, column: 1, scope: !10727)
!10734 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !1475, file: !1475, line: 274, type: !10728, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1399, retainedNodes: !10735)
!10735 = !{!10736}
!10736 = !DILocalVariable(name: "node", arg: 1, scope: !10734, file: !1475, line: 274, type: !1659)
!10737 = !DILocation(line: 0, scope: !10734)
!10738 = !DILocation(line: 274, column: 1, scope: !10734)
!10739 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !1475, file: !1475, line: 204, type: !10728, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1399, retainedNodes: !10740)
!10740 = !{!10741}
!10741 = !DILocalVariable(name: "node", arg: 1, scope: !10739, file: !1475, line: 204, type: !1659)
!10742 = !DILocation(line: 0, scope: !10739)
!10743 = !DILocation(line: 206, column: 15, scope: !10739)
!10744 = !DILocation(line: 206, column: 2, scope: !10739)
!10745 = distinct !DISubprogram(name: "gpio_stm32_get_exti_source", scope: !1568, file: !1568, line: 342, type: !571, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1399, retainedNodes: !10746)
!10746 = !{!10747, !10748, !10749}
!10747 = !DILocalVariable(name: "pin", arg: 1, scope: !10745, file: !1568, line: 342, type: !108)
!10748 = !DILocalVariable(name: "line", scope: !10745, file: !1568, line: 344, type: !113)
!10749 = !DILocalVariable(name: "port", scope: !10745, file: !1568, line: 345, type: !108)
!10750 = !DILocation(line: 0, scope: !10745)
!10751 = !DILocation(line: 344, column: 18, scope: !10745)
!10752 = !{i32 983040, i32 0}
!10753 = !DILocation(line: 356, column: 9, scope: !10745)
!10754 = !DILocation(line: 370, column: 2, scope: !10745)
!10755 = distinct !DISubprogram(name: "gpio_stm32_isr", scope: !1568, file: !1568, line: 37, type: !1151, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1399, retainedNodes: !10756)
!10756 = !{!10757, !10758, !10759}
!10757 = !DILocalVariable(name: "line", arg: 1, scope: !10755, file: !1568, line: 37, type: !108)
!10758 = !DILocalVariable(name: "arg", arg: 2, scope: !10755, file: !1568, line: 37, type: !104)
!10759 = !DILocalVariable(name: "data", scope: !10755, file: !1568, line: 39, type: !10550)
!10760 = !DILocation(line: 0, scope: !10755)
!10761 = !DILocation(line: 41, column: 29, scope: !10755)
!10762 = !DILocation(line: 41, column: 39, scope: !10755)
!10763 = !DILocation(line: 41, column: 44, scope: !10755)
!10764 = !DILocation(line: 41, column: 2, scope: !10755)
!10765 = !DILocation(line: 42, column: 1, scope: !10755)
!10766 = distinct !DISubprogram(name: "gpio_stm32_enable_int", scope: !1568, file: !1568, line: 376, type: !10767, scopeLine: 377, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1399, retainedNodes: !10769)
!10767 = !DISubroutineType(types: !10768)
!10768 = !{!108, !108, !108}
!10769 = !{!10770, !10771, !10772, !10774, !10775}
!10770 = !DILocalVariable(name: "port", arg: 1, scope: !10766, file: !1568, line: 376, type: !108)
!10771 = !DILocalVariable(name: "pin", arg: 2, scope: !10766, file: !1568, line: 376, type: !108)
!10772 = !DILocalVariable(name: "clk", scope: !10766, file: !1568, line: 386, type: !10773)
!10773 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1428)
!10774 = !DILocalVariable(name: "pclken", scope: !10766, file: !1568, line: 387, type: !1714)
!10775 = !DILocalVariable(name: "ret", scope: !10766, file: !1568, line: 396, type: !108)
!10776 = !DILocation(line: 0, scope: !10766)
!10777 = !DILocation(line: 387, column: 2, scope: !10766)
!10778 = !DILocation(line: 387, column: 22, scope: !10766)
!10779 = !DILocation(line: 399, column: 8, scope: !10766)
!10780 = !DILocation(line: 400, column: 10, scope: !10781)
!10781 = distinct !DILexicalBlock(scope: !10766, file: !1568, line: 400, column: 6)
!10782 = !DILocation(line: 400, column: 6, scope: !10766)
!10783 = !DILocation(line: 405, column: 2, scope: !10766)
!10784 = !DILocation(line: 407, column: 2, scope: !10766)
!10785 = !DILocation(line: 408, column: 1, scope: !10766)
!10786 = distinct !DISubprogram(name: "clock_control_on", scope: !1205, file: !1205, line: 123, type: !1533, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1399, retainedNodes: !10787)
!10787 = !{!10788, !10789, !10790}
!10788 = !DILocalVariable(name: "dev", arg: 1, scope: !10786, file: !1205, line: 123, type: !1428)
!10789 = !DILocalVariable(name: "sys", arg: 2, scope: !10786, file: !1205, line: 124, type: !1299)
!10790 = !DILocalVariable(name: "api", scope: !10786, file: !1205, line: 126, type: !1526)
!10791 = !DILocation(line: 0, scope: !10786)
!10792 = !DILocation(line: 127, column: 49, scope: !10786)
!10793 = !DILocation(line: 129, column: 14, scope: !10786)
!10794 = !DILocation(line: 129, column: 9, scope: !10786)
!10795 = !DILocation(line: 129, column: 2, scope: !10786)
!10796 = distinct !DISubprogram(name: "gpio_stm32_set_exti_source", scope: !1568, file: !1568, line: 311, type: !9930, scopeLine: 312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1399, retainedNodes: !10797)
!10797 = !{!10798, !10799, !10800}
!10798 = !DILocalVariable(name: "port", arg: 1, scope: !10796, file: !1568, line: 311, type: !108)
!10799 = !DILocalVariable(name: "pin", arg: 2, scope: !10796, file: !1568, line: 311, type: !108)
!10800 = !DILocalVariable(name: "line", scope: !10796, file: !1568, line: 313, type: !113)
!10801 = !DILocation(line: 0, scope: !10796)
!10802 = !DILocation(line: 313, column: 18, scope: !10796)
!10803 = !DILocation(line: 337, column: 2, scope: !10796)
!10804 = !DILocation(line: 340, column: 1, scope: !10796)
!10805 = distinct !DISubprogram(name: "gpio_stm32_pin_to_exti_line", scope: !1568, file: !1568, line: 295, type: !10806, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1399, retainedNodes: !10808)
!10806 = !DISubroutineType(types: !10807)
!10807 = !{!113, !108}
!10808 = !{!10809}
!10809 = !DILocalVariable(name: "pin", arg: 1, scope: !10805, file: !1568, line: 295, type: !108)
!10810 = !DILocation(line: 0, scope: !10805)
!10811 = !DILocation(line: 307, column: 46, scope: !10805)
!10812 = !DILocation(line: 307, column: 27, scope: !10805)
!10813 = !DILocation(line: 307, column: 32, scope: !10805)
!10814 = !DILocation(line: 307, column: 14, scope: !10805)
!10815 = !DILocation(line: 307, column: 39, scope: !10805)
!10816 = !DILocation(line: 307, column: 2, scope: !10805)
!10817 = distinct !DISubprogram(name: "LL_SYSCFG_SetEXTISource", scope: !6904, file: !6904, line: 671, type: !10818, scopeLine: 672, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1399, retainedNodes: !10820)
!10818 = !DISubroutineType(types: !10819)
!10819 = !{null, !113, !113}
!10820 = !{!10821, !10822}
!10821 = !DILocalVariable(name: "Port", arg: 1, scope: !10817, file: !6904, line: 671, type: !113)
!10822 = !DILocalVariable(name: "Line", arg: 2, scope: !10817, file: !6904, line: 671, type: !113)
!10823 = !DILocation(line: 0, scope: !10817)
!10824 = !DILocation(line: 673, column: 3, scope: !10817)
!10825 = !DILocalVariable(name: "value", arg: 1, scope: !10826, file: !7201, line: 373, type: !113)
!10826 = distinct !DISubprogram(name: "__RBIT", scope: !7201, file: !7201, line: 373, type: !8447, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1399, retainedNodes: !10827)
!10827 = !{!10825, !10828}
!10828 = !DILocalVariable(name: "result", scope: !10826, file: !7201, line: 375, type: !113)
!10829 = !DILocation(line: 0, scope: !10826, inlinedAt: !10830)
!10830 = distinct !DILocation(line: 673, column: 3, scope: !10817)
!10831 = !DILocation(line: 380, column: 4, scope: !10826, inlinedAt: !10830)
!10832 = !{i64 4132689}
!10833 = !DILocalVariable(name: "value", arg: 1, scope: !10834, file: !7201, line: 403, type: !113)
!10834 = distinct !DISubprogram(name: "__CLZ", scope: !7201, file: !7201, line: 403, type: !10835, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1399, retainedNodes: !10837)
!10835 = !DISubroutineType(types: !10836)
!10836 = !{!164, !113}
!10837 = !{!10833}
!10838 = !DILocation(line: 0, scope: !10834, inlinedAt: !10839)
!10839 = distinct !DILocation(line: 673, column: 3, scope: !10817)
!10840 = !DILocation(line: 414, column: 7, scope: !10834, inlinedAt: !10839)
!10841 = !DILocation(line: 674, column: 1, scope: !10817)
!10842 = distinct !DISubprogram(name: "gpio_fire_callbacks", scope: !10599, file: !10599, line: 69, type: !10843, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1399, retainedNodes: !10845)
!10843 = !DISubroutineType(types: !10844)
!10844 = !{null, !10602, !1428, !113}
!10845 = !{!10846, !10847, !10848, !10849, !10850}
!10846 = !DILocalVariable(name: "list", arg: 1, scope: !10842, file: !10599, line: 69, type: !10602)
!10847 = !DILocalVariable(name: "port", arg: 2, scope: !10842, file: !10599, line: 70, type: !1428)
!10848 = !DILocalVariable(name: "pins", arg: 3, scope: !10842, file: !10599, line: 71, type: !113)
!10849 = !DILocalVariable(name: "cb", scope: !10842, file: !10599, line: 73, type: !1470)
!10850 = !DILocalVariable(name: "tmp", scope: !10842, file: !10599, line: 73, type: !1470)
!10851 = !DILocation(line: 0, scope: !10842)
!10852 = !DILocation(line: 75, column: 2, scope: !10853)
!10853 = distinct !DILexicalBlock(scope: !10842, file: !10599, line: 75, column: 2)
!10854 = !DILocation(line: 0, scope: !10853)
!10855 = !DILocation(line: 76, column: 11, scope: !10856)
!10856 = distinct !DILexicalBlock(scope: !10857, file: !10599, line: 76, column: 7)
!10857 = distinct !DILexicalBlock(scope: !10858, file: !10599, line: 75, column: 57)
!10858 = distinct !DILexicalBlock(scope: !10853, file: !10599, line: 75, column: 2)
!10859 = !DILocation(line: 76, column: 20, scope: !10856)
!10860 = !DILocation(line: 76, column: 7, scope: !10857)
!10861 = !DILocation(line: 78, column: 8, scope: !10862)
!10862 = distinct !DILexicalBlock(scope: !10856, file: !10599, line: 76, column: 28)
!10863 = !DILocation(line: 78, column: 4, scope: !10862)
!10864 = !DILocation(line: 79, column: 3, scope: !10862)
!10865 = !DILocation(line: 75, column: 2, scope: !10858)
!10866 = !DILocation(line: 81, column: 1, scope: !10842)
!10867 = distinct !DISubprogram(name: "LL_SYSCFG_GetEXTISource", scope: !6904, file: !6904, line: 710, type: !8447, scopeLine: 711, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1399, retainedNodes: !10868)
!10868 = !{!10869}
!10869 = !DILocalVariable(name: "Line", arg: 1, scope: !10867, file: !6904, line: 710, type: !113)
!10870 = !DILocation(line: 0, scope: !10867)
!10871 = !DILocation(line: 712, column: 21, scope: !10867)
!10872 = !DILocation(line: 0, scope: !10826, inlinedAt: !10873)
!10873 = distinct !DILocation(line: 712, column: 76, scope: !10867)
!10874 = !DILocation(line: 380, column: 4, scope: !10826, inlinedAt: !10873)
!10875 = !DILocation(line: 0, scope: !10834, inlinedAt: !10876)
!10876 = distinct !DILocation(line: 712, column: 76, scope: !10867)
!10877 = !DILocation(line: 414, column: 7, scope: !10834, inlinedAt: !10876)
!10878 = !DILocation(line: 712, column: 73, scope: !10867)
!10879 = !DILocation(line: 712, column: 3, scope: !10867)
!10880 = distinct !DISubprogram(name: "LL_GPIO_ResetOutputPin", scope: !10881, file: !10881, line: 910, type: !10882, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1399, retainedNodes: !10884)
!10881 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10882 = !DISubroutineType(types: !10883)
!10883 = !{null, !1501, !113}
!10884 = !{!10885, !10886}
!10885 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10880, file: !10881, line: 910, type: !1501)
!10886 = !DILocalVariable(name: "PinMask", arg: 2, scope: !10880, file: !10881, line: 910, type: !113)
!10887 = !DILocation(line: 0, scope: !10880)
!10888 = !DILocation(line: 912, column: 3, scope: !10880)
!10889 = !DILocation(line: 913, column: 1, scope: !10880)
!10890 = distinct !DISubprogram(name: "LL_GPIO_ReadOutputPort", scope: !10881, file: !10881, line: 823, type: !10891, scopeLine: 824, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1399, retainedNodes: !10893)
!10891 = !DISubroutineType(types: !10892)
!10892 = !{!113, !1501}
!10893 = !{!10894}
!10894 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10890, file: !10881, line: 823, type: !1501)
!10895 = !DILocation(line: 0, scope: !10890)
!10896 = !DILocation(line: 825, column: 21, scope: !10890)
!10897 = !DILocation(line: 825, column: 3, scope: !10890)
!10898 = distinct !DISubprogram(name: "LL_GPIO_WriteOutputPort", scope: !10881, file: !10881, line: 812, type: !10882, scopeLine: 813, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1399, retainedNodes: !10899)
!10899 = !{!10900, !10901}
!10900 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10898, file: !10881, line: 812, type: !1501)
!10901 = !DILocalVariable(name: "PortValue", arg: 2, scope: !10898, file: !10881, line: 812, type: !113)
!10902 = !DILocation(line: 0, scope: !10898)
!10903 = !DILocation(line: 814, column: 3, scope: !10898)
!10904 = !DILocation(line: 815, column: 1, scope: !10898)
!10905 = distinct !DISubprogram(name: "LL_GPIO_ReadInputPort", scope: !10881, file: !10881, line: 771, type: !10891, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1399, retainedNodes: !10906)
!10906 = !{!10907}
!10907 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10905, file: !10881, line: 771, type: !1501)
!10908 = !DILocation(line: 0, scope: !10905)
!10909 = !DILocation(line: 773, column: 21, scope: !10905)
!10910 = !DILocation(line: 773, column: 3, scope: !10905)
!10911 = distinct !DISubprogram(name: "gpio_stm32_flags_to_conf", scope: !1568, file: !1568, line: 47, type: !10912, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1399, retainedNodes: !10914)
!10912 = !DISubroutineType(types: !10913)
!10913 = !{!108, !1444, !552}
!10914 = !{!10915, !10916}
!10915 = !DILocalVariable(name: "flags", arg: 1, scope: !10911, file: !1568, line: 47, type: !1444)
!10916 = !DILocalVariable(name: "pincfg", arg: 2, scope: !10911, file: !1568, line: 47, type: !552)
!10917 = !DILocation(line: 0, scope: !10911)
!10918 = !DILocation(line: 50, column: 13, scope: !10919)
!10919 = distinct !DILexicalBlock(scope: !10911, file: !1568, line: 50, column: 6)
!10920 = !DILocation(line: 50, column: 28, scope: !10919)
!10921 = !DILocation(line: 50, column: 6, scope: !10911)
!10922 = !DILocation(line: 53, column: 11, scope: !10923)
!10923 = distinct !DILexicalBlock(scope: !10919, file: !1568, line: 50, column: 34)
!10924 = !DILocation(line: 55, column: 14, scope: !10925)
!10925 = distinct !DILexicalBlock(scope: !10923, file: !1568, line: 55, column: 7)
!10926 = !DILocation(line: 55, column: 35, scope: !10925)
!10927 = !DILocation(line: 55, column: 7, scope: !10923)
!10928 = !DILocation(line: 56, column: 14, scope: !10929)
!10929 = distinct !DILexicalBlock(scope: !10930, file: !1568, line: 56, column: 8)
!10930 = distinct !DILexicalBlock(scope: !10925, file: !1568, line: 55, column: 41)
!10931 = !DILocation(line: 56, column: 8, scope: !10930)
!10932 = !DILocation(line: 0, scope: !10925)
!10933 = !DILocation(line: 66, column: 14, scope: !10934)
!10934 = distinct !DILexicalBlock(scope: !10923, file: !1568, line: 66, column: 7)
!10935 = !DILocation(line: 66, column: 30, scope: !10934)
!10936 = !DILocation(line: 66, column: 7, scope: !10923)
!10937 = !DILocation(line: 67, column: 12, scope: !10938)
!10938 = distinct !DILexicalBlock(scope: !10934, file: !1568, line: 66, column: 36)
!10939 = !DILocation(line: 68, column: 3, scope: !10938)
!10940 = !DILocation(line: 68, column: 21, scope: !10941)
!10941 = distinct !DILexicalBlock(scope: !10934, file: !1568, line: 68, column: 14)
!10942 = !DILocation(line: 68, column: 39, scope: !10941)
!10943 = !DILocation(line: 68, column: 14, scope: !10934)
!10944 = !DILocation(line: 69, column: 12, scope: !10945)
!10945 = distinct !DILexicalBlock(scope: !10941, file: !1568, line: 68, column: 45)
!10946 = !DILocation(line: 70, column: 3, scope: !10945)
!10947 = !DILocation(line: 72, column: 21, scope: !10948)
!10948 = distinct !DILexicalBlock(scope: !10919, file: !1568, line: 72, column: 14)
!10949 = !DILocation(line: 72, column: 35, scope: !10948)
!10950 = !DILocation(line: 72, column: 14, scope: !10919)
!10951 = !DILocation(line: 77, column: 14, scope: !10952)
!10952 = distinct !DILexicalBlock(scope: !10953, file: !1568, line: 77, column: 7)
!10953 = distinct !DILexicalBlock(scope: !10948, file: !1568, line: 72, column: 41)
!10954 = !DILocation(line: 77, column: 30, scope: !10952)
!10955 = !DILocation(line: 77, column: 7, scope: !10953)
!10956 = !DILocation(line: 0, scope: !10919)
!10957 = !DILocation(line: 90, column: 1, scope: !10911)
!10958 = distinct !DISubprogram(name: "gpio_stm32_configure_raw", scope: !1568, file: !1568, line: 157, type: !10959, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1399, retainedNodes: !10961)
!10959 = !DISubroutineType(types: !10960)
!10960 = !{null, !1428, !108, !108, !108}
!10961 = !{!10962, !10963, !10964, !10965, !10966, !10967, !10968, !10969, !10970, !10971, !10972}
!10962 = !DILocalVariable(name: "dev", arg: 1, scope: !10958, file: !1568, line: 157, type: !1428)
!10963 = !DILocalVariable(name: "pin", arg: 2, scope: !10958, file: !1568, line: 157, type: !108)
!10964 = !DILocalVariable(name: "conf", arg: 3, scope: !10958, file: !1568, line: 158, type: !108)
!10965 = !DILocalVariable(name: "func", arg: 4, scope: !10958, file: !1568, line: 158, type: !108)
!10966 = !DILocalVariable(name: "cfg", scope: !10958, file: !1568, line: 160, type: !10483)
!10967 = !DILocalVariable(name: "gpio", scope: !10958, file: !1568, line: 161, type: !1501)
!10968 = !DILocalVariable(name: "pin_ll", scope: !10958, file: !1568, line: 163, type: !108)
!10969 = !DILocalVariable(name: "mode", scope: !10958, file: !1568, line: 227, type: !32)
!10970 = !DILocalVariable(name: "otype", scope: !10958, file: !1568, line: 227, type: !32)
!10971 = !DILocalVariable(name: "ospeed", scope: !10958, file: !1568, line: 227, type: !32)
!10972 = !DILocalVariable(name: "pupd", scope: !10958, file: !1568, line: 227, type: !32)
!10973 = !DILocation(line: 0, scope: !10958)
!10974 = !DILocation(line: 160, column: 45, scope: !10958)
!10975 = !DILocation(line: 161, column: 44, scope: !10958)
!10976 = !DILocation(line: 163, column: 15, scope: !10958)
!10977 = !DILocation(line: 229, column: 14, scope: !10958)
!10978 = !DILocation(line: 246, column: 47, scope: !10958)
!10979 = !DILocation(line: 246, column: 2, scope: !10958)
!10980 = !DILocation(line: 248, column: 43, scope: !10958)
!10981 = !DILocation(line: 248, column: 2, scope: !10958)
!10982 = !DILocation(line: 250, column: 40, scope: !10958)
!10983 = !DILocation(line: 250, column: 2, scope: !10958)
!10984 = !DILocation(line: 252, column: 11, scope: !10985)
!10985 = distinct !DILexicalBlock(scope: !10958, file: !1568, line: 252, column: 6)
!10986 = !DILocation(line: 252, column: 6, scope: !10958)
!10987 = !DILocation(line: 253, column: 11, scope: !10988)
!10988 = distinct !DILexicalBlock(scope: !10989, file: !1568, line: 253, column: 7)
!10989 = distinct !DILexicalBlock(scope: !10985, file: !1568, line: 252, column: 36)
!10990 = !DILocation(line: 253, column: 7, scope: !10989)
!10991 = !DILocation(line: 254, column: 4, scope: !10992)
!10992 = distinct !DILexicalBlock(scope: !10988, file: !1568, line: 253, column: 16)
!10993 = !DILocation(line: 255, column: 3, scope: !10992)
!10994 = !DILocation(line: 256, column: 4, scope: !10995)
!10995 = distinct !DILexicalBlock(scope: !10988, file: !1568, line: 255, column: 10)
!10996 = !DILocation(line: 260, column: 40, scope: !10958)
!10997 = !DILocation(line: 260, column: 2, scope: !10958)
!10998 = !DILocation(line: 265, column: 1, scope: !10958)
!10999 = distinct !DISubprogram(name: "stm32_pinval_get", scope: !1568, file: !1568, line: 137, type: !10806, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1399, retainedNodes: !11000)
!11000 = !{!11001, !11002}
!11001 = !DILocalVariable(name: "pin", arg: 1, scope: !10999, file: !1568, line: 137, type: !108)
!11002 = !DILocalVariable(name: "pinval", scope: !10999, file: !1568, line: 139, type: !113)
!11003 = !DILocation(line: 0, scope: !10999)
!11004 = !DILocation(line: 149, column: 13, scope: !10999)
!11005 = !DILocation(line: 151, column: 2, scope: !10999)
!11006 = distinct !DISubprogram(name: "LL_GPIO_SetPinOutputType", scope: !10881, file: !10881, line: 342, type: !11007, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1399, retainedNodes: !11009)
!11007 = !DISubroutineType(types: !11008)
!11008 = !{null, !1501, !113, !113}
!11009 = !{!11010, !11011, !11012}
!11010 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11006, file: !10881, line: 342, type: !1501)
!11011 = !DILocalVariable(name: "PinMask", arg: 2, scope: !11006, file: !10881, line: 342, type: !113)
!11012 = !DILocalVariable(name: "OutputType", arg: 3, scope: !11006, file: !10881, line: 342, type: !113)
!11013 = !DILocation(line: 0, scope: !11006)
!11014 = !DILocation(line: 344, column: 3, scope: !11006)
!11015 = !DILocation(line: 345, column: 1, scope: !11006)
!11016 = distinct !DISubprogram(name: "LL_GPIO_SetPinSpeed", scope: !10881, file: !10881, line: 413, type: !11007, scopeLine: 414, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1399, retainedNodes: !11017)
!11017 = !{!11018, !11019, !11020}
!11018 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11016, file: !10881, line: 413, type: !1501)
!11019 = !DILocalVariable(name: "Pin", arg: 2, scope: !11016, file: !10881, line: 413, type: !113)
!11020 = !DILocalVariable(name: "Speed", arg: 3, scope: !11016, file: !10881, line: 413, type: !113)
!11021 = !DILocation(line: 0, scope: !11016)
!11022 = !DILocation(line: 415, column: 3, scope: !11016)
!11023 = !DILocation(line: 0, scope: !10826, inlinedAt: !11024)
!11024 = distinct !DILocation(line: 415, column: 3, scope: !11016)
!11025 = !DILocation(line: 380, column: 4, scope: !10826, inlinedAt: !11024)
!11026 = !DILocation(line: 0, scope: !10834, inlinedAt: !11027)
!11027 = distinct !DILocation(line: 415, column: 3, scope: !11016)
!11028 = !DILocation(line: 414, column: 7, scope: !10834, inlinedAt: !11027)
!11029 = !DILocation(line: 0, scope: !10826, inlinedAt: !11030)
!11030 = distinct !DILocation(line: 415, column: 3, scope: !11016)
!11031 = !DILocation(line: 0, scope: !10834, inlinedAt: !11032)
!11032 = distinct !DILocation(line: 415, column: 3, scope: !11016)
!11033 = !DILocation(line: 417, column: 1, scope: !11016)
!11034 = distinct !DISubprogram(name: "LL_GPIO_SetPinPull", scope: !10881, file: !10881, line: 484, type: !11007, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1399, retainedNodes: !11035)
!11035 = !{!11036, !11037, !11038}
!11036 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11034, file: !10881, line: 484, type: !1501)
!11037 = !DILocalVariable(name: "Pin", arg: 2, scope: !11034, file: !10881, line: 484, type: !113)
!11038 = !DILocalVariable(name: "Pull", arg: 3, scope: !11034, file: !10881, line: 484, type: !113)
!11039 = !DILocation(line: 0, scope: !11034)
!11040 = !DILocation(line: 486, column: 3, scope: !11034)
!11041 = !DILocation(line: 0, scope: !10826, inlinedAt: !11042)
!11042 = distinct !DILocation(line: 486, column: 3, scope: !11034)
!11043 = !DILocation(line: 380, column: 4, scope: !10826, inlinedAt: !11042)
!11044 = !DILocation(line: 0, scope: !10834, inlinedAt: !11045)
!11045 = distinct !DILocation(line: 486, column: 3, scope: !11034)
!11046 = !DILocation(line: 414, column: 7, scope: !10834, inlinedAt: !11045)
!11047 = !DILocation(line: 0, scope: !10826, inlinedAt: !11048)
!11048 = distinct !DILocation(line: 486, column: 3, scope: !11034)
!11049 = !DILocation(line: 0, scope: !10834, inlinedAt: !11050)
!11050 = distinct !DILocation(line: 486, column: 3, scope: !11034)
!11051 = !DILocation(line: 487, column: 1, scope: !11034)
!11052 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_0_7", scope: !10881, file: !10881, line: 556, type: !11007, scopeLine: 557, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1399, retainedNodes: !11053)
!11053 = !{!11054, !11055, !11056}
!11054 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11052, file: !10881, line: 556, type: !1501)
!11055 = !DILocalVariable(name: "Pin", arg: 2, scope: !11052, file: !10881, line: 556, type: !113)
!11056 = !DILocalVariable(name: "Alternate", arg: 3, scope: !11052, file: !10881, line: 556, type: !113)
!11057 = !DILocation(line: 0, scope: !11052)
!11058 = !DILocation(line: 558, column: 3, scope: !11052)
!11059 = !DILocation(line: 0, scope: !10826, inlinedAt: !11060)
!11060 = distinct !DILocation(line: 558, column: 3, scope: !11052)
!11061 = !DILocation(line: 380, column: 4, scope: !10826, inlinedAt: !11060)
!11062 = !DILocation(line: 0, scope: !10834, inlinedAt: !11063)
!11063 = distinct !DILocation(line: 558, column: 3, scope: !11052)
!11064 = !DILocation(line: 414, column: 7, scope: !10834, inlinedAt: !11063)
!11065 = !DILocation(line: 0, scope: !10826, inlinedAt: !11066)
!11066 = distinct !DILocation(line: 558, column: 3, scope: !11052)
!11067 = !DILocation(line: 0, scope: !10834, inlinedAt: !11068)
!11068 = distinct !DILocation(line: 558, column: 3, scope: !11052)
!11069 = !DILocation(line: 560, column: 1, scope: !11052)
!11070 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_8_15", scope: !10881, file: !10881, line: 633, type: !11007, scopeLine: 634, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1399, retainedNodes: !11071)
!11071 = !{!11072, !11073, !11074}
!11072 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11070, file: !10881, line: 633, type: !1501)
!11073 = !DILocalVariable(name: "Pin", arg: 2, scope: !11070, file: !10881, line: 633, type: !113)
!11074 = !DILocalVariable(name: "Alternate", arg: 3, scope: !11070, file: !10881, line: 633, type: !113)
!11075 = !DILocation(line: 0, scope: !11070)
!11076 = !DILocation(line: 635, column: 3, scope: !11070)
!11077 = !DILocation(line: 0, scope: !10826, inlinedAt: !11078)
!11078 = distinct !DILocation(line: 635, column: 3, scope: !11070)
!11079 = !DILocation(line: 380, column: 4, scope: !10826, inlinedAt: !11078)
!11080 = !DILocation(line: 0, scope: !10834, inlinedAt: !11081)
!11081 = distinct !DILocation(line: 635, column: 3, scope: !11070)
!11082 = !DILocation(line: 414, column: 7, scope: !10834, inlinedAt: !11081)
!11083 = !DILocation(line: 0, scope: !10826, inlinedAt: !11084)
!11084 = distinct !DILocation(line: 635, column: 3, scope: !11070)
!11085 = !DILocation(line: 0, scope: !10834, inlinedAt: !11086)
!11086 = distinct !DILocation(line: 635, column: 3, scope: !11070)
!11087 = !DILocation(line: 637, column: 1, scope: !11070)
!11088 = distinct !DISubprogram(name: "LL_GPIO_SetPinMode", scope: !10881, file: !10881, line: 273, type: !11007, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1399, retainedNodes: !11089)
!11089 = !{!11090, !11091, !11092}
!11090 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11088, file: !10881, line: 273, type: !1501)
!11091 = !DILocalVariable(name: "Pin", arg: 2, scope: !11088, file: !10881, line: 273, type: !113)
!11092 = !DILocalVariable(name: "Mode", arg: 3, scope: !11088, file: !10881, line: 273, type: !113)
!11093 = !DILocation(line: 0, scope: !11088)
!11094 = !DILocation(line: 275, column: 3, scope: !11088)
!11095 = !DILocation(line: 0, scope: !10826, inlinedAt: !11096)
!11096 = distinct !DILocation(line: 275, column: 3, scope: !11088)
!11097 = !DILocation(line: 380, column: 4, scope: !10826, inlinedAt: !11096)
!11098 = !DILocation(line: 0, scope: !10834, inlinedAt: !11099)
!11099 = distinct !DILocation(line: 275, column: 3, scope: !11088)
!11100 = !DILocation(line: 414, column: 7, scope: !10834, inlinedAt: !11099)
!11101 = !DILocation(line: 0, scope: !10826, inlinedAt: !11102)
!11102 = distinct !DILocation(line: 275, column: 3, scope: !11088)
!11103 = !DILocation(line: 0, scope: !10834, inlinedAt: !11104)
!11104 = distinct !DILocation(line: 275, column: 3, scope: !11088)
!11105 = !DILocation(line: 276, column: 1, scope: !11088)
!11106 = distinct !DISubprogram(name: "gpio_stm32_init", scope: !1568, file: !1568, line: 698, type: !1581, scopeLine: 699, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1399, retainedNodes: !11107)
!11107 = !{!11108, !11109, !11110}
!11108 = !DILocalVariable(name: "dev", arg: 1, scope: !11106, file: !1568, line: 698, type: !1428)
!11109 = !DILocalVariable(name: "data", scope: !11106, file: !1568, line: 700, type: !10550)
!11110 = !DILocalVariable(name: "ret", scope: !11106, file: !1568, line: 701, type: !108)
!11111 = !DILocation(line: 0, scope: !11106)
!11112 = !DILocation(line: 700, column: 38, scope: !11106)
!11113 = !DILocation(line: 703, column: 8, scope: !11106)
!11114 = !DILocation(line: 703, column: 12, scope: !11106)
!11115 = !DILocation(line: 705, column: 7, scope: !11116)
!11116 = distinct !DILexicalBlock(scope: !11106, file: !1568, line: 705, column: 6)
!11117 = !DILocation(line: 705, column: 6, scope: !11106)
!11118 = !DILocation(line: 722, column: 8, scope: !11106)
!11119 = !DILocation(line: 723, column: 10, scope: !11120)
!11120 = distinct !DILexicalBlock(scope: !11106, file: !1568, line: 723, column: 6)
!11121 = !DILocation(line: 723, column: 6, scope: !11106)
!11122 = !DILocation(line: 731, column: 1, scope: !11106)
!11123 = distinct !DISubprogram(name: "device_is_ready", scope: !10330, file: !10330, line: 47, type: !11124, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1399, retainedNodes: !11126)
!11124 = !DISubroutineType(types: !11125)
!11125 = !{!422, !1428}
!11126 = !{!11127}
!11127 = !DILocalVariable(name: "dev", arg: 1, scope: !11123, file: !10330, line: 47, type: !1428)
!11128 = !DILocation(line: 0, scope: !11123)
!11129 = !DILocation(line: 55, column: 2, scope: !11130)
!11130 = distinct !DILexicalBlock(scope: !11123, file: !10330, line: 55, column: 2)
!11131 = !{i64 2155678899}
!11132 = !DILocation(line: 56, column: 9, scope: !11123)
!11133 = !DILocation(line: 56, column: 2, scope: !11123)
!11134 = distinct !DISubprogram(name: "gpio_stm32_clock_request", scope: !1568, file: !1568, line: 270, type: !11135, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1399, retainedNodes: !11137)
!11135 = !DISubroutineType(types: !11136)
!11136 = !{!108, !1428, !422}
!11137 = !{!11138, !11139, !11140, !11141, !11142}
!11138 = !DILocalVariable(name: "dev", arg: 1, scope: !11134, file: !1568, line: 270, type: !1428)
!11139 = !DILocalVariable(name: "on", arg: 2, scope: !11134, file: !1568, line: 270, type: !422)
!11140 = !DILocalVariable(name: "cfg", scope: !11134, file: !1568, line: 272, type: !10483)
!11141 = !DILocalVariable(name: "ret", scope: !11134, file: !1568, line: 273, type: !108)
!11142 = !DILocalVariable(name: "clk", scope: !11134, file: !1568, line: 278, type: !10773)
!11143 = !DILocation(line: 0, scope: !11134)
!11144 = !DILocation(line: 272, column: 45, scope: !11134)
!11145 = !DILocation(line: 282, column: 38, scope: !11146)
!11146 = distinct !DILexicalBlock(scope: !11147, file: !1568, line: 280, column: 10)
!11147 = distinct !DILexicalBlock(scope: !11134, file: !1568, line: 280, column: 6)
!11148 = !DILocation(line: 282, column: 6, scope: !11146)
!11149 = !DILocation(line: 281, column: 9, scope: !11146)
!11150 = !DILocation(line: 293, column: 1, scope: !11134)
!11151 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !411, file: !411, line: 730, type: !11124, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1399, retainedNodes: !11152)
!11152 = !{!11153}
!11153 = !DILocalVariable(name: "dev", arg: 1, scope: !11151, file: !411, line: 730, type: !1428)
!11154 = !DILocation(line: 0, scope: !11151)
!11155 = !DILocation(line: 732, column: 9, scope: !11151)
!11156 = !DILocation(line: 732, column: 2, scope: !11151)
!11157 = distinct !DISubprogram(name: "gpio_stm32_configure", scope: !1568, file: !1568, line: 496, type: !11158, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1399, retainedNodes: !11160)
!11158 = !DISubroutineType(types: !11159)
!11159 = !{!108, !1428, !108, !108, !108}
!11160 = !{!11161, !11162, !11163, !11164, !11165, !11166}
!11161 = !DILocalVariable(name: "dev", arg: 1, scope: !11157, file: !1568, line: 496, type: !1428)
!11162 = !DILocalVariable(name: "pin", arg: 2, scope: !11157, file: !1568, line: 496, type: !108)
!11163 = !DILocalVariable(name: "conf", arg: 3, scope: !11157, file: !1568, line: 496, type: !108)
!11164 = !DILocalVariable(name: "func", arg: 4, scope: !11157, file: !1568, line: 496, type: !108)
!11165 = !DILocalVariable(name: "ret", scope: !11157, file: !1568, line: 498, type: !108)
!11166 = !DILocalVariable(name: "gpio_out", scope: !11167, file: !1568, line: 508, type: !113)
!11167 = distinct !DILexicalBlock(scope: !11168, file: !1568, line: 507, column: 27)
!11168 = distinct !DILexicalBlock(scope: !11157, file: !1568, line: 507, column: 6)
!11169 = !DILocation(line: 0, scope: !11157)
!11170 = !DILocation(line: 505, column: 2, scope: !11157)
!11171 = !DILocation(line: 507, column: 11, scope: !11168)
!11172 = !DILocation(line: 507, column: 6, scope: !11157)
!11173 = !DILocation(line: 508, column: 28, scope: !11167)
!11174 = !DILocation(line: 0, scope: !11167)
!11175 = !DILocation(line: 510, column: 16, scope: !11176)
!11176 = distinct !DILexicalBlock(scope: !11167, file: !1568, line: 510, column: 7)
!11177 = !DILocation(line: 0, scope: !11176)
!11178 = !DILocation(line: 510, column: 7, scope: !11167)
!11179 = !DILocation(line: 511, column: 4, scope: !11180)
!11180 = distinct !DILexicalBlock(scope: !11176, file: !1568, line: 510, column: 32)
!11181 = !DILocation(line: 512, column: 3, scope: !11180)
!11182 = !DILocation(line: 513, column: 4, scope: !11183)
!11183 = distinct !DILexicalBlock(scope: !11184, file: !1568, line: 512, column: 39)
!11184 = distinct !DILexicalBlock(scope: !11176, file: !1568, line: 512, column: 14)
!11185 = !DILocation(line: 514, column: 3, scope: !11183)
!11186 = !DILocation(line: 518, column: 1, scope: !11157)
!11187 = distinct !DISubprogram(name: "uart_stm32_poll_in", scope: !1877, file: !1877, line: 526, type: !1780, scopeLine: 527, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1738, retainedNodes: !11188)
!11188 = !{!11189, !11190, !11191}
!11189 = !DILocalVariable(name: "dev", arg: 1, scope: !11187, file: !1877, line: 526, type: !1782)
!11190 = !DILocalVariable(name: "c", arg: 2, scope: !11187, file: !1877, line: 526, type: !1360)
!11191 = !DILocalVariable(name: "config", scope: !11187, file: !1877, line: 528, type: !11192)
!11192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1924, size: 32)
!11193 = !DILocation(line: 0, scope: !11187)
!11194 = !DILocation(line: 528, column: 48, scope: !11187)
!11195 = !DILocation(line: 531, column: 40, scope: !11196)
!11196 = distinct !DILexicalBlock(scope: !11187, file: !1877, line: 531, column: 6)
!11197 = !DILocation(line: 531, column: 6, scope: !11196)
!11198 = !DILocation(line: 531, column: 6, scope: !11187)
!11199 = !DILocation(line: 532, column: 34, scope: !11200)
!11200 = distinct !DILexicalBlock(scope: !11196, file: !1877, line: 531, column: 48)
!11201 = !DILocation(line: 532, column: 3, scope: !11200)
!11202 = !DILocation(line: 533, column: 2, scope: !11200)
!11203 = !DILocation(line: 539, column: 42, scope: !11204)
!11204 = distinct !DILexicalBlock(scope: !11187, file: !1877, line: 539, column: 6)
!11205 = !DILocation(line: 539, column: 7, scope: !11204)
!11206 = !DILocation(line: 539, column: 6, scope: !11187)
!11207 = !DILocation(line: 543, column: 52, scope: !11187)
!11208 = !DILocation(line: 543, column: 22, scope: !11187)
!11209 = !DILocation(line: 543, column: 5, scope: !11187)
!11210 = !DILocation(line: 545, column: 2, scope: !11187)
!11211 = !DILocation(line: 546, column: 1, scope: !11187)
!11212 = distinct !DISubprogram(name: "uart_stm32_poll_out", scope: !1877, file: !1877, line: 548, type: !1799, scopeLine: 550, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1738, retainedNodes: !11213)
!11213 = !{!11214, !11215, !11216, !11217}
!11214 = !DILocalVariable(name: "dev", arg: 1, scope: !11212, file: !1877, line: 548, type: !1782)
!11215 = !DILocalVariable(name: "c", arg: 2, scope: !11212, file: !1877, line: 549, type: !165)
!11216 = !DILocalVariable(name: "config", scope: !11212, file: !1877, line: 551, type: !11192)
!11217 = !DILocalVariable(name: "key", scope: !11212, file: !1877, line: 555, type: !32)
!11218 = !DILocation(line: 0, scope: !11212)
!11219 = !DILocation(line: 551, column: 48, scope: !11212)
!11220 = !DILocation(line: 562, column: 2, scope: !11212)
!11221 = !DILocation(line: 563, column: 41, scope: !11222)
!11222 = distinct !DILexicalBlock(scope: !11223, file: !1877, line: 563, column: 7)
!11223 = distinct !DILexicalBlock(scope: !11212, file: !1877, line: 562, column: 12)
!11224 = !DILocation(line: 563, column: 7, scope: !11222)
!11225 = !DILocation(line: 563, column: 7, scope: !11223)
!11226 = !DILocation(line: 55, column: 2, scope: !11227, inlinedAt: !11231)
!11227 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4225, file: !4225, line: 42, type: !4226, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1738, retainedNodes: !11228)
!11228 = !{!11229, !11230}
!11229 = !DILocalVariable(name: "key", scope: !11227, file: !4225, line: 44, type: !32)
!11230 = !DILocalVariable(name: "tmp", scope: !11227, file: !4225, line: 53, type: !32)
!11231 = distinct !DILocation(line: 564, column: 10, scope: !11232)
!11232 = distinct !DILexicalBlock(scope: !11222, file: !1877, line: 563, column: 49)
!11233 = !{i64 2659882}
!11234 = !DILocation(line: 0, scope: !11227, inlinedAt: !11231)
!11235 = !DILocation(line: 565, column: 42, scope: !11236)
!11236 = distinct !DILexicalBlock(scope: !11232, file: !1877, line: 565, column: 8)
!11237 = !DILocation(line: 565, column: 8, scope: !11236)
!11238 = !DILocation(line: 565, column: 8, scope: !11232)
!11239 = !DILocalVariable(name: "key", arg: 1, scope: !11240, file: !4225, line: 84, type: !32)
!11240 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4225, file: !4225, line: 84, type: !4238, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1738, retainedNodes: !11241)
!11241 = !{!11239}
!11242 = !DILocation(line: 0, scope: !11240, inlinedAt: !11243)
!11243 = distinct !DILocation(line: 568, column: 4, scope: !11232)
!11244 = !DILocation(line: 95, column: 2, scope: !11240, inlinedAt: !11243)
!11245 = !{i64 2660699}
!11246 = !DILocation(line: 569, column: 3, scope: !11232)
!11247 = distinct !{!11247, !11220, !11248}
!11248 = !DILocation(line: 570, column: 2, scope: !11212)
!11249 = !DILocation(line: 592, column: 33, scope: !11212)
!11250 = !DILocation(line: 592, column: 2, scope: !11212)
!11251 = !DILocation(line: 0, scope: !11240, inlinedAt: !11252)
!11252 = distinct !DILocation(line: 593, column: 2, scope: !11212)
!11253 = !DILocation(line: 95, column: 2, scope: !11240, inlinedAt: !11252)
!11254 = !DILocation(line: 594, column: 1, scope: !11212)
!11255 = distinct !DISubprogram(name: "uart_stm32_err_check", scope: !1877, file: !1877, line: 596, type: !1803, scopeLine: 597, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1738, retainedNodes: !11256)
!11256 = !{!11257, !11258, !11259}
!11257 = !DILocalVariable(name: "dev", arg: 1, scope: !11255, file: !1877, line: 596, type: !1782)
!11258 = !DILocalVariable(name: "config", scope: !11255, file: !1877, line: 598, type: !11192)
!11259 = !DILocalVariable(name: "err", scope: !11255, file: !1877, line: 599, type: !113)
!11260 = !DILocation(line: 0, scope: !11255)
!11261 = !DILocation(line: 598, column: 48, scope: !11255)
!11262 = !DILocation(line: 606, column: 40, scope: !11263)
!11263 = distinct !DILexicalBlock(scope: !11255, file: !1877, line: 606, column: 6)
!11264 = !DILocation(line: 606, column: 6, scope: !11263)
!11265 = !DILocation(line: 606, column: 6, scope: !11255)
!11266 = !DILocation(line: 610, column: 39, scope: !11267)
!11267 = distinct !DILexicalBlock(scope: !11255, file: !1877, line: 610, column: 6)
!11268 = !DILocation(line: 610, column: 6, scope: !11267)
!11269 = !DILocation(line: 610, column: 6, scope: !11255)
!11270 = !DILocation(line: 614, column: 39, scope: !11271)
!11271 = distinct !DILexicalBlock(scope: !11255, file: !1877, line: 614, column: 6)
!11272 = !DILocation(line: 614, column: 6, scope: !11271)
!11273 = !DILocation(line: 614, column: 6, scope: !11255)
!11274 = !DILocation(line: 619, column: 40, scope: !11275)
!11275 = distinct !DILexicalBlock(scope: !11255, file: !1877, line: 619, column: 6)
!11276 = !DILocation(line: 619, column: 6, scope: !11275)
!11277 = !DILocation(line: 619, column: 6, scope: !11255)
!11278 = !DILocation(line: 623, column: 10, scope: !11279)
!11279 = distinct !DILexicalBlock(scope: !11255, file: !1877, line: 623, column: 6)
!11280 = !DILocation(line: 623, column: 6, scope: !11255)
!11281 = !DILocation(line: 624, column: 34, scope: !11282)
!11282 = distinct !DILexicalBlock(scope: !11279, file: !1877, line: 623, column: 24)
!11283 = !DILocation(line: 624, column: 3, scope: !11282)
!11284 = !DILocation(line: 625, column: 2, scope: !11282)
!11285 = !DILocation(line: 632, column: 10, scope: !11286)
!11286 = distinct !DILexicalBlock(scope: !11255, file: !1877, line: 632, column: 6)
!11287 = !DILocation(line: 632, column: 6, scope: !11255)
!11288 = !DILocation(line: 633, column: 34, scope: !11289)
!11289 = distinct !DILexicalBlock(scope: !11286, file: !1877, line: 632, column: 32)
!11290 = !DILocation(line: 633, column: 3, scope: !11289)
!11291 = !DILocation(line: 634, column: 2, scope: !11289)
!11292 = !DILocation(line: 636, column: 10, scope: !11293)
!11293 = distinct !DILexicalBlock(scope: !11255, file: !1877, line: 636, column: 6)
!11294 = !DILocation(line: 636, column: 6, scope: !11255)
!11295 = !DILocation(line: 637, column: 33, scope: !11296)
!11296 = distinct !DILexicalBlock(scope: !11293, file: !1877, line: 636, column: 31)
!11297 = !DILocation(line: 637, column: 3, scope: !11296)
!11298 = !DILocation(line: 638, column: 2, scope: !11296)
!11299 = !DILocation(line: 640, column: 10, scope: !11300)
!11300 = distinct !DILexicalBlock(scope: !11255, file: !1877, line: 640, column: 6)
!11301 = !DILocation(line: 640, column: 6, scope: !11255)
!11302 = !DILocation(line: 641, column: 33, scope: !11303)
!11303 = distinct !DILexicalBlock(scope: !11300, file: !1877, line: 640, column: 32)
!11304 = !DILocation(line: 641, column: 3, scope: !11303)
!11305 = !DILocation(line: 642, column: 2, scope: !11303)
!11306 = !DILocation(line: 646, column: 32, scope: !11255)
!11307 = !DILocation(line: 646, column: 2, scope: !11255)
!11308 = !DILocation(line: 648, column: 2, scope: !11255)
!11309 = distinct !DISubprogram(name: "uart_stm32_configure", scope: !1877, file: !1877, line: 419, type: !1807, scopeLine: 421, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1738, retainedNodes: !11310)
!11310 = !{!11311, !11312, !11313, !11314, !11316, !11317, !11318, !11319}
!11311 = !DILocalVariable(name: "dev", arg: 1, scope: !11309, file: !1877, line: 419, type: !1782)
!11312 = !DILocalVariable(name: "cfg", arg: 2, scope: !11309, file: !1877, line: 420, type: !1809)
!11313 = !DILocalVariable(name: "config", scope: !11309, file: !1877, line: 422, type: !11192)
!11314 = !DILocalVariable(name: "data", scope: !11309, file: !1877, line: 423, type: !11315)
!11315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1981, size: 32)
!11316 = !DILocalVariable(name: "parity", scope: !11309, file: !1877, line: 424, type: !7469)
!11317 = !DILocalVariable(name: "stopbits", scope: !11309, file: !1877, line: 425, type: !7469)
!11318 = !DILocalVariable(name: "databits", scope: !11309, file: !1877, line: 426, type: !7469)
!11319 = !DILocalVariable(name: "flowctrl", scope: !11309, file: !1877, line: 428, type: !7469)
!11320 = !DILocation(line: 0, scope: !11309)
!11321 = !DILocation(line: 422, column: 48, scope: !11309)
!11322 = !DILocation(line: 423, column: 38, scope: !11309)
!11323 = !DILocation(line: 424, column: 56, scope: !11309)
!11324 = !DILocation(line: 424, column: 51, scope: !11309)
!11325 = !DILocation(line: 424, column: 26, scope: !11309)
!11326 = !DILocation(line: 425, column: 60, scope: !11309)
!11327 = !DILocation(line: 425, column: 55, scope: !11309)
!11328 = !DILocation(line: 425, column: 28, scope: !11309)
!11329 = !DILocation(line: 426, column: 60, scope: !11309)
!11330 = !DILocation(line: 426, column: 55, scope: !11309)
!11331 = !DILocation(line: 426, column: 28, scope: !11309)
!11332 = !DILocation(line: 428, column: 58, scope: !11309)
!11333 = !DILocation(line: 428, column: 53, scope: !11309)
!11334 = !DILocation(line: 428, column: 28, scope: !11309)
!11335 = !DILocation(line: 431, column: 44, scope: !11336)
!11336 = distinct !DILexicalBlock(scope: !11309, file: !1877, line: 431, column: 6)
!11337 = !DILocation(line: 438, column: 22, scope: !11338)
!11338 = distinct !DILexicalBlock(scope: !11309, file: !1877, line: 437, column: 6)
!11339 = !DILocation(line: 437, column: 6, scope: !11309)
!11340 = !DILocation(line: 448, column: 6, scope: !11309)
!11341 = !DILocation(line: 465, column: 47, scope: !11342)
!11342 = distinct !DILexicalBlock(scope: !11309, file: !1877, line: 465, column: 6)
!11343 = !DILocation(line: 475, column: 21, scope: !11344)
!11344 = distinct !DILexicalBlock(scope: !11309, file: !1877, line: 475, column: 6)
!11345 = !DILocation(line: 475, column: 6, scope: !11309)
!11346 = !DILocation(line: 476, column: 8, scope: !11347)
!11347 = distinct !DILexicalBlock(scope: !11348, file: !1877, line: 476, column: 7)
!11348 = distinct !DILexicalBlock(scope: !11344, file: !1877, line: 475, column: 49)
!11349 = !DILocation(line: 477, column: 34, scope: !11347)
!11350 = !DILocation(line: 476, column: 7, scope: !11348)
!11351 = !DILocation(line: 482, column: 27, scope: !11309)
!11352 = !DILocation(line: 482, column: 2, scope: !11309)
!11353 = !DILocation(line: 484, column: 16, scope: !11354)
!11354 = distinct !DILexicalBlock(scope: !11309, file: !1877, line: 484, column: 6)
!11355 = !DILocation(line: 484, column: 13, scope: !11354)
!11356 = !DILocation(line: 484, column: 6, scope: !11309)
!11357 = !DILocation(line: 485, column: 3, scope: !11358)
!11358 = distinct !DILexicalBlock(scope: !11354, file: !1877, line: 484, column: 44)
!11359 = !DILocation(line: 486, column: 2, scope: !11358)
!11360 = !DILocation(line: 488, column: 18, scope: !11361)
!11361 = distinct !DILexicalBlock(scope: !11309, file: !1877, line: 488, column: 6)
!11362 = !DILocation(line: 488, column: 15, scope: !11361)
!11363 = !DILocation(line: 488, column: 6, scope: !11309)
!11364 = !DILocation(line: 489, column: 3, scope: !11365)
!11365 = distinct !DILexicalBlock(scope: !11361, file: !1877, line: 488, column: 48)
!11366 = !DILocation(line: 490, column: 2, scope: !11365)
!11367 = !DILocation(line: 492, column: 18, scope: !11368)
!11368 = distinct !DILexicalBlock(scope: !11309, file: !1877, line: 492, column: 6)
!11369 = !DILocation(line: 492, column: 15, scope: !11368)
!11370 = !DILocation(line: 492, column: 6, scope: !11309)
!11371 = !DILocation(line: 493, column: 3, scope: !11372)
!11372 = distinct !DILexicalBlock(scope: !11368, file: !1877, line: 492, column: 48)
!11373 = !DILocation(line: 494, column: 2, scope: !11372)
!11374 = !DILocation(line: 496, column: 18, scope: !11375)
!11375 = distinct !DILexicalBlock(scope: !11309, file: !1877, line: 496, column: 6)
!11376 = !DILocation(line: 496, column: 15, scope: !11375)
!11377 = !DILocation(line: 496, column: 6, scope: !11309)
!11378 = !DILocation(line: 497, column: 3, scope: !11379)
!11379 = distinct !DILexicalBlock(scope: !11375, file: !1877, line: 496, column: 46)
!11380 = !DILocation(line: 498, column: 2, scope: !11379)
!11381 = !DILocation(line: 500, column: 11, scope: !11382)
!11382 = distinct !DILexicalBlock(scope: !11309, file: !1877, line: 500, column: 6)
!11383 = !DILocation(line: 500, column: 29, scope: !11382)
!11384 = !DILocation(line: 500, column: 20, scope: !11382)
!11385 = !DILocation(line: 500, column: 6, scope: !11309)
!11386 = !DILocation(line: 501, column: 3, scope: !11387)
!11387 = distinct !DILexicalBlock(scope: !11382, file: !1877, line: 500, column: 40)
!11388 = !DILocation(line: 502, column: 26, scope: !11387)
!11389 = !DILocation(line: 502, column: 19, scope: !11387)
!11390 = !DILocation(line: 503, column: 2, scope: !11387)
!11391 = !DILocation(line: 505, column: 26, scope: !11309)
!11392 = !DILocation(line: 505, column: 2, scope: !11309)
!11393 = !DILocation(line: 506, column: 2, scope: !11309)
!11394 = !DILocation(line: 507, column: 1, scope: !11309)
!11395 = distinct !DISubprogram(name: "uart_stm32_config_get", scope: !1877, file: !1877, line: 509, type: !1820, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1738, retainedNodes: !11396)
!11396 = !{!11397, !11398, !11399}
!11397 = !DILocalVariable(name: "dev", arg: 1, scope: !11395, file: !1877, line: 509, type: !1782)
!11398 = !DILocalVariable(name: "cfg", arg: 2, scope: !11395, file: !1877, line: 510, type: !1822)
!11399 = !DILocalVariable(name: "data", scope: !11395, file: !1877, line: 512, type: !11315)
!11400 = !DILocation(line: 0, scope: !11395)
!11401 = !DILocation(line: 512, column: 38, scope: !11395)
!11402 = !DILocation(line: 514, column: 24, scope: !11395)
!11403 = !DILocation(line: 514, column: 7, scope: !11395)
!11404 = !DILocation(line: 514, column: 16, scope: !11395)
!11405 = !DILocation(line: 515, column: 41, scope: !11395)
!11406 = !{i32 0, i32 1537}
!11407 = !DILocation(line: 515, column: 16, scope: !11395)
!11408 = !DILocation(line: 515, column: 7, scope: !11395)
!11409 = !DILocation(line: 515, column: 14, scope: !11395)
!11410 = !DILocation(line: 517, column: 3, scope: !11395)
!11411 = !{i32 0, i32 12289}
!11412 = !DILocation(line: 516, column: 19, scope: !11395)
!11413 = !DILocation(line: 516, column: 7, scope: !11395)
!11414 = !DILocation(line: 516, column: 17, scope: !11395)
!11415 = !DILocation(line: 519, column: 3, scope: !11395)
!11416 = !DILocation(line: 519, column: 33, scope: !11395)
!11417 = !DILocation(line: 518, column: 19, scope: !11395)
!11418 = !DILocation(line: 518, column: 7, scope: !11395)
!11419 = !DILocation(line: 518, column: 17, scope: !11395)
!11420 = !DILocation(line: 521, column: 3, scope: !11395)
!11421 = !{i32 0, i32 769}
!11422 = !DILocation(line: 520, column: 19, scope: !11395)
!11423 = !DILocation(line: 520, column: 7, scope: !11395)
!11424 = !DILocation(line: 520, column: 17, scope: !11395)
!11425 = !DILocation(line: 522, column: 2, scope: !11395)
!11426 = distinct !DISubprogram(name: "uart_stm32_get_parity", scope: !1877, file: !1877, line: 205, type: !11427, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1738, retainedNodes: !11429)
!11427 = !DISubroutineType(types: !11428)
!11428 = !{!113, !1782}
!11429 = !{!11430, !11431}
!11430 = !DILocalVariable(name: "dev", arg: 1, scope: !11426, file: !1877, line: 205, type: !1782)
!11431 = !DILocalVariable(name: "config", scope: !11426, file: !1877, line: 207, type: !11192)
!11432 = !DILocation(line: 0, scope: !11426)
!11433 = !DILocation(line: 207, column: 48, scope: !11426)
!11434 = !DILocation(line: 209, column: 36, scope: !11426)
!11435 = !DILocation(line: 209, column: 9, scope: !11426)
!11436 = !DILocation(line: 209, column: 2, scope: !11426)
!11437 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_parity", scope: !1877, file: !1877, line: 270, type: !11438, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1738, retainedNodes: !11440)
!11438 = !DISubroutineType(types: !11439)
!11439 = !{!1748, !113}
!11440 = !{!11441}
!11441 = !DILocalVariable(name: "parity", arg: 1, scope: !11437, file: !1877, line: 270, type: !113)
!11442 = !DILocation(line: 0, scope: !11437)
!11443 = !DILocation(line: 272, column: 2, scope: !11437)
!11444 = !DILocation(line: 281, column: 1, scope: !11437)
!11445 = distinct !DISubprogram(name: "uart_stm32_get_stopbits", scope: !1877, file: !1877, line: 220, type: !11427, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1738, retainedNodes: !11446)
!11446 = !{!11447, !11448}
!11447 = !DILocalVariable(name: "dev", arg: 1, scope: !11445, file: !1877, line: 220, type: !1782)
!11448 = !DILocalVariable(name: "config", scope: !11445, file: !1877, line: 222, type: !11192)
!11449 = !DILocation(line: 0, scope: !11445)
!11450 = !DILocation(line: 222, column: 48, scope: !11445)
!11451 = !DILocation(line: 224, column: 44, scope: !11445)
!11452 = !DILocation(line: 224, column: 9, scope: !11445)
!11453 = !DILocation(line: 224, column: 2, scope: !11445)
!11454 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_stopbits", scope: !1877, file: !1877, line: 304, type: !11455, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1738, retainedNodes: !11457)
!11455 = !DISubroutineType(types: !11456)
!11456 = !{!1762, !113}
!11457 = !{!11458}
!11458 = !DILocalVariable(name: "sb", arg: 1, scope: !11454, file: !1877, line: 304, type: !113)
!11459 = !DILocation(line: 0, scope: !11454)
!11460 = !DILocation(line: 306, column: 2, scope: !11454)
!11461 = !DILocation(line: 0, scope: !11462)
!11462 = distinct !DILexicalBlock(scope: !11454, file: !1877, line: 306, column: 14)
!11463 = !DILocation(line: 323, column: 1, scope: !11454)
!11464 = distinct !DISubprogram(name: "uart_stm32_get_databits", scope: !1877, file: !1877, line: 235, type: !11427, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1738, retainedNodes: !11465)
!11465 = !{!11466, !11467}
!11466 = !DILocalVariable(name: "dev", arg: 1, scope: !11464, file: !1877, line: 235, type: !1782)
!11467 = !DILocalVariable(name: "config", scope: !11464, file: !1877, line: 237, type: !11192)
!11468 = !DILocation(line: 0, scope: !11464)
!11469 = !DILocation(line: 237, column: 48, scope: !11464)
!11470 = !DILocation(line: 239, column: 39, scope: !11464)
!11471 = !DILocation(line: 239, column: 9, scope: !11464)
!11472 = !DILocation(line: 239, column: 2, scope: !11464)
!11473 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_databits", scope: !1877, file: !1877, line: 355, type: !11474, scopeLine: 357, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1738, retainedNodes: !11476)
!11474 = !DISubroutineType(types: !11475)
!11475 = !{!1755, !113, !113}
!11476 = !{!11477, !11478}
!11477 = !DILocalVariable(name: "db", arg: 1, scope: !11473, file: !1877, line: 355, type: !113)
!11478 = !DILocalVariable(name: "p", arg: 2, scope: !11473, file: !1877, line: 356, type: !113)
!11479 = !DILocation(line: 0, scope: !11473)
!11480 = !DILocation(line: 358, column: 2, scope: !11473)
!11481 = !DILocation(line: 384, column: 1, scope: !11473)
!11482 = distinct !DISubprogram(name: "uart_stm32_get_hwctrl", scope: !1877, file: !1877, line: 250, type: !11427, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1738, retainedNodes: !11483)
!11483 = !{!11484, !11485}
!11484 = !DILocalVariable(name: "dev", arg: 1, scope: !11482, file: !1877, line: 250, type: !1782)
!11485 = !DILocalVariable(name: "config", scope: !11482, file: !1877, line: 252, type: !11192)
!11486 = !DILocation(line: 0, scope: !11482)
!11487 = !DILocation(line: 252, column: 48, scope: !11482)
!11488 = !DILocation(line: 254, column: 40, scope: !11482)
!11489 = !DILocation(line: 254, column: 9, scope: !11482)
!11490 = !DILocation(line: 254, column: 2, scope: !11482)
!11491 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_hwctrl", scope: !1877, file: !1877, line: 409, type: !11492, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1738, retainedNodes: !11494)
!11492 = !DISubroutineType(types: !11493)
!11493 = !{!1768, !113}
!11494 = !{!11495}
!11495 = !DILocalVariable(name: "fc", arg: 1, scope: !11491, file: !1877, line: 409, type: !113)
!11496 = !DILocation(line: 0, scope: !11491)
!11497 = !DILocation(line: 411, column: 9, scope: !11498)
!11498 = distinct !DILexicalBlock(scope: !11491, file: !1877, line: 411, column: 6)
!11499 = !DILocation(line: 416, column: 1, scope: !11491)
!11500 = distinct !DISubprogram(name: "LL_USART_GetHWFlowCtrl", scope: !11501, file: !11501, line: 967, type: !11502, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1738, retainedNodes: !11504)
!11501 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_usart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11502 = !DISubroutineType(types: !11503)
!11503 = !{!113, !1823}
!11504 = !{!11505}
!11505 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11500, file: !11501, line: 967, type: !1823)
!11506 = !DILocation(line: 0, scope: !11500)
!11507 = !DILocation(line: 969, column: 21, scope: !11500)
!11508 = !DILocation(line: 969, column: 3, scope: !11500)
!11509 = distinct !DISubprogram(name: "LL_USART_GetDataWidth", scope: !11501, file: !11501, line: 601, type: !11502, scopeLine: 602, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1738, retainedNodes: !11510)
!11510 = !{!11511}
!11511 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11509, file: !11501, line: 601, type: !1823)
!11512 = !DILocation(line: 0, scope: !11509)
!11513 = !DILocation(line: 603, column: 21, scope: !11509)
!11514 = !DILocation(line: 603, column: 3, scope: !11509)
!11515 = distinct !DISubprogram(name: "LL_USART_GetStopBitsLength", scope: !11501, file: !11501, line: 820, type: !11502, scopeLine: 821, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1738, retainedNodes: !11516)
!11516 = !{!11517}
!11517 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11515, file: !11501, line: 820, type: !1823)
!11518 = !DILocation(line: 0, scope: !11515)
!11519 = !DILocation(line: 822, column: 21, scope: !11515)
!11520 = !DILocation(line: 822, column: 3, scope: !11515)
!11521 = distinct !DISubprogram(name: "LL_USART_GetParity", scope: !11501, file: !11501, line: 547, type: !11502, scopeLine: 548, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1738, retainedNodes: !11522)
!11522 = !{!11523}
!11523 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11521, file: !11501, line: 547, type: !1823)
!11524 = !DILocation(line: 0, scope: !11521)
!11525 = !DILocation(line: 549, column: 21, scope: !11521)
!11526 = !DILocation(line: 549, column: 3, scope: !11521)
!11527 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_parity", scope: !1877, file: !1877, line: 257, type: !11528, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1738, retainedNodes: !11530)
!11528 = !DISubroutineType(types: !11529)
!11529 = !{!113, !1748}
!11530 = !{!11531}
!11531 = !DILocalVariable(name: "parity", arg: 1, scope: !11527, file: !1877, line: 257, type: !1748)
!11532 = !DILocation(line: 0, scope: !11527)
!11533 = !DILocation(line: 259, column: 2, scope: !11527)
!11534 = !DILocation(line: 268, column: 1, scope: !11527)
!11535 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_stopbits", scope: !1877, file: !1877, line: 283, type: !11536, scopeLine: 284, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1738, retainedNodes: !11538)
!11536 = !DISubroutineType(types: !11537)
!11537 = !{!113, !1762}
!11538 = !{!11539}
!11539 = !DILocalVariable(name: "sb", arg: 1, scope: !11535, file: !1877, line: 283, type: !1762)
!11540 = !DILocation(line: 0, scope: !11535)
!11541 = !DILocation(line: 285, column: 2, scope: !11535)
!11542 = !DILocation(line: 0, scope: !11543)
!11543 = distinct !DILexicalBlock(scope: !11535, file: !1877, line: 285, column: 14)
!11544 = !DILocation(line: 302, column: 1, scope: !11535)
!11545 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_databits", scope: !1877, file: !1877, line: 325, type: !11546, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1738, retainedNodes: !11548)
!11546 = !DISubroutineType(types: !11547)
!11547 = !{!113, !1755, !1748}
!11548 = !{!11549, !11550}
!11549 = !DILocalVariable(name: "db", arg: 1, scope: !11545, file: !1877, line: 325, type: !1755)
!11550 = !DILocalVariable(name: "p", arg: 2, scope: !11545, file: !1877, line: 326, type: !1748)
!11551 = !DILocation(line: 0, scope: !11545)
!11552 = !DILocation(line: 328, column: 2, scope: !11545)
!11553 = !DILocation(line: 353, column: 1, scope: !11545)
!11554 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_hwctrl", scope: !1877, file: !1877, line: 393, type: !11555, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1738, retainedNodes: !11557)
!11555 = !DISubroutineType(types: !11556)
!11556 = !{!113, !1768}
!11557 = !{!11558}
!11558 = !DILocalVariable(name: "fc", arg: 1, scope: !11554, file: !1877, line: 393, type: !1768)
!11559 = !DILocation(line: 0, scope: !11554)
!11560 = !DILocation(line: 395, column: 9, scope: !11561)
!11561 = distinct !DILexicalBlock(scope: !11554, file: !1877, line: 395, column: 6)
!11562 = !DILocation(line: 400, column: 1, scope: !11554)
!11563 = distinct !DISubprogram(name: "LL_USART_Disable", scope: !11501, file: !11501, line: 424, type: !11564, scopeLine: 425, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1738, retainedNodes: !11566)
!11564 = !DISubroutineType(types: !11565)
!11565 = !{null, !1823}
!11566 = !{!11567}
!11567 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11563, file: !11501, line: 424, type: !1823)
!11568 = !DILocation(line: 0, scope: !11563)
!11569 = !DILocation(line: 426, column: 3, scope: !11563)
!11570 = !DILocation(line: 427, column: 1, scope: !11563)
!11571 = distinct !DISubprogram(name: "uart_stm32_set_parity", scope: !1877, file: !1877, line: 197, type: !11572, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1738, retainedNodes: !11574)
!11572 = !DISubroutineType(types: !11573)
!11573 = !{null, !1782, !113}
!11574 = !{!11575, !11576, !11577}
!11575 = !DILocalVariable(name: "dev", arg: 1, scope: !11571, file: !1877, line: 197, type: !1782)
!11576 = !DILocalVariable(name: "parity", arg: 2, scope: !11571, file: !1877, line: 198, type: !113)
!11577 = !DILocalVariable(name: "config", scope: !11571, file: !1877, line: 200, type: !11192)
!11578 = !DILocation(line: 0, scope: !11571)
!11579 = !DILocation(line: 200, column: 48, scope: !11571)
!11580 = !DILocation(line: 202, column: 29, scope: !11571)
!11581 = !DILocation(line: 202, column: 2, scope: !11571)
!11582 = !DILocation(line: 203, column: 1, scope: !11571)
!11583 = distinct !DISubprogram(name: "uart_stm32_set_stopbits", scope: !1877, file: !1877, line: 212, type: !11572, scopeLine: 214, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1738, retainedNodes: !11584)
!11584 = !{!11585, !11586, !11587}
!11585 = !DILocalVariable(name: "dev", arg: 1, scope: !11583, file: !1877, line: 212, type: !1782)
!11586 = !DILocalVariable(name: "stopbits", arg: 2, scope: !11583, file: !1877, line: 213, type: !113)
!11587 = !DILocalVariable(name: "config", scope: !11583, file: !1877, line: 215, type: !11192)
!11588 = !DILocation(line: 0, scope: !11583)
!11589 = !DILocation(line: 215, column: 48, scope: !11583)
!11590 = !DILocation(line: 217, column: 37, scope: !11583)
!11591 = !DILocation(line: 217, column: 2, scope: !11583)
!11592 = !DILocation(line: 218, column: 1, scope: !11583)
!11593 = distinct !DISubprogram(name: "uart_stm32_set_databits", scope: !1877, file: !1877, line: 227, type: !11572, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1738, retainedNodes: !11594)
!11594 = !{!11595, !11596, !11597}
!11595 = !DILocalVariable(name: "dev", arg: 1, scope: !11593, file: !1877, line: 227, type: !1782)
!11596 = !DILocalVariable(name: "databits", arg: 2, scope: !11593, file: !1877, line: 228, type: !113)
!11597 = !DILocalVariable(name: "config", scope: !11593, file: !1877, line: 230, type: !11192)
!11598 = !DILocation(line: 0, scope: !11593)
!11599 = !DILocation(line: 230, column: 48, scope: !11593)
!11600 = !DILocation(line: 232, column: 32, scope: !11593)
!11601 = !DILocation(line: 232, column: 2, scope: !11593)
!11602 = !DILocation(line: 233, column: 1, scope: !11593)
!11603 = distinct !DISubprogram(name: "uart_stm32_set_hwctrl", scope: !1877, file: !1877, line: 242, type: !11572, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1738, retainedNodes: !11604)
!11604 = !{!11605, !11606, !11607}
!11605 = !DILocalVariable(name: "dev", arg: 1, scope: !11603, file: !1877, line: 242, type: !1782)
!11606 = !DILocalVariable(name: "hwctrl", arg: 2, scope: !11603, file: !1877, line: 243, type: !113)
!11607 = !DILocalVariable(name: "config", scope: !11603, file: !1877, line: 245, type: !11192)
!11608 = !DILocation(line: 0, scope: !11603)
!11609 = !DILocation(line: 245, column: 48, scope: !11603)
!11610 = !DILocation(line: 247, column: 33, scope: !11603)
!11611 = !DILocation(line: 247, column: 2, scope: !11603)
!11612 = !DILocation(line: 248, column: 1, scope: !11603)
!11613 = distinct !DISubprogram(name: "uart_stm32_set_baudrate", scope: !1877, file: !1877, line: 107, type: !11572, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1738, retainedNodes: !11614)
!11614 = !{!11615, !11616, !11617, !11618, !11619}
!11615 = !DILocalVariable(name: "dev", arg: 1, scope: !11613, file: !1877, line: 107, type: !1782)
!11616 = !DILocalVariable(name: "baud_rate", arg: 2, scope: !11613, file: !1877, line: 107, type: !113)
!11617 = !DILocalVariable(name: "config", scope: !11613, file: !1877, line: 109, type: !11192)
!11618 = !DILocalVariable(name: "data", scope: !11613, file: !1877, line: 110, type: !11315)
!11619 = !DILocalVariable(name: "clock_rate", scope: !11613, file: !1877, line: 112, type: !113)
!11620 = !DILocation(line: 0, scope: !11613)
!11621 = !DILocation(line: 109, column: 48, scope: !11613)
!11622 = !DILocation(line: 110, column: 38, scope: !11613)
!11623 = !DILocation(line: 112, column: 2, scope: !11613)
!11624 = !DILocation(line: 123, column: 36, scope: !11625)
!11625 = distinct !DILexicalBlock(scope: !11626, file: !1877, line: 123, column: 7)
!11626 = distinct !DILexicalBlock(scope: !11627, file: !1877, line: 122, column: 9)
!11627 = distinct !DILexicalBlock(scope: !11613, file: !1877, line: 115, column: 6)
!11628 = !DILocation(line: 124, column: 42, scope: !11625)
!11629 = !DILocation(line: 123, column: 7, scope: !11625)
!11630 = !DILocation(line: 125, column: 22, scope: !11625)
!11631 = !DILocation(line: 123, column: 7, scope: !11626)
!11632 = !DILocation(line: 126, column: 4, scope: !11633)
!11633 = distinct !DILexicalBlock(scope: !11634, file: !1877, line: 126, column: 4)
!11634 = distinct !DILexicalBlock(scope: !11635, file: !1877, line: 126, column: 4)
!11635 = distinct !DILexicalBlock(scope: !11636, file: !1877, line: 126, column: 4)
!11636 = distinct !DILexicalBlock(scope: !11637, file: !1877, line: 126, column: 4)
!11637 = distinct !DILexicalBlock(scope: !11625, file: !1877, line: 125, column: 27)
!11638 = !DILocation(line: 127, column: 4, scope: !11637)
!11639 = !DILocation(line: 176, column: 36, scope: !11613)
!11640 = !DILocation(line: 176, column: 3, scope: !11613)
!11641 = !DILocation(line: 179, column: 32, scope: !11613)
!11642 = !DILocation(line: 180, column: 10, scope: !11613)
!11643 = !DILocation(line: 179, column: 3, scope: !11613)
!11644 = !DILocation(line: 195, column: 1, scope: !11613)
!11645 = distinct !DISubprogram(name: "LL_USART_Enable", scope: !11501, file: !11501, line: 410, type: !11564, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1738, retainedNodes: !11646)
!11646 = !{!11647}
!11647 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11645, file: !11501, line: 410, type: !1823)
!11648 = !DILocation(line: 0, scope: !11645)
!11649 = !DILocation(line: 412, column: 3, scope: !11645)
!11650 = !DILocation(line: 413, column: 1, scope: !11645)
!11651 = distinct !DISubprogram(name: "clock_control_get_rate", scope: !1205, file: !1205, line: 216, type: !1856, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1738, retainedNodes: !11652)
!11652 = !{!11653, !11654, !11655, !11656}
!11653 = !DILocalVariable(name: "dev", arg: 1, scope: !11651, file: !1205, line: 216, type: !1782)
!11654 = !DILocalVariable(name: "sys", arg: 2, scope: !11651, file: !1205, line: 217, type: !1299)
!11655 = !DILocalVariable(name: "rate", arg: 3, scope: !11651, file: !1205, line: 218, type: !1255)
!11656 = !DILocalVariable(name: "api", scope: !11651, file: !1205, line: 220, type: !1834)
!11657 = !DILocation(line: 0, scope: !11651)
!11658 = !DILocation(line: 221, column: 49, scope: !11651)
!11659 = !DILocation(line: 223, column: 11, scope: !11660)
!11660 = distinct !DILexicalBlock(scope: !11651, file: !1205, line: 223, column: 6)
!11661 = !DILocation(line: 223, column: 20, scope: !11660)
!11662 = !DILocation(line: 223, column: 6, scope: !11651)
!11663 = !DILocation(line: 227, column: 9, scope: !11651)
!11664 = !DILocation(line: 227, column: 2, scope: !11651)
!11665 = !DILocation(line: 228, column: 1, scope: !11651)
!11666 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !3837, file: !3837, line: 175, type: !3838, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1738, retainedNodes: !11667)
!11667 = !{!11668}
!11668 = !DILocalVariable(name: "level", arg: 1, scope: !11666, file: !3837, line: 175, type: !108)
!11669 = !DILocation(line: 0, scope: !11666)
!11670 = !DILocation(line: 177, column: 2, scope: !11666)
!11671 = !DILocation(line: 189, column: 1, scope: !11666)
!11672 = distinct !DISubprogram(name: "LL_USART_SetOverSampling", scope: !11501, file: !11501, line: 615, type: !11673, scopeLine: 616, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1738, retainedNodes: !11675)
!11673 = !DISubroutineType(types: !11674)
!11674 = !{null, !1823, !113}
!11675 = !{!11676, !11677}
!11676 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11672, file: !11501, line: 615, type: !1823)
!11677 = !DILocalVariable(name: "OverSampling", arg: 2, scope: !11672, file: !11501, line: 615, type: !113)
!11678 = !DILocation(line: 0, scope: !11672)
!11679 = !DILocation(line: 617, column: 3, scope: !11672)
!11680 = !DILocation(line: 618, column: 1, scope: !11672)
!11681 = distinct !DISubprogram(name: "LL_USART_SetBaudRate", scope: !11501, file: !11501, line: 1020, type: !11682, scopeLine: 1022, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1738, retainedNodes: !11684)
!11682 = !DISubroutineType(types: !11683)
!11683 = !{null, !1823, !113, !113, !113}
!11684 = !{!11685, !11686, !11687, !11688}
!11685 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11681, file: !11501, line: 1020, type: !1823)
!11686 = !DILocalVariable(name: "PeriphClk", arg: 2, scope: !11681, file: !11501, line: 1020, type: !113)
!11687 = !DILocalVariable(name: "OverSampling", arg: 3, scope: !11681, file: !11501, line: 1020, type: !113)
!11688 = !DILocalVariable(name: "BaudRate", arg: 4, scope: !11681, file: !11501, line: 1021, type: !113)
!11689 = !DILocation(line: 0, scope: !11681)
!11690 = !DILocation(line: 1029, column: 30, scope: !11691)
!11691 = distinct !DILexicalBlock(scope: !11692, file: !11501, line: 1028, column: 3)
!11692 = distinct !DILexicalBlock(scope: !11681, file: !11501, line: 1023, column: 7)
!11693 = !DILocation(line: 1029, column: 19, scope: !11691)
!11694 = !DILocation(line: 1029, column: 13, scope: !11691)
!11695 = !DILocation(line: 1029, column: 17, scope: !11691)
!11696 = !DILocation(line: 1031, column: 1, scope: !11681)
!11697 = distinct !DISubprogram(name: "LL_USART_SetHWFlowCtrl", scope: !11501, file: !11501, line: 949, type: !11673, scopeLine: 950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1738, retainedNodes: !11698)
!11698 = !{!11699, !11700}
!11699 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11697, file: !11501, line: 949, type: !1823)
!11700 = !DILocalVariable(name: "HardwareFlowControl", arg: 2, scope: !11697, file: !11501, line: 949, type: !113)
!11701 = !DILocation(line: 0, scope: !11697)
!11702 = !DILocation(line: 951, column: 3, scope: !11697)
!11703 = !DILocation(line: 952, column: 1, scope: !11697)
!11704 = distinct !DISubprogram(name: "LL_USART_SetDataWidth", scope: !11501, file: !11501, line: 588, type: !11673, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1738, retainedNodes: !11705)
!11705 = !{!11706, !11707}
!11706 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11704, file: !11501, line: 588, type: !1823)
!11707 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !11704, file: !11501, line: 588, type: !113)
!11708 = !DILocation(line: 0, scope: !11704)
!11709 = !DILocation(line: 590, column: 3, scope: !11704)
!11710 = !DILocation(line: 591, column: 1, scope: !11704)
!11711 = distinct !DISubprogram(name: "LL_USART_SetStopBitsLength", scope: !11501, file: !11501, line: 805, type: !11673, scopeLine: 806, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1738, retainedNodes: !11712)
!11712 = !{!11713, !11714}
!11713 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11711, file: !11501, line: 805, type: !1823)
!11714 = !DILocalVariable(name: "StopBits", arg: 2, scope: !11711, file: !11501, line: 805, type: !113)
!11715 = !DILocation(line: 0, scope: !11711)
!11716 = !DILocation(line: 807, column: 3, scope: !11711)
!11717 = !DILocation(line: 808, column: 1, scope: !11711)
!11718 = distinct !DISubprogram(name: "LL_USART_SetParity", scope: !11501, file: !11501, line: 532, type: !11673, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1738, retainedNodes: !11719)
!11719 = !{!11720, !11721}
!11720 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11718, file: !11501, line: 532, type: !1823)
!11721 = !DILocalVariable(name: "Parity", arg: 2, scope: !11718, file: !11501, line: 532, type: !113)
!11722 = !DILocation(line: 0, scope: !11718)
!11723 = !DILocation(line: 534, column: 3, scope: !11718)
!11724 = !DILocation(line: 535, column: 1, scope: !11718)
!11725 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_ORE", scope: !11501, file: !11501, line: 1770, type: !11502, scopeLine: 1771, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1738, retainedNodes: !11726)
!11726 = !{!11727}
!11727 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11725, file: !11501, line: 1770, type: !1823)
!11728 = !DILocation(line: 0, scope: !11725)
!11729 = !DILocation(line: 1772, column: 11, scope: !11725)
!11730 = !DILocation(line: 1772, column: 46, scope: !11725)
!11731 = !DILocation(line: 1772, column: 3, scope: !11725)
!11732 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_PE", scope: !11501, file: !11501, line: 1737, type: !11502, scopeLine: 1738, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1738, retainedNodes: !11733)
!11733 = !{!11734}
!11734 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11732, file: !11501, line: 1737, type: !1823)
!11735 = !DILocation(line: 0, scope: !11732)
!11736 = !DILocation(line: 1739, column: 11, scope: !11732)
!11737 = !DILocation(line: 1739, column: 3, scope: !11732)
!11738 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_FE", scope: !11501, file: !11501, line: 1748, type: !11502, scopeLine: 1749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1738, retainedNodes: !11739)
!11739 = !{!11740}
!11740 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11738, file: !11501, line: 1748, type: !1823)
!11741 = !DILocation(line: 0, scope: !11738)
!11742 = !DILocation(line: 1750, column: 11, scope: !11738)
!11743 = !DILocation(line: 1750, column: 45, scope: !11738)
!11744 = !DILocation(line: 1750, column: 3, scope: !11738)
!11745 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_LBD", scope: !11501, file: !11501, line: 1827, type: !11502, scopeLine: 1828, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1738, retainedNodes: !11746)
!11746 = !{!11747}
!11747 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11745, file: !11501, line: 1827, type: !1823)
!11748 = !DILocation(line: 0, scope: !11745)
!11749 = !DILocation(line: 1829, column: 11, scope: !11745)
!11750 = !DILocation(line: 1829, column: 46, scope: !11745)
!11751 = !DILocation(line: 1829, column: 3, scope: !11745)
!11752 = distinct !DISubprogram(name: "LL_USART_ClearFlag_LBD", scope: !11501, file: !11501, line: 1992, type: !11564, scopeLine: 1993, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1738, retainedNodes: !11753)
!11753 = !{!11754}
!11754 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11752, file: !11501, line: 1992, type: !1823)
!11755 = !DILocation(line: 0, scope: !11752)
!11756 = !DILocation(line: 1994, column: 3, scope: !11752)
!11757 = !DILocation(line: 1995, column: 1, scope: !11752)
!11758 = distinct !DISubprogram(name: "LL_USART_ClearFlag_ORE", scope: !11501, file: !11501, line: 1934, type: !11564, scopeLine: 1935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1738, retainedNodes: !11759)
!11759 = !{!11760, !11761}
!11760 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11758, file: !11501, line: 1934, type: !1823)
!11761 = !DILocalVariable(name: "tmpreg", scope: !11758, file: !11501, line: 1936, type: !584)
!11762 = !DILocation(line: 0, scope: !11758)
!11763 = !DILocation(line: 1936, column: 3, scope: !11758)
!11764 = !DILocation(line: 1936, column: 17, scope: !11758)
!11765 = !DILocation(line: 1937, column: 20, scope: !11758)
!11766 = !DILocation(line: 1937, column: 10, scope: !11758)
!11767 = !DILocation(line: 1938, column: 10, scope: !11758)
!11768 = !DILocation(line: 1939, column: 20, scope: !11758)
!11769 = !DILocation(line: 1939, column: 10, scope: !11758)
!11770 = !DILocation(line: 1940, column: 10, scope: !11758)
!11771 = !DILocation(line: 1941, column: 1, scope: !11758)
!11772 = distinct !DISubprogram(name: "LL_USART_ClearFlag_PE", scope: !11501, file: !11501, line: 1877, type: !11564, scopeLine: 1878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1738, retainedNodes: !11773)
!11773 = !{!11774, !11775}
!11774 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11772, file: !11501, line: 1877, type: !1823)
!11775 = !DILocalVariable(name: "tmpreg", scope: !11772, file: !11501, line: 1879, type: !584)
!11776 = !DILocation(line: 0, scope: !11772)
!11777 = !DILocation(line: 1879, column: 3, scope: !11772)
!11778 = !DILocation(line: 1879, column: 17, scope: !11772)
!11779 = !DILocation(line: 1880, column: 20, scope: !11772)
!11780 = !DILocation(line: 1880, column: 10, scope: !11772)
!11781 = !DILocation(line: 1881, column: 10, scope: !11772)
!11782 = !DILocation(line: 1882, column: 20, scope: !11772)
!11783 = !DILocation(line: 1882, column: 10, scope: !11772)
!11784 = !DILocation(line: 1883, column: 10, scope: !11772)
!11785 = !DILocation(line: 1884, column: 1, scope: !11772)
!11786 = distinct !DISubprogram(name: "LL_USART_ClearFlag_FE", scope: !11501, file: !11501, line: 1896, type: !11564, scopeLine: 1897, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1738, retainedNodes: !11787)
!11787 = !{!11788, !11789}
!11788 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11786, file: !11501, line: 1896, type: !1823)
!11789 = !DILocalVariable(name: "tmpreg", scope: !11786, file: !11501, line: 1898, type: !584)
!11790 = !DILocation(line: 0, scope: !11786)
!11791 = !DILocation(line: 1898, column: 3, scope: !11786)
!11792 = !DILocation(line: 1898, column: 17, scope: !11786)
!11793 = !DILocation(line: 1899, column: 20, scope: !11786)
!11794 = !DILocation(line: 1899, column: 10, scope: !11786)
!11795 = !DILocation(line: 1900, column: 10, scope: !11786)
!11796 = !DILocation(line: 1901, column: 20, scope: !11786)
!11797 = !DILocation(line: 1901, column: 10, scope: !11786)
!11798 = !DILocation(line: 1902, column: 10, scope: !11786)
!11799 = !DILocation(line: 1903, column: 1, scope: !11786)
!11800 = distinct !DISubprogram(name: "LL_USART_ClearFlag_NE", scope: !11501, file: !11501, line: 1915, type: !11564, scopeLine: 1916, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1738, retainedNodes: !11801)
!11801 = !{!11802, !11803}
!11802 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11800, file: !11501, line: 1915, type: !1823)
!11803 = !DILocalVariable(name: "tmpreg", scope: !11800, file: !11501, line: 1917, type: !584)
!11804 = !DILocation(line: 0, scope: !11800)
!11805 = !DILocation(line: 1917, column: 3, scope: !11800)
!11806 = !DILocation(line: 1917, column: 17, scope: !11800)
!11807 = !DILocation(line: 1918, column: 20, scope: !11800)
!11808 = !DILocation(line: 1918, column: 10, scope: !11800)
!11809 = !DILocation(line: 1919, column: 10, scope: !11800)
!11810 = !DILocation(line: 1920, column: 20, scope: !11800)
!11811 = !DILocation(line: 1920, column: 10, scope: !11800)
!11812 = !DILocation(line: 1921, column: 10, scope: !11800)
!11813 = !DILocation(line: 1922, column: 1, scope: !11800)
!11814 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TXE", scope: !11501, file: !11501, line: 1814, type: !11502, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1738, retainedNodes: !11815)
!11815 = !{!11816}
!11816 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11814, file: !11501, line: 1814, type: !1823)
!11817 = !DILocation(line: 0, scope: !11814)
!11818 = !DILocation(line: 1816, column: 11, scope: !11814)
!11819 = !DILocation(line: 1816, column: 46, scope: !11814)
!11820 = !DILocation(line: 1816, column: 3, scope: !11814)
!11821 = distinct !DISubprogram(name: "LL_USART_TransmitData8", scope: !11501, file: !11501, line: 2426, type: !11822, scopeLine: 2427, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1738, retainedNodes: !11824)
!11822 = !DISubroutineType(types: !11823)
!11823 = !{null, !1823, !164}
!11824 = !{!11825, !11826}
!11825 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11821, file: !11501, line: 2426, type: !1823)
!11826 = !DILocalVariable(name: "Value", arg: 2, scope: !11821, file: !11501, line: 2426, type: !164)
!11827 = !DILocation(line: 0, scope: !11821)
!11828 = !DILocation(line: 2428, column: 16, scope: !11821)
!11829 = !DILocation(line: 2428, column: 11, scope: !11821)
!11830 = !DILocation(line: 2428, column: 14, scope: !11821)
!11831 = !DILocation(line: 2429, column: 1, scope: !11821)
!11832 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_RXNE", scope: !11501, file: !11501, line: 1792, type: !11502, scopeLine: 1793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1738, retainedNodes: !11833)
!11833 = !{!11834}
!11834 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11832, file: !11501, line: 1792, type: !1823)
!11835 = !DILocation(line: 0, scope: !11832)
!11836 = !DILocation(line: 1794, column: 11, scope: !11832)
!11837 = !DILocation(line: 1794, column: 47, scope: !11832)
!11838 = !DILocation(line: 1794, column: 3, scope: !11832)
!11839 = distinct !DISubprogram(name: "LL_USART_ReceiveData8", scope: !11501, file: !11501, line: 2403, type: !11840, scopeLine: 2404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1738, retainedNodes: !11842)
!11840 = !DISubroutineType(types: !11841)
!11841 = !{!164, !1823}
!11842 = !{!11843}
!11843 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11839, file: !11501, line: 2403, type: !1823)
!11844 = !DILocation(line: 0, scope: !11839)
!11845 = !DILocation(line: 2405, column: 20, scope: !11839)
!11846 = !DILocation(line: 2405, column: 10, scope: !11839)
!11847 = !DILocation(line: 2405, column: 3, scope: !11839)
!11848 = distinct !DISubprogram(name: "uart_stm32_init", scope: !1877, file: !1877, line: 1583, type: !1803, scopeLine: 1584, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1738, retainedNodes: !11849)
!11849 = !{!11850, !11851, !11852, !11853, !11854, !11855}
!11850 = !DILocalVariable(name: "dev", arg: 1, scope: !11848, file: !1877, line: 1583, type: !1782)
!11851 = !DILocalVariable(name: "config", scope: !11848, file: !1877, line: 1585, type: !11192)
!11852 = !DILocalVariable(name: "data", scope: !11848, file: !1877, line: 1586, type: !11315)
!11853 = !DILocalVariable(name: "ll_parity", scope: !11848, file: !1877, line: 1587, type: !113)
!11854 = !DILocalVariable(name: "ll_datawidth", scope: !11848, file: !1877, line: 1588, type: !113)
!11855 = !DILocalVariable(name: "err", scope: !11848, file: !1877, line: 1589, type: !108)
!11856 = !DILocation(line: 0, scope: !11848)
!11857 = !DILocation(line: 1585, column: 48, scope: !11848)
!11858 = !DILocation(line: 1586, column: 38, scope: !11848)
!11859 = !DILocation(line: 1591, column: 2, scope: !11848)
!11860 = !DILocation(line: 1593, column: 29, scope: !11861)
!11861 = distinct !DILexicalBlock(scope: !11848, file: !1877, line: 1593, column: 6)
!11862 = !DILocation(line: 1593, column: 7, scope: !11861)
!11863 = !DILocation(line: 1593, column: 6, scope: !11848)
!11864 = !DILocation(line: 1594, column: 3, scope: !11865)
!11865 = distinct !DILexicalBlock(scope: !11866, file: !1877, line: 1594, column: 3)
!11866 = distinct !DILexicalBlock(scope: !11867, file: !1877, line: 1594, column: 3)
!11867 = distinct !DILexicalBlock(scope: !11868, file: !1877, line: 1594, column: 3)
!11868 = distinct !DILexicalBlock(scope: !11869, file: !1877, line: 1594, column: 3)
!11869 = distinct !DILexicalBlock(scope: !11861, file: !1877, line: 1593, column: 37)
!11870 = !DILocation(line: 1595, column: 3, scope: !11869)
!11871 = !DILocation(line: 1599, column: 31, scope: !11848)
!11872 = !DILocation(line: 1599, column: 71, scope: !11848)
!11873 = !DILocation(line: 1599, column: 8, scope: !11848)
!11874 = !DILocation(line: 1600, column: 10, scope: !11875)
!11875 = distinct !DILexicalBlock(scope: !11848, file: !1877, line: 1600, column: 6)
!11876 = !DILocation(line: 1600, column: 6, scope: !11848)
!11877 = !DILocation(line: 1601, column: 3, scope: !11878)
!11878 = distinct !DILexicalBlock(scope: !11879, file: !1877, line: 1601, column: 3)
!11879 = distinct !DILexicalBlock(scope: !11880, file: !1877, line: 1601, column: 3)
!11880 = distinct !DILexicalBlock(scope: !11881, file: !1877, line: 1601, column: 3)
!11881 = distinct !DILexicalBlock(scope: !11882, file: !1877, line: 1601, column: 3)
!11882 = distinct !DILexicalBlock(scope: !11875, file: !1877, line: 1600, column: 16)
!11883 = !DILocation(line: 1602, column: 3, scope: !11882)
!11884 = !DILocation(line: 1616, column: 36, scope: !11848)
!11885 = !DILocation(line: 1616, column: 8, scope: !11848)
!11886 = !DILocation(line: 1617, column: 10, scope: !11887)
!11887 = distinct !DILexicalBlock(scope: !11848, file: !1877, line: 1617, column: 6)
!11888 = !DILocation(line: 1617, column: 6, scope: !11848)
!11889 = !DILocation(line: 1621, column: 27, scope: !11848)
!11890 = !DILocation(line: 1621, column: 2, scope: !11848)
!11891 = !DILocation(line: 1624, column: 40, scope: !11848)
!11892 = !DILocation(line: 1624, column: 2, scope: !11848)
!11893 = !DILocation(line: 1630, column: 14, scope: !11894)
!11894 = distinct !DILexicalBlock(scope: !11848, file: !1877, line: 1630, column: 6)
!11895 = !DILocation(line: 1630, column: 6, scope: !11848)
!11896 = !DILocation(line: 1640, column: 4, scope: !11897)
!11897 = distinct !DILexicalBlock(scope: !11898, file: !1877, line: 1640, column: 4)
!11898 = distinct !DILexicalBlock(scope: !11899, file: !1877, line: 1640, column: 4)
!11899 = distinct !DILexicalBlock(scope: !11900, file: !1877, line: 1640, column: 4)
!11900 = distinct !DILexicalBlock(scope: !11901, file: !1877, line: 1640, column: 4)
!11901 = distinct !DILexicalBlock(scope: !11902, file: !1877, line: 1639, column: 28)
!11902 = distinct !DILexicalBlock(scope: !11903, file: !1877, line: 1639, column: 7)
!11903 = distinct !DILexicalBlock(scope: !11904, file: !1877, line: 1638, column: 9)
!11904 = distinct !DILexicalBlock(scope: !11894, file: !1877, line: 1634, column: 13)
!11905 = !DILocation(line: 0, scope: !11894)
!11906 = !DILocation(line: 1649, column: 35, scope: !11848)
!11907 = !DILocation(line: 1649, column: 2, scope: !11848)
!11908 = !DILocation(line: 1654, column: 14, scope: !11909)
!11909 = distinct !DILexicalBlock(scope: !11848, file: !1877, line: 1654, column: 6)
!11910 = !DILocation(line: 1654, column: 6, scope: !11848)
!11911 = !DILocation(line: 1655, column: 3, scope: !11912)
!11912 = distinct !DILexicalBlock(scope: !11909, file: !1877, line: 1654, column: 31)
!11913 = !DILocation(line: 1656, column: 2, scope: !11912)
!11914 = !DILocation(line: 1659, column: 37, scope: !11848)
!11915 = !DILocation(line: 1659, column: 2, scope: !11848)
!11916 = !DILocation(line: 1662, column: 14, scope: !11917)
!11917 = distinct !DILexicalBlock(scope: !11848, file: !1877, line: 1662, column: 6)
!11918 = !DILocation(line: 1662, column: 6, scope: !11848)
!11919 = !DILocation(line: 1663, column: 37, scope: !11920)
!11920 = distinct !DILexicalBlock(scope: !11917, file: !1877, line: 1662, column: 27)
!11921 = !DILocation(line: 1663, column: 3, scope: !11920)
!11922 = !DILocation(line: 1664, column: 2, scope: !11920)
!11923 = !DILocation(line: 1684, column: 26, scope: !11848)
!11924 = !DILocation(line: 1684, column: 2, scope: !11848)
!11925 = !DILocation(line: 1722, column: 2, scope: !11848)
!11926 = !DILocation(line: 1724, column: 1, scope: !11848)
!11927 = distinct !DISubprogram(name: "__uart_stm32_get_clock", scope: !1877, file: !1877, line: 651, type: !11928, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1738, retainedNodes: !11930)
!11928 = !DISubroutineType(types: !11929)
!11929 = !{null, !1782}
!11930 = !{!11931, !11932, !11933}
!11931 = !DILocalVariable(name: "dev", arg: 1, scope: !11927, file: !1877, line: 651, type: !1782)
!11932 = !DILocalVariable(name: "data", scope: !11927, file: !1877, line: 653, type: !11315)
!11933 = !DILocalVariable(name: "clk", scope: !11927, file: !1877, line: 654, type: !11934)
!11934 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1782)
!11935 = !DILocation(line: 0, scope: !11927)
!11936 = !DILocation(line: 653, column: 38, scope: !11927)
!11937 = !DILocation(line: 656, column: 8, scope: !11927)
!11938 = !DILocation(line: 656, column: 14, scope: !11927)
!11939 = !DILocation(line: 657, column: 1, scope: !11927)
!11940 = distinct !DISubprogram(name: "device_is_ready", scope: !10330, file: !10330, line: 47, type: !11941, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1738, retainedNodes: !11943)
!11941 = !DISubroutineType(types: !11942)
!11942 = !{!422, !1782}
!11943 = !{!11944}
!11944 = !DILocalVariable(name: "dev", arg: 1, scope: !11940, file: !10330, line: 47, type: !1782)
!11945 = !DILocation(line: 0, scope: !11940)
!11946 = !DILocation(line: 55, column: 2, scope: !11947)
!11947 = distinct !DILexicalBlock(scope: !11940, file: !10330, line: 55, column: 2)
!11948 = !{i64 2155770062}
!11949 = !DILocation(line: 56, column: 9, scope: !11940)
!11950 = !DILocation(line: 56, column: 2, scope: !11940)
!11951 = distinct !DISubprogram(name: "clock_control_on", scope: !1205, file: !1205, line: 123, type: !1841, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1738, retainedNodes: !11952)
!11952 = !{!11953, !11954, !11955}
!11953 = !DILocalVariable(name: "dev", arg: 1, scope: !11951, file: !1205, line: 123, type: !1782)
!11954 = !DILocalVariable(name: "sys", arg: 2, scope: !11951, file: !1205, line: 124, type: !1299)
!11955 = !DILocalVariable(name: "api", scope: !11951, file: !1205, line: 126, type: !1834)
!11956 = !DILocation(line: 0, scope: !11951)
!11957 = !DILocation(line: 127, column: 49, scope: !11951)
!11958 = !DILocation(line: 129, column: 14, scope: !11951)
!11959 = !DILocation(line: 129, column: 9, scope: !11951)
!11960 = !DILocation(line: 129, column: 2, scope: !11951)
!11961 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !1947, file: !1947, line: 342, type: !11962, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1738, retainedNodes: !11964)
!11962 = !DISubroutineType(types: !11963)
!11963 = !{!108, !1944, !164}
!11964 = !{!11965, !11966, !11967, !11968}
!11965 = !DILocalVariable(name: "config", arg: 1, scope: !11961, file: !1947, line: 342, type: !1944)
!11966 = !DILocalVariable(name: "id", arg: 2, scope: !11961, file: !1947, line: 343, type: !164)
!11967 = !DILocalVariable(name: "ret", scope: !11961, file: !1947, line: 345, type: !108)
!11968 = !DILocalVariable(name: "state", scope: !11961, file: !1947, line: 346, type: !1950)
!11969 = !DILocation(line: 0, scope: !11961)
!11970 = !DILocation(line: 346, column: 2, scope: !11961)
!11971 = !DILocation(line: 348, column: 8, scope: !11961)
!11972 = !DILocation(line: 349, column: 10, scope: !11973)
!11973 = distinct !DILexicalBlock(scope: !11961, file: !1947, line: 349, column: 6)
!11974 = !DILocation(line: 349, column: 6, scope: !11961)
!11975 = !DILocation(line: 353, column: 44, scope: !11961)
!11976 = !DILocation(line: 353, column: 9, scope: !11961)
!11977 = !DILocation(line: 353, column: 2, scope: !11961)
!11978 = !DILocation(line: 354, column: 1, scope: !11961)
!11979 = distinct !DISubprogram(name: "LL_USART_SetTransferDirection", scope: !11501, file: !11501, line: 497, type: !11673, scopeLine: 498, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1738, retainedNodes: !11980)
!11980 = !{!11981, !11982, !11983}
!11981 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11979, file: !11501, line: 497, type: !1823)
!11982 = !DILocalVariable(name: "TransferDirection", arg: 2, scope: !11979, file: !11501, line: 497, type: !113)
!11983 = !DILocalVariable(name: "val", scope: !11984, file: !11501, line: 499, type: !113)
!11984 = distinct !DILexicalBlock(scope: !11979, file: !11501, line: 499, column: 3)
!11985 = !DILocation(line: 0, scope: !11979)
!11986 = !DILocation(line: 499, column: 3, scope: !11984)
!11987 = !DILocalVariable(name: "addr", arg: 1, scope: !11988, file: !7201, line: 476, type: !1873)
!11988 = distinct !DISubprogram(name: "__LDREXW", scope: !7201, file: !7201, line: 476, type: !11989, scopeLine: 477, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1738, retainedNodes: !11991)
!11989 = !DISubroutineType(types: !11990)
!11990 = !{!113, !1873}
!11991 = !{!11987, !11992}
!11992 = !DILocalVariable(name: "result", scope: !11988, file: !7201, line: 478, type: !113)
!11993 = !DILocation(line: 0, scope: !11988, inlinedAt: !11994)
!11994 = distinct !DILocation(line: 499, column: 3, scope: !11995)
!11995 = distinct !DILexicalBlock(scope: !11984, file: !11501, line: 499, column: 3)
!11996 = !DILocation(line: 480, column: 4, scope: !11988, inlinedAt: !11994)
!11997 = !{i64 4160296}
!11998 = !DILocation(line: 499, column: 3, scope: !11995)
!11999 = !DILocation(line: 0, scope: !11984)
!12000 = !DILocalVariable(name: "value", arg: 1, scope: !12001, file: !7201, line: 527, type: !113)
!12001 = distinct !DISubprogram(name: "__STREXW", scope: !7201, file: !7201, line: 527, type: !12002, scopeLine: 528, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1738, retainedNodes: !12004)
!12002 = !DISubroutineType(types: !12003)
!12003 = !{!113, !113, !1873}
!12004 = !{!12000, !12005, !12006}
!12005 = !DILocalVariable(name: "addr", arg: 2, scope: !12001, file: !7201, line: 527, type: !1873)
!12006 = !DILocalVariable(name: "result", scope: !12001, file: !7201, line: 529, type: !113)
!12007 = !DILocation(line: 0, scope: !12001, inlinedAt: !12008)
!12008 = distinct !DILocation(line: 499, column: 3, scope: !11984)
!12009 = !DILocation(line: 531, column: 4, scope: !12001, inlinedAt: !12008)
!12010 = !{i64 4161732}
!12011 = distinct !{!12011, !11986, !11986}
!12012 = !DILocation(line: 500, column: 1, scope: !11979)
!12013 = distinct !DISubprogram(name: "LL_USART_ConfigCharacter", scope: !11501, file: !11501, line: 850, type: !11682, scopeLine: 852, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1738, retainedNodes: !12014)
!12014 = !{!12015, !12016, !12017, !12018}
!12015 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12013, file: !11501, line: 850, type: !1823)
!12016 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !12013, file: !11501, line: 850, type: !113)
!12017 = !DILocalVariable(name: "Parity", arg: 3, scope: !12013, file: !11501, line: 850, type: !113)
!12018 = !DILocalVariable(name: "StopBits", arg: 4, scope: !12013, file: !11501, line: 851, type: !113)
!12019 = !DILocation(line: 0, scope: !12013)
!12020 = !DILocation(line: 853, column: 3, scope: !12013)
!12021 = !DILocation(line: 854, column: 3, scope: !12013)
!12022 = !DILocation(line: 855, column: 1, scope: !12013)
!12023 = distinct !DISubprogram(name: "LL_USART_EnableHalfDuplex", scope: !11501, file: !11501, line: 1337, type: !11564, scopeLine: 1338, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1738, retainedNodes: !12024)
!12024 = !{!12025}
!12025 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12023, file: !11501, line: 1337, type: !1823)
!12026 = !DILocation(line: 0, scope: !12023)
!12027 = !DILocation(line: 1339, column: 3, scope: !12023)
!12028 = !DILocation(line: 1340, column: 1, scope: !12023)
!12029 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !1947, file: !1947, line: 316, type: !12030, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1738, retainedNodes: !12032)
!12030 = !DISubroutineType(types: !12031)
!12031 = !{!108, !1944, !1950}
!12032 = !{!12033, !12034, !12035}
!12033 = !DILocalVariable(name: "config", arg: 1, scope: !12029, file: !1947, line: 317, type: !1944)
!12034 = !DILocalVariable(name: "state", arg: 2, scope: !12029, file: !1947, line: 318, type: !1950)
!12035 = !DILocalVariable(name: "reg", scope: !12029, file: !1947, line: 320, type: !22)
!12036 = !DILocation(line: 0, scope: !12029)
!12037 = !DILocation(line: 329, column: 39, scope: !12029)
!12038 = !DILocation(line: 329, column: 52, scope: !12029)
!12039 = !DILocation(line: 329, column: 9, scope: !12029)
!12040 = !DILocation(line: 329, column: 2, scope: !12029)
!12041 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !411, file: !411, line: 730, type: !11941, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1738, retainedNodes: !12042)
!12042 = !{!12043}
!12043 = !DILocalVariable(name: "dev", arg: 1, scope: !12041, file: !411, line: 730, type: !1782)
!12044 = !DILocation(line: 0, scope: !12041)
!12045 = !DILocation(line: 732, column: 9, scope: !12041)
!12046 = !DILocation(line: 732, column: 2, scope: !12041)
!12047 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !2118, file: !2118, line: 270, type: !2124, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2040, retainedNodes: !12048)
!12048 = !{!12049}
!12049 = !DILocalVariable(name: "dev", arg: 1, scope: !12047, file: !2118, line: 270, type: !2126)
!12050 = !DILocation(line: 0, scope: !12047)
!12051 = !DILocation(line: 274, column: 2, scope: !12047)
!12052 = !DILocation(line: 275, column: 12, scope: !12047)
!12053 = !DILocation(line: 276, column: 15, scope: !12047)
!12054 = !DILocation(line: 277, column: 16, scope: !12047)
!12055 = !DILocation(line: 278, column: 15, scope: !12047)
!12056 = !DILocation(line: 279, column: 16, scope: !12047)
!12057 = !DILocation(line: 282, column: 2, scope: !12047)
!12058 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !802, file: !802, line: 1814, type: !7235, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2040, retainedNodes: !12059)
!12059 = !{!12060, !12061}
!12060 = !DILocalVariable(name: "IRQn", arg: 1, scope: !12058, file: !802, line: 1814, type: !1193)
!12061 = !DILocalVariable(name: "priority", arg: 2, scope: !12058, file: !802, line: 1814, type: !113)
!12062 = !DILocation(line: 0, scope: !12058)
!12063 = !DILocation(line: 1822, column: 46, scope: !12064)
!12064 = distinct !DILexicalBlock(scope: !12065, file: !802, line: 1821, column: 3)
!12065 = distinct !DILexicalBlock(scope: !12058, file: !802, line: 1816, column: 7)
!12066 = !DILocation(line: 1824, column: 1, scope: !12058)
!12067 = distinct !DISubprogram(name: "sys_clock_isr", scope: !2118, file: !2118, line: 118, type: !7138, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2040, retainedNodes: !12068)
!12068 = !{!12069, !12070}
!12069 = !DILocalVariable(name: "arg", arg: 1, scope: !12067, file: !2118, line: 118, type: !104)
!12070 = !DILocalVariable(name: "dticks", scope: !12067, file: !2118, line: 121, type: !113)
!12071 = !DILocation(line: 0, scope: !12067)
!12072 = !DILocation(line: 124, column: 2, scope: !12067)
!12073 = !DILocation(line: 129, column: 17, scope: !12067)
!12074 = !DILocation(line: 129, column: 14, scope: !12067)
!12075 = !DILocation(line: 130, column: 15, scope: !12067)
!12076 = !DILocation(line: 145, column: 27, scope: !12077)
!12077 = distinct !DILexicalBlock(scope: !12078, file: !2118, line: 132, column: 16)
!12078 = distinct !DILexicalBlock(scope: !12067, file: !2118, line: 132, column: 6)
!12079 = !DILocation(line: 145, column: 25, scope: !12077)
!12080 = !DILocation(line: 145, column: 45, scope: !12077)
!12081 = !DILocation(line: 146, column: 30, scope: !12077)
!12082 = !DILocation(line: 146, column: 20, scope: !12077)
!12083 = !DILocation(line: 147, column: 3, scope: !12077)
!12084 = !DILocation(line: 151, column: 2, scope: !12067)
!12085 = !DILocation(line: 152, column: 1, scope: !12067)
!12086 = distinct !DISubprogram(name: "elapsed", scope: !2118, file: !2118, line: 85, type: !7282, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2040, retainedNodes: !12087)
!12087 = !{!12088, !12089, !12090}
!12088 = !DILocalVariable(name: "val1", scope: !12086, file: !2118, line: 87, type: !113)
!12089 = !DILocalVariable(name: "ctrl", scope: !12086, file: !2118, line: 88, type: !113)
!12090 = !DILocalVariable(name: "val2", scope: !12086, file: !2118, line: 89, type: !113)
!12091 = !DILocation(line: 87, column: 27, scope: !12086)
!12092 = !DILocation(line: 0, scope: !12086)
!12093 = !DILocation(line: 88, column: 27, scope: !12086)
!12094 = !DILocation(line: 89, column: 27, scope: !12086)
!12095 = !DILocation(line: 105, column: 12, scope: !12096)
!12096 = distinct !DILexicalBlock(scope: !12086, file: !2118, line: 105, column: 6)
!12097 = !DILocation(line: 106, column: 6, scope: !12096)
!12098 = !DILocation(line: 107, column: 16, scope: !12099)
!12099 = distinct !DILexicalBlock(scope: !12096, file: !2118, line: 106, column: 24)
!12100 = !DILocation(line: 111, column: 18, scope: !12099)
!12101 = !DILocation(line: 112, column: 2, scope: !12099)
!12102 = !DILocation(line: 114, column: 20, scope: !12086)
!12103 = !DILocation(line: 114, column: 30, scope: !12086)
!12104 = !DILocation(line: 114, column: 28, scope: !12086)
!12105 = !DILocation(line: 114, column: 2, scope: !12086)
!12106 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !2118, file: !2118, line: 154, type: !12107, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2040, retainedNodes: !12109)
!12107 = !DISubroutineType(types: !12108)
!12108 = !{null, !220, !422}
!12109 = !{!12110, !12111, !12112, !12113, !12114, !12115, !12116, !12121, !12122}
!12110 = !DILocalVariable(name: "ticks", arg: 1, scope: !12106, file: !2118, line: 154, type: !220)
!12111 = !DILocalVariable(name: "idle", arg: 2, scope: !12106, file: !2118, line: 154, type: !422)
!12112 = !DILocalVariable(name: "delay", scope: !12106, file: !2118, line: 169, type: !113)
!12113 = !DILocalVariable(name: "val1", scope: !12106, file: !2118, line: 170, type: !113)
!12114 = !DILocalVariable(name: "val2", scope: !12106, file: !2118, line: 170, type: !113)
!12115 = !DILocalVariable(name: "last_load_", scope: !12106, file: !2118, line: 171, type: !113)
!12116 = !DILocalVariable(name: "key", scope: !12106, file: !2118, line: 176, type: !12117)
!12117 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !436, line: 106, baseType: !12118)
!12118 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !436, line: 32, size: 32, elements: !12119)
!12119 = !{!12120}
!12120 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !12118, file: !436, line: 33, baseType: !108, size: 32)
!12121 = !DILocalVariable(name: "pending", scope: !12106, file: !2118, line: 178, type: !113)
!12122 = !DILocalVariable(name: "unannounced", scope: !12106, file: !2118, line: 185, type: !113)
!12123 = !DILocation(line: 0, scope: !12106)
!12124 = !DILocation(line: 162, column: 49, scope: !12125)
!12125 = distinct !DILexicalBlock(scope: !12106, file: !2118, line: 162, column: 6)
!12126 = !DILocation(line: 163, column: 17, scope: !12127)
!12127 = distinct !DILexicalBlock(scope: !12125, file: !2118, line: 162, column: 78)
!12128 = !DILocation(line: 164, column: 13, scope: !12127)
!12129 = !DILocation(line: 165, column: 3, scope: !12127)
!12130 = !DILocation(line: 171, column: 24, scope: !12106)
!12131 = !DILocation(line: 173, column: 10, scope: !12106)
!12132 = !DILocation(line: 174, column: 10, scope: !12106)
!12133 = !DILocalVariable(name: "l", arg: 1, scope: !12134, file: !436, line: 136, type: !12137)
!12134 = distinct !DISubprogram(name: "k_spin_lock", scope: !436, file: !436, line: 136, type: !12135, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2040, retainedNodes: !12138)
!12135 = !DISubroutineType(types: !12136)
!12136 = !{!12117, !12137}
!12137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2144, size: 32)
!12138 = !{!12133, !12139}
!12139 = !DILocalVariable(name: "k", scope: !12134, file: !436, line: 139, type: !12117)
!12140 = !DILocation(line: 0, scope: !12134, inlinedAt: !12141)
!12141 = distinct !DILocation(line: 176, column: 25, scope: !12106)
!12142 = !DILocation(line: 55, column: 2, scope: !12143, inlinedAt: !12147)
!12143 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4225, file: !4225, line: 42, type: !4226, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2040, retainedNodes: !12144)
!12144 = !{!12145, !12146}
!12145 = !DILocalVariable(name: "key", scope: !12143, file: !4225, line: 44, type: !32)
!12146 = !DILocalVariable(name: "tmp", scope: !12143, file: !4225, line: 53, type: !32)
!12147 = distinct !DILocation(line: 145, column: 10, scope: !12134, inlinedAt: !12141)
!12148 = !{i64 2618163}
!12149 = !DILocation(line: 0, scope: !12143, inlinedAt: !12147)
!12150 = !DILocation(line: 178, column: 21, scope: !12106)
!12151 = !DILocation(line: 180, column: 18, scope: !12106)
!12152 = !DILocation(line: 182, column: 14, scope: !12106)
!12153 = !DILocation(line: 183, column: 15, scope: !12106)
!12154 = !DILocation(line: 185, column: 39, scope: !12106)
!12155 = !DILocation(line: 185, column: 37, scope: !12106)
!12156 = !DILocation(line: 187, column: 27, scope: !12157)
!12157 = distinct !DILexicalBlock(scope: !12106, file: !2118, line: 187, column: 6)
!12158 = !DILocation(line: 187, column: 6, scope: !12106)
!12159 = !DILocation(line: 202, column: 27, scope: !12160)
!12160 = distinct !DILexicalBlock(scope: !12157, file: !2118, line: 195, column: 9)
!12161 = !DILocation(line: 202, column: 48, scope: !12160)
!12162 = !DILocation(line: 203, column: 9, scope: !12160)
!12163 = !DILocation(line: 204, column: 11, scope: !12160)
!12164 = !DILocation(line: 205, column: 13, scope: !12165)
!12165 = distinct !DILexicalBlock(scope: !12160, file: !2118, line: 205, column: 7)
!12166 = !DILocation(line: 205, column: 7, scope: !12160)
!12167 = !DILocation(line: 0, scope: !12157)
!12168 = !DILocation(line: 212, column: 18, scope: !12106)
!12169 = !DILocation(line: 214, column: 28, scope: !12106)
!12170 = !DILocation(line: 214, column: 16, scope: !12106)
!12171 = !DILocation(line: 215, column: 15, scope: !12106)
!12172 = !DILocation(line: 227, column: 11, scope: !12173)
!12173 = distinct !DILexicalBlock(scope: !12106, file: !2118, line: 227, column: 6)
!12174 = !DILocation(line: 227, column: 6, scope: !12106)
!12175 = !DILocation(line: 228, column: 15, scope: !12176)
!12176 = distinct !DILexicalBlock(scope: !12173, file: !2118, line: 227, column: 19)
!12177 = !DILocation(line: 228, column: 38, scope: !12176)
!12178 = !DILocation(line: 228, column: 24, scope: !12176)
!12179 = !DILocation(line: 229, column: 2, scope: !12176)
!12180 = !DILocation(line: 230, column: 24, scope: !12181)
!12181 = distinct !DILexicalBlock(scope: !12173, file: !2118, line: 229, column: 9)
!12182 = !DILocation(line: 230, column: 15, scope: !12181)
!12183 = !DILocation(line: 0, scope: !12173)
!12184 = !DILocalVariable(name: "key", arg: 2, scope: !12185, file: !436, line: 190, type: !12117)
!12185 = distinct !DISubprogram(name: "k_spin_unlock", scope: !436, file: !436, line: 189, type: !12186, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2040, retainedNodes: !12188)
!12186 = !DISubroutineType(types: !12187)
!12187 = !{null, !12137, !12117}
!12188 = !{!12189, !12184}
!12189 = !DILocalVariable(name: "l", arg: 1, scope: !12185, file: !436, line: 189, type: !12137)
!12190 = !DILocation(line: 0, scope: !12185, inlinedAt: !12191)
!12191 = distinct !DILocation(line: 232, column: 2, scope: !12106)
!12192 = !DILocalVariable(name: "key", arg: 1, scope: !12193, file: !4225, line: 84, type: !32)
!12193 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4225, file: !4225, line: 84, type: !4238, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2040, retainedNodes: !12194)
!12194 = !{!12192}
!12195 = !DILocation(line: 0, scope: !12193, inlinedAt: !12196)
!12196 = distinct !DILocation(line: 215, column: 2, scope: !12185, inlinedAt: !12191)
!12197 = !DILocation(line: 95, column: 2, scope: !12193, inlinedAt: !12196)
!12198 = !{i64 2618980}
!12199 = !DILocation(line: 234, column: 1, scope: !12106)
!12200 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !2118, file: !2118, line: 236, type: !7282, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2040, retainedNodes: !12201)
!12201 = !{!12202, !12203}
!12202 = !DILocalVariable(name: "key", scope: !12200, file: !2118, line: 242, type: !12117)
!12203 = !DILocalVariable(name: "cyc", scope: !12200, file: !2118, line: 243, type: !113)
!12204 = !DILocation(line: 0, scope: !12134, inlinedAt: !12205)
!12205 = distinct !DILocation(line: 242, column: 25, scope: !12200)
!12206 = !DILocation(line: 55, column: 2, scope: !12143, inlinedAt: !12207)
!12207 = distinct !DILocation(line: 145, column: 10, scope: !12134, inlinedAt: !12205)
!12208 = !DILocation(line: 0, scope: !12143, inlinedAt: !12207)
!12209 = !DILocation(line: 0, scope: !12200)
!12210 = !DILocation(line: 243, column: 17, scope: !12200)
!12211 = !DILocation(line: 243, column: 29, scope: !12200)
!12212 = !DILocation(line: 243, column: 27, scope: !12200)
!12213 = !DILocation(line: 243, column: 43, scope: !12200)
!12214 = !DILocation(line: 243, column: 41, scope: !12200)
!12215 = !DILocation(line: 0, scope: !12185, inlinedAt: !12216)
!12216 = distinct !DILocation(line: 245, column: 2, scope: !12200)
!12217 = !DILocation(line: 0, scope: !12193, inlinedAt: !12218)
!12218 = distinct !DILocation(line: 215, column: 2, scope: !12185, inlinedAt: !12216)
!12219 = !DILocation(line: 95, column: 2, scope: !12193, inlinedAt: !12218)
!12220 = !DILocation(line: 246, column: 13, scope: !12200)
!12221 = !DILocation(line: 246, column: 2, scope: !12200)
!12222 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !2118, file: !2118, line: 249, type: !7282, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2040, retainedNodes: !12223)
!12223 = !{!12224, !12225}
!12224 = !DILocalVariable(name: "key", scope: !12222, file: !2118, line: 251, type: !12117)
!12225 = !DILocalVariable(name: "ret", scope: !12222, file: !2118, line: 252, type: !113)
!12226 = !DILocation(line: 0, scope: !12134, inlinedAt: !12227)
!12227 = distinct !DILocation(line: 251, column: 25, scope: !12222)
!12228 = !DILocation(line: 55, column: 2, scope: !12143, inlinedAt: !12229)
!12229 = distinct !DILocation(line: 145, column: 10, scope: !12134, inlinedAt: !12227)
!12230 = !DILocation(line: 0, scope: !12143, inlinedAt: !12229)
!12231 = !DILocation(line: 0, scope: !12222)
!12232 = !DILocation(line: 252, column: 17, scope: !12222)
!12233 = !DILocation(line: 252, column: 29, scope: !12222)
!12234 = !DILocation(line: 252, column: 27, scope: !12222)
!12235 = !DILocation(line: 0, scope: !12185, inlinedAt: !12236)
!12236 = distinct !DILocation(line: 254, column: 2, scope: !12222)
!12237 = !DILocation(line: 0, scope: !12193, inlinedAt: !12238)
!12238 = distinct !DILocation(line: 215, column: 2, scope: !12185, inlinedAt: !12236)
!12239 = !DILocation(line: 95, column: 2, scope: !12193, inlinedAt: !12238)
!12240 = !DILocation(line: 255, column: 2, scope: !12222)
!12241 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !2118, file: !2118, line: 258, type: !3551, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2040, retainedNodes: !437)
!12242 = !DILocation(line: 260, column: 6, scope: !12243)
!12243 = distinct !DILexicalBlock(scope: !12241, file: !2118, line: 260, column: 6)
!12244 = !DILocation(line: 260, column: 16, scope: !12243)
!12245 = !DILocation(line: 260, column: 6, scope: !12241)
!12246 = !DILocation(line: 261, column: 17, scope: !12247)
!12247 = distinct !DILexicalBlock(scope: !12243, file: !2118, line: 260, column: 34)
!12248 = !DILocation(line: 262, column: 2, scope: !12247)
!12249 = !DILocation(line: 263, column: 1, scope: !12241)
!12250 = distinct !DISubprogram(name: "sys_clock_disable", scope: !2118, file: !2118, line: 265, type: !3551, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2040, retainedNodes: !437)
!12251 = !DILocation(line: 267, column: 16, scope: !12250)
!12252 = !DILocation(line: 268, column: 1, scope: !12250)
!12253 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !12254, file: !12254, line: 9, type: !12255, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3358, retainedNodes: !12278)
!12254 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12255 = !DISubroutineType(types: !12256)
!12256 = !{!108, !12257, !164, !12277}
!12257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12258, size: 32)
!12258 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12259)
!12259 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1947, line: 60, size: 64, elements: !12260)
!12260 = !{!12261, !12276}
!12261 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !12259, file: !1947, line: 69, baseType: !12262, size: 32)
!12262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12263, size: 32)
!12263 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12264)
!12264 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1947, line: 50, size: 64, elements: !12265)
!12265 = !{!12266, !12274, !12275}
!12266 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !12264, file: !1947, line: 52, baseType: !12267, size: 32)
!12267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12268, size: 32)
!12268 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12269)
!12269 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1958, line: 37, baseType: !12270)
!12270 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1958, line: 32, size: 64, elements: !12271)
!12271 = !{!12272, !12273}
!12272 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !12270, file: !1958, line: 34, baseType: !113, size: 32)
!12273 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !12270, file: !1958, line: 36, baseType: !113, size: 32, offset: 32)
!12274 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !12264, file: !1947, line: 54, baseType: !164, size: 8, offset: 32)
!12275 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !12264, file: !1947, line: 56, baseType: !164, size: 8, offset: 40)
!12276 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !12259, file: !1947, line: 71, baseType: !164, size: 8, offset: 32)
!12277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12262, size: 32)
!12278 = !{!12279, !12280, !12281}
!12279 = !DILocalVariable(name: "config", arg: 1, scope: !12253, file: !12254, line: 9, type: !12257)
!12280 = !DILocalVariable(name: "id", arg: 2, scope: !12253, file: !12254, line: 9, type: !164)
!12281 = !DILocalVariable(name: "state", arg: 3, scope: !12253, file: !12254, line: 10, type: !12277)
!12282 = !DILocation(line: 0, scope: !12253)
!12283 = !DILocation(line: 12, column: 20, scope: !12253)
!12284 = !DILocation(line: 13, column: 27, scope: !12253)
!12285 = !DILocation(line: 13, column: 42, scope: !12253)
!12286 = !DILocation(line: 13, column: 19, scope: !12253)
!12287 = !DILocation(line: 13, column: 16, scope: !12253)
!12288 = !DILocation(line: 13, column: 2, scope: !12253)
!12289 = distinct !{!12289, !12288, !12290}
!12290 = !DILocation(line: 19, column: 2, scope: !12253)
!12291 = !DILocation(line: 14, column: 23, scope: !12292)
!12292 = distinct !DILexicalBlock(scope: !12293, file: !12254, line: 14, column: 7)
!12293 = distinct !DILexicalBlock(scope: !12253, file: !12254, line: 13, column: 54)
!12294 = !DILocation(line: 14, column: 10, scope: !12292)
!12295 = !DILocation(line: 18, column: 11, scope: !12293)
!12296 = !DILocation(line: 14, column: 7, scope: !12293)
!12297 = !DILocation(line: 22, column: 1, scope: !12253)
!12298 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !2235, file: !2235, line: 193, type: !12299, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2153, retainedNodes: !12308)
!12299 = !DISubroutineType(types: !12300)
!12300 = !{!108, !12301, !164, !22}
!12301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12302, size: 32)
!12302 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12303)
!12303 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1958, line: 37, baseType: !12304)
!12304 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1958, line: 32, size: 64, elements: !12305)
!12305 = !{!12306, !12307}
!12306 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !12304, file: !1958, line: 34, baseType: !113, size: 32)
!12307 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !12304, file: !1958, line: 36, baseType: !113, size: 32, offset: 32)
!12308 = !{!12309, !12310, !12311, !12312, !12313, !12314, !12315, !12316, !12318}
!12309 = !DILocalVariable(name: "pins", arg: 1, scope: !12298, file: !2235, line: 193, type: !12301)
!12310 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !12298, file: !2235, line: 193, type: !164)
!12311 = !DILocalVariable(name: "reg", arg: 3, scope: !12298, file: !2235, line: 194, type: !22)
!12312 = !DILocalVariable(name: "pin", scope: !12298, file: !2235, line: 196, type: !113)
!12313 = !DILocalVariable(name: "mux", scope: !12298, file: !2235, line: 196, type: !113)
!12314 = !DILocalVariable(name: "pin_cgf", scope: !12298, file: !2235, line: 197, type: !113)
!12315 = !DILocalVariable(name: "ret", scope: !12298, file: !2235, line: 198, type: !108)
!12316 = !DILocalVariable(name: "i", scope: !12317, file: !2235, line: 209, type: !164)
!12317 = distinct !DILexicalBlock(scope: !12298, file: !2235, line: 209, column: 2)
!12318 = !DILocalVariable(name: "gpio_out", scope: !12319, file: !2235, line: 239, type: !113)
!12319 = distinct !DILexicalBlock(scope: !12320, file: !2235, line: 238, column: 55)
!12320 = distinct !DILexicalBlock(scope: !12321, file: !2235, line: 238, column: 14)
!12321 = distinct !DILexicalBlock(scope: !12322, file: !2235, line: 236, column: 14)
!12322 = distinct !DILexicalBlock(scope: !12323, file: !2235, line: 234, column: 7)
!12323 = distinct !DILexicalBlock(scope: !12324, file: !2235, line: 209, column: 41)
!12324 = distinct !DILexicalBlock(scope: !12317, file: !2235, line: 209, column: 2)
!12325 = !DILocation(line: 0, scope: !12298)
!12326 = !DILocation(line: 0, scope: !12317)
!12327 = !DILocation(line: 209, column: 25, scope: !12324)
!12328 = !DILocation(line: 209, column: 2, scope: !12317)
!12329 = distinct !{!12329, !12328, !12330}
!12330 = !DILocation(line: 259, column: 2, scope: !12317)
!12331 = !DILocation(line: 210, column: 17, scope: !12323)
!12332 = !DILocation(line: 234, column: 7, scope: !12322)
!12333 = !DILocation(line: 234, column: 33, scope: !12322)
!12334 = !DILocation(line: 234, column: 7, scope: !12323)
!12335 = !DILocation(line: 235, column: 22, scope: !12336)
!12336 = distinct !DILexicalBlock(scope: !12322, file: !2235, line: 234, column: 49)
!12337 = !DILocation(line: 235, column: 29, scope: !12336)
!12338 = !DILocation(line: 236, column: 3, scope: !12336)
!12339 = !DILocation(line: 236, column: 14, scope: !12322)
!12340 = !DILocation(line: 239, column: 32, scope: !12319)
!12341 = !DILocation(line: 0, scope: !12319)
!12342 = !DILocation(line: 241, column: 8, scope: !12319)
!12343 = !DILocation(line: 246, column: 3, scope: !12319)
!12344 = !DILocation(line: 252, column: 9, scope: !12323)
!12345 = !DILocation(line: 255, column: 9, scope: !12323)
!12346 = !DILocation(line: 256, column: 11, scope: !12347)
!12347 = distinct !DILexicalBlock(scope: !12323, file: !2235, line: 256, column: 7)
!12348 = !DILocation(line: 209, column: 37, scope: !12324)
!12349 = !DILocation(line: 256, column: 7, scope: !12323)
!12350 = !DILocation(line: 262, column: 1, scope: !12298)
!12351 = distinct !DISubprogram(name: "stm32_pin_configure", scope: !2235, file: !2235, line: 176, type: !12352, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2153, retainedNodes: !12354)
!12352 = !DISubroutineType(types: !12353)
!12353 = !{!108, !113, !113, !113}
!12354 = !{!12355, !12356, !12357, !12358}
!12355 = !DILocalVariable(name: "pin", arg: 1, scope: !12351, file: !2235, line: 176, type: !113)
!12356 = !DILocalVariable(name: "pin_cgf", arg: 2, scope: !12351, file: !2235, line: 176, type: !113)
!12357 = !DILocalVariable(name: "pin_func", arg: 3, scope: !12351, file: !2235, line: 176, type: !113)
!12358 = !DILocalVariable(name: "port_device", scope: !12351, file: !2235, line: 178, type: !2165)
!12359 = !DILocation(line: 0, scope: !12351)
!12360 = !DILocation(line: 180, column: 22, scope: !12361)
!12361 = distinct !DILexicalBlock(scope: !12351, file: !2235, line: 180, column: 6)
!12362 = !DILocation(line: 180, column: 6, scope: !12351)
!12363 = !DILocation(line: 180, column: 6, scope: !12361)
!12364 = !DILocation(line: 184, column: 16, scope: !12351)
!12365 = !DILocation(line: 186, column: 33, scope: !12366)
!12366 = distinct !DILexicalBlock(scope: !12351, file: !2235, line: 186, column: 6)
!12367 = !DILocation(line: 186, column: 6, scope: !12351)
!12368 = !DILocation(line: 190, column: 43, scope: !12351)
!12369 = !DILocation(line: 190, column: 9, scope: !12351)
!12370 = !DILocation(line: 190, column: 2, scope: !12351)
!12371 = !DILocation(line: 191, column: 1, scope: !12351)
!12372 = distinct !DISubprogram(name: "device_is_ready", scope: !10330, file: !10330, line: 47, type: !12373, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2153, retainedNodes: !12375)
!12373 = !DISubroutineType(types: !12374)
!12374 = !{!422, !2165}
!12375 = !{!12376}
!12376 = !DILocalVariable(name: "dev", arg: 1, scope: !12372, file: !10330, line: 47, type: !2165)
!12377 = !DILocation(line: 0, scope: !12372)
!12378 = !DILocation(line: 55, column: 2, scope: !12379)
!12379 = distinct !DILexicalBlock(scope: !12372, file: !10330, line: 55, column: 2)
!12380 = !{i64 2149852169}
!12381 = !DILocation(line: 56, column: 9, scope: !12372)
!12382 = !DILocation(line: 56, column: 2, scope: !12372)
!12383 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !411, file: !411, line: 730, type: !12373, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2153, retainedNodes: !12384)
!12384 = !{!12385}
!12385 = !DILocalVariable(name: "dev", arg: 1, scope: !12383, file: !411, line: 730, type: !2165)
!12386 = !DILocation(line: 0, scope: !12383)
!12387 = !DILocation(line: 732, column: 9, scope: !12383)
!12388 = !DILocation(line: 732, column: 2, scope: !12383)
!12389 = distinct !DISubprogram(name: "SystemInit", scope: !2285, file: !2285, line: 167, type: !3551, scopeLine: 168, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !437)
!12390 = !DILocation(line: 182, column: 1, scope: !12389)
!12391 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !2285, file: !2285, line: 220, type: !3551, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !12392)
!12392 = !{!12393, !12394, !12395, !12396, !12397}
!12393 = !DILocalVariable(name: "tmp", scope: !12391, file: !2285, line: 222, type: !113)
!12394 = !DILocalVariable(name: "pllvco", scope: !12391, file: !2285, line: 222, type: !113)
!12395 = !DILocalVariable(name: "pllp", scope: !12391, file: !2285, line: 222, type: !113)
!12396 = !DILocalVariable(name: "pllsource", scope: !12391, file: !2285, line: 222, type: !113)
!12397 = !DILocalVariable(name: "pllm", scope: !12391, file: !2285, line: 222, type: !113)
!12398 = !DILocation(line: 0, scope: !12391)
!12399 = !DILocation(line: 225, column: 14, scope: !12391)
!12400 = !DILocation(line: 225, column: 19, scope: !12391)
!12401 = !DILocation(line: 227, column: 3, scope: !12391)
!12402 = !DILocation(line: 234, column: 7, scope: !12403)
!12403 = distinct !DILexicalBlock(scope: !12391, file: !2285, line: 228, column: 3)
!12404 = !DILocation(line: 240, column: 25, scope: !12403)
!12405 = !DILocation(line: 241, column: 19, scope: !12403)
!12406 = !DILocation(line: 241, column: 27, scope: !12403)
!12407 = !DILocation(line: 243, column: 21, scope: !12408)
!12408 = distinct !DILexicalBlock(scope: !12403, file: !2285, line: 243, column: 11)
!12409 = !DILocation(line: 0, scope: !12408)
!12410 = !DILocation(line: 254, column: 22, scope: !12403)
!12411 = !DILocation(line: 254, column: 62, scope: !12403)
!12412 = !DILocation(line: 255, column: 31, scope: !12403)
!12413 = !DILocation(line: 256, column: 7, scope: !12403)
!12414 = !DILocation(line: 0, scope: !12403)
!12415 = !DILocation(line: 263, column: 30, scope: !12391)
!12416 = !DILocation(line: 263, column: 52, scope: !12391)
!12417 = !DILocation(line: 263, column: 9, scope: !12391)
!12418 = !DILocation(line: 265, column: 19, scope: !12391)
!12419 = !DILocation(line: 266, column: 1, scope: !12391)
!12420 = distinct !DISubprogram(name: "HAL_RCC_DeInit", scope: !12421, file: !12421, line: 200, type: !12422, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3360, retainedNodes: !437)
!12421 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12422 = !DISubroutineType(types: !12423)
!12423 = !{!12424}
!12424 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_StatusTypeDef", file: !3364, line: 44, baseType: !3363)
!12425 = !DILocation(line: 202, column: 3, scope: !12420)
!12426 = distinct !DISubprogram(name: "HAL_RCC_OscConfig", scope: !12421, file: !12421, line: 219, type: !12427, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3360, retainedNodes: !12451)
!12427 = !DISubroutineType(types: !12428)
!12428 = !{!12424, !12429}
!12429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12430, size: 32)
!12430 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_OscInitTypeDef", file: !12431, line: 70, baseType: !12432)
!12431 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12432 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12431, line: 49, size: 384, elements: !12433)
!12433 = !{!12434, !12435, !12436, !12437, !12438, !12439, !12440}
!12434 = !DIDerivedType(tag: DW_TAG_member, name: "OscillatorType", scope: !12432, file: !12431, line: 51, baseType: !113, size: 32)
!12435 = !DIDerivedType(tag: DW_TAG_member, name: "HSEState", scope: !12432, file: !12431, line: 54, baseType: !113, size: 32, offset: 32)
!12436 = !DIDerivedType(tag: DW_TAG_member, name: "LSEState", scope: !12432, file: !12431, line: 57, baseType: !113, size: 32, offset: 64)
!12437 = !DIDerivedType(tag: DW_TAG_member, name: "HSIState", scope: !12432, file: !12431, line: 60, baseType: !113, size: 32, offset: 96)
!12438 = !DIDerivedType(tag: DW_TAG_member, name: "HSICalibrationValue", scope: !12432, file: !12431, line: 63, baseType: !113, size: 32, offset: 128)
!12439 = !DIDerivedType(tag: DW_TAG_member, name: "LSIState", scope: !12432, file: !12431, line: 66, baseType: !113, size: 32, offset: 160)
!12440 = !DIDerivedType(tag: DW_TAG_member, name: "PLL", scope: !12432, file: !12431, line: 69, baseType: !12441, size: 192, offset: 192)
!12441 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLInitTypeDef", file: !12442, line: 73, baseType: !12443)
!12442 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc_ex.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12443 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12442, line: 45, size: 192, elements: !12444)
!12444 = !{!12445, !12446, !12447, !12448, !12449, !12450}
!12445 = !DIDerivedType(tag: DW_TAG_member, name: "PLLState", scope: !12443, file: !12442, line: 47, baseType: !113, size: 32)
!12446 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSource", scope: !12443, file: !12442, line: 50, baseType: !113, size: 32, offset: 32)
!12447 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !12443, file: !12442, line: 53, baseType: !113, size: 32, offset: 64)
!12448 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !12443, file: !12442, line: 56, baseType: !113, size: 32, offset: 96)
!12449 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !12443, file: !12442, line: 60, baseType: !113, size: 32, offset: 128)
!12450 = !DIDerivedType(tag: DW_TAG_member, name: "PLLQ", scope: !12443, file: !12442, line: 63, baseType: !113, size: 32, offset: 160)
!12451 = !{!12452, !12453, !12454, !12455, !12459}
!12452 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !12426, file: !12421, line: 219, type: !12429)
!12453 = !DILocalVariable(name: "tickstart", scope: !12426, file: !12421, line: 221, type: !113)
!12454 = !DILocalVariable(name: "pll_config", scope: !12426, file: !12421, line: 221, type: !113)
!12455 = !DILocalVariable(name: "pwrclkchanged", scope: !12456, file: !12421, line: 391, type: !12458)
!12456 = distinct !DILexicalBlock(scope: !12457, file: !12421, line: 390, column: 3)
!12457 = distinct !DILexicalBlock(scope: !12426, file: !12421, line: 389, column: 6)
!12458 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlagStatus", file: !1200, line: 188, baseType: !3370)
!12459 = !DILocalVariable(name: "tmpreg", scope: !12460, file: !12421, line: 400, type: !584)
!12460 = distinct !DILexicalBlock(scope: !12461, file: !12421, line: 400, column: 7)
!12461 = distinct !DILexicalBlock(scope: !12462, file: !12421, line: 399, column: 5)
!12462 = distinct !DILexicalBlock(scope: !12456, file: !12421, line: 398, column: 8)
!12463 = !DILocation(line: 0, scope: !12426)
!12464 = !DILocation(line: 224, column: 24, scope: !12465)
!12465 = distinct !DILexicalBlock(scope: !12426, file: !12421, line: 224, column: 6)
!12466 = !DILocation(line: 224, column: 6, scope: !12426)
!12467 = !DILocation(line: 232, column: 27, scope: !12468)
!12468 = distinct !DILexicalBlock(scope: !12426, file: !12421, line: 232, column: 6)
!12469 = !DILocation(line: 232, column: 43, scope: !12468)
!12470 = !DILocation(line: 232, column: 69, scope: !12468)
!12471 = !DILocation(line: 232, column: 6, scope: !12426)
!12472 = !DILocation(line: 237, column: 9, scope: !12473)
!12473 = distinct !DILexicalBlock(scope: !12474, file: !12421, line: 237, column: 8)
!12474 = distinct !DILexicalBlock(scope: !12468, file: !12421, line: 233, column: 3)
!12475 = !DILocation(line: 237, column: 39, scope: !12473)
!12476 = !DILocation(line: 237, column: 60, scope: !12473)
!12477 = !DILocation(line: 238, column: 9, scope: !12473)
!12478 = !DILocation(line: 238, column: 39, scope: !12473)
!12479 = !DILocation(line: 238, column: 60, scope: !12473)
!12480 = !DILocation(line: 238, column: 70, scope: !12473)
!12481 = !DILocation(line: 238, column: 78, scope: !12473)
!12482 = !DILocation(line: 238, column: 100, scope: !12473)
!12483 = !DILocation(line: 237, column: 8, scope: !12474)
!12484 = !DILocation(line: 240, column: 11, scope: !12485)
!12485 = distinct !DILexicalBlock(scope: !12486, file: !12421, line: 240, column: 10)
!12486 = distinct !DILexicalBlock(scope: !12473, file: !12421, line: 239, column: 5)
!12487 = !DILocation(line: 240, column: 57, scope: !12485)
!12488 = !DILocation(line: 240, column: 80, scope: !12485)
!12489 = !DILocation(line: 240, column: 89, scope: !12485)
!12490 = !DILocation(line: 240, column: 10, scope: !12486)
!12491 = !DILocation(line: 248, column: 7, scope: !12492)
!12492 = distinct !DILexicalBlock(scope: !12493, file: !12421, line: 248, column: 7)
!12493 = distinct !DILexicalBlock(scope: !12494, file: !12421, line: 248, column: 7)
!12494 = distinct !DILexicalBlock(scope: !12473, file: !12421, line: 246, column: 5)
!12495 = !DILocation(line: 248, column: 7, scope: !12493)
!12496 = !DILocation(line: 248, column: 7, scope: !12497)
!12497 = distinct !DILexicalBlock(scope: !12492, file: !12421, line: 248, column: 7)
!12498 = !DILocation(line: 248, column: 7, scope: !12499)
!12499 = distinct !DILexicalBlock(scope: !12500, file: !12421, line: 248, column: 7)
!12500 = distinct !DILexicalBlock(scope: !12492, file: !12421, line: 248, column: 7)
!12501 = !DILocation(line: 248, column: 7, scope: !12502)
!12502 = distinct !DILexicalBlock(scope: !12500, file: !12421, line: 248, column: 7)
!12503 = !DILocation(line: 0, scope: !12492)
!12504 = !DILocation(line: 251, column: 30, scope: !12505)
!12505 = distinct !DILexicalBlock(scope: !12494, file: !12421, line: 251, column: 10)
!12506 = !DILocation(line: 251, column: 40, scope: !12505)
!12507 = !DILocation(line: 0, scope: !12505)
!12508 = !DILocation(line: 251, column: 10, scope: !12494)
!12509 = !DILocation(line: 257, column: 15, scope: !12510)
!12510 = distinct !DILexicalBlock(scope: !12505, file: !12421, line: 252, column: 7)
!12511 = !DILocation(line: 257, column: 51, scope: !12510)
!12512 = !DILocation(line: 257, column: 9, scope: !12510)
!12513 = !DILocation(line: 259, column: 15, scope: !12514)
!12514 = distinct !DILexicalBlock(scope: !12515, file: !12421, line: 259, column: 14)
!12515 = distinct !DILexicalBlock(scope: !12510, file: !12421, line: 258, column: 9)
!12516 = !DILocation(line: 259, column: 29, scope: !12514)
!12517 = !DILocation(line: 259, column: 43, scope: !12514)
!12518 = !DILocation(line: 259, column: 14, scope: !12515)
!12519 = distinct !{!12519, !12512, !12520}
!12520 = !DILocation(line: 263, column: 9, scope: !12510)
!12521 = !DILocation(line: 271, column: 15, scope: !12522)
!12522 = distinct !DILexicalBlock(scope: !12505, file: !12421, line: 266, column: 7)
!12523 = !DILocation(line: 271, column: 9, scope: !12522)
!12524 = !DILocation(line: 273, column: 15, scope: !12525)
!12525 = distinct !DILexicalBlock(scope: !12526, file: !12421, line: 273, column: 14)
!12526 = distinct !DILexicalBlock(scope: !12522, file: !12421, line: 272, column: 9)
!12527 = !DILocation(line: 273, column: 29, scope: !12525)
!12528 = !DILocation(line: 273, column: 43, scope: !12525)
!12529 = !DILocation(line: 273, column: 14, scope: !12526)
!12530 = distinct !{!12530, !12523, !12531}
!12531 = !DILocation(line: 277, column: 9, scope: !12522)
!12532 = !DILocation(line: 282, column: 27, scope: !12533)
!12533 = distinct !DILexicalBlock(scope: !12426, file: !12421, line: 282, column: 6)
!12534 = !DILocation(line: 282, column: 43, scope: !12533)
!12535 = !DILocation(line: 282, column: 69, scope: !12533)
!12536 = !DILocation(line: 282, column: 6, scope: !12426)
!12537 = !DILocation(line: 289, column: 9, scope: !12538)
!12538 = distinct !DILexicalBlock(scope: !12539, file: !12421, line: 289, column: 8)
!12539 = distinct !DILexicalBlock(scope: !12533, file: !12421, line: 283, column: 3)
!12540 = !DILocation(line: 289, column: 39, scope: !12538)
!12541 = !DILocation(line: 289, column: 60, scope: !12538)
!12542 = !DILocation(line: 290, column: 9, scope: !12538)
!12543 = !DILocation(line: 290, column: 39, scope: !12538)
!12544 = !DILocation(line: 290, column: 60, scope: !12538)
!12545 = !DILocation(line: 290, column: 70, scope: !12538)
!12546 = !DILocation(line: 290, column: 78, scope: !12538)
!12547 = !DILocation(line: 290, column: 100, scope: !12538)
!12548 = !DILocation(line: 289, column: 8, scope: !12539)
!12549 = !DILocation(line: 293, column: 11, scope: !12550)
!12550 = distinct !DILexicalBlock(scope: !12551, file: !12421, line: 293, column: 10)
!12551 = distinct !DILexicalBlock(scope: !12538, file: !12421, line: 291, column: 5)
!12552 = !DILocation(line: 293, column: 57, scope: !12550)
!12553 = !DILocation(line: 293, column: 80, scope: !12550)
!12554 = !DILocation(line: 293, column: 89, scope: !12550)
!12555 = !DILocation(line: 293, column: 10, scope: !12551)
!12556 = !DILocation(line: 307, column: 30, scope: !12557)
!12557 = distinct !DILexicalBlock(scope: !12558, file: !12421, line: 307, column: 10)
!12558 = distinct !DILexicalBlock(scope: !12538, file: !12421, line: 305, column: 5)
!12559 = !DILocation(line: 307, column: 39, scope: !12557)
!12560 = !DILocation(line: 307, column: 10, scope: !12558)
!12561 = !DILocation(line: 310, column: 9, scope: !12562)
!12562 = distinct !DILexicalBlock(scope: !12557, file: !12421, line: 308, column: 7)
!12563 = !DILocation(line: 313, column: 21, scope: !12562)
!12564 = !DILocation(line: 316, column: 9, scope: !12562)
!12565 = !DILocation(line: 316, column: 15, scope: !12562)
!12566 = !DILocation(line: 316, column: 51, scope: !12562)
!12567 = !DILocation(line: 318, column: 15, scope: !12568)
!12568 = distinct !DILexicalBlock(scope: !12569, file: !12421, line: 318, column: 14)
!12569 = distinct !DILexicalBlock(scope: !12562, file: !12421, line: 317, column: 9)
!12570 = !DILocation(line: 318, column: 29, scope: !12568)
!12571 = !DILocation(line: 318, column: 43, scope: !12568)
!12572 = !DILocation(line: 318, column: 14, scope: !12569)
!12573 = distinct !{!12573, !12564, !12574}
!12574 = !DILocation(line: 322, column: 9, scope: !12562)
!12575 = !DILocation(line: 330, column: 9, scope: !12576)
!12576 = distinct !DILexicalBlock(scope: !12557, file: !12421, line: 328, column: 7)
!12577 = !DILocation(line: 333, column: 21, scope: !12576)
!12578 = !DILocation(line: 336, column: 9, scope: !12576)
!12579 = !DILocation(line: 336, column: 15, scope: !12576)
!12580 = !DILocation(line: 338, column: 15, scope: !12581)
!12581 = distinct !DILexicalBlock(scope: !12582, file: !12421, line: 338, column: 14)
!12582 = distinct !DILexicalBlock(scope: !12576, file: !12421, line: 337, column: 9)
!12583 = !DILocation(line: 338, column: 29, scope: !12581)
!12584 = !DILocation(line: 338, column: 43, scope: !12581)
!12585 = !DILocation(line: 338, column: 14, scope: !12582)
!12586 = distinct !{!12586, !12578, !12587}
!12587 = !DILocation(line: 342, column: 9, scope: !12576)
!12588 = !DILocation(line: 0, scope: !12538)
!12589 = !DILocation(line: 347, column: 27, scope: !12590)
!12590 = distinct !DILexicalBlock(scope: !12426, file: !12421, line: 347, column: 6)
!12591 = !DILocation(line: 347, column: 43, scope: !12590)
!12592 = !DILocation(line: 347, column: 69, scope: !12590)
!12593 = !DILocation(line: 347, column: 6, scope: !12426)
!12594 = !DILocation(line: 353, column: 28, scope: !12595)
!12595 = distinct !DILexicalBlock(scope: !12596, file: !12421, line: 353, column: 8)
!12596 = distinct !DILexicalBlock(scope: !12590, file: !12421, line: 348, column: 3)
!12597 = !DILocation(line: 353, column: 37, scope: !12595)
!12598 = !DILocation(line: 353, column: 8, scope: !12596)
!12599 = !DILocation(line: 356, column: 7, scope: !12600)
!12600 = distinct !DILexicalBlock(scope: !12595, file: !12421, line: 354, column: 5)
!12601 = !DILocation(line: 359, column: 19, scope: !12600)
!12602 = !DILocation(line: 362, column: 7, scope: !12600)
!12603 = !DILocation(line: 362, column: 13, scope: !12600)
!12604 = !DILocation(line: 362, column: 49, scope: !12600)
!12605 = !DILocation(line: 364, column: 13, scope: !12606)
!12606 = distinct !DILexicalBlock(scope: !12607, file: !12421, line: 364, column: 12)
!12607 = distinct !DILexicalBlock(scope: !12600, file: !12421, line: 363, column: 7)
!12608 = !DILocation(line: 364, column: 27, scope: !12606)
!12609 = !DILocation(line: 364, column: 41, scope: !12606)
!12610 = !DILocation(line: 364, column: 12, scope: !12607)
!12611 = distinct !{!12611, !12602, !12612}
!12612 = !DILocation(line: 368, column: 7, scope: !12600)
!12613 = !DILocation(line: 373, column: 7, scope: !12614)
!12614 = distinct !DILexicalBlock(scope: !12595, file: !12421, line: 371, column: 5)
!12615 = !DILocation(line: 376, column: 19, scope: !12614)
!12616 = !DILocation(line: 379, column: 7, scope: !12614)
!12617 = !DILocation(line: 379, column: 13, scope: !12614)
!12618 = !DILocation(line: 381, column: 13, scope: !12619)
!12619 = distinct !DILexicalBlock(scope: !12620, file: !12421, line: 381, column: 12)
!12620 = distinct !DILexicalBlock(scope: !12614, file: !12421, line: 380, column: 7)
!12621 = !DILocation(line: 381, column: 27, scope: !12619)
!12622 = !DILocation(line: 381, column: 41, scope: !12619)
!12623 = !DILocation(line: 381, column: 12, scope: !12620)
!12624 = distinct !{!12624, !12616, !12625}
!12625 = !DILocation(line: 385, column: 7, scope: !12614)
!12626 = !DILocation(line: 389, column: 27, scope: !12457)
!12627 = !DILocation(line: 389, column: 43, scope: !12457)
!12628 = !DILocation(line: 389, column: 69, scope: !12457)
!12629 = !DILocation(line: 389, column: 6, scope: !12426)
!12630 = !DILocation(line: 0, scope: !12456)
!12631 = !DILocation(line: 398, column: 8, scope: !12462)
!12632 = !DILocation(line: 398, column: 8, scope: !12456)
!12633 = !DILocation(line: 400, column: 7, scope: !12460)
!12634 = !DILocation(line: 400, column: 7, scope: !12461)
!12635 = !DILocation(line: 402, column: 5, scope: !12461)
!12636 = !DILocation(line: 404, column: 8, scope: !12637)
!12637 = distinct !DILexicalBlock(scope: !12456, file: !12421, line: 404, column: 8)
!12638 = !DILocation(line: 404, column: 8, scope: !12456)
!12639 = !DILocation(line: 407, column: 7, scope: !12640)
!12640 = distinct !DILexicalBlock(scope: !12637, file: !12421, line: 405, column: 5)
!12641 = !DILocation(line: 410, column: 19, scope: !12640)
!12642 = !DILocation(line: 412, column: 7, scope: !12640)
!12643 = !DILocation(line: 412, column: 13, scope: !12640)
!12644 = !DILocation(line: 414, column: 13, scope: !12645)
!12645 = distinct !DILexicalBlock(scope: !12646, file: !12421, line: 414, column: 12)
!12646 = distinct !DILexicalBlock(scope: !12640, file: !12421, line: 413, column: 7)
!12647 = !DILocation(line: 414, column: 27, scope: !12645)
!12648 = !DILocation(line: 414, column: 40, scope: !12645)
!12649 = !DILocation(line: 414, column: 12, scope: !12646)
!12650 = distinct !{!12650, !12642, !12651}
!12651 = !DILocation(line: 418, column: 7, scope: !12640)
!12652 = !DILocation(line: 422, column: 5, scope: !12653)
!12653 = distinct !DILexicalBlock(scope: !12654, file: !12421, line: 422, column: 5)
!12654 = distinct !DILexicalBlock(scope: !12456, file: !12421, line: 422, column: 5)
!12655 = !DILocation(line: 422, column: 5, scope: !12654)
!12656 = !DILocation(line: 422, column: 5, scope: !12657)
!12657 = distinct !DILexicalBlock(scope: !12653, file: !12421, line: 422, column: 5)
!12658 = !DILocation(line: 422, column: 5, scope: !12659)
!12659 = distinct !DILexicalBlock(scope: !12660, file: !12421, line: 422, column: 5)
!12660 = distinct !DILexicalBlock(scope: !12653, file: !12421, line: 422, column: 5)
!12661 = !DILocation(line: 422, column: 5, scope: !12662)
!12662 = distinct !DILexicalBlock(scope: !12660, file: !12421, line: 422, column: 5)
!12663 = !DILocation(line: 0, scope: !12653)
!12664 = !DILocation(line: 424, column: 28, scope: !12665)
!12665 = distinct !DILexicalBlock(scope: !12456, file: !12421, line: 424, column: 8)
!12666 = !DILocation(line: 424, column: 38, scope: !12665)
!12667 = !DILocation(line: 0, scope: !12665)
!12668 = !DILocation(line: 424, column: 8, scope: !12456)
!12669 = !DILocation(line: 430, column: 13, scope: !12670)
!12670 = distinct !DILexicalBlock(scope: !12665, file: !12421, line: 425, column: 5)
!12671 = !DILocation(line: 430, column: 49, scope: !12670)
!12672 = !DILocation(line: 430, column: 7, scope: !12670)
!12673 = !DILocation(line: 432, column: 13, scope: !12674)
!12674 = distinct !DILexicalBlock(scope: !12675, file: !12421, line: 432, column: 12)
!12675 = distinct !DILexicalBlock(scope: !12670, file: !12421, line: 431, column: 7)
!12676 = !DILocation(line: 432, column: 27, scope: !12674)
!12677 = !DILocation(line: 432, column: 41, scope: !12674)
!12678 = !DILocation(line: 432, column: 12, scope: !12675)
!12679 = distinct !{!12679, !12672, !12680}
!12680 = !DILocation(line: 436, column: 7, scope: !12670)
!12681 = !DILocation(line: 444, column: 13, scope: !12682)
!12682 = distinct !DILexicalBlock(scope: !12665, file: !12421, line: 439, column: 5)
!12683 = !DILocation(line: 444, column: 7, scope: !12682)
!12684 = !DILocation(line: 446, column: 13, scope: !12685)
!12685 = distinct !DILexicalBlock(scope: !12686, file: !12421, line: 446, column: 12)
!12686 = distinct !DILexicalBlock(scope: !12682, file: !12421, line: 445, column: 7)
!12687 = !DILocation(line: 446, column: 27, scope: !12685)
!12688 = !DILocation(line: 446, column: 41, scope: !12685)
!12689 = !DILocation(line: 446, column: 12, scope: !12686)
!12690 = distinct !{!12690, !12683, !12691}
!12691 = !DILocation(line: 450, column: 7, scope: !12682)
!12692 = !DILocation(line: 454, column: 8, scope: !12456)
!12693 = !DILocation(line: 456, column: 7, scope: !12694)
!12694 = distinct !DILexicalBlock(scope: !12695, file: !12421, line: 455, column: 5)
!12695 = distinct !DILexicalBlock(scope: !12456, file: !12421, line: 454, column: 8)
!12696 = !DILocation(line: 457, column: 5, scope: !12694)
!12697 = !DILocation(line: 462, column: 31, scope: !12698)
!12698 = distinct !DILexicalBlock(scope: !12426, file: !12421, line: 462, column: 7)
!12699 = !DILocation(line: 462, column: 41, scope: !12698)
!12700 = !DILocation(line: 462, column: 7, scope: !12426)
!12701 = !DILocation(line: 465, column: 8, scope: !12702)
!12702 = distinct !DILexicalBlock(scope: !12703, file: !12421, line: 465, column: 8)
!12703 = distinct !DILexicalBlock(scope: !12698, file: !12421, line: 463, column: 3)
!12704 = !DILocation(line: 465, column: 38, scope: !12702)
!12705 = !DILocation(line: 465, column: 8, scope: !12703)
!12706 = !DILocation(line: 467, column: 44, scope: !12707)
!12707 = distinct !DILexicalBlock(scope: !12708, file: !12421, line: 467, column: 10)
!12708 = distinct !DILexicalBlock(scope: !12702, file: !12421, line: 466, column: 5)
!12709 = !DILocation(line: 0, scope: !12707)
!12710 = !DILocation(line: 467, column: 10, scope: !12708)
!12711 = !DILocation(line: 483, column: 15, scope: !12712)
!12712 = distinct !DILexicalBlock(scope: !12707, file: !12421, line: 468, column: 7)
!12713 = !DILocation(line: 483, column: 9, scope: !12712)
!12714 = !DILocation(line: 485, column: 15, scope: !12715)
!12715 = distinct !DILexicalBlock(scope: !12716, file: !12421, line: 485, column: 14)
!12716 = distinct !DILexicalBlock(scope: !12712, file: !12421, line: 484, column: 9)
!12717 = !DILocation(line: 485, column: 29, scope: !12715)
!12718 = !DILocation(line: 485, column: 43, scope: !12715)
!12719 = !DILocation(line: 485, column: 14, scope: !12716)
!12720 = distinct !{!12720, !12713, !12721}
!12721 = !DILocation(line: 489, column: 9, scope: !12712)
!12722 = !DILocation(line: 492, column: 9, scope: !12712)
!12723 = !DILocation(line: 498, column: 9, scope: !12712)
!12724 = !DILocation(line: 501, column: 21, scope: !12712)
!12725 = !DILocation(line: 504, column: 9, scope: !12712)
!12726 = !DILocation(line: 504, column: 15, scope: !12712)
!12727 = !DILocation(line: 504, column: 51, scope: !12712)
!12728 = !DILocation(line: 506, column: 15, scope: !12729)
!12729 = distinct !DILexicalBlock(scope: !12730, file: !12421, line: 506, column: 14)
!12730 = distinct !DILexicalBlock(scope: !12712, file: !12421, line: 505, column: 9)
!12731 = !DILocation(line: 506, column: 29, scope: !12729)
!12732 = !DILocation(line: 506, column: 43, scope: !12729)
!12733 = !DILocation(line: 506, column: 14, scope: !12730)
!12734 = distinct !{!12734, !12725, !12735}
!12735 = !DILocation(line: 510, column: 9, scope: !12712)
!12736 = !DILocation(line: 521, column: 15, scope: !12737)
!12737 = distinct !DILexicalBlock(scope: !12707, file: !12421, line: 513, column: 7)
!12738 = !DILocation(line: 521, column: 9, scope: !12737)
!12739 = !DILocation(line: 523, column: 15, scope: !12740)
!12740 = distinct !DILexicalBlock(scope: !12741, file: !12421, line: 523, column: 14)
!12741 = distinct !DILexicalBlock(scope: !12737, file: !12421, line: 522, column: 9)
!12742 = !DILocation(line: 523, column: 29, scope: !12740)
!12743 = !DILocation(line: 523, column: 43, scope: !12740)
!12744 = !DILocation(line: 523, column: 14, scope: !12741)
!12745 = distinct !{!12745, !12738, !12746}
!12746 = !DILocation(line: 527, column: 9, scope: !12737)
!12747 = !DILocation(line: 533, column: 44, scope: !12748)
!12748 = distinct !DILexicalBlock(scope: !12749, file: !12421, line: 533, column: 10)
!12749 = distinct !DILexicalBlock(scope: !12702, file: !12421, line: 531, column: 5)
!12750 = !DILocation(line: 533, column: 10, scope: !12749)
!12751 = !DILocation(line: 540, column: 27, scope: !12752)
!12752 = distinct !DILexicalBlock(scope: !12748, file: !12421, line: 538, column: 7)
!12753 = !DILocation(line: 551, column: 14, scope: !12754)
!12754 = distinct !DILexicalBlock(scope: !12752, file: !12421, line: 550, column: 13)
!12755 = !DILocation(line: 551, column: 81, scope: !12754)
!12756 = !DILocation(line: 551, column: 55, scope: !12754)
!12757 = !DILocation(line: 551, column: 92, scope: !12754)
!12758 = !DILocation(line: 552, column: 14, scope: !12754)
!12759 = !DILocation(line: 552, column: 80, scope: !12754)
!12760 = !DILocation(line: 552, column: 53, scope: !12754)
!12761 = !DILocation(line: 552, column: 111, scope: !12754)
!12762 = !DILocation(line: 553, column: 14, scope: !12754)
!12763 = !DILocation(line: 553, column: 80, scope: !12754)
!12764 = !DILocation(line: 553, column: 86, scope: !12754)
!12765 = !DILocation(line: 553, column: 53, scope: !12754)
!12766 = !DILocation(line: 553, column: 111, scope: !12754)
!12767 = !DILocation(line: 554, column: 14, scope: !12754)
!12768 = !DILocation(line: 554, column: 82, scope: !12754)
!12769 = !DILocation(line: 554, column: 101, scope: !12754)
!12770 = !DILocation(line: 554, column: 53, scope: !12754)
!12771 = !DILocation(line: 554, column: 126, scope: !12754)
!12772 = !DILocation(line: 555, column: 14, scope: !12754)
!12773 = !DILocation(line: 555, column: 80, scope: !12754)
!12774 = !DILocation(line: 555, column: 85, scope: !12754)
!12775 = !DILocation(line: 555, column: 53, scope: !12754)
!12776 = !DILocation(line: 550, column: 13, scope: !12752)
!12777 = !DILocation(line: 563, column: 3, scope: !12426)
!12778 = !DILocation(line: 564, column: 1, scope: !12426)
!12779 = !DISubprogram(name: "HAL_GetTick", scope: !12780, file: !12780, line: 234, type: !7282, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !437)
!12780 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12781 = distinct !DISubprogram(name: "HAL_RCC_ClockConfig", scope: !12421, file: !12421, line: 591, type: !12782, scopeLine: 592, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3360, retainedNodes: !12793)
!12782 = !DISubroutineType(types: !12783)
!12783 = !{!12424, !12784, !113}
!12784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12785, size: 32)
!12785 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_ClkInitTypeDef", file: !12431, line: 92, baseType: !12786)
!12786 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12431, line: 75, size: 160, elements: !12787)
!12787 = !{!12788, !12789, !12790, !12791, !12792}
!12788 = !DIDerivedType(tag: DW_TAG_member, name: "ClockType", scope: !12786, file: !12431, line: 77, baseType: !113, size: 32)
!12789 = !DIDerivedType(tag: DW_TAG_member, name: "SYSCLKSource", scope: !12786, file: !12431, line: 80, baseType: !113, size: 32, offset: 32)
!12790 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !12786, file: !12431, line: 83, baseType: !113, size: 32, offset: 64)
!12791 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !12786, file: !12431, line: 86, baseType: !113, size: 32, offset: 96)
!12792 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !12786, file: !12431, line: 89, baseType: !113, size: 32, offset: 128)
!12793 = !{!12794, !12795, !12796}
!12794 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !12781, file: !12421, line: 591, type: !12784)
!12795 = !DILocalVariable(name: "FLatency", arg: 2, scope: !12781, file: !12421, line: 591, type: !113)
!12796 = !DILocalVariable(name: "tickstart", scope: !12781, file: !12421, line: 593, type: !113)
!12797 = !DILocation(line: 0, scope: !12781)
!12798 = !DILocation(line: 596, column: 24, scope: !12799)
!12799 = distinct !DILexicalBlock(scope: !12781, file: !12421, line: 596, column: 6)
!12800 = !DILocation(line: 596, column: 6, scope: !12781)
!12801 = !DILocation(line: 610, column: 17, scope: !12802)
!12802 = distinct !DILexicalBlock(scope: !12781, file: !12421, line: 610, column: 6)
!12803 = !DILocation(line: 610, column: 15, scope: !12802)
!12804 = !DILocation(line: 610, column: 6, scope: !12781)
!12805 = !DILocation(line: 613, column: 5, scope: !12806)
!12806 = distinct !DILexicalBlock(scope: !12802, file: !12421, line: 611, column: 3)
!12807 = !DILocation(line: 617, column: 8, scope: !12808)
!12808 = distinct !DILexicalBlock(scope: !12806, file: !12421, line: 617, column: 8)
!12809 = !DILocation(line: 617, column: 34, scope: !12808)
!12810 = !DILocation(line: 617, column: 8, scope: !12806)
!12811 = !DILocation(line: 624, column: 27, scope: !12812)
!12812 = distinct !DILexicalBlock(scope: !12781, file: !12421, line: 624, column: 6)
!12813 = !DILocation(line: 624, column: 38, scope: !12812)
!12814 = !DILocation(line: 624, column: 60, scope: !12812)
!12815 = !DILocation(line: 624, column: 6, scope: !12781)
!12816 = !DILocation(line: 628, column: 40, scope: !12817)
!12817 = distinct !DILexicalBlock(scope: !12818, file: !12421, line: 628, column: 8)
!12818 = distinct !DILexicalBlock(scope: !12812, file: !12421, line: 625, column: 3)
!12819 = !DILocation(line: 628, column: 63, scope: !12817)
!12820 = !DILocation(line: 628, column: 8, scope: !12818)
!12821 = !DILocation(line: 630, column: 7, scope: !12822)
!12822 = distinct !DILexicalBlock(scope: !12817, file: !12421, line: 629, column: 5)
!12823 = !DILocation(line: 633, column: 29, scope: !12824)
!12824 = distinct !DILexicalBlock(scope: !12818, file: !12421, line: 633, column: 8)
!12825 = !DILocation(line: 631, column: 5, scope: !12822)
!12826 = !DILocation(line: 633, column: 40, scope: !12824)
!12827 = !DILocation(line: 633, column: 63, scope: !12824)
!12828 = !DILocation(line: 633, column: 8, scope: !12818)
!12829 = !DILocation(line: 635, column: 7, scope: !12830)
!12830 = distinct !DILexicalBlock(scope: !12824, file: !12421, line: 634, column: 5)
!12831 = !DILocation(line: 636, column: 5, scope: !12830)
!12832 = !DILocation(line: 639, column: 5, scope: !12818)
!12833 = !DILocation(line: 643, column: 27, scope: !12834)
!12834 = distinct !DILexicalBlock(scope: !12781, file: !12421, line: 643, column: 6)
!12835 = !DILocation(line: 640, column: 3, scope: !12818)
!12836 = !DILocation(line: 643, column: 38, scope: !12834)
!12837 = !DILocation(line: 643, column: 62, scope: !12834)
!12838 = !DILocation(line: 643, column: 6, scope: !12781)
!12839 = !DILocation(line: 648, column: 27, scope: !12840)
!12840 = distinct !DILexicalBlock(scope: !12841, file: !12421, line: 648, column: 8)
!12841 = distinct !DILexicalBlock(scope: !12834, file: !12421, line: 644, column: 3)
!12842 = !DILocation(line: 648, column: 8, scope: !12841)
!12843 = !DILocation(line: 651, column: 10, scope: !12844)
!12844 = distinct !DILexicalBlock(scope: !12845, file: !12421, line: 651, column: 10)
!12845 = distinct !DILexicalBlock(scope: !12840, file: !12421, line: 649, column: 5)
!12846 = !DILocation(line: 651, column: 46, scope: !12844)
!12847 = !DILocation(line: 651, column: 10, scope: !12845)
!12848 = !DILocation(line: 661, column: 10, scope: !12849)
!12849 = distinct !DILexicalBlock(scope: !12850, file: !12421, line: 661, column: 10)
!12850 = distinct !DILexicalBlock(scope: !12851, file: !12421, line: 659, column: 5)
!12851 = distinct !DILexicalBlock(scope: !12840, file: !12421, line: 657, column: 13)
!12852 = !DILocation(line: 661, column: 46, scope: !12849)
!12853 = !DILocation(line: 661, column: 10, scope: !12850)
!12854 = !DILocation(line: 670, column: 10, scope: !12855)
!12855 = distinct !DILexicalBlock(scope: !12856, file: !12421, line: 670, column: 10)
!12856 = distinct !DILexicalBlock(scope: !12851, file: !12421, line: 668, column: 5)
!12857 = !DILocation(line: 670, column: 46, scope: !12855)
!12858 = !DILocation(line: 670, column: 10, scope: !12856)
!12859 = !DILocation(line: 676, column: 5, scope: !12841)
!12860 = !DILocation(line: 679, column: 17, scope: !12841)
!12861 = !DILocation(line: 681, column: 5, scope: !12841)
!12862 = !DILocation(line: 681, column: 12, scope: !12841)
!12863 = !DILocation(line: 681, column: 65, scope: !12841)
!12864 = !DILocation(line: 681, column: 78, scope: !12841)
!12865 = !DILocation(line: 681, column: 42, scope: !12841)
!12866 = !DILocation(line: 683, column: 12, scope: !12867)
!12867 = distinct !DILexicalBlock(scope: !12868, file: !12421, line: 683, column: 11)
!12868 = distinct !DILexicalBlock(scope: !12841, file: !12421, line: 682, column: 5)
!12869 = !DILocation(line: 683, column: 26, scope: !12867)
!12870 = !DILocation(line: 683, column: 39, scope: !12867)
!12871 = !DILocation(line: 683, column: 11, scope: !12868)
!12872 = distinct !{!12872, !12861, !12873}
!12873 = !DILocation(line: 687, column: 5, scope: !12841)
!12874 = !DILocation(line: 691, column: 17, scope: !12875)
!12875 = distinct !DILexicalBlock(scope: !12781, file: !12421, line: 691, column: 6)
!12876 = !DILocation(line: 691, column: 15, scope: !12875)
!12877 = !DILocation(line: 691, column: 6, scope: !12781)
!12878 = !DILocation(line: 694, column: 5, scope: !12879)
!12879 = distinct !DILexicalBlock(scope: !12875, file: !12421, line: 692, column: 3)
!12880 = !DILocation(line: 698, column: 8, scope: !12881)
!12881 = distinct !DILexicalBlock(scope: !12879, file: !12421, line: 698, column: 8)
!12882 = !DILocation(line: 698, column: 34, scope: !12881)
!12883 = !DILocation(line: 698, column: 8, scope: !12879)
!12884 = !DILocation(line: 705, column: 27, scope: !12885)
!12885 = distinct !DILexicalBlock(scope: !12781, file: !12421, line: 705, column: 6)
!12886 = !DILocation(line: 705, column: 38, scope: !12885)
!12887 = !DILocation(line: 705, column: 61, scope: !12885)
!12888 = !DILocation(line: 705, column: 6, scope: !12781)
!12889 = !DILocation(line: 708, column: 5, scope: !12890)
!12890 = distinct !DILexicalBlock(scope: !12885, file: !12421, line: 706, column: 3)
!12891 = !DILocation(line: 712, column: 27, scope: !12892)
!12892 = distinct !DILexicalBlock(scope: !12781, file: !12421, line: 712, column: 6)
!12893 = !DILocation(line: 709, column: 3, scope: !12890)
!12894 = !DILocation(line: 712, column: 38, scope: !12892)
!12895 = !DILocation(line: 712, column: 61, scope: !12892)
!12896 = !DILocation(line: 712, column: 6, scope: !12781)
!12897 = !DILocation(line: 715, column: 5, scope: !12898)
!12898 = distinct !DILexicalBlock(scope: !12892, file: !12421, line: 713, column: 3)
!12899 = !DILocation(line: 716, column: 3, scope: !12898)
!12900 = !DILocation(line: 719, column: 21, scope: !12781)
!12901 = !DILocation(line: 719, column: 70, scope: !12781)
!12902 = !DILocation(line: 719, column: 91, scope: !12781)
!12903 = !DILocation(line: 719, column: 50, scope: !12781)
!12904 = !DILocation(line: 719, column: 47, scope: !12781)
!12905 = !DILocation(line: 719, column: 19, scope: !12781)
!12906 = !DILocation(line: 722, column: 17, scope: !12781)
!12907 = !DILocation(line: 722, column: 3, scope: !12781)
!12908 = !DILocation(line: 724, column: 3, scope: !12781)
!12909 = !DILocation(line: 725, column: 1, scope: !12781)
!12910 = distinct !DISubprogram(name: "HAL_RCC_GetSysClockFreq", scope: !12421, file: !12421, line: 885, type: !7282, scopeLine: 886, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3360, retainedNodes: !12911)
!12911 = !{!12912, !12913, !12914, !12915}
!12912 = !DILocalVariable(name: "pllm", scope: !12910, file: !12421, line: 887, type: !113)
!12913 = !DILocalVariable(name: "pllvco", scope: !12910, file: !12421, line: 887, type: !113)
!12914 = !DILocalVariable(name: "pllp", scope: !12910, file: !12421, line: 887, type: !113)
!12915 = !DILocalVariable(name: "sysclockfreq", scope: !12910, file: !12421, line: 888, type: !113)
!12916 = !DILocation(line: 0, scope: !12910)
!12917 = !DILocation(line: 891, column: 16, scope: !12910)
!12918 = !DILocation(line: 891, column: 21, scope: !12910)
!12919 = !DILocation(line: 891, column: 3, scope: !12910)
!12920 = !DILocation(line: 901, column: 7, scope: !12921)
!12921 = distinct !DILexicalBlock(scope: !12922, file: !12421, line: 899, column: 5)
!12922 = distinct !DILexicalBlock(scope: !12910, file: !12421, line: 892, column: 3)
!12923 = !DILocation(line: 907, column: 19, scope: !12924)
!12924 = distinct !DILexicalBlock(scope: !12922, file: !12421, line: 904, column: 5)
!12925 = !DILocation(line: 907, column: 27, scope: !12924)
!12926 = !DILocation(line: 908, column: 10, scope: !12927)
!12927 = distinct !DILexicalBlock(scope: !12924, file: !12421, line: 908, column: 10)
!12928 = !DILocation(line: 908, column: 40, scope: !12927)
!12929 = !DILocation(line: 0, scope: !12927)
!12930 = !DILocation(line: 918, column: 23, scope: !12924)
!12931 = !DILocation(line: 918, column: 82, scope: !12924)
!12932 = !DILocation(line: 920, column: 28, scope: !12924)
!12933 = !DILocation(line: 921, column: 7, scope: !12924)
!12934 = !DILocation(line: 0, scope: !12922)
!12935 = !DILocation(line: 929, column: 3, scope: !12910)
!12936 = !DISubprogram(name: "HAL_InitTick", scope: !12780, file: !12780, line: 223, type: !12937, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !437)
!12937 = !DISubroutineType(types: !12938)
!12938 = !{!12424, !113}
!12939 = distinct !DISubprogram(name: "HAL_RCC_MCOConfig", scope: !12421, file: !12421, line: 775, type: !12940, scopeLine: 776, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3360, retainedNodes: !12942)
!12940 = !DISubroutineType(types: !12941)
!12941 = !{null, !113, !113, !113}
!12942 = !{!12943, !12944, !12945, !12946, !12956, !12960}
!12943 = !DILocalVariable(name: "RCC_MCOx", arg: 1, scope: !12939, file: !12421, line: 775, type: !113)
!12944 = !DILocalVariable(name: "RCC_MCOSource", arg: 2, scope: !12939, file: !12421, line: 775, type: !113)
!12945 = !DILocalVariable(name: "RCC_MCODiv", arg: 3, scope: !12939, file: !12421, line: 775, type: !113)
!12946 = !DILocalVariable(name: "GPIO_InitStruct", scope: !12939, file: !12421, line: 777, type: !12947)
!12947 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_InitTypeDef", file: !12948, line: 62, baseType: !12949)
!12948 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12949 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12948, line: 46, size: 160, elements: !12950)
!12950 = !{!12951, !12952, !12953, !12954, !12955}
!12951 = !DIDerivedType(tag: DW_TAG_member, name: "Pin", scope: !12949, file: !12948, line: 48, baseType: !113, size: 32)
!12952 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", scope: !12949, file: !12948, line: 51, baseType: !113, size: 32, offset: 32)
!12953 = !DIDerivedType(tag: DW_TAG_member, name: "Pull", scope: !12949, file: !12948, line: 54, baseType: !113, size: 32, offset: 64)
!12954 = !DIDerivedType(tag: DW_TAG_member, name: "Speed", scope: !12949, file: !12948, line: 57, baseType: !113, size: 32, offset: 96)
!12955 = !DIDerivedType(tag: DW_TAG_member, name: "Alternate", scope: !12949, file: !12948, line: 60, baseType: !113, size: 32, offset: 128)
!12956 = !DILocalVariable(name: "tmpreg", scope: !12957, file: !12421, line: 787, type: !584)
!12957 = distinct !DILexicalBlock(scope: !12958, file: !12421, line: 787, column: 5)
!12958 = distinct !DILexicalBlock(scope: !12959, file: !12421, line: 783, column: 3)
!12959 = distinct !DILexicalBlock(scope: !12939, file: !12421, line: 782, column: 6)
!12960 = !DILocalVariable(name: "tmpreg", scope: !12961, file: !12421, line: 811, type: !584)
!12961 = distinct !DILexicalBlock(scope: !12962, file: !12421, line: 811, column: 5)
!12962 = distinct !DILexicalBlock(scope: !12959, file: !12421, line: 807, column: 3)
!12963 = !DILocation(line: 0, scope: !12939)
!12964 = !DILocation(line: 777, column: 3, scope: !12939)
!12965 = !DILocation(line: 777, column: 20, scope: !12939)
!12966 = !DILocation(line: 782, column: 15, scope: !12959)
!12967 = !DILocation(line: 782, column: 6, scope: !12939)
!12968 = !DILocation(line: 787, column: 5, scope: !12957)
!12969 = !DILocation(line: 787, column: 5, scope: !12958)
!12970 = !DILocation(line: 790, column: 21, scope: !12958)
!12971 = !DILocation(line: 790, column: 25, scope: !12958)
!12972 = !DILocation(line: 791, column: 21, scope: !12958)
!12973 = !DILocation(line: 791, column: 26, scope: !12958)
!12974 = !DILocation(line: 792, column: 21, scope: !12958)
!12975 = !DILocation(line: 792, column: 27, scope: !12958)
!12976 = !DILocation(line: 793, column: 21, scope: !12958)
!12977 = !DILocation(line: 793, column: 26, scope: !12958)
!12978 = !DILocation(line: 794, column: 21, scope: !12958)
!12979 = !DILocation(line: 794, column: 31, scope: !12958)
!12980 = !DILocation(line: 795, column: 5, scope: !12958)
!12981 = !DILocation(line: 798, column: 5, scope: !12958)
!12982 = !DILocation(line: 804, column: 3, scope: !12958)
!12983 = !DILocation(line: 811, column: 5, scope: !12961)
!12984 = !DILocation(line: 811, column: 5, scope: !12962)
!12985 = !DILocation(line: 814, column: 21, scope: !12962)
!12986 = !DILocation(line: 814, column: 25, scope: !12962)
!12987 = !DILocation(line: 815, column: 21, scope: !12962)
!12988 = !DILocation(line: 815, column: 26, scope: !12962)
!12989 = !DILocation(line: 816, column: 21, scope: !12962)
!12990 = !DILocation(line: 816, column: 27, scope: !12962)
!12991 = !DILocation(line: 817, column: 21, scope: !12962)
!12992 = !DILocation(line: 817, column: 26, scope: !12962)
!12993 = !DILocation(line: 818, column: 21, scope: !12962)
!12994 = !DILocation(line: 818, column: 31, scope: !12962)
!12995 = !DILocation(line: 819, column: 5, scope: !12962)
!12996 = !DILocation(line: 822, column: 5, scope: !12962)
!12997 = !DILocation(line: 0, scope: !12959)
!12998 = !DILocation(line: 830, column: 1, scope: !12939)
!12999 = !DISubprogram(name: "HAL_GPIO_Init", scope: !12948, file: !12948, line: 224, type: !13000, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !437)
!13000 = !DISubroutineType(types: !13001)
!13001 = !{null, !3433, !13002}
!13002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12947, size: 32)
!13003 = distinct !DISubprogram(name: "HAL_RCC_EnableCSS", scope: !12421, file: !12421, line: 841, type: !3551, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3360, retainedNodes: !437)
!13004 = !DILocation(line: 843, column: 38, scope: !13003)
!13005 = !DILocation(line: 844, column: 1, scope: !13003)
!13006 = distinct !DISubprogram(name: "HAL_RCC_DisableCSS", scope: !12421, file: !12421, line: 850, type: !3551, scopeLine: 851, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3360, retainedNodes: !437)
!13007 = !DILocation(line: 852, column: 38, scope: !13006)
!13008 = !DILocation(line: 853, column: 1, scope: !13006)
!13009 = distinct !DISubprogram(name: "HAL_RCC_GetHCLKFreq", scope: !12421, file: !12421, line: 941, type: !7282, scopeLine: 942, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3360, retainedNodes: !437)
!13010 = !DILocation(line: 943, column: 10, scope: !13009)
!13011 = !DILocation(line: 943, column: 3, scope: !13009)
!13012 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK1Freq", scope: !12421, file: !12421, line: 952, type: !7282, scopeLine: 953, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3360, retainedNodes: !437)
!13013 = !DILocation(line: 955, column: 11, scope: !13012)
!13014 = !DILocation(line: 955, column: 56, scope: !13012)
!13015 = !DILocation(line: 955, column: 78, scope: !13012)
!13016 = !DILocation(line: 955, column: 36, scope: !13012)
!13017 = !DILocation(line: 955, column: 33, scope: !13012)
!13018 = !DILocation(line: 955, column: 3, scope: !13012)
!13019 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK2Freq", scope: !12421, file: !12421, line: 964, type: !7282, scopeLine: 965, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3360, retainedNodes: !437)
!13020 = !DILocation(line: 967, column: 11, scope: !13019)
!13021 = !DILocation(line: 967, column: 55, scope: !13019)
!13022 = !DILocation(line: 967, column: 77, scope: !13019)
!13023 = !DILocation(line: 967, column: 35, scope: !13019)
!13024 = !DILocation(line: 967, column: 32, scope: !13019)
!13025 = !DILocation(line: 967, column: 3, scope: !13019)
!13026 = distinct !DISubprogram(name: "HAL_RCC_GetOscConfig", scope: !12421, file: !12421, line: 977, type: !13027, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3360, retainedNodes: !13029)
!13027 = !DISubroutineType(types: !13028)
!13028 = !{null, !12429}
!13029 = !{!13030}
!13030 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !13026, file: !12421, line: 977, type: !12429)
!13031 = !DILocation(line: 0, scope: !13026)
!13032 = !DILocation(line: 980, column: 22, scope: !13026)
!13033 = !DILocation(line: 980, column: 37, scope: !13026)
!13034 = !DILocation(line: 983, column: 12, scope: !13035)
!13035 = distinct !DILexicalBlock(scope: !13026, file: !12421, line: 983, column: 6)
!13036 = !DILocation(line: 983, column: 15, scope: !13035)
!13037 = !DILocation(line: 983, column: 31, scope: !13035)
!13038 = !DILocation(line: 983, column: 6, scope: !13026)
!13039 = !DILocation(line: 985, column: 24, scope: !13040)
!13040 = distinct !DILexicalBlock(scope: !13035, file: !12421, line: 984, column: 3)
!13041 = !DILocation(line: 985, column: 33, scope: !13040)
!13042 = !DILocation(line: 986, column: 3, scope: !13040)
!13043 = !DILocation(line: 987, column: 17, scope: !13044)
!13044 = distinct !DILexicalBlock(scope: !13035, file: !12421, line: 987, column: 11)
!13045 = !DILocation(line: 987, column: 20, scope: !13044)
!13046 = !DILocation(line: 987, column: 35, scope: !13044)
!13047 = !DILocation(line: 0, scope: !13044)
!13048 = !DILocation(line: 987, column: 11, scope: !13035)
!13049 = !DILocation(line: 989, column: 33, scope: !13050)
!13050 = distinct !DILexicalBlock(scope: !13044, file: !12421, line: 988, column: 3)
!13051 = !DILocation(line: 990, column: 3, scope: !13050)
!13052 = !DILocation(line: 993, column: 33, scope: !13053)
!13053 = distinct !DILexicalBlock(scope: !13044, file: !12421, line: 992, column: 3)
!13054 = !DILocation(line: 997, column: 12, scope: !13055)
!13055 = distinct !DILexicalBlock(scope: !13026, file: !12421, line: 997, column: 6)
!13056 = !DILocation(line: 997, column: 15, scope: !13055)
!13057 = !DILocation(line: 1003, column: 24, scope: !13058)
!13058 = distinct !DILexicalBlock(scope: !13055, file: !12421, line: 1002, column: 3)
!13059 = !DILocation(line: 1003, column: 33, scope: !13058)
!13060 = !DILocation(line: 1006, column: 61, scope: !13026)
!13061 = !DILocation(line: 1006, column: 81, scope: !13026)
!13062 = !DILocation(line: 1006, column: 22, scope: !13026)
!13063 = !DILocation(line: 1006, column: 42, scope: !13026)
!13064 = !DILocation(line: 1009, column: 12, scope: !13065)
!13065 = distinct !DILexicalBlock(scope: !13026, file: !12421, line: 1009, column: 6)
!13066 = !DILocation(line: 1009, column: 17, scope: !13065)
!13067 = !DILocation(line: 1009, column: 35, scope: !13065)
!13068 = !DILocation(line: 1009, column: 6, scope: !13026)
!13069 = !DILocation(line: 1011, column: 24, scope: !13070)
!13070 = distinct !DILexicalBlock(scope: !13065, file: !12421, line: 1010, column: 3)
!13071 = !DILocation(line: 1011, column: 33, scope: !13070)
!13072 = !DILocation(line: 1012, column: 3, scope: !13070)
!13073 = !DILocation(line: 1013, column: 17, scope: !13074)
!13074 = distinct !DILexicalBlock(scope: !13065, file: !12421, line: 1013, column: 11)
!13075 = !DILocation(line: 1013, column: 22, scope: !13074)
!13076 = !DILocation(line: 1013, column: 39, scope: !13074)
!13077 = !DILocation(line: 0, scope: !13074)
!13078 = !DILocation(line: 1013, column: 11, scope: !13065)
!13079 = !DILocation(line: 1015, column: 33, scope: !13080)
!13080 = distinct !DILexicalBlock(scope: !13074, file: !12421, line: 1014, column: 3)
!13081 = !DILocation(line: 1016, column: 3, scope: !13080)
!13082 = !DILocation(line: 1019, column: 33, scope: !13083)
!13083 = distinct !DILexicalBlock(scope: !13074, file: !12421, line: 1018, column: 3)
!13084 = !DILocation(line: 1023, column: 12, scope: !13085)
!13085 = distinct !DILexicalBlock(scope: !13026, file: !12421, line: 1023, column: 6)
!13086 = !DILocation(line: 1023, column: 16, scope: !13085)
!13087 = !DILocation(line: 1029, column: 24, scope: !13088)
!13088 = distinct !DILexicalBlock(scope: !13085, file: !12421, line: 1028, column: 3)
!13089 = !DILocation(line: 1029, column: 33, scope: !13088)
!13090 = !DILocation(line: 1033, column: 12, scope: !13091)
!13091 = distinct !DILexicalBlock(scope: !13026, file: !12421, line: 1033, column: 6)
!13092 = !DILocation(line: 1033, column: 15, scope: !13091)
!13093 = !DILocation(line: 1033, column: 30, scope: !13091)
!13094 = !DILocation(line: 1033, column: 6, scope: !13026)
!13095 = !DILocation(line: 1039, column: 28, scope: !13096)
!13096 = distinct !DILexicalBlock(scope: !13091, file: !12421, line: 1038, column: 3)
!13097 = !DILocation(line: 1039, column: 37, scope: !13096)
!13098 = !DILocation(line: 1041, column: 54, scope: !13026)
!13099 = !DILocation(line: 1041, column: 62, scope: !13026)
!13100 = !DILocation(line: 1041, column: 26, scope: !13026)
!13101 = !DILocation(line: 1041, column: 36, scope: !13026)
!13102 = !DILocation(line: 1042, column: 49, scope: !13026)
!13103 = !DILocation(line: 1042, column: 57, scope: !13026)
!13104 = !DILocation(line: 1042, column: 26, scope: !13026)
!13105 = !DILocation(line: 1042, column: 31, scope: !13026)
!13106 = !DILocation(line: 1043, column: 50, scope: !13026)
!13107 = !DILocation(line: 1043, column: 78, scope: !13026)
!13108 = !DILocation(line: 1043, column: 26, scope: !13026)
!13109 = !DILocation(line: 1043, column: 31, scope: !13026)
!13110 = !DILocation(line: 1044, column: 52, scope: !13026)
!13111 = !DILocation(line: 1044, column: 102, scope: !13026)
!13112 = !DILocation(line: 1044, column: 109, scope: !13026)
!13113 = !DILocation(line: 1044, column: 26, scope: !13026)
!13114 = !DILocation(line: 1044, column: 31, scope: !13026)
!13115 = !DILocation(line: 1045, column: 50, scope: !13026)
!13116 = !DILocation(line: 1045, column: 78, scope: !13026)
!13117 = !DILocation(line: 1045, column: 26, scope: !13026)
!13118 = !DILocation(line: 1045, column: 31, scope: !13026)
!13119 = !DILocation(line: 1046, column: 1, scope: !13026)
!13120 = distinct !DISubprogram(name: "HAL_RCC_GetClockConfig", scope: !12421, file: !12421, line: 1056, type: !13121, scopeLine: 1057, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3360, retainedNodes: !13123)
!13121 = !DISubroutineType(types: !13122)
!13122 = !{null, !12784, !1255}
!13123 = !{!13124, !13125}
!13124 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !13120, file: !12421, line: 1056, type: !12784)
!13125 = !DILocalVariable(name: "pFLatency", arg: 2, scope: !13120, file: !12421, line: 1056, type: !1255)
!13126 = !DILocation(line: 0, scope: !13120)
!13127 = !DILocation(line: 1059, column: 22, scope: !13120)
!13128 = !DILocation(line: 1059, column: 32, scope: !13120)
!13129 = !DILocation(line: 1062, column: 53, scope: !13120)
!13130 = !DILocation(line: 1062, column: 58, scope: !13120)
!13131 = !DILocation(line: 1062, column: 22, scope: !13120)
!13132 = !DILocation(line: 1062, column: 35, scope: !13120)
!13133 = !DILocation(line: 1065, column: 54, scope: !13120)
!13134 = !DILocation(line: 1065, column: 59, scope: !13120)
!13135 = !DILocation(line: 1065, column: 22, scope: !13120)
!13136 = !DILocation(line: 1065, column: 36, scope: !13120)
!13137 = !DILocation(line: 1068, column: 55, scope: !13120)
!13138 = !DILocation(line: 1068, column: 60, scope: !13120)
!13139 = !DILocation(line: 1068, column: 22, scope: !13120)
!13140 = !DILocation(line: 1068, column: 37, scope: !13120)
!13141 = !DILocation(line: 1071, column: 56, scope: !13120)
!13142 = !DILocation(line: 1071, column: 79, scope: !13120)
!13143 = !DILocation(line: 1071, column: 22, scope: !13120)
!13144 = !DILocation(line: 1071, column: 37, scope: !13120)
!13145 = !DILocation(line: 1074, column: 34, scope: !13120)
!13146 = !DILocation(line: 1074, column: 38, scope: !13120)
!13147 = !DILocation(line: 1074, column: 14, scope: !13120)
!13148 = !DILocation(line: 1075, column: 1, scope: !13120)
!13149 = distinct !DISubprogram(name: "HAL_RCC_NMI_IRQHandler", scope: !12421, file: !12421, line: 1082, type: !3551, scopeLine: 1083, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3360, retainedNodes: !437)
!13150 = !DILocation(line: 1085, column: 6, scope: !13151)
!13151 = distinct !DILexicalBlock(scope: !13149, file: !12421, line: 1085, column: 6)
!13152 = !DILocation(line: 1085, column: 6, scope: !13149)
!13153 = !DILocation(line: 1088, column: 5, scope: !13154)
!13154 = distinct !DILexicalBlock(scope: !13151, file: !12421, line: 1086, column: 3)
!13155 = !DILocation(line: 1091, column: 5, scope: !13154)
!13156 = !DILocation(line: 1092, column: 3, scope: !13154)
!13157 = !DILocation(line: 1093, column: 1, scope: !13149)
!13158 = distinct !DISubprogram(name: "HAL_RCC_CSSCallback", scope: !12421, file: !12421, line: 1099, type: !3551, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3360, retainedNodes: !437)
!13159 = !DILocation(line: 1104, column: 1, scope: !13158)
!13160 = distinct !DISubprogram(name: "LL_Init1msTick", scope: !13161, file: !13161, line: 257, type: !7292, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3446, retainedNodes: !13162)
!13161 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13162 = !{!13163}
!13163 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !13160, file: !13161, line: 257, type: !113)
!13164 = !DILocation(line: 0, scope: !13160)
!13165 = !DILocation(line: 260, column: 3, scope: !13160)
!13166 = !DILocation(line: 261, column: 1, scope: !13160)
!13167 = distinct !DISubprogram(name: "LL_InitTick", scope: !13168, file: !13168, line: 260, type: !10818, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3446, retainedNodes: !13169)
!13168 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13169 = !{!13170, !13171}
!13170 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !13167, file: !13168, line: 260, type: !113)
!13171 = !DILocalVariable(name: "Ticks", arg: 2, scope: !13167, file: !13168, line: 260, type: !113)
!13172 = !DILocation(line: 0, scope: !13167)
!13173 = !DILocation(line: 263, column: 46, scope: !13167)
!13174 = !DILocation(line: 263, column: 55, scope: !13167)
!13175 = !DILocation(line: 263, column: 18, scope: !13167)
!13176 = !DILocation(line: 264, column: 18, scope: !13167)
!13177 = !DILocation(line: 265, column: 18, scope: !13167)
!13178 = !DILocation(line: 267, column: 1, scope: !13167)
!13179 = distinct !DISubprogram(name: "LL_mDelay", scope: !13161, file: !13161, line: 273, type: !7292, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3446, retainedNodes: !13180)
!13180 = !{!13181, !13182}
!13181 = !DILocalVariable(name: "Delay", arg: 1, scope: !13179, file: !13161, line: 273, type: !113)
!13182 = !DILocalVariable(name: "tmp", scope: !13179, file: !13161, line: 275, type: !584)
!13183 = !DILocation(line: 0, scope: !13179)
!13184 = !DILocation(line: 275, column: 3, scope: !13179)
!13185 = !DILocation(line: 275, column: 18, scope: !13179)
!13186 = !DILocation(line: 275, column: 33, scope: !13179)
!13187 = !DILocation(line: 277, column: 10, scope: !13179)
!13188 = !DILocation(line: 280, column: 12, scope: !13189)
!13189 = distinct !DILexicalBlock(scope: !13179, file: !13161, line: 280, column: 6)
!13190 = !DILocation(line: 285, column: 3, scope: !13179)
!13191 = !DILocation(line: 287, column: 18, scope: !13192)
!13192 = distinct !DILexicalBlock(scope: !13193, file: !13161, line: 287, column: 8)
!13193 = distinct !DILexicalBlock(scope: !13179, file: !13161, line: 286, column: 3)
!13194 = !DILocation(line: 292, column: 1, scope: !13179)
!13195 = distinct !DISubprogram(name: "LL_SetSystemCoreClock", scope: !13161, file: !13161, line: 323, type: !7292, scopeLine: 324, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3446, retainedNodes: !13196)
!13196 = !{!13197}
!13197 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !13195, file: !13161, line: 323, type: !113)
!13198 = !DILocation(line: 0, scope: !13195)
!13199 = !DILocation(line: 326, column: 19, scope: !13195)
!13200 = !DILocation(line: 327, column: 1, scope: !13195)
!13201 = distinct !DISubprogram(name: "LL_SetFlashLatency", scope: !13161, file: !13161, line: 338, type: !13202, scopeLine: 339, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3446, retainedNodes: !13205)
!13202 = !DISubroutineType(types: !13203)
!13203 = !{!13204, !113}
!13204 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErrorStatus", file: !1200, line: 201, baseType: !1199)
!13205 = !{!13206, !13207, !13208, !13209, !13210}
!13206 = !DILocalVariable(name: "HCLK_Frequency", arg: 1, scope: !13201, file: !13161, line: 338, type: !113)
!13207 = !DILocalVariable(name: "timeout", scope: !13201, file: !13161, line: 340, type: !113)
!13208 = !DILocalVariable(name: "getlatency", scope: !13201, file: !13161, line: 341, type: !113)
!13209 = !DILocalVariable(name: "latency", scope: !13201, file: !13161, line: 342, type: !113)
!13210 = !DILocalVariable(name: "status", scope: !13201, file: !13161, line: 343, type: !13204)
!13211 = !DILocation(line: 0, scope: !13201)
!13212 = !DILocation(line: 347, column: 21, scope: !13213)
!13213 = distinct !DILexicalBlock(scope: !13201, file: !13161, line: 347, column: 6)
!13214 = !DILocation(line: 347, column: 6, scope: !13201)
!13215 = !DILocation(line: 353, column: 8, scope: !13216)
!13216 = distinct !DILexicalBlock(scope: !13217, file: !13161, line: 353, column: 8)
!13217 = distinct !DILexicalBlock(scope: !13213, file: !13161, line: 352, column: 3)
!13218 = !DILocation(line: 353, column: 40, scope: !13216)
!13219 = !DILocation(line: 353, column: 8, scope: !13217)
!13220 = !DILocation(line: 356, column: 26, scope: !13221)
!13221 = distinct !DILexicalBlock(scope: !13222, file: !13161, line: 356, column: 10)
!13222 = distinct !DILexicalBlock(scope: !13216, file: !13161, line: 354, column: 5)
!13223 = !DILocation(line: 356, column: 55, scope: !13221)
!13224 = !DILocation(line: 362, column: 55, scope: !13225)
!13225 = distinct !DILexicalBlock(scope: !13222, file: !13161, line: 362, column: 10)
!13226 = !DILocation(line: 368, column: 55, scope: !13227)
!13227 = distinct !DILexicalBlock(scope: !13222, file: !13161, line: 368, column: 10)
!13228 = !DILocation(line: 374, column: 26, scope: !13229)
!13229 = distinct !DILexicalBlock(scope: !13222, file: !13161, line: 374, column: 10)
!13230 = !DILocation(line: 374, column: 55, scope: !13229)
!13231 = !DILocation(line: 380, column: 28, scope: !13232)
!13232 = distinct !DILexicalBlock(scope: !13233, file: !13161, line: 380, column: 12)
!13233 = distinct !DILexicalBlock(scope: !13229, file: !13161, line: 379, column: 7)
!13234 = !DILocation(line: 380, column: 57, scope: !13232)
!13235 = !DILocation(line: 387, column: 8, scope: !13236)
!13236 = distinct !DILexicalBlock(scope: !13217, file: !13161, line: 387, column: 8)
!13237 = !DILocation(line: 387, column: 40, scope: !13236)
!13238 = !DILocation(line: 387, column: 8, scope: !13217)
!13239 = !DILocation(line: 390, column: 26, scope: !13240)
!13240 = distinct !DILexicalBlock(scope: !13241, file: !13161, line: 390, column: 10)
!13241 = distinct !DILexicalBlock(scope: !13236, file: !13161, line: 388, column: 5)
!13242 = !DILocation(line: 390, column: 55, scope: !13240)
!13243 = !DILocation(line: 396, column: 26, scope: !13244)
!13244 = distinct !DILexicalBlock(scope: !13241, file: !13161, line: 396, column: 10)
!13245 = !DILocation(line: 396, column: 55, scope: !13244)
!13246 = !DILocation(line: 402, column: 26, scope: !13247)
!13247 = distinct !DILexicalBlock(scope: !13241, file: !13161, line: 402, column: 10)
!13248 = !DILocation(line: 402, column: 55, scope: !13247)
!13249 = !DILocation(line: 407, column: 26, scope: !13250)
!13250 = distinct !DILexicalBlock(scope: !13241, file: !13161, line: 407, column: 10)
!13251 = !DILocation(line: 407, column: 55, scope: !13250)
!13252 = !DILocation(line: 413, column: 28, scope: !13253)
!13253 = distinct !DILexicalBlock(scope: !13254, file: !13161, line: 413, column: 12)
!13254 = distinct !DILexicalBlock(scope: !13250, file: !13161, line: 412, column: 7)
!13255 = !DILocation(line: 413, column: 57, scope: !13253)
!13256 = !DILocation(line: 0, scope: !13217)
!13257 = !DILocation(line: 420, column: 8, scope: !13258)
!13258 = distinct !DILexicalBlock(scope: !13217, file: !13161, line: 420, column: 8)
!13259 = !DILocation(line: 420, column: 40, scope: !13258)
!13260 = !DILocation(line: 420, column: 8, scope: !13217)
!13261 = !DILocation(line: 423, column: 26, scope: !13262)
!13262 = distinct !DILexicalBlock(scope: !13263, file: !13161, line: 423, column: 10)
!13263 = distinct !DILexicalBlock(scope: !13258, file: !13161, line: 421, column: 5)
!13264 = !DILocation(line: 423, column: 55, scope: !13262)
!13265 = !DILocation(line: 429, column: 26, scope: !13266)
!13266 = distinct !DILexicalBlock(scope: !13263, file: !13161, line: 429, column: 10)
!13267 = !DILocation(line: 429, column: 55, scope: !13266)
!13268 = !DILocation(line: 435, column: 28, scope: !13269)
!13269 = distinct !DILexicalBlock(scope: !13270, file: !13161, line: 435, column: 12)
!13270 = distinct !DILexicalBlock(scope: !13266, file: !13161, line: 434, column: 7)
!13271 = !DILocation(line: 435, column: 57, scope: !13269)
!13272 = !DILocation(line: 444, column: 5, scope: !13217)
!13273 = !DILocation(line: 448, column: 5, scope: !13217)
!13274 = !DILocation(line: 451, column: 18, scope: !13275)
!13275 = distinct !DILexicalBlock(scope: !13217, file: !13161, line: 449, column: 5)
!13276 = !DILocation(line: 452, column: 12, scope: !13275)
!13277 = !DILocation(line: 453, column: 26, scope: !13217)
!13278 = !DILocation(line: 453, column: 38, scope: !13217)
!13279 = !DILocation(line: 453, column: 5, scope: !13275)
!13280 = distinct !{!13280, !13273, !13281}
!13281 = !DILocation(line: 453, column: 54, scope: !13217)
!13282 = !DILocation(line: 0, scope: !13213)
!13283 = !DILocation(line: 464, column: 3, scope: !13201)
!13284 = distinct !DISubprogram(name: "LL_PWR_GetRegulVoltageScaling", scope: !13285, file: !13285, line: 519, type: !7282, scopeLine: 520, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3446, retainedNodes: !437)
!13285 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_pwr.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13286 = !DILocation(line: 521, column: 21, scope: !13284)
!13287 = !DILocation(line: 521, column: 3, scope: !13284)
!13288 = distinct !DISubprogram(name: "LL_FLASH_SetLatency", scope: !6904, file: !6904, line: 1543, type: !7292, scopeLine: 1544, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3446, retainedNodes: !13289)
!13289 = !{!13290}
!13290 = !DILocalVariable(name: "Latency", arg: 1, scope: !13288, file: !6904, line: 1543, type: !113)
!13291 = !DILocation(line: 0, scope: !13288)
!13292 = !DILocation(line: 1545, column: 3, scope: !13288)
!13293 = !DILocation(line: 1546, column: 1, scope: !13288)
!13294 = distinct !DISubprogram(name: "LL_FLASH_GetLatency", scope: !6904, file: !6904, line: 1569, type: !7282, scopeLine: 1570, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3446, retainedNodes: !437)
!13295 = !DILocation(line: 1571, column: 21, scope: !13294)
!13296 = !DILocation(line: 1571, column: 3, scope: !13294)
!13297 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSI", scope: !13161, file: !13161, line: 483, type: !13298, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3446, retainedNodes: !13314)
!13298 = !DISubroutineType(types: !13299)
!13299 = !{!13204, !13300, !13307}
!13300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13301, size: 32)
!13301 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_PLLInitTypeDef", file: !13168, line: 114, baseType: !13302)
!13302 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !13168, line: 94, size: 96, elements: !13303)
!13303 = !{!13304, !13305, !13306}
!13304 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !13302, file: !13168, line: 96, baseType: !113, size: 32)
!13305 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !13302, file: !13168, line: 102, baseType: !113, size: 32, offset: 32)
!13306 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !13302, file: !13168, line: 109, baseType: !113, size: 32, offset: 64)
!13307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13308, size: 32)
!13308 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_ClkInitTypeDef", file: !13168, line: 139, baseType: !13309)
!13309 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !13168, line: 119, size: 96, elements: !13310)
!13310 = !{!13311, !13312, !13313}
!13311 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !13309, file: !13168, line: 121, baseType: !113, size: 32)
!13312 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !13309, file: !13168, line: 127, baseType: !113, size: 32, offset: 32)
!13313 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !13309, file: !13168, line: 133, baseType: !113, size: 32, offset: 64)
!13314 = !{!13315, !13316, !13317, !13318}
!13315 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 1, scope: !13297, file: !13161, line: 483, type: !13300)
!13316 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !13297, file: !13161, line: 484, type: !13307)
!13317 = !DILocalVariable(name: "status", scope: !13297, file: !13161, line: 486, type: !13204)
!13318 = !DILocalVariable(name: "pllfreq", scope: !13297, file: !13161, line: 487, type: !113)
!13319 = !DILocation(line: 0, scope: !13297)
!13320 = !DILocation(line: 490, column: 6, scope: !13321)
!13321 = distinct !DILexicalBlock(scope: !13297, file: !13161, line: 490, column: 6)
!13322 = !DILocation(line: 490, column: 25, scope: !13321)
!13323 = !DILocation(line: 490, column: 6, scope: !13297)
!13324 = !DILocation(line: 493, column: 15, scope: !13325)
!13325 = distinct !DILexicalBlock(scope: !13321, file: !13161, line: 491, column: 3)
!13326 = !DILocation(line: 496, column: 8, scope: !13327)
!13327 = distinct !DILexicalBlock(scope: !13325, file: !13161, line: 496, column: 8)
!13328 = !DILocation(line: 496, column: 29, scope: !13327)
!13329 = !DILocation(line: 496, column: 8, scope: !13325)
!13330 = !DILocation(line: 498, column: 7, scope: !13331)
!13331 = distinct !DILexicalBlock(scope: !13327, file: !13161, line: 497, column: 5)
!13332 = !DILocation(line: 499, column: 7, scope: !13331)
!13333 = !DILocation(line: 499, column: 14, scope: !13331)
!13334 = !DILocation(line: 499, column: 35, scope: !13331)
!13335 = distinct !{!13335, !13332, !13336}
!13336 = !DILocation(line: 502, column: 7, scope: !13331)
!13337 = !DILocation(line: 506, column: 76, scope: !13325)
!13338 = !DILocation(line: 506, column: 103, scope: !13325)
!13339 = !DILocation(line: 507, column: 54, scope: !13325)
!13340 = !DILocation(line: 506, column: 5, scope: !13325)
!13341 = !DILocation(line: 510, column: 14, scope: !13325)
!13342 = !DILocation(line: 511, column: 3, scope: !13325)
!13343 = !DILocation(line: 0, scope: !13321)
!13344 = !DILocation(line: 518, column: 3, scope: !13297)
!13345 = distinct !DISubprogram(name: "UTILS_PLL_IsBusy", scope: !13161, file: !13161, line: 642, type: !13346, scopeLine: 643, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3446, retainedNodes: !13348)
!13346 = !DISubroutineType(types: !13347)
!13347 = !{!13204}
!13348 = !{!13349}
!13349 = !DILocalVariable(name: "status", scope: !13345, file: !13161, line: 644, type: !13204)
!13350 = !DILocation(line: 0, scope: !13345)
!13351 = !DILocation(line: 647, column: 6, scope: !13352)
!13352 = distinct !DILexicalBlock(scope: !13345, file: !13161, line: 647, column: 6)
!13353 = !DILocation(line: 647, column: 27, scope: !13352)
!13354 = !DILocation(line: 655, column: 6, scope: !13355)
!13355 = distinct !DILexicalBlock(scope: !13345, file: !13161, line: 655, column: 6)
!13356 = !DILocation(line: 655, column: 30, scope: !13355)
!13357 = !DILocation(line: 663, column: 6, scope: !13358)
!13358 = distinct !DILexicalBlock(scope: !13345, file: !13161, line: 663, column: 6)
!13359 = !DILocation(line: 663, column: 30, scope: !13358)
!13360 = !DILocation(line: 663, column: 6, scope: !13345)
!13361 = !DILocation(line: 669, column: 3, scope: !13345)
!13362 = distinct !DISubprogram(name: "UTILS_GetPLLOutputFrequency", scope: !13161, file: !13161, line: 611, type: !13363, scopeLine: 612, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3446, retainedNodes: !13365)
!13363 = !DISubroutineType(types: !13364)
!13364 = !{!113, !113, !13300}
!13365 = !{!13366, !13367, !13368}
!13366 = !DILocalVariable(name: "PLL_InputFrequency", arg: 1, scope: !13362, file: !13161, line: 611, type: !113)
!13367 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 2, scope: !13362, file: !13161, line: 611, type: !13300)
!13368 = !DILocalVariable(name: "pllfreq", scope: !13362, file: !13161, line: 613, type: !113)
!13369 = !DILocation(line: 0, scope: !13362)
!13370 = !DILocation(line: 622, column: 56, scope: !13362)
!13371 = !DILocation(line: 622, column: 61, scope: !13362)
!13372 = !DILocation(line: 622, column: 32, scope: !13362)
!13373 = !DILocation(line: 626, column: 45, scope: !13362)
!13374 = !DILocation(line: 626, column: 50, scope: !13362)
!13375 = !DILocation(line: 626, column: 21, scope: !13362)
!13376 = !DILocation(line: 630, column: 47, scope: !13362)
!13377 = !DILocation(line: 630, column: 82, scope: !13362)
!13378 = !DILocation(line: 630, column: 21, scope: !13362)
!13379 = !DILocation(line: 633, column: 3, scope: !13362)
!13380 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !10173, file: !10173, line: 3007, type: !7282, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3446, retainedNodes: !437)
!13381 = !DILocation(line: 3009, column: 11, scope: !13380)
!13382 = !DILocation(line: 3009, column: 44, scope: !13380)
!13383 = !DILocation(line: 3009, column: 3, scope: !13380)
!13384 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !10173, file: !10173, line: 2987, type: !3551, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3446, retainedNodes: !437)
!13385 = !DILocation(line: 2989, column: 3, scope: !13384)
!13386 = !DILocation(line: 2990, column: 1, scope: !13384)
!13387 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !10173, file: !10173, line: 4304, type: !10292, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3446, retainedNodes: !13388)
!13388 = !{!13389, !13390, !13391, !13392}
!13389 = !DILocalVariable(name: "Source", arg: 1, scope: !13387, file: !10173, line: 4304, type: !113)
!13390 = !DILocalVariable(name: "PLLM", arg: 2, scope: !13387, file: !10173, line: 4304, type: !113)
!13391 = !DILocalVariable(name: "PLLN", arg: 3, scope: !13387, file: !10173, line: 4304, type: !113)
!13392 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !13387, file: !10173, line: 4304, type: !113)
!13393 = !DILocation(line: 0, scope: !13387)
!13394 = !DILocation(line: 4306, column: 3, scope: !13387)
!13395 = !DILocation(line: 4308, column: 3, scope: !13387)
!13396 = !DILocation(line: 4312, column: 1, scope: !13387)
!13397 = distinct !DISubprogram(name: "UTILS_EnablePLLAndSwitchSystem", scope: !13161, file: !13161, line: 681, type: !13398, scopeLine: 682, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3446, retainedNodes: !13400)
!13398 = !DISubroutineType(types: !13399)
!13399 = !{!13204, !113, !13307}
!13400 = !{!13401, !13402, !13403, !13404}
!13401 = !DILocalVariable(name: "SYSCLK_Frequency", arg: 1, scope: !13397, file: !13161, line: 681, type: !113)
!13402 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !13397, file: !13161, line: 681, type: !13307)
!13403 = !DILocalVariable(name: "status", scope: !13397, file: !13161, line: 683, type: !13204)
!13404 = !DILocalVariable(name: "hclk_frequency", scope: !13397, file: !13161, line: 684, type: !113)
!13405 = !DILocation(line: 0, scope: !13397)
!13406 = !DILocation(line: 691, column: 20, scope: !13397)
!13407 = !DILocation(line: 694, column: 6, scope: !13408)
!13408 = distinct !DILexicalBlock(scope: !13397, file: !13161, line: 694, column: 6)
!13409 = !DILocation(line: 694, column: 22, scope: !13408)
!13410 = !DILocation(line: 694, column: 6, scope: !13397)
!13411 = !DILocation(line: 697, column: 14, scope: !13412)
!13412 = distinct !DILexicalBlock(scope: !13408, file: !13161, line: 695, column: 3)
!13413 = !DILocation(line: 701, column: 13, scope: !13414)
!13414 = distinct !DILexicalBlock(scope: !13397, file: !13161, line: 701, column: 6)
!13415 = !DILocation(line: 701, column: 6, scope: !13397)
!13416 = !DILocation(line: 704, column: 5, scope: !13417)
!13417 = distinct !DILexicalBlock(scope: !13414, file: !13161, line: 702, column: 3)
!13418 = !DILocation(line: 705, column: 5, scope: !13417)
!13419 = !DILocation(line: 705, column: 12, scope: !13417)
!13420 = !DILocation(line: 705, column: 33, scope: !13417)
!13421 = distinct !{!13421, !13418, !13422}
!13422 = !DILocation(line: 708, column: 5, scope: !13417)
!13423 = !DILocation(line: 711, column: 49, scope: !13417)
!13424 = !DILocation(line: 711, column: 5, scope: !13417)
!13425 = !DILocation(line: 712, column: 5, scope: !13417)
!13426 = !DILocation(line: 713, column: 5, scope: !13417)
!13427 = !DILocation(line: 713, column: 12, scope: !13417)
!13428 = !DILocation(line: 713, column: 37, scope: !13417)
!13429 = distinct !{!13429, !13426, !13430}
!13430 = !DILocation(line: 716, column: 5, scope: !13417)
!13431 = !DILocation(line: 719, column: 50, scope: !13417)
!13432 = !DILocation(line: 719, column: 5, scope: !13417)
!13433 = !DILocation(line: 720, column: 50, scope: !13417)
!13434 = !DILocation(line: 720, column: 5, scope: !13417)
!13435 = !DILocation(line: 721, column: 3, scope: !13417)
!13436 = !DILocation(line: 724, column: 6, scope: !13437)
!13437 = distinct !DILexicalBlock(scope: !13397, file: !13161, line: 724, column: 6)
!13438 = !DILocation(line: 724, column: 22, scope: !13437)
!13439 = !DILocation(line: 724, column: 6, scope: !13397)
!13440 = !DILocation(line: 727, column: 14, scope: !13441)
!13441 = distinct !DILexicalBlock(scope: !13437, file: !13161, line: 725, column: 3)
!13442 = !DILocation(line: 728, column: 3, scope: !13441)
!13443 = !DILocation(line: 731, column: 13, scope: !13444)
!13444 = distinct !DILexicalBlock(scope: !13397, file: !13161, line: 731, column: 6)
!13445 = !DILocation(line: 731, column: 6, scope: !13397)
!13446 = !DILocation(line: 733, column: 5, scope: !13447)
!13447 = distinct !DILexicalBlock(scope: !13444, file: !13161, line: 732, column: 3)
!13448 = !DILocation(line: 734, column: 3, scope: !13447)
!13449 = !DILocation(line: 736, column: 3, scope: !13397)
!13450 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !10173, file: !10173, line: 4184, type: !3551, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3446, retainedNodes: !437)
!13451 = !DILocation(line: 4186, column: 3, scope: !13450)
!13452 = !DILocation(line: 4187, column: 1, scope: !13450)
!13453 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !10173, file: !10173, line: 4205, type: !7282, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3446, retainedNodes: !437)
!13454 = !DILocation(line: 4207, column: 11, scope: !13453)
!13455 = !DILocation(line: 4207, column: 44, scope: !13453)
!13456 = !DILocation(line: 4207, column: 3, scope: !13453)
!13457 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !10173, file: !10173, line: 3224, type: !7292, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3446, retainedNodes: !13458)
!13458 = !{!13459}
!13459 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !13457, file: !10173, line: 3224, type: !113)
!13460 = !DILocation(line: 0, scope: !13457)
!13461 = !DILocation(line: 3226, column: 3, scope: !13457)
!13462 = !DILocation(line: 3227, column: 1, scope: !13457)
!13463 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !10173, file: !10173, line: 3188, type: !7292, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3446, retainedNodes: !13464)
!13464 = !{!13465}
!13465 = !DILocalVariable(name: "Source", arg: 1, scope: !13463, file: !10173, line: 3188, type: !113)
!13466 = !DILocation(line: 0, scope: !13463)
!13467 = !DILocation(line: 3190, column: 3, scope: !13463)
!13468 = !DILocation(line: 3191, column: 1, scope: !13463)
!13469 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !10173, file: !10173, line: 3204, type: !7282, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3446, retainedNodes: !437)
!13470 = !DILocation(line: 3206, column: 21, scope: !13469)
!13471 = !DILocation(line: 3206, column: 3, scope: !13469)
!13472 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !10173, file: !10173, line: 3240, type: !7292, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3446, retainedNodes: !13473)
!13473 = !{!13474}
!13474 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !13472, file: !10173, line: 3240, type: !113)
!13475 = !DILocation(line: 0, scope: !13472)
!13476 = !DILocation(line: 3242, column: 3, scope: !13472)
!13477 = !DILocation(line: 3243, column: 1, scope: !13472)
!13478 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !10173, file: !10173, line: 3256, type: !7292, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3446, retainedNodes: !13479)
!13479 = !{!13480}
!13480 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !13478, file: !10173, line: 3256, type: !113)
!13481 = !DILocation(line: 0, scope: !13478)
!13482 = !DILocation(line: 3258, column: 3, scope: !13478)
!13483 = !DILocation(line: 3259, column: 1, scope: !13478)
!13484 = distinct !DISubprogram(name: "LL_RCC_PLLSAI_IsReady", scope: !10173, file: !10173, line: 5969, type: !7282, scopeLine: 5970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3446, retainedNodes: !437)
!13485 = !DILocation(line: 5971, column: 11, scope: !13484)
!13486 = !DILocation(line: 5971, column: 47, scope: !13484)
!13487 = !DILocation(line: 5971, column: 3, scope: !13484)
!13488 = distinct !DISubprogram(name: "LL_RCC_PLLI2S_IsReady", scope: !10173, file: !10173, line: 5153, type: !7282, scopeLine: 5154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3446, retainedNodes: !437)
!13489 = !DILocation(line: 5155, column: 11, scope: !13488)
!13490 = !DILocation(line: 5155, column: 47, scope: !13488)
!13491 = !DILocation(line: 5155, column: 3, scope: !13488)
!13492 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSE", scope: !13161, file: !13161, line: 540, type: !13493, scopeLine: 542, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3446, retainedNodes: !13495)
!13493 = !DISubroutineType(types: !13494)
!13494 = !{!13204, !113, !113, !13300, !13307}
!13495 = !{!13496, !13497, !13498, !13499, !13500, !13501}
!13496 = !DILocalVariable(name: "HSEFrequency", arg: 1, scope: !13492, file: !13161, line: 540, type: !113)
!13497 = !DILocalVariable(name: "HSEBypass", arg: 2, scope: !13492, file: !13161, line: 540, type: !113)
!13498 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 3, scope: !13492, file: !13161, line: 541, type: !13300)
!13499 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 4, scope: !13492, file: !13161, line: 541, type: !13307)
!13500 = !DILocalVariable(name: "status", scope: !13492, file: !13161, line: 543, type: !13204)
!13501 = !DILocalVariable(name: "pllfreq", scope: !13492, file: !13161, line: 544, type: !113)
!13502 = !DILocation(line: 0, scope: !13492)
!13503 = !DILocation(line: 551, column: 6, scope: !13504)
!13504 = distinct !DILexicalBlock(scope: !13492, file: !13161, line: 551, column: 6)
!13505 = !DILocation(line: 551, column: 25, scope: !13504)
!13506 = !DILocation(line: 551, column: 6, scope: !13492)
!13507 = !DILocation(line: 554, column: 15, scope: !13508)
!13508 = distinct !DILexicalBlock(scope: !13504, file: !13161, line: 552, column: 3)
!13509 = !DILocation(line: 557, column: 8, scope: !13510)
!13510 = distinct !DILexicalBlock(scope: !13508, file: !13161, line: 557, column: 8)
!13511 = !DILocation(line: 557, column: 29, scope: !13510)
!13512 = !DILocation(line: 557, column: 8, scope: !13508)
!13513 = !DILocation(line: 560, column: 20, scope: !13514)
!13514 = distinct !DILexicalBlock(scope: !13515, file: !13161, line: 560, column: 10)
!13515 = distinct !DILexicalBlock(scope: !13510, file: !13161, line: 558, column: 5)
!13516 = !DILocation(line: 560, column: 10, scope: !13515)
!13517 = !DILocation(line: 562, column: 9, scope: !13518)
!13518 = distinct !DILexicalBlock(scope: !13514, file: !13161, line: 561, column: 7)
!13519 = !DILocation(line: 563, column: 7, scope: !13518)
!13520 = !DILocation(line: 566, column: 9, scope: !13521)
!13521 = distinct !DILexicalBlock(scope: !13514, file: !13161, line: 565, column: 7)
!13522 = !DILocation(line: 570, column: 7, scope: !13515)
!13523 = !DILocation(line: 571, column: 7, scope: !13515)
!13524 = !DILocation(line: 571, column: 14, scope: !13515)
!13525 = !DILocation(line: 571, column: 35, scope: !13515)
!13526 = distinct !{!13526, !13523, !13527}
!13527 = !DILocation(line: 574, column: 7, scope: !13515)
!13528 = !DILocation(line: 578, column: 76, scope: !13508)
!13529 = !DILocation(line: 578, column: 103, scope: !13508)
!13530 = !DILocation(line: 579, column: 54, scope: !13508)
!13531 = !DILocation(line: 578, column: 5, scope: !13508)
!13532 = !DILocation(line: 582, column: 14, scope: !13508)
!13533 = !DILocation(line: 583, column: 3, scope: !13508)
!13534 = !DILocation(line: 0, scope: !13504)
!13535 = !DILocation(line: 590, column: 3, scope: !13492)
!13536 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !10173, file: !10173, line: 2969, type: !7282, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3446, retainedNodes: !437)
!13537 = !DILocation(line: 2971, column: 11, scope: !13536)
!13538 = !DILocation(line: 2971, column: 44, scope: !13536)
!13539 = !DILocation(line: 2971, column: 3, scope: !13536)
!13540 = distinct !DISubprogram(name: "LL_RCC_HSE_EnableBypass", scope: !10173, file: !10173, line: 2929, type: !3551, scopeLine: 2930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3446, retainedNodes: !437)
!13541 = !DILocation(line: 2931, column: 3, scope: !13540)
!13542 = !DILocation(line: 2932, column: 1, scope: !13540)
!13543 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !10173, file: !10173, line: 2939, type: !3551, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3446, retainedNodes: !437)
!13544 = !DILocation(line: 2941, column: 3, scope: !13543)
!13545 = !DILocation(line: 2942, column: 1, scope: !13543)
!13546 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !10173, file: !10173, line: 2949, type: !3551, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3446, retainedNodes: !437)
!13547 = !DILocation(line: 2951, column: 3, scope: !13546)
!13548 = !DILocation(line: 2952, column: 1, scope: !13546)
!13549 = distinct !DISubprogram(name: "z_device_state_init", scope: !13550, file: !13550, line: 23, type: !3551, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3511, retainedNodes: !13551)
!13550 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13551 = !{!13552}
!13552 = !DILocalVariable(name: "dev", scope: !13549, file: !13550, line: 25, type: !13553)
!13553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13554, size: 32)
!13554 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13555)
!13555 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !411, line: 378, size: 192, elements: !13556)
!13556 = !{!13557, !13558, !13559, !13560, !13566, !13567}
!13557 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !13555, file: !411, line: 380, baseType: !105, size: 32)
!13558 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !13555, file: !411, line: 382, baseType: !13, size: 32, offset: 32)
!13559 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !13555, file: !411, line: 384, baseType: !13, size: 32, offset: 64)
!13560 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !13555, file: !411, line: 386, baseType: !13561, size: 32, offset: 96)
!13561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13562, size: 32)
!13562 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !411, line: 351, size: 16, elements: !13563)
!13563 = !{!13564, !13565}
!13564 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !13562, file: !411, line: 359, baseType: !164, size: 8)
!13565 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !13562, file: !411, line: 364, baseType: !422, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!13566 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !13555, file: !411, line: 388, baseType: !104, size: 32, offset: 128)
!13567 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !13555, file: !411, line: 396, baseType: !425, size: 32, offset: 160)
!13568 = !DILocation(line: 0, scope: !13549)
!13569 = !DILocation(line: 31, column: 1, scope: !13549)
!13570 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !13550, file: !13550, line: 33, type: !13571, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3511, retainedNodes: !13573)
!13571 = !DISubroutineType(types: !13572)
!13572 = !{!13553, !105}
!13573 = !{!13574, !13575}
!13574 = !DILocalVariable(name: "name", arg: 1, scope: !13570, file: !13550, line: 33, type: !105)
!13575 = !DILocalVariable(name: "dev", scope: !13570, file: !13550, line: 35, type: !13553)
!13576 = !DILocation(line: 0, scope: !13570)
!13577 = !DILocation(line: 40, column: 12, scope: !13578)
!13578 = distinct !DILexicalBlock(scope: !13570, file: !13550, line: 40, column: 6)
!13579 = !DILocation(line: 40, column: 21, scope: !13578)
!13580 = !DILocation(line: 40, column: 25, scope: !13578)
!13581 = !DILocation(line: 40, column: 33, scope: !13578)
!13582 = !DILocation(line: 40, column: 6, scope: !13570)
!13583 = !DILocation(line: 55, column: 2, scope: !13584)
!13584 = distinct !DILexicalBlock(scope: !13570, file: !13550, line: 55, column: 2)
!13585 = !DILocation(line: 50, column: 7, scope: !13586)
!13586 = distinct !DILexicalBlock(scope: !13587, file: !13550, line: 50, column: 7)
!13587 = distinct !DILexicalBlock(scope: !13588, file: !13550, line: 49, column: 57)
!13588 = distinct !DILexicalBlock(scope: !13589, file: !13550, line: 49, column: 2)
!13589 = distinct !DILexicalBlock(scope: !13570, file: !13550, line: 49, column: 2)
!13590 = !DILocation(line: 50, column: 30, scope: !13586)
!13591 = !DILocation(line: 50, column: 39, scope: !13586)
!13592 = !DILocation(line: 50, column: 44, scope: !13586)
!13593 = !DILocation(line: 50, column: 7, scope: !13587)
!13594 = !DILocation(line: 49, column: 53, scope: !13588)
!13595 = !DILocation(line: 49, column: 33, scope: !13588)
!13596 = !DILocation(line: 49, column: 2, scope: !13589)
!13597 = distinct !{!13597, !13596, !13598}
!13598 = !DILocation(line: 53, column: 2, scope: !13589)
!13599 = !DILocation(line: 56, column: 7, scope: !13600)
!13600 = distinct !DILexicalBlock(scope: !13601, file: !13550, line: 56, column: 7)
!13601 = distinct !DILexicalBlock(scope: !13602, file: !13550, line: 55, column: 57)
!13602 = distinct !DILexicalBlock(scope: !13584, file: !13550, line: 55, column: 2)
!13603 = !DILocation(line: 56, column: 30, scope: !13600)
!13604 = !DILocation(line: 56, column: 52, scope: !13600)
!13605 = !DILocation(line: 56, column: 34, scope: !13600)
!13606 = !DILocation(line: 56, column: 58, scope: !13600)
!13607 = !DILocation(line: 56, column: 7, scope: !13601)
!13608 = !DILocation(line: 55, column: 53, scope: !13602)
!13609 = !DILocation(line: 55, column: 33, scope: !13602)
!13610 = distinct !{!13610, !13583, !13611}
!13611 = !DILocation(line: 59, column: 2, scope: !13584)
!13612 = !DILocation(line: 62, column: 1, scope: !13570)
!13613 = distinct !DISubprogram(name: "z_device_is_ready", scope: !13550, file: !13550, line: 93, type: !13614, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3511, retainedNodes: !13616)
!13614 = !DISubroutineType(types: !13615)
!13615 = !{!422, !13553}
!13616 = !{!13617}
!13617 = !DILocalVariable(name: "dev", arg: 1, scope: !13613, file: !13550, line: 93, type: !13553)
!13618 = !DILocation(line: 0, scope: !13613)
!13619 = !DILocation(line: 99, column: 10, scope: !13620)
!13620 = distinct !DILexicalBlock(scope: !13613, file: !13550, line: 99, column: 6)
!13621 = !DILocation(line: 99, column: 6, scope: !13613)
!13622 = !DILocation(line: 103, column: 14, scope: !13613)
!13623 = !DILocation(line: 103, column: 21, scope: !13613)
!13624 = !DILocation(line: 103, column: 33, scope: !13613)
!13625 = !DILocation(line: 103, column: 49, scope: !13613)
!13626 = !DILocation(line: 103, column: 58, scope: !13613)
!13627 = !DILocation(line: 104, column: 1, scope: !13613)
!13628 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !13550, file: !13550, line: 87, type: !13629, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3511, retainedNodes: !13632)
!13629 = !DISubroutineType(types: !13630)
!13630 = !{!439, !13631}
!13631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13553, size: 32)
!13632 = !{!13633}
!13633 = !DILocalVariable(name: "devices", arg: 1, scope: !13628, file: !13550, line: 87, type: !13631)
!13634 = !DILocation(line: 0, scope: !13628)
!13635 = !DILocation(line: 89, column: 11, scope: !13628)
!13636 = !DILocation(line: 90, column: 2, scope: !13628)
!13637 = distinct !DISubprogram(name: "device_required_foreach", scope: !13550, file: !13550, line: 125, type: !13638, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3511, retainedNodes: !13644)
!13638 = !DISubroutineType(types: !13639)
!13639 = !{!108, !13553, !13640, !104}
!13640 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !411, line: 471, baseType: !13641)
!13641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13642, size: 32)
!13642 = !DISubroutineType(types: !13643)
!13643 = !{!108, !13553, !104}
!13644 = !{!13645, !13646, !13647, !13648, !13649}
!13645 = !DILocalVariable(name: "dev", arg: 1, scope: !13637, file: !13550, line: 125, type: !13553)
!13646 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !13637, file: !13550, line: 126, type: !13640)
!13647 = !DILocalVariable(name: "context", arg: 3, scope: !13637, file: !13550, line: 127, type: !104)
!13648 = !DILocalVariable(name: "handle_count", scope: !13637, file: !13550, line: 129, type: !439)
!13649 = !DILocalVariable(name: "handles", scope: !13637, file: !13550, line: 130, type: !425)
!13650 = !DILocation(line: 0, scope: !13637)
!13651 = !DILocation(line: 129, column: 2, scope: !13637)
!13652 = !DILocation(line: 129, column: 9, scope: !13637)
!13653 = !DILocation(line: 130, column: 35, scope: !13637)
!13654 = !DILocation(line: 132, column: 33, scope: !13637)
!13655 = !DILocation(line: 132, column: 9, scope: !13637)
!13656 = !DILocation(line: 133, column: 1, scope: !13637)
!13657 = !DILocation(line: 132, column: 2, scope: !13637)
!13658 = distinct !DISubprogram(name: "device_required_handles_get", scope: !411, file: !411, line: 493, type: !13659, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3511, retainedNodes: !13661)
!13659 = !DISubroutineType(types: !13660)
!13660 = !{!425, !13553, !3003}
!13661 = !{!13662, !13663, !13664, !13665}
!13662 = !DILocalVariable(name: "dev", arg: 1, scope: !13658, file: !411, line: 493, type: !13553)
!13663 = !DILocalVariable(name: "count", arg: 2, scope: !13658, file: !411, line: 493, type: !3003)
!13664 = !DILocalVariable(name: "rv", scope: !13658, file: !411, line: 495, type: !425)
!13665 = !DILocalVariable(name: "i", scope: !13666, file: !411, line: 498, type: !439)
!13666 = distinct !DILexicalBlock(scope: !13667, file: !411, line: 497, column: 18)
!13667 = distinct !DILexicalBlock(scope: !13658, file: !411, line: 497, column: 6)
!13668 = !DILocation(line: 0, scope: !13658)
!13669 = !DILocation(line: 495, column: 35, scope: !13658)
!13670 = !DILocation(line: 497, column: 9, scope: !13667)
!13671 = !DILocation(line: 497, column: 6, scope: !13658)
!13672 = !DILocation(line: 0, scope: !13666)
!13673 = !DILocation(line: 500, column: 11, scope: !13666)
!13674 = !DILocation(line: 500, column: 40, scope: !13666)
!13675 = !DILocation(line: 502, column: 4, scope: !13676)
!13676 = distinct !DILexicalBlock(scope: !13666, file: !411, line: 501, column: 40)
!13677 = distinct !{!13677, !13678, !13679}
!13678 = !DILocation(line: 500, column: 3, scope: !13666)
!13679 = !DILocation(line: 503, column: 3, scope: !13666)
!13680 = !DILocation(line: 504, column: 10, scope: !13666)
!13681 = !DILocation(line: 505, column: 2, scope: !13666)
!13682 = !DILocation(line: 507, column: 2, scope: !13658)
!13683 = distinct !DISubprogram(name: "device_visitor", scope: !13550, file: !13550, line: 106, type: !13684, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3511, retainedNodes: !13686)
!13684 = !DISubroutineType(types: !13685)
!13685 = !{!108, !425, !439, !13640, !104}
!13686 = !{!13687, !13688, !13689, !13690, !13691, !13693, !13696, !13697}
!13687 = !DILocalVariable(name: "handles", arg: 1, scope: !13683, file: !13550, line: 106, type: !425)
!13688 = !DILocalVariable(name: "handle_count", arg: 2, scope: !13683, file: !13550, line: 107, type: !439)
!13689 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !13683, file: !13550, line: 108, type: !13640)
!13690 = !DILocalVariable(name: "context", arg: 4, scope: !13683, file: !13550, line: 109, type: !104)
!13691 = !DILocalVariable(name: "i", scope: !13692, file: !13550, line: 112, type: !439)
!13692 = distinct !DILexicalBlock(scope: !13683, file: !13550, line: 112, column: 2)
!13693 = !DILocalVariable(name: "dh", scope: !13694, file: !13550, line: 113, type: !427)
!13694 = distinct !DILexicalBlock(scope: !13695, file: !13550, line: 112, column: 44)
!13695 = distinct !DILexicalBlock(scope: !13692, file: !13550, line: 112, column: 2)
!13696 = !DILocalVariable(name: "rdev", scope: !13694, file: !13550, line: 114, type: !13553)
!13697 = !DILocalVariable(name: "rc", scope: !13694, file: !13550, line: 115, type: !108)
!13698 = !DILocation(line: 0, scope: !13683)
!13699 = !DILocation(line: 0, scope: !13692)
!13700 = !DILocation(line: 112, column: 23, scope: !13695)
!13701 = !DILocation(line: 112, column: 2, scope: !13692)
!13702 = distinct !{!13702, !13701, !13703}
!13703 = !DILocation(line: 120, column: 2, scope: !13692)
!13704 = !DILocation(line: 113, column: 24, scope: !13694)
!13705 = !DILocation(line: 0, scope: !13694)
!13706 = !DILocation(line: 114, column: 31, scope: !13694)
!13707 = !DILocation(line: 115, column: 12, scope: !13694)
!13708 = !DILocation(line: 117, column: 10, scope: !13709)
!13709 = distinct !DILexicalBlock(scope: !13694, file: !13550, line: 117, column: 7)
!13710 = !DILocation(line: 112, column: 39, scope: !13695)
!13711 = !DILocation(line: 123, column: 1, scope: !13683)
!13712 = distinct !DISubprogram(name: "device_from_handle", scope: !411, file: !411, line: 439, type: !13713, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3511, retainedNodes: !13715)
!13713 = !DISubroutineType(types: !13714)
!13714 = !{!13553, !427}
!13715 = !{!13716, !13717, !13718}
!13716 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !13712, file: !411, line: 439, type: !427)
!13717 = !DILocalVariable(name: "dev", scope: !13712, file: !411, line: 443, type: !13553)
!13718 = !DILocalVariable(name: "numdev", scope: !13712, file: !411, line: 444, type: !439)
!13719 = !DILocation(line: 0, scope: !13712)
!13720 = !DILocation(line: 446, column: 7, scope: !13721)
!13721 = distinct !DILexicalBlock(scope: !13712, file: !411, line: 446, column: 6)
!13722 = !DILocation(line: 446, column: 18, scope: !13721)
!13723 = !DILocation(line: 446, column: 23, scope: !13721)
!13724 = !DILocation(line: 450, column: 2, scope: !13712)
!13725 = distinct !DISubprogram(name: "device_supported_foreach", scope: !13550, file: !13550, line: 135, type: !13638, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3511, retainedNodes: !13726)
!13726 = !{!13727, !13728, !13729, !13730, !13731}
!13727 = !DILocalVariable(name: "dev", arg: 1, scope: !13725, file: !13550, line: 135, type: !13553)
!13728 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !13725, file: !13550, line: 136, type: !13640)
!13729 = !DILocalVariable(name: "context", arg: 3, scope: !13725, file: !13550, line: 137, type: !104)
!13730 = !DILocalVariable(name: "handle_count", scope: !13725, file: !13550, line: 139, type: !439)
!13731 = !DILocalVariable(name: "handles", scope: !13725, file: !13550, line: 140, type: !425)
!13732 = !DILocation(line: 0, scope: !13725)
!13733 = !DILocation(line: 139, column: 2, scope: !13725)
!13734 = !DILocation(line: 139, column: 9, scope: !13725)
!13735 = !DILocation(line: 140, column: 35, scope: !13725)
!13736 = !DILocation(line: 142, column: 33, scope: !13725)
!13737 = !DILocation(line: 142, column: 9, scope: !13725)
!13738 = !DILocation(line: 143, column: 1, scope: !13725)
!13739 = !DILocation(line: 142, column: 2, scope: !13725)
!13740 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !411, file: !411, line: 573, type: !13659, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3511, retainedNodes: !13741)
!13741 = !{!13742, !13743, !13744, !13745, !13746}
!13742 = !DILocalVariable(name: "dev", arg: 1, scope: !13740, file: !411, line: 573, type: !13553)
!13743 = !DILocalVariable(name: "count", arg: 2, scope: !13740, file: !411, line: 573, type: !3003)
!13744 = !DILocalVariable(name: "rv", scope: !13740, file: !411, line: 575, type: !425)
!13745 = !DILocalVariable(name: "region", scope: !13740, file: !411, line: 576, type: !439)
!13746 = !DILocalVariable(name: "i", scope: !13740, file: !411, line: 577, type: !439)
!13747 = !DILocation(line: 0, scope: !13740)
!13748 = !DILocation(line: 575, column: 35, scope: !13740)
!13749 = !DILocation(line: 579, column: 9, scope: !13750)
!13750 = distinct !DILexicalBlock(scope: !13740, file: !411, line: 579, column: 6)
!13751 = !DILocation(line: 579, column: 6, scope: !13740)
!13752 = !DILocation(line: 582, column: 8, scope: !13753)
!13753 = distinct !DILexicalBlock(scope: !13754, file: !411, line: 582, column: 8)
!13754 = distinct !DILexicalBlock(scope: !13755, file: !411, line: 581, column: 23)
!13755 = distinct !DILexicalBlock(scope: !13750, file: !411, line: 579, column: 18)
!13756 = !DILocation(line: 582, column: 12, scope: !13753)
!13757 = !DILocation(line: 585, column: 6, scope: !13754)
!13758 = !DILocation(line: 0, scope: !13755)
!13759 = !DILocation(line: 581, column: 17, scope: !13755)
!13760 = !DILocation(line: 581, column: 3, scope: !13755)
!13761 = !DILocation(line: 588, column: 10, scope: !13755)
!13762 = !DILocation(line: 588, column: 16, scope: !13755)
!13763 = !DILocation(line: 589, column: 4, scope: !13764)
!13764 = distinct !DILexicalBlock(scope: !13755, file: !411, line: 588, column: 39)
!13765 = !DILocation(line: 588, column: 3, scope: !13755)
!13766 = distinct !{!13766, !13765, !13767}
!13767 = !DILocation(line: 590, column: 3, scope: !13755)
!13768 = !DILocation(line: 591, column: 10, scope: !13755)
!13769 = !DILocation(line: 592, column: 2, scope: !13755)
!13770 = !DILocation(line: 575, column: 25, scope: !13740)
!13771 = !DILocation(line: 594, column: 2, scope: !13740)
!13772 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !2297, file: !2297, line: 49, type: !13773, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2294, retainedNodes: !437)
!13773 = !DISubroutineType(types: !13774)
!13774 = !{!552}
!13775 = !DILocation(line: 51, column: 10, scope: !13772)
!13776 = !DILocation(line: 51, column: 20, scope: !13772)
!13777 = !DILocation(line: 51, column: 2, scope: !13772)
!13778 = distinct !DISubprogram(name: "coredump", scope: !3518, file: !3518, line: 209, type: !13779, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3514, retainedNodes: !13925)
!13779 = !DISubroutineType(types: !13780)
!13780 = !{null, !32, !13781, !13825}
!13781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13782, size: 32)
!13782 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13783)
!13783 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !3131, line: 141, baseType: !13784)
!13784 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !3131, line: 97, size: 256, elements: !13785)
!13785 = !{!13786}
!13786 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !13784, file: !3131, line: 107, baseType: !13787, size: 256)
!13787 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !3131, line: 98, size: 256, elements: !13788)
!13788 = !{!13789, !13794, !13799, !13804, !13809, !13814, !13819, !13824}
!13789 = !DIDerivedType(tag: DW_TAG_member, scope: !13787, file: !3131, line: 99, baseType: !13790, size: 32)
!13790 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13787, file: !3131, line: 99, size: 32, elements: !13791)
!13791 = !{!13792, !13793}
!13792 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !13790, file: !3131, line: 99, baseType: !113, size: 32)
!13793 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !13790, file: !3131, line: 99, baseType: !113, size: 32)
!13794 = !DIDerivedType(tag: DW_TAG_member, scope: !13787, file: !3131, line: 100, baseType: !13795, size: 32, offset: 32)
!13795 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13787, file: !3131, line: 100, size: 32, elements: !13796)
!13796 = !{!13797, !13798}
!13797 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !13795, file: !3131, line: 100, baseType: !113, size: 32)
!13798 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !13795, file: !3131, line: 100, baseType: !113, size: 32)
!13799 = !DIDerivedType(tag: DW_TAG_member, scope: !13787, file: !3131, line: 101, baseType: !13800, size: 32, offset: 64)
!13800 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13787, file: !3131, line: 101, size: 32, elements: !13801)
!13801 = !{!13802, !13803}
!13802 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !13800, file: !3131, line: 101, baseType: !113, size: 32)
!13803 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !13800, file: !3131, line: 101, baseType: !113, size: 32)
!13804 = !DIDerivedType(tag: DW_TAG_member, scope: !13787, file: !3131, line: 102, baseType: !13805, size: 32, offset: 96)
!13805 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13787, file: !3131, line: 102, size: 32, elements: !13806)
!13806 = !{!13807, !13808}
!13807 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !13805, file: !3131, line: 102, baseType: !113, size: 32)
!13808 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !13805, file: !3131, line: 102, baseType: !113, size: 32)
!13809 = !DIDerivedType(tag: DW_TAG_member, scope: !13787, file: !3131, line: 103, baseType: !13810, size: 32, offset: 128)
!13810 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13787, file: !3131, line: 103, size: 32, elements: !13811)
!13811 = !{!13812, !13813}
!13812 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !13810, file: !3131, line: 103, baseType: !113, size: 32)
!13813 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !13810, file: !3131, line: 103, baseType: !113, size: 32)
!13814 = !DIDerivedType(tag: DW_TAG_member, scope: !13787, file: !3131, line: 104, baseType: !13815, size: 32, offset: 160)
!13815 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13787, file: !3131, line: 104, size: 32, elements: !13816)
!13816 = !{!13817, !13818}
!13817 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !13815, file: !3131, line: 104, baseType: !113, size: 32)
!13818 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !13815, file: !3131, line: 104, baseType: !113, size: 32)
!13819 = !DIDerivedType(tag: DW_TAG_member, scope: !13787, file: !3131, line: 105, baseType: !13820, size: 32, offset: 192)
!13820 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13787, file: !3131, line: 105, size: 32, elements: !13821)
!13821 = !{!13822, !13823}
!13822 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !13820, file: !3131, line: 105, baseType: !113, size: 32)
!13823 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !13820, file: !3131, line: 105, baseType: !113, size: 32)
!13824 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !13787, file: !3131, line: 106, baseType: !113, size: 32, offset: 224)
!13825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13826, size: 32)
!13826 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !659, line: 245, size: 1024, elements: !13827)
!13827 = !{!13828, !13886, !13898, !13899, !13900, !13901, !13907, !13920}
!13828 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !13826, file: !659, line: 247, baseType: !13829, size: 384)
!13829 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !659, line: 57, size: 384, elements: !13830)
!13830 = !{!13831, !13855, !13862, !13863, !13864, !13873, !13874, !13875}
!13831 = !DIDerivedType(tag: DW_TAG_member, scope: !13829, file: !659, line: 60, baseType: !13832, size: 64)
!13832 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13829, file: !659, line: 60, size: 64, elements: !13833)
!13833 = !{!13834, !13849}
!13834 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !13832, file: !659, line: 61, baseType: !13835, size: 64)
!13835 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !367, line: 49, baseType: !13836)
!13836 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !367, line: 37, size: 64, elements: !13837)
!13837 = !{!13838, !13844}
!13838 = !DIDerivedType(tag: DW_TAG_member, scope: !13836, file: !367, line: 38, baseType: !13839, size: 32)
!13839 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13836, file: !367, line: 38, size: 32, elements: !13840)
!13840 = !{!13841, !13843}
!13841 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !13839, file: !367, line: 39, baseType: !13842, size: 32)
!13842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13836, size: 32)
!13843 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !13839, file: !367, line: 40, baseType: !13842, size: 32)
!13844 = !DIDerivedType(tag: DW_TAG_member, scope: !13836, file: !367, line: 42, baseType: !13845, size: 32, offset: 32)
!13845 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13836, file: !367, line: 42, size: 32, elements: !13846)
!13846 = !{!13847, !13848}
!13847 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !13845, file: !367, line: 43, baseType: !13842, size: 32)
!13848 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !13845, file: !367, line: 44, baseType: !13842, size: 32)
!13849 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !13832, file: !659, line: 62, baseType: !13850, size: 64)
!13850 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !684, line: 49, size: 64, elements: !13851)
!13851 = !{!13852}
!13852 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !13850, file: !684, line: 50, baseType: !13853, size: 64)
!13853 = !DICompositeType(tag: DW_TAG_array_type, baseType: !13854, size: 64, elements: !689)
!13854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13850, size: 32)
!13855 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !13829, file: !659, line: 68, baseType: !13856, size: 32, offset: 64)
!13856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13857, size: 32)
!13857 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !363, line: 233, baseType: !13858)
!13858 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !363, line: 231, size: 64, elements: !13859)
!13859 = !{!13860}
!13860 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !13858, file: !363, line: 232, baseType: !13861, size: 64)
!13861 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !367, line: 48, baseType: !13836)
!13862 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !13829, file: !659, line: 71, baseType: !164, size: 8, offset: 96)
!13863 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !13829, file: !659, line: 74, baseType: !164, size: 8, offset: 104)
!13864 = !DIDerivedType(tag: DW_TAG_member, scope: !13829, file: !659, line: 90, baseType: !13865, size: 16, offset: 112)
!13865 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13829, file: !659, line: 90, size: 16, elements: !13866)
!13866 = !{!13867, !13872}
!13867 = !DIDerivedType(tag: DW_TAG_member, scope: !13865, file: !659, line: 91, baseType: !13868, size: 16)
!13868 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !13865, file: !659, line: 91, size: 16, elements: !13869)
!13869 = !{!13870, !13871}
!13870 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !13868, file: !659, line: 96, baseType: !707, size: 8)
!13871 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !13868, file: !659, line: 97, baseType: !164, size: 8, offset: 8)
!13872 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !13865, file: !659, line: 100, baseType: !168, size: 16)
!13873 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !13829, file: !659, line: 107, baseType: !113, size: 32, offset: 128)
!13874 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !13829, file: !659, line: 127, baseType: !104, size: 32, offset: 160)
!13875 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !13829, file: !659, line: 131, baseType: !13876, size: 192, offset: 192)
!13876 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !363, line: 244, size: 192, elements: !13877)
!13877 = !{!13878, !13879, !13885}
!13878 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !13876, file: !363, line: 245, baseType: !13835, size: 64)
!13879 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !13876, file: !363, line: 246, baseType: !13880, size: 32, offset: 64)
!13880 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !363, line: 242, baseType: !13881)
!13881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13882, size: 32)
!13882 = !DISubroutineType(types: !13883)
!13883 = !{null, !13884}
!13884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13876, size: 32)
!13885 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !13876, file: !363, line: 249, baseType: !111, size: 64, offset: 128)
!13886 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !13826, file: !659, line: 250, baseType: !13887, size: 288, offset: 384)
!13887 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !726, line: 25, size: 288, elements: !13888)
!13888 = !{!13889, !13890, !13891, !13892, !13893, !13894, !13895, !13896, !13897}
!13889 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !13887, file: !726, line: 26, baseType: !113, size: 32)
!13890 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !13887, file: !726, line: 27, baseType: !113, size: 32, offset: 32)
!13891 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !13887, file: !726, line: 28, baseType: !113, size: 32, offset: 64)
!13892 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !13887, file: !726, line: 29, baseType: !113, size: 32, offset: 96)
!13893 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !13887, file: !726, line: 30, baseType: !113, size: 32, offset: 128)
!13894 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !13887, file: !726, line: 31, baseType: !113, size: 32, offset: 160)
!13895 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !13887, file: !726, line: 32, baseType: !113, size: 32, offset: 192)
!13896 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !13887, file: !726, line: 33, baseType: !113, size: 32, offset: 224)
!13897 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !13887, file: !726, line: 34, baseType: !113, size: 32, offset: 256)
!13898 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !13826, file: !659, line: 253, baseType: !104, size: 32, offset: 672)
!13899 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !13826, file: !659, line: 256, baseType: !13857, size: 64, offset: 704)
!13900 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !13826, file: !659, line: 294, baseType: !108, size: 32, offset: 768)
!13901 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !13826, file: !659, line: 300, baseType: !13902, size: 96, offset: 800)
!13902 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !659, line: 149, size: 96, elements: !13903)
!13903 = !{!13904, !13905, !13906}
!13904 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !13902, file: !659, line: 153, baseType: !22, size: 32)
!13905 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !13902, file: !659, line: 162, baseType: !439, size: 32, offset: 32)
!13906 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !13902, file: !659, line: 168, baseType: !439, size: 32, offset: 64)
!13907 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !13826, file: !659, line: 325, baseType: !13908, size: 32, offset: 896)
!13908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13909, size: 32)
!13909 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !359, line: 5073, size: 160, elements: !13910)
!13910 = !{!13911, !13917, !13918}
!13911 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !13909, file: !359, line: 5074, baseType: !13912, size: 96)
!13912 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !752, line: 56, size: 96, elements: !13913)
!13913 = !{!13914, !13915, !13916}
!13914 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !13912, file: !752, line: 57, baseType: !755, size: 32)
!13915 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !13912, file: !752, line: 58, baseType: !104, size: 32, offset: 32)
!13916 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !13912, file: !752, line: 59, baseType: !439, size: 32, offset: 64)
!13917 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !13909, file: !359, line: 5075, baseType: !13857, size: 64, offset: 96)
!13918 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !13909, file: !359, line: 5076, baseType: !13919, offset: 160)
!13919 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !436, line: 43, elements: !437)
!13920 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !13826, file: !659, line: 343, baseType: !13921, size: 64, offset: 928)
!13921 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !726, line: 60, size: 64, elements: !13922)
!13922 = !{!13923, !13924}
!13923 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !13921, file: !726, line: 63, baseType: !113, size: 32)
!13924 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !13921, file: !726, line: 66, baseType: !113, size: 32, offset: 32)
!13925 = !{!13926, !13927, !13928}
!13926 = !DILocalVariable(name: "reason", arg: 1, scope: !13778, file: !3518, line: 209, type: !32)
!13927 = !DILocalVariable(name: "esf", arg: 2, scope: !13778, file: !3518, line: 209, type: !13781)
!13928 = !DILocalVariable(name: "thread", arg: 3, scope: !13778, file: !3518, line: 210, type: !13825)
!13929 = !DILocation(line: 0, scope: !13778)
!13930 = !DILocation(line: 212, column: 1, scope: !13778)
!13931 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !3518, file: !3518, line: 214, type: !13932, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3514, retainedNodes: !13934)
!13932 = !DISubroutineType(types: !13933)
!13933 = !{null, !22, !22}
!13934 = !{!13935, !13936}
!13935 = !DILocalVariable(name: "start_addr", arg: 1, scope: !13931, file: !3518, line: 214, type: !22)
!13936 = !DILocalVariable(name: "end_addr", arg: 2, scope: !13931, file: !3518, line: 214, type: !22)
!13937 = !DILocation(line: 0, scope: !13931)
!13938 = !DILocation(line: 216, column: 1, scope: !13931)
!13939 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !3518, file: !3518, line: 218, type: !13940, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3514, retainedNodes: !13942)
!13940 = !DISubroutineType(types: !13941)
!13941 = !{null, !209, !439}
!13942 = !{!13943, !13944}
!13943 = !DILocalVariable(name: "buf", arg: 1, scope: !13939, file: !3518, line: 218, type: !209)
!13944 = !DILocalVariable(name: "buflen", arg: 2, scope: !13939, file: !3518, line: 218, type: !439)
!13945 = !DILocation(line: 0, scope: !13939)
!13946 = !DILocation(line: 220, column: 1, scope: !13939)
!13947 = distinct !DISubprogram(name: "coredump_query", scope: !3518, file: !3518, line: 222, type: !13948, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3514, retainedNodes: !13950)
!13948 = !DISubroutineType(types: !13949)
!13949 = !{!108, !3517, !104}
!13950 = !{!13951, !13952}
!13951 = !DILocalVariable(name: "query_id", arg: 1, scope: !13947, file: !3518, line: 222, type: !3517)
!13952 = !DILocalVariable(name: "arg", arg: 2, scope: !13947, file: !3518, line: 222, type: !104)
!13953 = !DILocation(line: 0, scope: !13947)
!13954 = !DILocation(line: 224, column: 2, scope: !13947)
!13955 = distinct !DISubprogram(name: "coredump_cmd", scope: !3518, file: !3518, line: 227, type: !13956, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3514, retainedNodes: !13958)
!13956 = !DISubroutineType(types: !13957)
!13957 = !{!108, !3524, !104}
!13958 = !{!13959, !13960}
!13959 = !DILocalVariable(name: "query_id", arg: 1, scope: !13955, file: !3518, line: 227, type: !3524)
!13960 = !DILocalVariable(name: "arg", arg: 2, scope: !13955, file: !3518, line: 227, type: !104)
!13961 = !DILocation(line: 0, scope: !13955)
!13962 = !DILocation(line: 229, column: 2, scope: !13955)
!13963 = distinct !DISubprogram(name: "arch_system_halt", scope: !13964, file: !13964, line: 23, type: !4238, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3514, retainedNodes: !13965)
!13964 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13965 = !{!13966}
!13966 = !DILocalVariable(name: "reason", arg: 1, scope: !13963, file: !13964, line: 23, type: !32)
!13967 = !DILocation(line: 0, scope: !13963)
!13968 = !DILocation(line: 55, column: 2, scope: !13969, inlinedAt: !13973)
!13969 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4225, file: !4225, line: 42, type: !4226, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3514, retainedNodes: !13970)
!13970 = !{!13971, !13972}
!13971 = !DILocalVariable(name: "key", scope: !13969, file: !4225, line: 44, type: !32)
!13972 = !DILocalVariable(name: "tmp", scope: !13969, file: !4225, line: 53, type: !32)
!13973 = distinct !DILocation(line: 31, column: 8, scope: !13963)
!13974 = !{i64 2612442}
!13975 = !DILocation(line: 0, scope: !13969, inlinedAt: !13973)
!13976 = !DILocation(line: 32, column: 2, scope: !13963)
!13977 = !DILocation(line: 32, column: 2, scope: !13978)
!13978 = distinct !DILexicalBlock(scope: !13979, file: !13964, line: 32, column: 2)
!13979 = distinct !DILexicalBlock(scope: !13963, file: !13964, line: 32, column: 2)
!13980 = distinct !{!13980, !13981, !13982}
!13981 = !DILocation(line: 32, column: 2, scope: !13979)
!13982 = !DILocation(line: 34, column: 2, scope: !13979)
!13983 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !13964, file: !13964, line: 39, type: !13984, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3514, retainedNodes: !13986)
!13984 = !DISubroutineType(types: !13985)
!13985 = !{null, !32, !13781}
!13986 = !{!13987, !13988}
!13987 = !DILocalVariable(name: "reason", arg: 1, scope: !13983, file: !13964, line: 39, type: !32)
!13988 = !DILocalVariable(name: "esf", arg: 2, scope: !13983, file: !13964, line: 40, type: !13781)
!13989 = !DILocation(line: 0, scope: !13983)
!13990 = !DILocation(line: 45, column: 2, scope: !13991)
!13991 = distinct !DILexicalBlock(scope: !13992, file: !13964, line: 45, column: 2)
!13992 = distinct !DILexicalBlock(scope: !13993, file: !13964, line: 45, column: 2)
!13993 = distinct !DILexicalBlock(scope: !13994, file: !13964, line: 45, column: 2)
!13994 = distinct !DILexicalBlock(scope: !13983, file: !13964, line: 45, column: 2)
!13995 = !DILocation(line: 46, column: 2, scope: !13983)
!13996 = distinct !DISubprogram(name: "k_fatal_halt", scope: !13964, file: !13964, line: 81, type: !4238, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3514, retainedNodes: !13997)
!13997 = !{!13998}
!13998 = !DILocalVariable(name: "reason", arg: 1, scope: !13996, file: !13964, line: 81, type: !32)
!13999 = !DILocation(line: 0, scope: !13996)
!14000 = !DILocation(line: 83, column: 2, scope: !13996)
!14001 = distinct !DISubprogram(name: "z_fatal_error", scope: !13964, file: !13964, line: 96, type: !13984, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3514, retainedNodes: !14002)
!14002 = !{!14003, !14004, !14005, !14006}
!14003 = !DILocalVariable(name: "reason", arg: 1, scope: !14001, file: !13964, line: 96, type: !32)
!14004 = !DILocalVariable(name: "esf", arg: 2, scope: !14001, file: !13964, line: 96, type: !13781)
!14005 = !DILocalVariable(name: "key", scope: !14001, file: !13964, line: 102, type: !32)
!14006 = !DILocalVariable(name: "thread", scope: !14001, file: !13964, line: 103, type: !13825)
!14007 = !DILocation(line: 0, scope: !14001)
!14008 = !DILocation(line: 55, column: 2, scope: !13969, inlinedAt: !14009)
!14009 = distinct !DILocation(line: 102, column: 21, scope: !14001)
!14010 = !DILocation(line: 0, scope: !13969, inlinedAt: !14009)
!14011 = !DILocation(line: 104, column: 4, scope: !14001)
!14012 = !DILocation(line: 109, column: 2, scope: !14013)
!14013 = distinct !DILexicalBlock(scope: !14014, file: !13964, line: 109, column: 2)
!14014 = distinct !DILexicalBlock(scope: !14015, file: !13964, line: 109, column: 2)
!14015 = distinct !DILexicalBlock(scope: !14016, file: !13964, line: 109, column: 2)
!14016 = distinct !DILexicalBlock(scope: !14001, file: !13964, line: 109, column: 2)
!14017 = !DILocation(line: 119, column: 11, scope: !14018)
!14018 = distinct !DILexicalBlock(scope: !14001, file: !13964, line: 119, column: 6)
!14019 = !DILocation(line: 119, column: 20, scope: !14018)
!14020 = !DILocalVariable(name: "esf", arg: 1, scope: !14021, file: !8219, line: 71, type: !13781)
!14021 = distinct !DISubprogram(name: "arch_is_in_nested_exception", scope: !8219, file: !8219, line: 71, type: !14022, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3514, retainedNodes: !14024)
!14022 = !DISubroutineType(types: !14023)
!14023 = !{!422, !13781}
!14024 = !{!14020}
!14025 = !DILocation(line: 0, scope: !14021, inlinedAt: !14026)
!14026 = distinct !DILocation(line: 119, column: 23, scope: !14018)
!14027 = !DILocation(line: 73, column: 21, scope: !14021, inlinedAt: !14026)
!14028 = !DILocation(line: 73, column: 26, scope: !14021, inlinedAt: !14026)
!14029 = !DILocation(line: 73, column: 9, scope: !14021, inlinedAt: !14026)
!14030 = !DILocation(line: 119, column: 6, scope: !14001)
!14031 = !DILocation(line: 120, column: 3, scope: !14032)
!14032 = distinct !DILexicalBlock(scope: !14033, file: !13964, line: 120, column: 3)
!14033 = distinct !DILexicalBlock(scope: !14034, file: !13964, line: 120, column: 3)
!14034 = distinct !DILexicalBlock(scope: !14035, file: !13964, line: 120, column: 3)
!14035 = distinct !DILexicalBlock(scope: !14036, file: !13964, line: 120, column: 3)
!14036 = distinct !DILexicalBlock(scope: !14018, file: !13964, line: 119, column: 57)
!14037 = !DILocation(line: 121, column: 2, scope: !14036)
!14038 = !DILocation(line: 124, column: 2, scope: !14039)
!14039 = distinct !DILexicalBlock(scope: !14040, file: !13964, line: 124, column: 2)
!14040 = distinct !DILexicalBlock(scope: !14041, file: !13964, line: 124, column: 2)
!14041 = distinct !DILexicalBlock(scope: !14042, file: !13964, line: 124, column: 2)
!14042 = distinct !DILexicalBlock(scope: !14001, file: !13964, line: 124, column: 2)
!14043 = !DILocation(line: 131, column: 2, scope: !14001)
!14044 = !DILocation(line: 0, scope: !14021, inlinedAt: !14045)
!14045 = distinct !DILocation(line: 151, column: 24, scope: !14046)
!14046 = distinct !DILexicalBlock(scope: !14047, file: !13964, line: 151, column: 7)
!14047 = distinct !DILexicalBlock(scope: !14048, file: !13964, line: 146, column: 32)
!14048 = distinct !DILexicalBlock(scope: !14001, file: !13964, line: 146, column: 6)
!14049 = !DILocation(line: 151, column: 7, scope: !14047)
!14050 = !DILocation(line: 151, column: 21, scope: !14046)
!14051 = !DILocalVariable(name: "key", arg: 1, scope: !14052, file: !4225, line: 84, type: !32)
!14052 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4225, file: !4225, line: 84, type: !4238, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3514, retainedNodes: !14053)
!14053 = !{!14051}
!14054 = !DILocation(line: 0, scope: !14052, inlinedAt: !14055)
!14055 = distinct !DILocation(line: 186, column: 2, scope: !14001)
!14056 = !DILocation(line: 95, column: 2, scope: !14052, inlinedAt: !14055)
!14057 = !{i64 2613259}
!14058 = !DILocation(line: 189, column: 3, scope: !14059)
!14059 = distinct !DILexicalBlock(scope: !14060, file: !13964, line: 188, column: 41)
!14060 = distinct !DILexicalBlock(scope: !14001, file: !13964, line: 188, column: 6)
!14061 = !DILocation(line: 191, column: 1, scope: !14001)
!14062 = distinct !DISubprogram(name: "k_current_get", scope: !359, file: !359, line: 530, type: !14063, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3514, retainedNodes: !437)
!14063 = !DISubroutineType(types: !14064)
!14064 = !{!14065}
!14065 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !659, line: 347, baseType: !13825)
!14066 = !DILocation(line: 535, column: 9, scope: !14062)
!14067 = !DILocation(line: 535, column: 2, scope: !14062)
!14068 = distinct !DISubprogram(name: "reason_to_str", scope: !13964, file: !13964, line: 62, type: !14069, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3514, retainedNodes: !14071)
!14069 = !DISubroutineType(types: !14070)
!14070 = !{!105, !32}
!14071 = !{!14072}
!14072 = !DILocalVariable(name: "reason", arg: 1, scope: !14068, file: !13964, line: 62, type: !32)
!14073 = !DILocation(line: 0, scope: !14068)
!14074 = !DILocation(line: 64, column: 2, scope: !14068)
!14075 = !DILocation(line: 0, scope: !14076)
!14076 = distinct !DILexicalBlock(scope: !14068, file: !13964, line: 64, column: 18)
!14077 = !DILocation(line: 78, column: 1, scope: !14068)
!14078 = distinct !DISubprogram(name: "thread_name_get", scope: !13964, file: !13964, line: 51, type: !14079, scopeLine: 52, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3514, retainedNodes: !14081)
!14079 = !DISubroutineType(types: !14080)
!14080 = !{!105, !13825}
!14081 = !{!14082, !14083}
!14082 = !DILocalVariable(name: "thread", arg: 1, scope: !14078, file: !13964, line: 51, type: !13825)
!14083 = !DILocalVariable(name: "thread_name", scope: !14078, file: !13964, line: 53, type: !105)
!14084 = !DILocation(line: 0, scope: !14078)
!14085 = !DILocation(line: 53, column: 36, scope: !14078)
!14086 = !DILocation(line: 53, column: 28, scope: !14078)
!14087 = !DILocation(line: 53, column: 47, scope: !14078)
!14088 = !DILocation(line: 55, column: 19, scope: !14089)
!14089 = distinct !DILexicalBlock(scope: !14078, file: !13964, line: 55, column: 6)
!14090 = !DILocation(line: 55, column: 28, scope: !14089)
!14091 = !DILocation(line: 55, column: 32, scope: !14089)
!14092 = !DILocation(line: 55, column: 47, scope: !14089)
!14093 = !DILocation(line: 55, column: 6, scope: !14078)
!14094 = !DILocation(line: 57, column: 2, scope: !14095)
!14095 = distinct !DILexicalBlock(scope: !14089, file: !13964, line: 55, column: 57)
!14096 = !DILocation(line: 59, column: 2, scope: !14078)
!14097 = distinct !DISubprogram(name: "k_thread_abort", scope: !3947, file: !3947, line: 188, type: !14098, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3514, retainedNodes: !14100)
!14098 = !DISubroutineType(types: !14099)
!14099 = !{null, !14065}
!14100 = !{!14101}
!14101 = !DILocalVariable(name: "thread", arg: 1, scope: !14097, file: !3947, line: 188, type: !14065)
!14102 = !DILocation(line: 0, scope: !14097)
!14103 = !DILocation(line: 197, column: 2, scope: !14104)
!14104 = distinct !DILexicalBlock(scope: !14097, file: !3947, line: 197, column: 2)
!14105 = !{i64 2155456086}
!14106 = !DILocation(line: 198, column: 2, scope: !14097)
!14107 = !DILocation(line: 199, column: 1, scope: !14097)
!14108 = distinct !DISubprogram(name: "z_current_get", scope: !3947, file: !3947, line: 173, type: !14063, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3514, retainedNodes: !437)
!14109 = !DILocation(line: 180, column: 2, scope: !14110)
!14110 = distinct !DILexicalBlock(scope: !14108, file: !3947, line: 180, column: 2)
!14111 = !{i64 2155456018}
!14112 = !DILocation(line: 181, column: 9, scope: !14108)
!14113 = !DILocation(line: 181, column: 2, scope: !14108)
!14114 = distinct !DISubprogram(name: "z_early_memset", scope: !2305, file: !2305, line: 108, type: !14115, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2301, retainedNodes: !14117)
!14115 = !DISubroutineType(types: !14116)
!14116 = !{null, !104, !108, !439}
!14117 = !{!14118, !14119, !14120}
!14118 = !DILocalVariable(name: "dst", arg: 1, scope: !14114, file: !2305, line: 108, type: !104)
!14119 = !DILocalVariable(name: "c", arg: 2, scope: !14114, file: !2305, line: 108, type: !108)
!14120 = !DILocalVariable(name: "n", arg: 3, scope: !14114, file: !2305, line: 108, type: !439)
!14121 = !DILocation(line: 0, scope: !14114)
!14122 = !DILocation(line: 110, column: 9, scope: !14114)
!14123 = !DILocation(line: 111, column: 1, scope: !14114)
!14124 = distinct !DISubprogram(name: "z_early_memcpy", scope: !2305, file: !2305, line: 121, type: !14125, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2301, retainedNodes: !14127)
!14125 = !DISubroutineType(types: !14126)
!14126 = !{null, !104, !13, !439}
!14127 = !{!14128, !14129, !14130}
!14128 = !DILocalVariable(name: "dst", arg: 1, scope: !14124, file: !2305, line: 121, type: !104)
!14129 = !DILocalVariable(name: "src", arg: 2, scope: !14124, file: !2305, line: 121, type: !13)
!14130 = !DILocalVariable(name: "n", arg: 3, scope: !14124, file: !2305, line: 121, type: !439)
!14131 = !DILocation(line: 0, scope: !14124)
!14132 = !DILocation(line: 123, column: 9, scope: !14124)
!14133 = !DILocation(line: 124, column: 1, scope: !14124)
!14134 = distinct !DISubprogram(name: "z_bss_zero", scope: !2305, file: !2305, line: 132, type: !3551, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2301, retainedNodes: !437)
!14135 = !DILocation(line: 143, column: 2, scope: !14134)
!14136 = !DILocation(line: 145, column: 2, scope: !14134)
!14137 = !DILocation(line: 168, column: 1, scope: !14134)
!14138 = distinct !DISubprogram(name: "z_init_cpu", scope: !2305, file: !2305, line: 372, type: !9781, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2301, retainedNodes: !14139)
!14139 = !{!14140}
!14140 = !DILocalVariable(name: "id", arg: 1, scope: !14138, file: !2305, line: 372, type: !108)
!14141 = !DILocation(line: 0, scope: !14138)
!14142 = !DILocation(line: 374, column: 2, scope: !14138)
!14143 = !DILocation(line: 375, column: 34, scope: !14138)
!14144 = !DILocation(line: 375, column: 19, scope: !14138)
!14145 = !DILocation(line: 375, column: 31, scope: !14138)
!14146 = !DILocation(line: 376, column: 24, scope: !14138)
!14147 = !DILocation(line: 376, column: 19, scope: !14138)
!14148 = !DILocation(line: 376, column: 22, scope: !14138)
!14149 = !DILocation(line: 378, column: 26, scope: !14138)
!14150 = !DILocation(line: 378, column: 4, scope: !14138)
!14151 = !DILocation(line: 378, column: 50, scope: !14138)
!14152 = !DILocation(line: 377, column: 19, scope: !14138)
!14153 = !DILocation(line: 377, column: 29, scope: !14138)
!14154 = !DILocation(line: 384, column: 1, scope: !14138)
!14155 = distinct !DISubprogram(name: "init_idle_thread", scope: !2305, file: !2305, line: 343, type: !9781, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2301, retainedNodes: !14156)
!14156 = !{!14157, !14158, !14159, !14162}
!14157 = !DILocalVariable(name: "i", arg: 1, scope: !14155, file: !2305, line: 343, type: !108)
!14158 = !DILocalVariable(name: "thread", scope: !14155, file: !2305, line: 345, type: !2397)
!14159 = !DILocalVariable(name: "stack", scope: !14155, file: !2305, line: 346, type: !14160)
!14160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14161, size: 32)
!14161 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !5318, line: 44, baseType: !2511)
!14162 = !DILocalVariable(name: "tname", scope: !14155, file: !2305, line: 358, type: !443)
!14163 = !DILocation(line: 0, scope: !14155)
!14164 = !DILocation(line: 345, column: 29, scope: !14155)
!14165 = !DILocation(line: 346, column: 28, scope: !14155)
!14166 = !DILocation(line: 362, column: 37, scope: !14155)
!14167 = !DILocation(line: 362, column: 36, scope: !14155)
!14168 = !DILocation(line: 361, column: 2, scope: !14155)
!14169 = !DILocation(line: 365, column: 2, scope: !14155)
!14170 = !DILocation(line: 370, column: 1, scope: !14155)
!14171 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !2512, file: !2512, line: 331, type: !14172, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2301, retainedNodes: !14174)
!14172 = !DISubroutineType(types: !14173)
!14173 = !{!443, !14160}
!14174 = !{!14175}
!14175 = !DILocalVariable(name: "sym", arg: 1, scope: !14171, file: !2512, line: 331, type: !14160)
!14176 = !DILocation(line: 0, scope: !14171)
!14177 = !DILocation(line: 333, column: 21, scope: !14171)
!14178 = !DILocation(line: 333, column: 2, scope: !14171)
!14179 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !14180, file: !14180, line: 155, type: !14181, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2301, retainedNodes: !14183)
!14180 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14181 = !DISubroutineType(types: !14182)
!14182 = !{null, !2397}
!14183 = !{!14184}
!14184 = !DILocalVariable(name: "thread", arg: 1, scope: !14179, file: !14180, line: 155, type: !2397)
!14185 = !DILocation(line: 0, scope: !14179)
!14186 = !DILocation(line: 157, column: 15, scope: !14179)
!14187 = !DILocation(line: 157, column: 28, scope: !14179)
!14188 = !DILocation(line: 158, column: 1, scope: !14179)
!14189 = distinct !DISubprogram(name: "z_cstart", scope: !2305, file: !2305, line: 501, type: !3551, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2301, retainedNodes: !14190)
!14190 = !{!14191}
!14191 = !DILocalVariable(name: "dummy_thread", scope: !14189, file: !2305, line: 518, type: !2398)
!14192 = !DILocation(line: 507, column: 2, scope: !14189)
!14193 = !DILocation(line: 43, column: 14, scope: !14194, inlinedAt: !14198)
!14194 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !14195, file: !14195, line: 40, type: !3551, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2301, retainedNodes: !14196)
!14195 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14196 = !{!14197}
!14197 = !DILocalVariable(name: "msp", scope: !14194, file: !14195, line: 42, type: !113)
!14198 = distinct !DILocation(line: 44, column: 2, scope: !14199, inlinedAt: !14201)
!14199 = distinct !DISubprogram(name: "arch_kernel_init", scope: !14200, file: !14200, line: 42, type: !3551, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2301, retainedNodes: !437)
!14200 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14201 = distinct !DILocation(line: 510, column: 2, scope: !14189)
!14202 = !DILocation(line: 43, column: 3, scope: !14194, inlinedAt: !14198)
!14203 = !DILocation(line: 43, column: 60, scope: !14194, inlinedAt: !14198)
!14204 = !DILocation(line: 0, scope: !14194, inlinedAt: !14198)
!14205 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !14206, file: !7201, line: 1153, type: !113)
!14206 = distinct !DISubprogram(name: "__set_MSP", scope: !7201, file: !7201, line: 1153, type: !7292, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2301, retainedNodes: !14207)
!14207 = !{!14205}
!14208 = !DILocation(line: 0, scope: !14206, inlinedAt: !14209)
!14209 = distinct !DILocation(line: 46, column: 2, scope: !14194, inlinedAt: !14198)
!14210 = !DILocation(line: 1155, column: 3, scope: !14206, inlinedAt: !14209)
!14211 = !{i64 4148038}
!14212 = !DILocation(line: 62, column: 11, scope: !14194, inlinedAt: !14198)
!14213 = !DILocation(line: 102, column: 2, scope: !14214, inlinedAt: !14215)
!14214 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !8219, file: !8219, line: 97, type: !3551, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2301, retainedNodes: !437)
!14215 = distinct !DILocation(line: 45, column: 2, scope: !14199, inlinedAt: !14201)
!14216 = !DILocation(line: 108, column: 2, scope: !14214, inlinedAt: !14215)
!14217 = !DILocation(line: 112, column: 2, scope: !14214, inlinedAt: !14215)
!14218 = !DILocation(line: 113, column: 2, scope: !14214, inlinedAt: !14215)
!14219 = !DILocation(line: 114, column: 2, scope: !14214, inlinedAt: !14215)
!14220 = !DILocation(line: 116, column: 2, scope: !14214, inlinedAt: !14215)
!14221 = !DILocation(line: 123, column: 13, scope: !14214, inlinedAt: !14215)
!14222 = !DILocation(line: 46, column: 2, scope: !14199, inlinedAt: !14201)
!14223 = !DILocation(line: 47, column: 2, scope: !14199, inlinedAt: !14201)
!14224 = !DILocation(line: 174, column: 12, scope: !14225, inlinedAt: !14226)
!14225 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !8219, file: !8219, line: 169, type: !3551, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2301, retainedNodes: !437)
!14226 = distinct !DILocation(line: 48, column: 2, scope: !14199, inlinedAt: !14201)
!14227 = !DILocation(line: 179, column: 12, scope: !14225, inlinedAt: !14226)
!14228 = !DILocation(line: 50, column: 2, scope: !14199, inlinedAt: !14201)
!14229 = !DILocation(line: 57, column: 2, scope: !14199, inlinedAt: !14201)
!14230 = !DILocation(line: 518, column: 2, scope: !14189)
!14231 = !DILocation(line: 518, column: 18, scope: !14189)
!14232 = !DILocation(line: 520, column: 2, scope: !14189)
!14233 = !DILocation(line: 523, column: 2, scope: !14189)
!14234 = !DILocation(line: 526, column: 2, scope: !14189)
!14235 = !DILocation(line: 527, column: 2, scope: !14189)
!14236 = !DILocation(line: 543, column: 24, scope: !14189)
!14237 = !DILocation(line: 543, column: 2, scope: !14189)
!14238 = !DILocation(line: 0, scope: !2536)
!14239 = !DILocation(line: 246, column: 15, scope: !2554)
!14240 = !DILocation(line: 246, column: 36, scope: !2553)
!14241 = !DILocation(line: 246, column: 2, scope: !2554)
!14242 = !DILocation(line: 247, column: 37, scope: !2552)
!14243 = !DILocation(line: 0, scope: !2552)
!14244 = !DILocation(line: 248, column: 19, scope: !2552)
!14245 = !DILocation(line: 248, column: 12, scope: !2552)
!14246 = !DILocation(line: 250, column: 11, scope: !14247)
!14247 = distinct !DILexicalBlock(scope: !2552, file: !2305, line: 250, column: 7)
!14248 = !DILocation(line: 250, column: 7, scope: !2552)
!14249 = !DILocation(line: 254, column: 11, scope: !14250)
!14250 = distinct !DILexicalBlock(scope: !14251, file: !2305, line: 254, column: 8)
!14251 = distinct !DILexicalBlock(scope: !14247, file: !2305, line: 250, column: 20)
!14252 = !DILocation(line: 254, column: 8, scope: !14251)
!14253 = !DILocation(line: 255, column: 9, scope: !14254)
!14254 = distinct !DILexicalBlock(scope: !14250, file: !2305, line: 254, column: 17)
!14255 = !DILocation(line: 258, column: 9, scope: !14254)
!14256 = !DILocation(line: 261, column: 28, scope: !14254)
!14257 = !DILocation(line: 261, column: 10, scope: !14254)
!14258 = !DILocation(line: 261, column: 17, scope: !14254)
!14259 = !DILocation(line: 261, column: 26, scope: !14254)
!14260 = !DILocation(line: 262, column: 4, scope: !14254)
!14261 = !DILocation(line: 263, column: 9, scope: !14251)
!14262 = !DILocation(line: 263, column: 16, scope: !14251)
!14263 = !DILocation(line: 263, column: 28, scope: !14251)
!14264 = !DILocation(line: 264, column: 3, scope: !14251)
!14265 = !DILocation(line: 246, column: 60, scope: !2553)
!14266 = distinct !{!14266, !14241, !14267}
!14267 = !DILocation(line: 265, column: 2, scope: !2554)
!14268 = !DILocation(line: 266, column: 1, scope: !2536)
!14269 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !802, file: !802, line: 1814, type: !7235, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2301, retainedNodes: !14270)
!14270 = !{!14271, !14272}
!14271 = !DILocalVariable(name: "IRQn", arg: 1, scope: !14269, file: !802, line: 1814, type: !1193)
!14272 = !DILocalVariable(name: "priority", arg: 2, scope: !14269, file: !802, line: 1814, type: !113)
!14273 = !DILocation(line: 0, scope: !14269)
!14274 = !DILocation(line: 1822, column: 48, scope: !14275)
!14275 = distinct !DILexicalBlock(scope: !14276, file: !802, line: 1821, column: 3)
!14276 = distinct !DILexicalBlock(scope: !14269, file: !802, line: 1816, column: 7)
!14277 = !DILocation(line: 1822, column: 32, scope: !14275)
!14278 = !DILocation(line: 1822, column: 40, scope: !14275)
!14279 = !DILocation(line: 1822, column: 5, scope: !14275)
!14280 = !DILocation(line: 1822, column: 46, scope: !14275)
!14281 = !DILocation(line: 1824, column: 1, scope: !14269)
!14282 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !14200, file: !14200, line: 32, type: !3551, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !437)
!14283 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !14284, file: !14284, line: 215, type: !14181, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2301, retainedNodes: !14285)
!14284 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14285 = !{!14286}
!14286 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !14283, file: !14284, line: 215, type: !2397)
!14287 = !DILocation(line: 0, scope: !14283)
!14288 = !DILocation(line: 217, column: 21, scope: !14283)
!14289 = !DILocation(line: 217, column: 34, scope: !14283)
!14290 = !DILocation(line: 221, column: 21, scope: !14283)
!14291 = !DILocation(line: 221, column: 34, scope: !14283)
!14292 = !DILocation(line: 223, column: 27, scope: !14283)
!14293 = !DILocation(line: 223, column: 33, scope: !14283)
!14294 = !DILocation(line: 224, column: 27, scope: !14283)
!14295 = !DILocation(line: 224, column: 32, scope: !14283)
!14296 = !DILocation(line: 232, column: 16, scope: !14283)
!14297 = !DILocation(line: 232, column: 30, scope: !14283)
!14298 = !DILocation(line: 239, column: 24, scope: !14283)
!14299 = !DILocation(line: 240, column: 1, scope: !14283)
!14300 = distinct !DISubprogram(name: "prepare_multithreading", scope: !2305, file: !2305, line: 399, type: !14301, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2301, retainedNodes: !14303)
!14301 = !DISubroutineType(types: !14302)
!14302 = !{!443}
!14303 = !{!14304}
!14304 = !DILocalVariable(name: "stack_ptr", scope: !14300, file: !2305, line: 401, type: !443)
!14305 = !DILocation(line: 404, column: 2, scope: !14300)
!14306 = !DILocation(line: 416, column: 24, scope: !14300)
!14307 = !DILocation(line: 418, column: 14, scope: !14300)
!14308 = !DILocation(line: 0, scope: !14300)
!14309 = !DILocation(line: 423, column: 2, scope: !14300)
!14310 = !DILocation(line: 424, column: 2, scope: !14300)
!14311 = !DILocation(line: 426, column: 2, scope: !14300)
!14312 = !DILocation(line: 428, column: 2, scope: !14300)
!14313 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !2305, file: !2305, line: 432, type: !14314, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2301, retainedNodes: !14316)
!14314 = !DISubroutineType(types: !14315)
!14315 = !{null, !443}
!14316 = !{!14317}
!14317 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !14313, file: !2305, line: 432, type: !443)
!14318 = !DILocation(line: 0, scope: !14313)
!14319 = !DILocation(line: 435, column: 2, scope: !14313)
!14320 = !DILocation(line: 445, column: 2, scope: !14313)
!14321 = distinct !DISubprogram(name: "bg_thread_main", scope: !2305, file: !2305, line: 277, type: !5320, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2301, retainedNodes: !14322)
!14322 = !{!14323, !14324, !14325}
!14323 = !DILocalVariable(name: "unused1", arg: 1, scope: !14321, file: !2305, line: 277, type: !104)
!14324 = !DILocalVariable(name: "unused2", arg: 2, scope: !14321, file: !2305, line: 277, type: !104)
!14325 = !DILocalVariable(name: "unused3", arg: 3, scope: !14321, file: !2305, line: 277, type: !104)
!14326 = !DILocation(line: 0, scope: !14321)
!14327 = !DILocation(line: 291, column: 20, scope: !14321)
!14328 = !DILocation(line: 293, column: 2, scope: !14321)
!14329 = !DILocation(line: 297, column: 2, scope: !14321)
!14330 = !DILocation(line: 305, column: 2, scope: !14321)
!14331 = !DILocation(line: 307, column: 2, scope: !14321)
!14332 = !DILocation(line: 330, column: 8, scope: !14321)
!14333 = !DILocation(line: 333, column: 34, scope: !14321)
!14334 = !DILocation(line: 339, column: 1, scope: !14321)
!14335 = distinct !DISubprogram(name: "k_thread_foreach", scope: !2567, file: !2567, line: 45, type: !14336, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !14344)
!14336 = !DISubroutineType(types: !14337)
!14337 = !{null, !14338, !104}
!14338 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !359, line: 103, baseType: !14339)
!14339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14340, size: 32)
!14340 = !DISubroutineType(types: !14341)
!14341 = !{null, !14342, !104}
!14342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14343, size: 32)
!14343 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2572)
!14344 = !{!14345, !14346}
!14345 = !DILocalVariable(name: "user_cb", arg: 1, scope: !14335, file: !2567, line: 45, type: !14338)
!14346 = !DILocalVariable(name: "user_data", arg: 2, scope: !14335, file: !2567, line: 45, type: !104)
!14347 = !DILocation(line: 0, scope: !14335)
!14348 = !DILocation(line: 71, column: 1, scope: !14335)
!14349 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !2567, file: !2567, line: 73, type: !14336, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !14350)
!14350 = !{!14351, !14352}
!14351 = !DILocalVariable(name: "user_cb", arg: 1, scope: !14349, file: !2567, line: 73, type: !14338)
!14352 = !DILocalVariable(name: "user_data", arg: 2, scope: !14349, file: !2567, line: 73, type: !104)
!14353 = !DILocation(line: 0, scope: !14349)
!14354 = !DILocation(line: 95, column: 1, scope: !14349)
!14355 = distinct !DISubprogram(name: "k_is_in_isr", scope: !2567, file: !2567, line: 97, type: !8220, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !437)
!14356 = !DILocation(line: 1031, column: 3, scope: !14357, inlinedAt: !14360)
!14357 = distinct !DISubprogram(name: "__get_IPSR", scope: !7201, file: !7201, line: 1027, type: !7282, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !14358)
!14358 = !{!14359}
!14359 = !DILocalVariable(name: "result", scope: !14357, file: !7201, line: 1029, type: !113)
!14360 = distinct !DILocation(line: 48, column: 10, scope: !14361, inlinedAt: !14362)
!14361 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8219, file: !8219, line: 46, type: !8220, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !437)
!14362 = distinct !DILocation(line: 99, column: 9, scope: !14355)
!14363 = !{i64 4153689}
!14364 = !DILocation(line: 0, scope: !14357, inlinedAt: !14360)
!14365 = !DILocation(line: 48, column: 9, scope: !14361, inlinedAt: !14362)
!14366 = !DILocation(line: 99, column: 2, scope: !14355)
!14367 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !2567, file: !2567, line: 106, type: !3551, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !437)
!14368 = !DILocation(line: 108, column: 2, scope: !14367)
!14369 = !DILocation(line: 108, column: 17, scope: !14367)
!14370 = !DILocation(line: 108, column: 30, scope: !14367)
!14371 = !DILocation(line: 109, column: 1, scope: !14367)
!14372 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !2567, file: !2567, line: 116, type: !3551, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !437)
!14373 = !DILocation(line: 118, column: 2, scope: !14372)
!14374 = !DILocation(line: 118, column: 17, scope: !14372)
!14375 = !DILocation(line: 118, column: 30, scope: !14372)
!14376 = !DILocation(line: 119, column: 1, scope: !14372)
!14377 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !2567, file: !2567, line: 126, type: !8220, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !437)
!14378 = !DILocation(line: 128, column: 10, scope: !14377)
!14379 = !DILocation(line: 128, column: 25, scope: !14377)
!14380 = !DILocation(line: 128, column: 38, scope: !14377)
!14381 = !DILocation(line: 128, column: 53, scope: !14377)
!14382 = !DILocation(line: 128, column: 2, scope: !14377)
!14383 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !2567, file: !2567, line: 187, type: !14384, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !14386)
!14384 = !DISubroutineType(types: !14385)
!14385 = !{!108, !2571, !105}
!14386 = !{!14387, !14388}
!14387 = !DILocalVariable(name: "thread", arg: 1, scope: !14383, file: !2567, line: 187, type: !2571)
!14388 = !DILocalVariable(name: "value", arg: 2, scope: !14383, file: !2567, line: 187, type: !105)
!14389 = !DILocation(line: 0, scope: !14383)
!14390 = !DILocation(line: 206, column: 2, scope: !14383)
!14391 = distinct !DISubprogram(name: "k_thread_name_get", scope: !2567, file: !2567, line: 238, type: !14392, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !14394)
!14392 = !DISubroutineType(types: !14393)
!14393 = !{!105, !2571}
!14394 = !{!14395}
!14395 = !DILocalVariable(name: "thread", arg: 1, scope: !14391, file: !2567, line: 238, type: !2571)
!14396 = !DILocation(line: 0, scope: !14391)
!14397 = !DILocation(line: 244, column: 2, scope: !14391)
!14398 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !2567, file: !2567, line: 248, type: !14399, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !14401)
!14399 = !DISubroutineType(types: !14400)
!14400 = !{!108, !2570, !443, !439}
!14401 = !{!14402, !14403, !14404}
!14402 = !DILocalVariable(name: "thread", arg: 1, scope: !14398, file: !2567, line: 248, type: !2570)
!14403 = !DILocalVariable(name: "buf", arg: 2, scope: !14398, file: !2567, line: 248, type: !443)
!14404 = !DILocalVariable(name: "size", arg: 3, scope: !14398, file: !2567, line: 248, type: !439)
!14405 = !DILocation(line: 0, scope: !14398)
!14406 = !DILocation(line: 257, column: 2, scope: !14398)
!14407 = !DILocation(line: 0, scope: !2566)
!14408 = !DILocation(line: 281, column: 11, scope: !14409)
!14409 = distinct !DILexicalBlock(scope: !2566, file: !2567, line: 281, column: 6)
!14410 = !DILocation(line: 281, column: 20, scope: !14409)
!14411 = !DILocation(line: 275, column: 45, scope: !2566)
!14412 = !DILocation(line: 285, column: 10, scope: !2566)
!14413 = !DILocation(line: 0, scope: !2687)
!14414 = !DILocation(line: 293, column: 39, scope: !14415)
!14415 = distinct !DILexicalBlock(scope: !2687, file: !2567, line: 293, column: 2)
!14416 = !DILocation(line: 293, column: 2, scope: !2687)
!14417 = !DILocation(line: 273, column: 14, scope: !2566)
!14418 = !DILocation(line: 309, column: 2, scope: !2566)
!14419 = !DILocation(line: 309, column: 11, scope: !2566)
!14420 = !DILocation(line: 311, column: 2, scope: !2566)
!14421 = !DILocation(line: 293, column: 26, scope: !14415)
!14422 = !DILocation(line: 294, column: 9, scope: !14423)
!14423 = distinct !DILexicalBlock(scope: !14415, file: !2567, line: 293, column: 54)
!14424 = !DILocation(line: 295, column: 21, scope: !14425)
!14425 = distinct !DILexicalBlock(scope: !14423, file: !2567, line: 295, column: 7)
!14426 = !DILocation(line: 295, column: 28, scope: !14425)
!14427 = !DILocation(line: 295, column: 7, scope: !14423)
!14428 = !DILocation(line: 299, column: 25, scope: !14423)
!14429 = !DILocation(line: 299, column: 41, scope: !14423)
!14430 = !DILocation(line: 300, column: 7, scope: !14423)
!14431 = !DILocation(line: 300, column: 26, scope: !14423)
!14432 = !DILocation(line: 299, column: 10, scope: !14423)
!14433 = !DILocation(line: 299, column: 7, scope: !14423)
!14434 = !DILocation(line: 302, column: 16, scope: !14423)
!14435 = !DILocation(line: 304, column: 20, scope: !14436)
!14436 = distinct !DILexicalBlock(scope: !14423, file: !2567, line: 304, column: 7)
!14437 = !DILocation(line: 304, column: 7, scope: !14423)
!14438 = !DILocation(line: 305, column: 26, scope: !14439)
!14439 = distinct !DILexicalBlock(scope: !14436, file: !2567, line: 304, column: 26)
!14440 = !DILocation(line: 305, column: 42, scope: !14439)
!14441 = !DILocation(line: 305, column: 11, scope: !14439)
!14442 = !DILocation(line: 305, column: 8, scope: !14439)
!14443 = !DILocation(line: 306, column: 3, scope: !14439)
!14444 = !DILocation(line: 293, column: 50, scope: !14415)
!14445 = !DILocation(line: 312, column: 1, scope: !2566)
!14446 = distinct !DISubprogram(name: "copy_bytes", scope: !2567, file: !2567, line: 261, type: !14447, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !14449)
!14447 = !DISubroutineType(types: !14448)
!14448 = !{!439, !443, !439, !105, !439}
!14449 = !{!14450, !14451, !14452, !14453, !14454}
!14450 = !DILocalVariable(name: "dest", arg: 1, scope: !14446, file: !2567, line: 261, type: !443)
!14451 = !DILocalVariable(name: "dest_size", arg: 2, scope: !14446, file: !2567, line: 261, type: !439)
!14452 = !DILocalVariable(name: "src", arg: 3, scope: !14446, file: !2567, line: 261, type: !105)
!14453 = !DILocalVariable(name: "src_size", arg: 4, scope: !14446, file: !2567, line: 261, type: !439)
!14454 = !DILocalVariable(name: "bytes_to_copy", scope: !14446, file: !2567, line: 263, type: !439)
!14455 = !DILocation(line: 0, scope: !14446)
!14456 = !DILocation(line: 265, column: 18, scope: !14446)
!14457 = !DILocation(line: 266, column: 2, scope: !14446)
!14458 = !DILocation(line: 268, column: 2, scope: !14446)
!14459 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !2567, file: !2567, line: 383, type: !14460, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !14462)
!14460 = !DISubroutineType(types: !14461)
!14461 = !{null, !2571}
!14462 = !{!14463}
!14463 = !DILocalVariable(name: "thread", arg: 1, scope: !14459, file: !2567, line: 383, type: !2571)
!14464 = !DILocation(line: 0, scope: !14459)
!14465 = !DILocation(line: 387, column: 2, scope: !14459)
!14466 = !DILocation(line: 388, column: 1, scope: !14459)
!14467 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !2567, file: !2567, line: 528, type: !14468, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !14475)
!14468 = !DISubroutineType(types: !14469)
!14469 = !{!443, !2571, !14470, !439, !5317, !104, !104, !104, !108, !113, !105}
!14470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14471, size: 32)
!14471 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !5318, line: 44, baseType: !14472)
!14472 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !2512, line: 47, size: 8, elements: !14473)
!14473 = !{!14474}
!14474 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !14472, file: !2512, line: 48, baseType: !107, size: 8)
!14475 = !{!14476, !14477, !14478, !14479, !14480, !14481, !14482, !14483, !14484, !14485, !14486}
!14476 = !DILocalVariable(name: "new_thread", arg: 1, scope: !14467, file: !2567, line: 528, type: !2571)
!14477 = !DILocalVariable(name: "stack", arg: 2, scope: !14467, file: !2567, line: 529, type: !14470)
!14478 = !DILocalVariable(name: "stack_size", arg: 3, scope: !14467, file: !2567, line: 529, type: !439)
!14479 = !DILocalVariable(name: "entry", arg: 4, scope: !14467, file: !2567, line: 530, type: !5317)
!14480 = !DILocalVariable(name: "p1", arg: 5, scope: !14467, file: !2567, line: 531, type: !104)
!14481 = !DILocalVariable(name: "p2", arg: 6, scope: !14467, file: !2567, line: 531, type: !104)
!14482 = !DILocalVariable(name: "p3", arg: 7, scope: !14467, file: !2567, line: 531, type: !104)
!14483 = !DILocalVariable(name: "prio", arg: 8, scope: !14467, file: !2567, line: 532, type: !108)
!14484 = !DILocalVariable(name: "options", arg: 9, scope: !14467, file: !2567, line: 532, type: !113)
!14485 = !DILocalVariable(name: "name", arg: 10, scope: !14467, file: !2567, line: 532, type: !105)
!14486 = !DILocalVariable(name: "stack_ptr", scope: !14467, file: !2567, line: 534, type: !443)
!14487 = !DILocation(line: 0, scope: !14467)
!14488 = !DILocation(line: 550, column: 28, scope: !14467)
!14489 = !DILocation(line: 550, column: 2, scope: !14467)
!14490 = !DILocation(line: 553, column: 34, scope: !14467)
!14491 = !DILocation(line: 553, column: 2, scope: !14467)
!14492 = !DILocation(line: 554, column: 14, scope: !14467)
!14493 = !DILocation(line: 564, column: 2, scope: !14467)
!14494 = !DILocation(line: 567, column: 14, scope: !14467)
!14495 = !DILocation(line: 567, column: 24, scope: !14467)
!14496 = !DILocation(line: 612, column: 7, scope: !14497)
!14497 = distinct !DILexicalBlock(scope: !14467, file: !2567, line: 612, column: 6)
!14498 = !DILocation(line: 612, column: 6, scope: !14467)
!14499 = !DILocation(line: 627, column: 40, scope: !14467)
!14500 = !DILocation(line: 637, column: 2, scope: !14467)
!14501 = !DILocation(line: 613, column: 15, scope: !14502)
!14502 = distinct !DILexicalBlock(scope: !14497, file: !2567, line: 612, column: 17)
!14503 = !DILocation(line: 613, column: 29, scope: !14502)
!14504 = !DILocation(line: 638, column: 1, scope: !14467)
!14505 = distinct !DISubprogram(name: "z_waitq_init", scope: !14506, file: !14506, line: 47, type: !14507, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !14509)
!14506 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14507 = !DISubroutineType(types: !14508)
!14508 = !{null, !2602}
!14509 = !{!14510}
!14510 = !DILocalVariable(name: "w", arg: 1, scope: !14505, file: !14506, line: 47, type: !2602)
!14511 = !DILocation(line: 0, scope: !14505)
!14512 = !DILocation(line: 49, column: 21, scope: !14505)
!14513 = !DILocation(line: 49, column: 2, scope: !14505)
!14514 = !DILocation(line: 50, column: 1, scope: !14505)
!14515 = distinct !DISubprogram(name: "z_init_thread_base", scope: !2567, file: !2567, line: 791, type: !14516, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !14519)
!14516 = !DISubroutineType(types: !14517)
!14517 = !{null, !14518, !108, !113, !32}
!14518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2575, size: 32)
!14519 = !{!14520, !14521, !14522, !14523}
!14520 = !DILocalVariable(name: "thread_base", arg: 1, scope: !14515, file: !2567, line: 791, type: !14518)
!14521 = !DILocalVariable(name: "priority", arg: 2, scope: !14515, file: !2567, line: 791, type: !108)
!14522 = !DILocalVariable(name: "initial_state", arg: 3, scope: !14515, file: !2567, line: 792, type: !113)
!14523 = !DILocalVariable(name: "options", arg: 4, scope: !14515, file: !2567, line: 792, type: !32)
!14524 = !DILocation(line: 0, scope: !14515)
!14525 = !DILocation(line: 795, column: 15, scope: !14515)
!14526 = !DILocation(line: 795, column: 25, scope: !14515)
!14527 = !DILocation(line: 796, column: 30, scope: !14515)
!14528 = !DILocation(line: 796, column: 15, scope: !14515)
!14529 = !DILocation(line: 796, column: 28, scope: !14515)
!14530 = !DILocation(line: 797, column: 30, scope: !14515)
!14531 = !DILocation(line: 797, column: 15, scope: !14515)
!14532 = !DILocation(line: 797, column: 28, scope: !14515)
!14533 = !DILocation(line: 799, column: 22, scope: !14515)
!14534 = !DILocation(line: 799, column: 15, scope: !14515)
!14535 = !DILocation(line: 799, column: 20, scope: !14515)
!14536 = !DILocation(line: 801, column: 15, scope: !14515)
!14537 = !DILocation(line: 801, column: 28, scope: !14515)
!14538 = !DILocation(line: 814, column: 2, scope: !14515)
!14539 = !DILocation(line: 815, column: 1, scope: !14515)
!14540 = distinct !DISubprogram(name: "setup_thread_stack", scope: !2567, file: !2567, line: 449, type: !14541, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !14543)
!14541 = !DISubroutineType(types: !14542)
!14542 = !{!443, !2571, !14470, !439}
!14543 = !{!14544, !14545, !14546, !14547, !14548, !14549, !14550, !14551}
!14544 = !DILocalVariable(name: "new_thread", arg: 1, scope: !14540, file: !2567, line: 449, type: !2571)
!14545 = !DILocalVariable(name: "stack", arg: 2, scope: !14540, file: !2567, line: 450, type: !14470)
!14546 = !DILocalVariable(name: "stack_size", arg: 3, scope: !14540, file: !2567, line: 450, type: !439)
!14547 = !DILocalVariable(name: "stack_obj_size", scope: !14540, file: !2567, line: 452, type: !439)
!14548 = !DILocalVariable(name: "stack_buf_size", scope: !14540, file: !2567, line: 452, type: !439)
!14549 = !DILocalVariable(name: "stack_ptr", scope: !14540, file: !2567, line: 453, type: !443)
!14550 = !DILocalVariable(name: "stack_buf_start", scope: !14540, file: !2567, line: 453, type: !443)
!14551 = !DILocalVariable(name: "delta", scope: !14540, file: !2567, line: 454, type: !439)
!14552 = !DILocation(line: 0, scope: !14540)
!14553 = !DILocation(line: 465, column: 20, scope: !14554)
!14554 = distinct !DILexicalBlock(scope: !14540, file: !2567, line: 463, column: 2)
!14555 = !DILocation(line: 466, column: 21, scope: !14554)
!14556 = !DILocation(line: 473, column: 28, scope: !14540)
!14557 = !DILocation(line: 514, column: 33, scope: !14540)
!14558 = !DILocation(line: 514, column: 25, scope: !14540)
!14559 = !DILocation(line: 514, column: 31, scope: !14540)
!14560 = !DILocation(line: 515, column: 25, scope: !14540)
!14561 = !DILocation(line: 515, column: 30, scope: !14540)
!14562 = !DILocation(line: 516, column: 25, scope: !14540)
!14563 = !DILocation(line: 516, column: 31, scope: !14540)
!14564 = !DILocation(line: 520, column: 2, scope: !14540)
!14565 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !2512, file: !2512, line: 331, type: !14566, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !14568)
!14566 = !DISubroutineType(types: !14567)
!14567 = !{!443, !14470}
!14568 = !{!14569}
!14569 = !DILocalVariable(name: "sym", arg: 1, scope: !14565, file: !2512, line: 331, type: !14470)
!14570 = !DILocation(line: 0, scope: !14565)
!14571 = !DILocation(line: 333, column: 21, scope: !14565)
!14572 = !DILocation(line: 333, column: 2, scope: !14565)
!14573 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !14574, file: !14574, line: 40, type: !14575, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !14577)
!14574 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14575 = !DISubroutineType(types: !14576)
!14576 = !{null, !14518}
!14577 = !{!14578}
!14578 = !DILocalVariable(name: "thread_base", arg: 1, scope: !14573, file: !14574, line: 40, type: !14518)
!14579 = !DILocation(line: 0, scope: !14573)
!14580 = !DILocation(line: 42, column: 31, scope: !14573)
!14581 = !DILocation(line: 42, column: 2, scope: !14573)
!14582 = !DILocation(line: 43, column: 1, scope: !14573)
!14583 = distinct !DISubprogram(name: "z_init_timeout", scope: !14574, file: !14574, line: 25, type: !2628, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !14584)
!14584 = !{!14585}
!14585 = !DILocalVariable(name: "to", arg: 1, scope: !14583, file: !14574, line: 25, type: !2630)
!14586 = !DILocation(line: 0, scope: !14583)
!14587 = !DILocation(line: 27, column: 22, scope: !14583)
!14588 = !DILocation(line: 27, column: 2, scope: !14583)
!14589 = !DILocation(line: 28, column: 1, scope: !14583)
!14590 = distinct !DISubprogram(name: "sys_dnode_init", scope: !367, file: !367, line: 211, type: !14591, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !14593)
!14591 = !DISubroutineType(types: !14592)
!14592 = !{null, !2674}
!14593 = !{!14594}
!14594 = !DILocalVariable(name: "node", arg: 1, scope: !14590, file: !367, line: 211, type: !2674)
!14595 = !DILocation(line: 0, scope: !14590)
!14596 = !DILocation(line: 213, column: 8, scope: !14590)
!14597 = !DILocation(line: 213, column: 13, scope: !14590)
!14598 = !DILocation(line: 214, column: 8, scope: !14590)
!14599 = !DILocation(line: 214, column: 13, scope: !14590)
!14600 = !DILocation(line: 215, column: 1, scope: !14590)
!14601 = distinct !DISubprogram(name: "sys_dlist_init", scope: !367, file: !367, line: 197, type: !14602, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !14605)
!14602 = !DISubroutineType(types: !14603)
!14603 = !{null, !14604}
!14604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2607, size: 32)
!14605 = !{!14606}
!14606 = !DILocalVariable(name: "list", arg: 1, scope: !14601, file: !367, line: 197, type: !14604)
!14607 = !DILocation(line: 0, scope: !14601)
!14608 = !DILocation(line: 199, column: 8, scope: !14601)
!14609 = !DILocation(line: 199, column: 13, scope: !14601)
!14610 = !DILocation(line: 200, column: 8, scope: !14601)
!14611 = !DILocation(line: 200, column: 13, scope: !14601)
!14612 = !DILocation(line: 201, column: 1, scope: !14601)
!14613 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !2567, file: !2567, line: 641, type: !14614, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !14620)
!14614 = !DISubroutineType(types: !14615)
!14615 = !{!2570, !2571, !14470, !439, !5317, !104, !104, !104, !108, !113, !14616}
!14616 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !110, line: 67, baseType: !14617)
!14617 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !110, line: 65, size: 64, elements: !14618)
!14618 = !{!14619}
!14619 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !14617, file: !110, line: 66, baseType: !109, size: 64)
!14620 = !{!14621, !14622, !14623, !14624, !14625, !14626, !14627, !14628, !14629, !14630}
!14621 = !DILocalVariable(name: "new_thread", arg: 1, scope: !14613, file: !2567, line: 641, type: !2571)
!14622 = !DILocalVariable(name: "stack", arg: 2, scope: !14613, file: !2567, line: 642, type: !14470)
!14623 = !DILocalVariable(name: "stack_size", arg: 3, scope: !14613, file: !2567, line: 643, type: !439)
!14624 = !DILocalVariable(name: "entry", arg: 4, scope: !14613, file: !2567, line: 643, type: !5317)
!14625 = !DILocalVariable(name: "p1", arg: 5, scope: !14613, file: !2567, line: 644, type: !104)
!14626 = !DILocalVariable(name: "p2", arg: 6, scope: !14613, file: !2567, line: 644, type: !104)
!14627 = !DILocalVariable(name: "p3", arg: 7, scope: !14613, file: !2567, line: 644, type: !104)
!14628 = !DILocalVariable(name: "prio", arg: 8, scope: !14613, file: !2567, line: 645, type: !108)
!14629 = !DILocalVariable(name: "options", arg: 9, scope: !14613, file: !2567, line: 645, type: !113)
!14630 = !DILocalVariable(name: "delay", arg: 10, scope: !14613, file: !2567, line: 645, type: !14616)
!14631 = !DILocation(line: 0, scope: !14613)
!14632 = !DILocation(line: 649, column: 2, scope: !14613)
!14633 = !DILocation(line: 652, column: 7, scope: !14634)
!14634 = distinct !DILexicalBlock(scope: !14613, file: !2567, line: 652, column: 6)
!14635 = !DILocation(line: 652, column: 6, scope: !14613)
!14636 = !DILocation(line: 653, column: 3, scope: !14637)
!14637 = distinct !DILexicalBlock(scope: !14634, file: !2567, line: 652, column: 39)
!14638 = !DILocation(line: 654, column: 2, scope: !14637)
!14639 = !DILocation(line: 656, column: 2, scope: !14613)
!14640 = distinct !DISubprogram(name: "schedule_new_thread", scope: !2567, file: !2567, line: 401, type: !14641, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !14643)
!14641 = !DISubroutineType(types: !14642)
!14642 = !{null, !2571, !14616}
!14643 = !{!14644, !14645}
!14644 = !DILocalVariable(name: "thread", arg: 1, scope: !14640, file: !2567, line: 401, type: !2571)
!14645 = !DILocalVariable(name: "delay", arg: 2, scope: !14640, file: !2567, line: 401, type: !14616)
!14646 = !DILocation(line: 0, scope: !14640)
!14647 = !DILocation(line: 404, column: 6, scope: !14648)
!14648 = distinct !DILexicalBlock(scope: !14640, file: !2567, line: 404, column: 6)
!14649 = !DILocation(line: 404, column: 6, scope: !14640)
!14650 = !DILocation(line: 405, column: 3, scope: !14651)
!14651 = distinct !DILexicalBlock(scope: !14648, file: !2567, line: 404, column: 38)
!14652 = !DILocation(line: 406, column: 2, scope: !14651)
!14653 = !DILocation(line: 407, column: 3, scope: !14654)
!14654 = distinct !DILexicalBlock(scope: !14648, file: !2567, line: 406, column: 9)
!14655 = !DILocation(line: 413, column: 1, scope: !14640)
!14656 = distinct !DISubprogram(name: "k_thread_start", scope: !3947, file: !3947, line: 205, type: !14657, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !14659)
!14657 = !DISubroutineType(types: !14658)
!14658 = !{null, !2570}
!14659 = !{!14660}
!14660 = !DILocalVariable(name: "thread", arg: 1, scope: !14656, file: !3947, line: 205, type: !2570)
!14661 = !DILocation(line: 0, scope: !14656)
!14662 = !DILocation(line: 214, column: 2, scope: !14663)
!14663 = distinct !DILexicalBlock(scope: !14656, file: !3947, line: 214, column: 2)
!14664 = !{i64 2155481310}
!14665 = !DILocation(line: 215, column: 2, scope: !14656)
!14666 = !DILocation(line: 216, column: 1, scope: !14656)
!14667 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !14574, file: !14574, line: 47, type: !14641, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !14668)
!14668 = !{!14669, !14670}
!14669 = !DILocalVariable(name: "thread", arg: 1, scope: !14667, file: !14574, line: 47, type: !2571)
!14670 = !DILocalVariable(name: "ticks", arg: 2, scope: !14667, file: !14574, line: 47, type: !14616)
!14671 = !DILocation(line: 0, scope: !14667)
!14672 = !DILocation(line: 49, column: 30, scope: !14667)
!14673 = !DILocation(line: 49, column: 2, scope: !14667)
!14674 = !DILocation(line: 50, column: 1, scope: !14667)
!14675 = distinct !DISubprogram(name: "z_init_static_threads", scope: !2567, file: !2567, line: 748, type: !3551, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !14676)
!14676 = !{!14677, !14695}
!14677 = !DILocalVariable(name: "thread_data", scope: !14678, file: !2567, line: 750, type: !14679)
!14678 = distinct !DILexicalBlock(scope: !14675, file: !2567, line: 750, column: 2)
!14679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14680, size: 32)
!14680 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !359, line: 620, size: 384, elements: !14681)
!14681 = !{!14682, !14683, !14684, !14685, !14686, !14687, !14688, !14689, !14690, !14691, !14692, !14694}
!14682 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !14680, file: !359, line: 621, baseType: !2571, size: 32)
!14683 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !14680, file: !359, line: 622, baseType: !14470, size: 32, offset: 32)
!14684 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !14680, file: !359, line: 623, baseType: !32, size: 32, offset: 64)
!14685 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !14680, file: !359, line: 624, baseType: !5317, size: 32, offset: 96)
!14686 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !14680, file: !359, line: 625, baseType: !104, size: 32, offset: 128)
!14687 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !14680, file: !359, line: 626, baseType: !104, size: 32, offset: 160)
!14688 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !14680, file: !359, line: 627, baseType: !104, size: 32, offset: 192)
!14689 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !14680, file: !359, line: 628, baseType: !108, size: 32, offset: 224)
!14690 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !14680, file: !359, line: 629, baseType: !113, size: 32, offset: 256)
!14691 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !14680, file: !359, line: 630, baseType: !220, size: 32, offset: 288)
!14692 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !14680, file: !359, line: 631, baseType: !14693, size: 32, offset: 320)
!14693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3551, size: 32)
!14694 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !14680, file: !359, line: 632, baseType: !105, size: 32, offset: 352)
!14695 = !DILocalVariable(name: "thread_data", scope: !14696, file: !2567, line: 781, type: !14679)
!14696 = distinct !DILexicalBlock(scope: !14675, file: !2567, line: 781, column: 2)
!14697 = !DILocation(line: 0, scope: !14678)
!14698 = !DILocation(line: 750, column: 2, scope: !14678)
!14699 = !DILocation(line: 780, column: 2, scope: !14675)
!14700 = !DILocation(line: 0, scope: !14696)
!14701 = !DILocation(line: 781, column: 2, scope: !14696)
!14702 = !DILocation(line: 752, column: 17, scope: !14703)
!14703 = distinct !DILexicalBlock(scope: !14704, file: !2567, line: 750, column: 38)
!14704 = distinct !DILexicalBlock(scope: !14678, file: !2567, line: 750, column: 2)
!14705 = !DILocation(line: 753, column: 17, scope: !14703)
!14706 = !DILocation(line: 754, column: 17, scope: !14703)
!14707 = !DILocation(line: 755, column: 17, scope: !14703)
!14708 = !DILocation(line: 756, column: 17, scope: !14703)
!14709 = !DILocation(line: 757, column: 17, scope: !14703)
!14710 = !DILocation(line: 758, column: 17, scope: !14703)
!14711 = !DILocation(line: 759, column: 17, scope: !14703)
!14712 = !DILocation(line: 760, column: 17, scope: !14703)
!14713 = !DILocation(line: 751, column: 3, scope: !14703)
!14714 = !DILocation(line: 763, column: 16, scope: !14703)
!14715 = !DILocation(line: 763, column: 29, scope: !14703)
!14716 = !DILocation(line: 763, column: 39, scope: !14703)
!14717 = !DILocation(line: 750, column: 2, scope: !14704)
!14718 = !DILocation(line: 750, column: 2, scope: !14719)
!14719 = distinct !DILexicalBlock(scope: !14704, file: !2567, line: 750, column: 2)
!14720 = distinct !{!14720, !14698, !14721}
!14721 = !DILocation(line: 764, column: 2, scope: !14678)
!14722 = !DILocation(line: 787, column: 2, scope: !14675)
!14723 = !DILocation(line: 788, column: 1, scope: !14675)
!14724 = !DILocation(line: 782, column: 20, scope: !14725)
!14725 = distinct !DILexicalBlock(scope: !14726, file: !2567, line: 782, column: 7)
!14726 = distinct !DILexicalBlock(scope: !14727, file: !2567, line: 781, column: 38)
!14727 = distinct !DILexicalBlock(scope: !14696, file: !2567, line: 781, column: 2)
!14728 = !DILocation(line: 782, column: 31, scope: !14725)
!14729 = !DILocation(line: 782, column: 7, scope: !14726)
!14730 = !DILocation(line: 783, column: 37, scope: !14731)
!14731 = distinct !DILexicalBlock(scope: !14725, file: !2567, line: 782, column: 51)
!14732 = !DILocation(line: 784, column: 10, scope: !14731)
!14733 = !DILocation(line: 783, column: 4, scope: !14731)
!14734 = !DILocation(line: 785, column: 3, scope: !14731)
!14735 = !DILocation(line: 781, column: 2, scope: !14727)
!14736 = !DILocation(line: 781, column: 2, scope: !14737)
!14737 = distinct !DILexicalBlock(scope: !14727, file: !2567, line: 781, column: 2)
!14738 = distinct !{!14738, !14701, !14739}
!14739 = !DILocation(line: 786, column: 2, scope: !14696)
!14740 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !3914, file: !3914, line: 403, type: !3915, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !14741)
!14741 = !{!14742}
!14742 = !DILocalVariable(name: "t", arg: 1, scope: !14740, file: !3914, line: 403, type: !114)
!14743 = !DILocation(line: 0, scope: !14740)
!14744 = !DILocalVariable(name: "t", arg: 1, scope: !14745, file: !3914, line: 102, type: !114)
!14745 = distinct !DISubprogram(name: "z_tmcvt", scope: !3914, file: !3914, line: 102, type: !3922, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !14746)
!14746 = !{!14744, !14747, !14748, !14749, !14750, !14751, !14752, !14753, !14754, !14755, !14756}
!14747 = !DILocalVariable(name: "from_hz", arg: 2, scope: !14745, file: !3914, line: 102, type: !113)
!14748 = !DILocalVariable(name: "to_hz", arg: 3, scope: !14745, file: !3914, line: 103, type: !113)
!14749 = !DILocalVariable(name: "const_hz", arg: 4, scope: !14745, file: !3914, line: 103, type: !422)
!14750 = !DILocalVariable(name: "result32", arg: 5, scope: !14745, file: !3914, line: 104, type: !422)
!14751 = !DILocalVariable(name: "round_up", arg: 6, scope: !14745, file: !3914, line: 104, type: !422)
!14752 = !DILocalVariable(name: "round_off", arg: 7, scope: !14745, file: !3914, line: 105, type: !422)
!14753 = !DILocalVariable(name: "mul_ratio", scope: !14745, file: !3914, line: 107, type: !422)
!14754 = !DILocalVariable(name: "div_ratio", scope: !14745, file: !3914, line: 109, type: !422)
!14755 = !DILocalVariable(name: "off", scope: !14745, file: !3914, line: 116, type: !114)
!14756 = !DILocalVariable(name: "rdivisor", scope: !14757, file: !3914, line: 119, type: !113)
!14757 = distinct !DILexicalBlock(scope: !14758, file: !3914, line: 118, column: 18)
!14758 = distinct !DILexicalBlock(scope: !14745, file: !3914, line: 118, column: 6)
!14759 = !DILocation(line: 0, scope: !14745, inlinedAt: !14760)
!14760 = distinct !DILocation(line: 406, column: 9, scope: !14740)
!14761 = !DILocation(line: 145, column: 13, scope: !14762, inlinedAt: !14760)
!14762 = distinct !DILexicalBlock(scope: !14763, file: !3914, line: 144, column: 10)
!14763 = distinct !DILexicalBlock(scope: !14764, file: !3914, line: 142, column: 7)
!14764 = distinct !DILexicalBlock(scope: !14765, file: !3914, line: 141, column: 24)
!14765 = distinct !DILexicalBlock(scope: !14766, file: !3914, line: 141, column: 13)
!14766 = distinct !DILexicalBlock(scope: !14745, file: !3914, line: 134, column: 6)
!14767 = !DILocation(line: 406, column: 2, scope: !14740)
!14768 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !2567, file: !2567, line: 817, type: !5315, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !14769)
!14769 = !{!14770, !14771, !14772, !14773}
!14770 = !DILocalVariable(name: "entry", arg: 1, scope: !14768, file: !2567, line: 817, type: !5317)
!14771 = !DILocalVariable(name: "p1", arg: 2, scope: !14768, file: !2567, line: 818, type: !104)
!14772 = !DILocalVariable(name: "p2", arg: 3, scope: !14768, file: !2567, line: 818, type: !104)
!14773 = !DILocalVariable(name: "p3", arg: 4, scope: !14768, file: !2567, line: 818, type: !104)
!14774 = !DILocation(line: 0, scope: !14768)
!14775 = !DILocation(line: 822, column: 2, scope: !14768)
!14776 = !DILocation(line: 822, column: 17, scope: !14768)
!14777 = !DILocation(line: 822, column: 30, scope: !14768)
!14778 = !DILocation(line: 823, column: 2, scope: !14768)
!14779 = !DILocation(line: 845, column: 2, scope: !14768)
!14780 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !2567, file: !2567, line: 888, type: !14781, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !14783)
!14781 = !DISubroutineType(types: !14782)
!14782 = !{!108, !2571}
!14783 = !{!14784}
!14784 = !DILocalVariable(name: "thread", arg: 1, scope: !14780, file: !2567, line: 888, type: !2571)
!14785 = !DILocation(line: 0, scope: !14780)
!14786 = !DILocation(line: 893, column: 2, scope: !14780)
!14787 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !2567, file: !2567, line: 897, type: !14788, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !14790)
!14788 = !DISubroutineType(types: !14789)
!14789 = !{!108, !2571, !32}
!14790 = !{!14791, !14792}
!14791 = !DILocalVariable(name: "thread", arg: 1, scope: !14787, file: !2567, line: 897, type: !2571)
!14792 = !DILocalVariable(name: "options", arg: 2, scope: !14787, file: !2567, line: 897, type: !32)
!14793 = !DILocation(line: 0, scope: !14787)
!14794 = !DILocation(line: 902, column: 2, scope: !14787)
!14795 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !2567, file: !2567, line: 1072, type: !14796, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !14801)
!14796 = !DISubroutineType(types: !14797)
!14797 = !{!108, !2570, !14798}
!14798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14799, size: 32)
!14799 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !659, line: 234, baseType: !14800)
!14800 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !659, line: 192, elements: !437)
!14801 = !{!14802, !14803}
!14802 = !DILocalVariable(name: "thread", arg: 1, scope: !14795, file: !2567, line: 1072, type: !2570)
!14803 = !DILocalVariable(name: "stats", arg: 2, scope: !14795, file: !2567, line: 1073, type: !14798)
!14804 = !DILocation(line: 0, scope: !14795)
!14805 = !DILocation(line: 1075, column: 14, scope: !14806)
!14806 = distinct !DILexicalBlock(scope: !14795, file: !2567, line: 1075, column: 6)
!14807 = !DILocation(line: 1075, column: 23, scope: !14806)
!14808 = !DILocation(line: 1086, column: 1, scope: !14795)
!14809 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !2567, file: !2567, line: 1088, type: !14810, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !14812)
!14810 = !DISubroutineType(types: !14811)
!14811 = !{!108, !14798}
!14812 = !{!14813}
!14813 = !DILocalVariable(name: "stats", arg: 1, scope: !14809, file: !2567, line: 1088, type: !14798)
!14814 = !DILocation(line: 0, scope: !14809)
!14815 = !DILocation(line: 1094, column: 12, scope: !14816)
!14816 = distinct !DILexicalBlock(scope: !14809, file: !2567, line: 1094, column: 6)
!14817 = !DILocation(line: 1120, column: 1, scope: !14809)
!14818 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !14819, file: !14819, line: 20, type: !3551, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3532, retainedNodes: !437)
!14819 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14820 = !DILocation(line: 30, column: 2, scope: !14818)
!14821 = !DILocation(line: 31, column: 1, scope: !14818)
!14822 = distinct !DISubprogram(name: "idle", scope: !14819, file: !14819, line: 33, type: !5320, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3532, retainedNodes: !14823)
!14823 = !{!14824, !14825, !14826}
!14824 = !DILocalVariable(name: "unused1", arg: 1, scope: !14822, file: !14819, line: 33, type: !104)
!14825 = !DILocalVariable(name: "unused2", arg: 2, scope: !14822, file: !14819, line: 33, type: !104)
!14826 = !DILocalVariable(name: "unused3", arg: 3, scope: !14822, file: !14819, line: 33, type: !104)
!14827 = !DILocation(line: 0, scope: !14822)
!14828 = !DILocation(line: 41, column: 2, scope: !14822)
!14829 = !DILocation(line: 55, column: 2, scope: !14830, inlinedAt: !14834)
!14830 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4225, file: !4225, line: 42, type: !4226, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3532, retainedNodes: !14831)
!14831 = !{!14832, !14833}
!14832 = !DILocalVariable(name: "key", scope: !14830, file: !4225, line: 44, type: !32)
!14833 = !DILocalVariable(name: "tmp", scope: !14830, file: !4225, line: 53, type: !32)
!14834 = distinct !DILocation(line: 62, column: 10, scope: !14835)
!14835 = distinct !DILexicalBlock(scope: !14822, file: !14819, line: 41, column: 15)
!14836 = !{i64 2610784}
!14837 = !DILocation(line: 0, scope: !14830, inlinedAt: !14834)
!14838 = !DILocation(line: 86, column: 3, scope: !14835)
!14839 = distinct !{!14839, !14828, !14840}
!14840 = !DILocation(line: 105, column: 2, scope: !14822)
!14841 = distinct !DISubprogram(name: "k_cpu_idle", scope: !359, file: !359, line: 5627, type: !3551, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3532, retainedNodes: !437)
!14842 = !DILocation(line: 5629, column: 2, scope: !14841)
!14843 = !DILocation(line: 5630, column: 1, scope: !14841)
!14844 = !DISubprogram(name: "arch_cpu_idle", scope: !5318, file: !5318, line: 167, type: !3551, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !437)
!14845 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !2799, file: !2799, line: 93, type: !14846, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !14848)
!14846 = !DISubroutineType(types: !14847)
!14847 = !{!220, !2694, !2694}
!14848 = !{!14849, !14850, !14851, !14852}
!14849 = !DILocalVariable(name: "thread_1", arg: 1, scope: !14845, file: !2799, line: 93, type: !2694)
!14850 = !DILocalVariable(name: "thread_2", arg: 2, scope: !14845, file: !2799, line: 94, type: !2694)
!14851 = !DILocalVariable(name: "b1", scope: !14845, file: !2799, line: 97, type: !220)
!14852 = !DILocalVariable(name: "b2", scope: !14845, file: !2799, line: 98, type: !220)
!14853 = !DILocation(line: 0, scope: !14845)
!14854 = !DILocation(line: 97, column: 30, scope: !14845)
!14855 = !DILocation(line: 98, column: 30, scope: !14845)
!14856 = !DILocation(line: 100, column: 9, scope: !14857)
!14857 = distinct !DILexicalBlock(scope: !14845, file: !2799, line: 100, column: 6)
!14858 = !DILocation(line: 100, column: 6, scope: !14845)
!14859 = !DILocation(line: 125, column: 1, scope: !14845)
!14860 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !2799, file: !2799, line: 428, type: !14861, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !14863)
!14861 = !DISubroutineType(types: !14862)
!14862 = !{null, !2694}
!14863 = !{!14864}
!14864 = !DILocalVariable(name: "curr", arg: 1, scope: !14860, file: !2799, line: 428, type: !2694)
!14865 = !DILocation(line: 0, scope: !14860)
!14866 = !DILocation(line: 434, column: 6, scope: !14867)
!14867 = distinct !DILexicalBlock(scope: !14860, file: !2799, line: 434, column: 6)
!14868 = !DILocation(line: 434, column: 23, scope: !14867)
!14869 = !DILocation(line: 434, column: 6, scope: !14860)
!14870 = !DILocation(line: 435, column: 50, scope: !14871)
!14871 = distinct !DILexicalBlock(scope: !14867, file: !2799, line: 434, column: 29)
!14872 = !DILocation(line: 435, column: 48, scope: !14871)
!14873 = !DILocation(line: 435, column: 29, scope: !14871)
!14874 = !DILocation(line: 436, column: 24, scope: !14871)
!14875 = !DILocation(line: 436, column: 3, scope: !14871)
!14876 = !DILocation(line: 437, column: 2, scope: !14871)
!14877 = !DILocation(line: 438, column: 1, scope: !14860)
!14878 = distinct !DISubprogram(name: "slice_time", scope: !2799, file: !2799, line: 407, type: !14879, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !14881)
!14879 = !DISubroutineType(types: !14880)
!14880 = !{!108, !2694}
!14881 = !{!14882, !14883}
!14882 = !DILocalVariable(name: "curr", arg: 1, scope: !14878, file: !2799, line: 407, type: !2694)
!14883 = !DILocalVariable(name: "ret", scope: !14878, file: !2799, line: 409, type: !108)
!14884 = !DILocation(line: 0, scope: !14878)
!14885 = !DILocation(line: 409, column: 12, scope: !14878)
!14886 = !DILocation(line: 416, column: 2, scope: !14878)
!14887 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !2799, file: !2799, line: 440, type: !14888, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !14890)
!14888 = !DISubroutineType(types: !14889)
!14889 = !{null, !220, !108}
!14890 = !{!14891, !14892, !14893, !14899}
!14891 = !DILocalVariable(name: "slice", arg: 1, scope: !14887, file: !2799, line: 440, type: !220)
!14892 = !DILocalVariable(name: "prio", arg: 2, scope: !14887, file: !2799, line: 440, type: !108)
!14893 = !DILocalVariable(name: "__i", scope: !14894, file: !2799, line: 442, type: !14895)
!14894 = distinct !DILexicalBlock(scope: !14887, file: !2799, line: 442, column: 2)
!14895 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !436, line: 106, baseType: !14896)
!14896 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !436, line: 32, size: 32, elements: !14897)
!14897 = !{!14898}
!14898 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !14896, file: !436, line: 33, baseType: !108, size: 32)
!14899 = !DILocalVariable(name: "__key", scope: !14894, file: !2799, line: 442, type: !14895)
!14900 = !DILocation(line: 0, scope: !14887)
!14901 = !DILocation(line: 0, scope: !14894)
!14902 = !DILocalVariable(name: "l", arg: 1, scope: !14903, file: !436, line: 136, type: !14906)
!14903 = distinct !DISubprogram(name: "k_spin_lock", scope: !436, file: !436, line: 136, type: !14904, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !14907)
!14904 = !DISubroutineType(types: !14905)
!14905 = !{!14895, !14906}
!14906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2788, size: 32)
!14907 = !{!14902, !14908}
!14908 = !DILocalVariable(name: "k", scope: !14903, file: !436, line: 139, type: !14895)
!14909 = !DILocation(line: 0, scope: !14903, inlinedAt: !14910)
!14910 = distinct !DILocation(line: 442, column: 2, scope: !14894)
!14911 = !DILocation(line: 55, column: 2, scope: !14912, inlinedAt: !14916)
!14912 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4225, file: !4225, line: 42, type: !4226, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !14913)
!14913 = !{!14914, !14915}
!14914 = !DILocalVariable(name: "key", scope: !14912, file: !4225, line: 44, type: !32)
!14915 = !DILocalVariable(name: "tmp", scope: !14912, file: !4225, line: 53, type: !32)
!14916 = distinct !DILocation(line: 145, column: 10, scope: !14903, inlinedAt: !14910)
!14917 = !{i64 2654755}
!14918 = !DILocation(line: 0, scope: !14912, inlinedAt: !14916)
!14919 = !DILocation(line: 443, column: 29, scope: !14920)
!14920 = distinct !DILexicalBlock(scope: !14921, file: !2799, line: 442, column: 26)
!14921 = distinct !DILexicalBlock(scope: !14894, file: !2799, line: 442, column: 2)
!14922 = !DILocation(line: 444, column: 17, scope: !14920)
!14923 = !DILocation(line: 445, column: 51, scope: !14924)
!14924 = distinct !DILexicalBlock(scope: !14920, file: !2799, line: 445, column: 7)
!14925 = !DILocation(line: 445, column: 7, scope: !14920)
!14926 = !DILocation(line: 0, scope: !14920)
!14927 = !DILocation(line: 451, column: 18, scope: !14920)
!14928 = !DILocation(line: 452, column: 3, scope: !14920)
!14929 = !DILocalVariable(name: "key", arg: 2, scope: !14930, file: !436, line: 190, type: !14895)
!14930 = distinct !DISubprogram(name: "k_spin_unlock", scope: !436, file: !436, line: 189, type: !14931, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !14933)
!14931 = !DISubroutineType(types: !14932)
!14932 = !{null, !14906, !14895}
!14933 = !{!14934, !14929}
!14934 = !DILocalVariable(name: "l", arg: 1, scope: !14930, file: !436, line: 189, type: !14906)
!14935 = !DILocation(line: 0, scope: !14930, inlinedAt: !14936)
!14936 = distinct !DILocation(line: 442, column: 2, scope: !14921)
!14937 = !DILocalVariable(name: "key", arg: 1, scope: !14938, file: !4225, line: 84, type: !32)
!14938 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4225, file: !4225, line: 84, type: !4238, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !14939)
!14939 = !{!14937}
!14940 = !DILocation(line: 0, scope: !14938, inlinedAt: !14941)
!14941 = distinct !DILocation(line: 215, column: 2, scope: !14930, inlinedAt: !14936)
!14942 = !DILocation(line: 95, column: 2, scope: !14938, inlinedAt: !14941)
!14943 = !{i64 2655572}
!14944 = !DILocation(line: 454, column: 1, scope: !14887)
!14945 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !3914, file: !3914, line: 389, type: !8447, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !14946)
!14946 = !{!14947}
!14947 = !DILocalVariable(name: "t", arg: 1, scope: !14945, file: !3914, line: 389, type: !113)
!14948 = !DILocation(line: 0, scope: !14945)
!14949 = !DILocalVariable(name: "t", arg: 1, scope: !14950, file: !3914, line: 102, type: !114)
!14950 = distinct !DISubprogram(name: "z_tmcvt", scope: !3914, file: !3914, line: 102, type: !3922, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !14951)
!14951 = !{!14949, !14952, !14953, !14954, !14955, !14956, !14957, !14958, !14959, !14960, !14961}
!14952 = !DILocalVariable(name: "from_hz", arg: 2, scope: !14950, file: !3914, line: 102, type: !113)
!14953 = !DILocalVariable(name: "to_hz", arg: 3, scope: !14950, file: !3914, line: 103, type: !113)
!14954 = !DILocalVariable(name: "const_hz", arg: 4, scope: !14950, file: !3914, line: 103, type: !422)
!14955 = !DILocalVariable(name: "result32", arg: 5, scope: !14950, file: !3914, line: 104, type: !422)
!14956 = !DILocalVariable(name: "round_up", arg: 6, scope: !14950, file: !3914, line: 104, type: !422)
!14957 = !DILocalVariable(name: "round_off", arg: 7, scope: !14950, file: !3914, line: 105, type: !422)
!14958 = !DILocalVariable(name: "mul_ratio", scope: !14950, file: !3914, line: 107, type: !422)
!14959 = !DILocalVariable(name: "div_ratio", scope: !14950, file: !3914, line: 109, type: !422)
!14960 = !DILocalVariable(name: "off", scope: !14950, file: !3914, line: 116, type: !114)
!14961 = !DILocalVariable(name: "rdivisor", scope: !14962, file: !3914, line: 119, type: !113)
!14962 = distinct !DILexicalBlock(scope: !14963, file: !3914, line: 118, column: 18)
!14963 = distinct !DILexicalBlock(scope: !14950, file: !3914, line: 118, column: 6)
!14964 = !DILocation(line: 0, scope: !14950, inlinedAt: !14965)
!14965 = distinct !DILocation(line: 392, column: 9, scope: !14945)
!14966 = !DILocation(line: 143, column: 25, scope: !14967, inlinedAt: !14965)
!14967 = distinct !DILexicalBlock(scope: !14968, file: !3914, line: 142, column: 17)
!14968 = distinct !DILexicalBlock(scope: !14969, file: !3914, line: 142, column: 7)
!14969 = distinct !DILexicalBlock(scope: !14970, file: !3914, line: 141, column: 24)
!14970 = distinct !DILexicalBlock(scope: !14971, file: !3914, line: 141, column: 13)
!14971 = distinct !DILexicalBlock(scope: !14950, file: !3914, line: 134, column: 6)
!14972 = !DILocation(line: 392, column: 2, scope: !14945)
!14973 = distinct !DISubprogram(name: "z_time_slice", scope: !2799, file: !2799, line: 502, type: !9781, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !14974)
!14974 = !{!14975, !14976}
!14975 = !DILocalVariable(name: "ticks", arg: 1, scope: !14973, file: !2799, line: 502, type: !108)
!14976 = !DILocalVariable(name: "key", scope: !14973, file: !2799, line: 511, type: !14895)
!14977 = !DILocation(line: 0, scope: !14973)
!14978 = !DILocation(line: 0, scope: !14903, inlinedAt: !14979)
!14979 = distinct !DILocation(line: 511, column: 25, scope: !14973)
!14980 = !DILocation(line: 55, column: 2, scope: !14912, inlinedAt: !14981)
!14981 = distinct !DILocation(line: 145, column: 10, scope: !14903, inlinedAt: !14979)
!14982 = !DILocation(line: 0, scope: !14912, inlinedAt: !14981)
!14983 = !DILocation(line: 514, column: 6, scope: !14984)
!14984 = distinct !DILexicalBlock(scope: !14973, file: !2799, line: 514, column: 6)
!14985 = !DILocation(line: 514, column: 25, scope: !14984)
!14986 = !DILocation(line: 514, column: 22, scope: !14984)
!14987 = !DILocation(line: 514, column: 6, scope: !14973)
!14988 = !DILocation(line: 515, column: 3, scope: !14989)
!14989 = distinct !DILexicalBlock(scope: !14984, file: !2799, line: 514, column: 35)
!14990 = !DILocation(line: 0, scope: !14930, inlinedAt: !14991)
!14991 = distinct !DILocation(line: 516, column: 3, scope: !14989)
!14992 = !DILocation(line: 0, scope: !14938, inlinedAt: !14993)
!14993 = distinct !DILocation(line: 215, column: 2, scope: !14930, inlinedAt: !14991)
!14994 = !DILocation(line: 95, column: 2, scope: !14938, inlinedAt: !14993)
!14995 = !DILocation(line: 517, column: 3, scope: !14989)
!14996 = !DILocation(line: 519, column: 18, scope: !14973)
!14997 = !DILocation(line: 522, column: 6, scope: !14998)
!14998 = distinct !DILexicalBlock(scope: !14973, file: !2799, line: 522, column: 6)
!14999 = !DILocation(line: 522, column: 27, scope: !14998)
!15000 = !DILocation(line: 522, column: 30, scope: !14998)
!15001 = !DILocation(line: 522, column: 6, scope: !14973)
!15002 = !DILocation(line: 523, column: 30, scope: !15003)
!15003 = distinct !DILexicalBlock(scope: !15004, file: !2799, line: 523, column: 7)
!15004 = distinct !DILexicalBlock(scope: !14998, file: !2799, line: 522, column: 51)
!15005 = !DILocation(line: 523, column: 13, scope: !15003)
!15006 = !DILocation(line: 523, column: 7, scope: !15004)
!15007 = !DILocation(line: 530, column: 10, scope: !15008)
!15008 = distinct !DILexicalBlock(scope: !15003, file: !2799, line: 523, column: 43)
!15009 = !DILocation(line: 531, column: 3, scope: !15008)
!15010 = !DILocation(line: 532, column: 30, scope: !15011)
!15011 = distinct !DILexicalBlock(scope: !15003, file: !2799, line: 531, column: 10)
!15012 = !DILocation(line: 535, column: 29, scope: !15013)
!15013 = distinct !DILexicalBlock(scope: !14998, file: !2799, line: 534, column: 9)
!15014 = !DILocation(line: 0, scope: !14930, inlinedAt: !15015)
!15015 = distinct !DILocation(line: 537, column: 2, scope: !14973)
!15016 = !DILocation(line: 0, scope: !14938, inlinedAt: !15017)
!15017 = distinct !DILocation(line: 215, column: 2, scope: !14930, inlinedAt: !15015)
!15018 = !DILocation(line: 95, column: 2, scope: !14938, inlinedAt: !15017)
!15019 = !DILocation(line: 538, column: 1, scope: !14973)
!15020 = distinct !DISubprogram(name: "sliceable", scope: !2799, file: !2799, line: 468, type: !15021, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !15023)
!15021 = !DISubroutineType(types: !15022)
!15022 = !{!422, !2694}
!15023 = !{!15024, !15025}
!15024 = !DILocalVariable(name: "thread", arg: 1, scope: !15020, file: !2799, line: 468, type: !2694)
!15025 = !DILocalVariable(name: "ret", scope: !15020, file: !2799, line: 470, type: !422)
!15026 = !DILocation(line: 0, scope: !15020)
!15027 = !DILocation(line: 470, column: 13, scope: !15020)
!15028 = !DILocation(line: 471, column: 3, scope: !15020)
!15029 = !DILocation(line: 471, column: 7, scope: !15020)
!15030 = !DILocation(line: 472, column: 3, scope: !15020)
!15031 = !DILocation(line: 472, column: 37, scope: !15020)
!15032 = !DILocation(line: 472, column: 24, scope: !15020)
!15033 = !DILocation(line: 472, column: 43, scope: !15020)
!15034 = !DILocation(line: 472, column: 7, scope: !15020)
!15035 = !DILocation(line: 473, column: 3, scope: !15020)
!15036 = !DILocation(line: 473, column: 7, scope: !15020)
!15037 = !DILocation(line: 473, column: 6, scope: !15020)
!15038 = !DILocation(line: 479, column: 2, scope: !15020)
!15039 = distinct !DISubprogram(name: "slice_expired_locked", scope: !2799, file: !2799, line: 482, type: !15040, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !15042)
!15040 = !DISubroutineType(types: !15041)
!15041 = !{!14895, !14895}
!15042 = !{!15043, !15044}
!15043 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !15039, file: !2799, line: 482, type: !14895)
!15044 = !DILocalVariable(name: "curr", scope: !15039, file: !2799, line: 484, type: !2694)
!15045 = !DILocation(line: 0, scope: !15039)
!15046 = !DILocation(line: 484, column: 26, scope: !15039)
!15047 = !DILocation(line: 493, column: 7, scope: !15048)
!15048 = distinct !DILexicalBlock(scope: !15039, file: !2799, line: 493, column: 6)
!15049 = !DILocation(line: 493, column: 6, scope: !15039)
!15050 = !DILocation(line: 494, column: 3, scope: !15051)
!15051 = distinct !DILexicalBlock(scope: !15048, file: !2799, line: 493, column: 49)
!15052 = !DILocation(line: 495, column: 2, scope: !15051)
!15053 = !DILocation(line: 496, column: 2, scope: !15039)
!15054 = !DILocation(line: 499, column: 1, scope: !15039)
!15055 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !14180, file: !14180, line: 106, type: !15021, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !15056)
!15056 = !{!15057, !15058}
!15057 = !DILocalVariable(name: "thread", arg: 1, scope: !15055, file: !14180, line: 106, type: !2694)
!15058 = !DILocalVariable(name: "state", scope: !15055, file: !14180, line: 108, type: !164)
!15059 = !DILocation(line: 0, scope: !15055)
!15060 = !DILocation(line: 108, column: 31, scope: !15055)
!15061 = !DILocation(line: 110, column: 16, scope: !15055)
!15062 = !DILocation(line: 111, column: 41, scope: !15055)
!15063 = !DILocation(line: 110, column: 2, scope: !15055)
!15064 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !2799, file: !2799, line: 393, type: !14861, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !15065)
!15065 = !{!15066}
!15066 = !DILocalVariable(name: "thread", arg: 1, scope: !15064, file: !2799, line: 393, type: !2694)
!15067 = !DILocation(line: 0, scope: !15064)
!15068 = !DILocation(line: 395, column: 6, scope: !15069)
!15069 = distinct !DILexicalBlock(scope: !15064, file: !2799, line: 395, column: 6)
!15070 = !DILocation(line: 395, column: 6, scope: !15064)
!15071 = !DILocalVariable(name: "thread", arg: 1, scope: !15072, file: !2799, line: 264, type: !2694)
!15072 = distinct !DISubprogram(name: "dequeue_thread", scope: !2799, file: !2799, line: 264, type: !14861, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !15073)
!15073 = !{!15071}
!15074 = !DILocation(line: 0, scope: !15072, inlinedAt: !15075)
!15075 = distinct !DILocation(line: 396, column: 3, scope: !15076)
!15076 = distinct !DILexicalBlock(scope: !15069, file: !2799, line: 395, column: 34)
!15077 = !DILocation(line: 266, column: 15, scope: !15072, inlinedAt: !15075)
!15078 = !DILocation(line: 266, column: 28, scope: !15072, inlinedAt: !15075)
!15079 = !DILocalVariable(name: "thread", arg: 1, scope: !15080, file: !2799, line: 232, type: !2694)
!15080 = distinct !DISubprogram(name: "runq_remove", scope: !2799, file: !2799, line: 232, type: !14861, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !15081)
!15081 = !{!15079}
!15082 = !DILocation(line: 0, scope: !15080, inlinedAt: !15083)
!15083 = distinct !DILocation(line: 268, column: 3, scope: !15084, inlinedAt: !15075)
!15084 = distinct !DILexicalBlock(scope: !15085, file: !2799, line: 267, column: 35)
!15085 = distinct !DILexicalBlock(scope: !15072, file: !2799, line: 267, column: 6)
!15086 = !DILocation(line: 234, column: 2, scope: !15080, inlinedAt: !15083)
!15087 = !DILocation(line: 397, column: 2, scope: !15076)
!15088 = !DILocalVariable(name: "thread", arg: 1, scope: !15089, file: !2799, line: 250, type: !2694)
!15089 = distinct !DISubprogram(name: "queue_thread", scope: !2799, file: !2799, line: 250, type: !14861, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !15090)
!15090 = !{!15088}
!15091 = !DILocation(line: 0, scope: !15089, inlinedAt: !15092)
!15092 = distinct !DILocation(line: 398, column: 2, scope: !15064)
!15093 = !DILocation(line: 252, column: 15, scope: !15089, inlinedAt: !15092)
!15094 = !DILocation(line: 252, column: 28, scope: !15089, inlinedAt: !15092)
!15095 = !DILocalVariable(name: "thread", arg: 1, scope: !15096, file: !2799, line: 227, type: !2694)
!15096 = distinct !DISubprogram(name: "runq_add", scope: !2799, file: !2799, line: 227, type: !14861, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !15097)
!15097 = !{!15095}
!15098 = !DILocation(line: 0, scope: !15096, inlinedAt: !15099)
!15099 = distinct !DILocation(line: 254, column: 3, scope: !15100, inlinedAt: !15092)
!15100 = distinct !DILexicalBlock(scope: !15101, file: !2799, line: 253, column: 35)
!15101 = distinct !DILexicalBlock(scope: !15089, file: !2799, line: 253, column: 6)
!15102 = !DILocalVariable(name: "pq", arg: 1, scope: !15103, file: !2799, line: 181, type: !15106)
!15103 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !2799, file: !2799, line: 181, type: !15104, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !15107)
!15104 = !DISubroutineType(types: !15105)
!15105 = !{null, !15106, !2694}
!15106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2730, size: 32)
!15107 = !{!15102, !15108, !15109}
!15108 = !DILocalVariable(name: "thread", arg: 2, scope: !15103, file: !2799, line: 182, type: !2694)
!15109 = !DILocalVariable(name: "t", scope: !15103, file: !2799, line: 184, type: !2694)
!15110 = !DILocation(line: 0, scope: !15103, inlinedAt: !15111)
!15111 = distinct !DILocation(line: 229, column: 2, scope: !15096, inlinedAt: !15099)
!15112 = !DILocation(line: 188, column: 2, scope: !15113, inlinedAt: !15111)
!15113 = distinct !DILexicalBlock(scope: !15103, file: !2799, line: 188, column: 2)
!15114 = !DILocation(line: 188, column: 2, scope: !15115, inlinedAt: !15111)
!15115 = distinct !DILexicalBlock(scope: !15113, file: !2799, line: 188, column: 2)
!15116 = !DILocation(line: 0, scope: !15113, inlinedAt: !15111)
!15117 = !DILocation(line: 189, column: 7, scope: !15118, inlinedAt: !15111)
!15118 = distinct !DILexicalBlock(scope: !15119, file: !2799, line: 189, column: 7)
!15119 = distinct !DILexicalBlock(scope: !15115, file: !2799, line: 188, column: 56)
!15120 = !DILocation(line: 189, column: 35, scope: !15118, inlinedAt: !15111)
!15121 = !DILocation(line: 189, column: 7, scope: !15119, inlinedAt: !15111)
!15122 = !DILocation(line: 191, column: 21, scope: !15123, inlinedAt: !15111)
!15123 = distinct !DILexicalBlock(scope: !15118, file: !2799, line: 189, column: 40)
!15124 = !DILocation(line: 190, column: 4, scope: !15123, inlinedAt: !15111)
!15125 = !DILocation(line: 192, column: 4, scope: !15123, inlinedAt: !15111)
!15126 = distinct !{!15126, !15112, !15127}
!15127 = !DILocation(line: 194, column: 2, scope: !15113, inlinedAt: !15111)
!15128 = !DILocation(line: 196, column: 37, scope: !15103, inlinedAt: !15111)
!15129 = !DILocation(line: 196, column: 2, scope: !15103, inlinedAt: !15111)
!15130 = !DILocation(line: 197, column: 1, scope: !15103, inlinedAt: !15111)
!15131 = !DILocation(line: 399, column: 25, scope: !15064)
!15132 = !DILocation(line: 399, column: 22, scope: !15064)
!15133 = !DILocation(line: 399, column: 2, scope: !15064)
!15134 = !DILocation(line: 400, column: 1, scope: !15064)
!15135 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !14180, file: !14180, line: 136, type: !15021, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !15136)
!15136 = !{!15137}
!15137 = !DILocalVariable(name: "thread", arg: 1, scope: !15135, file: !14180, line: 136, type: !2694)
!15138 = !DILocation(line: 0, scope: !15135)
!15139 = !DILocation(line: 138, column: 9, scope: !15135)
!15140 = !DILocation(line: 138, column: 2, scope: !15135)
!15141 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !2799, file: !2799, line: 1137, type: !15104, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !15142)
!15142 = !{!15143, !15144}
!15143 = !DILocalVariable(name: "pq", arg: 1, scope: !15141, file: !2799, line: 1137, type: !15106)
!15144 = !DILocalVariable(name: "thread", arg: 2, scope: !15141, file: !2799, line: 1137, type: !2694)
!15145 = !DILocation(line: 0, scope: !15141)
!15146 = !DILocation(line: 1141, column: 33, scope: !15141)
!15147 = !DILocation(line: 1141, column: 2, scope: !15141)
!15148 = !DILocation(line: 1142, column: 1, scope: !15141)
!15149 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !367, file: !367, line: 294, type: !15150, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !15152)
!15150 = !DISubroutineType(types: !15151)
!15151 = !{!2795, !15106}
!15152 = !{!15153}
!15153 = !DILocalVariable(name: "list", arg: 1, scope: !15149, file: !367, line: 294, type: !15106)
!15154 = !DILocation(line: 0, scope: !15149)
!15155 = !DILocation(line: 296, column: 9, scope: !15149)
!15156 = !DILocation(line: 296, column: 49, scope: !15149)
!15157 = !DILocation(line: 296, column: 2, scope: !15149)
!15158 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !367, file: !367, line: 443, type: !15159, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !15161)
!15159 = !DISubroutineType(types: !15160)
!15160 = !{null, !2795, !2795}
!15161 = !{!15162, !15163, !15164}
!15162 = !DILocalVariable(name: "successor", arg: 1, scope: !15158, file: !367, line: 443, type: !2795)
!15163 = !DILocalVariable(name: "node", arg: 2, scope: !15158, file: !367, line: 443, type: !2795)
!15164 = !DILocalVariable(name: "prev", scope: !15158, file: !367, line: 445, type: !15165)
!15165 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2795)
!15166 = !DILocation(line: 0, scope: !15158)
!15167 = !DILocation(line: 445, column: 39, scope: !15158)
!15168 = !DILocation(line: 447, column: 8, scope: !15158)
!15169 = !DILocation(line: 447, column: 13, scope: !15158)
!15170 = !DILocation(line: 448, column: 8, scope: !15158)
!15171 = !DILocation(line: 448, column: 13, scope: !15158)
!15172 = !DILocation(line: 449, column: 8, scope: !15158)
!15173 = !DILocation(line: 449, column: 13, scope: !15158)
!15174 = !DILocation(line: 450, column: 18, scope: !15158)
!15175 = !DILocation(line: 451, column: 1, scope: !15158)
!15176 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !367, file: !367, line: 341, type: !15177, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !15179)
!15177 = !DISubroutineType(types: !15178)
!15178 = !{!2795, !15106, !2795}
!15179 = !{!15180, !15181}
!15180 = !DILocalVariable(name: "list", arg: 1, scope: !15176, file: !367, line: 341, type: !15106)
!15181 = !DILocalVariable(name: "node", arg: 2, scope: !15176, file: !367, line: 342, type: !2795)
!15182 = !DILocation(line: 0, scope: !15176)
!15183 = !DILocation(line: 344, column: 15, scope: !15176)
!15184 = !DILocation(line: 344, column: 9, scope: !15176)
!15185 = !DILocation(line: 344, column: 26, scope: !15176)
!15186 = !DILocation(line: 344, column: 2, scope: !15176)
!15187 = distinct !DISubprogram(name: "sys_dlist_append", scope: !367, file: !367, line: 404, type: !15188, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !15190)
!15188 = !DISubroutineType(types: !15189)
!15189 = !{null, !15106, !2795}
!15190 = !{!15191, !15192, !15193}
!15191 = !DILocalVariable(name: "list", arg: 1, scope: !15187, file: !367, line: 404, type: !15106)
!15192 = !DILocalVariable(name: "node", arg: 2, scope: !15187, file: !367, line: 404, type: !2795)
!15193 = !DILocalVariable(name: "tail", scope: !15187, file: !367, line: 406, type: !15165)
!15194 = !DILocation(line: 0, scope: !15187)
!15195 = !DILocation(line: 406, column: 34, scope: !15187)
!15196 = !DILocation(line: 408, column: 8, scope: !15187)
!15197 = !DILocation(line: 408, column: 13, scope: !15187)
!15198 = !DILocation(line: 409, column: 8, scope: !15187)
!15199 = !DILocation(line: 409, column: 13, scope: !15187)
!15200 = !DILocation(line: 411, column: 8, scope: !15187)
!15201 = !DILocation(line: 411, column: 13, scope: !15187)
!15202 = !DILocation(line: 412, column: 13, scope: !15187)
!15203 = !DILocation(line: 413, column: 1, scope: !15187)
!15204 = distinct !DISubprogram(name: "update_cache", scope: !2799, file: !2799, line: 559, type: !9781, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !15205)
!15205 = !{!15206, !15207}
!15206 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !15204, file: !2799, line: 559, type: !108)
!15207 = !DILocalVariable(name: "thread", scope: !15204, file: !2799, line: 562, type: !2694)
!15208 = !DILocation(line: 0, scope: !15204)
!15209 = !DILocation(line: 239, column: 9, scope: !15210, inlinedAt: !15213)
!15210 = distinct !DISubprogram(name: "runq_best", scope: !2799, file: !2799, line: 237, type: !15211, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !437)
!15211 = !DISubroutineType(types: !15212)
!15212 = !{!2694}
!15213 = distinct !DILocation(line: 314, column: 28, scope: !15214, inlinedAt: !15217)
!15214 = distinct !DISubprogram(name: "next_up", scope: !2799, file: !2799, line: 312, type: !15211, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !15215)
!15215 = !{!15216}
!15216 = !DILocalVariable(name: "thread", scope: !15214, file: !2799, line: 314, type: !2694)
!15217 = distinct !DILocation(line: 562, column: 28, scope: !15204)
!15218 = !DILocation(line: 0, scope: !15214, inlinedAt: !15217)
!15219 = !DILocation(line: 340, column: 17, scope: !15214, inlinedAt: !15217)
!15220 = !DILocation(line: 340, column: 9, scope: !15214, inlinedAt: !15217)
!15221 = !DILocalVariable(name: "thread", arg: 1, scope: !15222, file: !2799, line: 127, type: !2694)
!15222 = distinct !DISubprogram(name: "should_preempt", scope: !2799, file: !2799, line: 127, type: !15223, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !15225)
!15223 = !DISubroutineType(types: !15224)
!15224 = !{!422, !2694, !108}
!15225 = !{!15221, !15226}
!15226 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !15222, file: !2799, line: 128, type: !108)
!15227 = !DILocation(line: 0, scope: !15222, inlinedAt: !15228)
!15228 = distinct !DILocation(line: 564, column: 6, scope: !15229)
!15229 = distinct !DILexicalBlock(scope: !15204, file: !2799, line: 564, column: 6)
!15230 = !DILocation(line: 133, column: 17, scope: !15231, inlinedAt: !15228)
!15231 = distinct !DILexicalBlock(scope: !15222, file: !2799, line: 133, column: 6)
!15232 = !DILocation(line: 0, scope: !15229)
!15233 = !DILocation(line: 133, column: 6, scope: !15222, inlinedAt: !15228)
!15234 = !DILocation(line: 140, column: 6, scope: !15235, inlinedAt: !15228)
!15235 = distinct !DILexicalBlock(scope: !15222, file: !2799, line: 140, column: 6)
!15236 = !DILocation(line: 140, column: 6, scope: !15222, inlinedAt: !15228)
!15237 = !DILocation(line: 150, column: 9, scope: !15238, inlinedAt: !15228)
!15238 = distinct !DILexicalBlock(scope: !15222, file: !2799, line: 149, column: 6)
!15239 = !DILocation(line: 149, column: 6, scope: !15222, inlinedAt: !15228)
!15240 = !DILocation(line: 157, column: 6, scope: !15241, inlinedAt: !15228)
!15241 = distinct !DILexicalBlock(scope: !15222, file: !2799, line: 157, column: 6)
!15242 = !DILocation(line: 564, column: 6, scope: !15204)
!15243 = !DILocation(line: 566, column: 14, scope: !15244)
!15244 = distinct !DILexicalBlock(scope: !15245, file: !2799, line: 566, column: 7)
!15245 = distinct !DILexicalBlock(scope: !15229, file: !2799, line: 564, column: 42)
!15246 = !DILocation(line: 566, column: 7, scope: !15245)
!15247 = !DILocation(line: 567, column: 4, scope: !15248)
!15248 = distinct !DILexicalBlock(scope: !15244, file: !2799, line: 566, column: 27)
!15249 = !DILocation(line: 568, column: 3, scope: !15248)
!15250 = !DILocation(line: 585, column: 1, scope: !15204)
!15251 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !2799, file: !2799, line: 1144, type: !15252, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !15254)
!15252 = !DISubroutineType(types: !15253)
!15253 = !{!2694, !15106}
!15254 = !{!15255, !15256, !15257}
!15255 = !DILocalVariable(name: "pq", arg: 1, scope: !15251, file: !2799, line: 1144, type: !15106)
!15256 = !DILocalVariable(name: "thread", scope: !15251, file: !2799, line: 1146, type: !2694)
!15257 = !DILocalVariable(name: "n", scope: !15251, file: !2799, line: 1147, type: !2795)
!15258 = !DILocation(line: 0, scope: !15251)
!15259 = !DILocation(line: 1147, column: 19, scope: !15251)
!15260 = !DILocation(line: 1152, column: 2, scope: !15251)
!15261 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !14180, file: !14180, line: 115, type: !15021, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !15262)
!15262 = !{!15263}
!15263 = !DILocalVariable(name: "thread", arg: 1, scope: !15261, file: !14180, line: 115, type: !2694)
!15264 = !DILocation(line: 0, scope: !15261)
!15265 = !DILocation(line: 117, column: 46, scope: !15261)
!15266 = !DILocation(line: 117, column: 10, scope: !15261)
!15267 = !DILocation(line: 117, column: 9, scope: !15261)
!15268 = !DILocation(line: 117, column: 2, scope: !15261)
!15269 = distinct !DISubprogram(name: "is_preempt", scope: !2799, file: !2799, line: 62, type: !14879, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !15270)
!15270 = !{!15271}
!15271 = !DILocalVariable(name: "thread", arg: 1, scope: !15269, file: !2799, line: 62, type: !2694)
!15272 = !DILocation(line: 0, scope: !15269)
!15273 = !DILocation(line: 65, column: 22, scope: !15269)
!15274 = !DILocation(line: 65, column: 30, scope: !15269)
!15275 = !DILocation(line: 65, column: 2, scope: !15269)
!15276 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !14574, file: !14574, line: 35, type: !15277, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !15281)
!15277 = !DISubroutineType(types: !15278)
!15278 = !{!422, !15279}
!15279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15280, size: 32)
!15280 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2745)
!15281 = !{!15282}
!15282 = !DILocalVariable(name: "to", arg: 1, scope: !15276, file: !14574, line: 35, type: !15279)
!15283 = !DILocation(line: 0, scope: !15276)
!15284 = !DILocation(line: 37, column: 35, scope: !15276)
!15285 = !DILocation(line: 37, column: 10, scope: !15276)
!15286 = !DILocation(line: 37, column: 9, scope: !15276)
!15287 = !DILocation(line: 37, column: 2, scope: !15276)
!15288 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !367, file: !367, line: 225, type: !15289, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !15293)
!15289 = !DISubroutineType(types: !15290)
!15290 = !{!422, !15291}
!15291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15292, size: 32)
!15292 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2704)
!15293 = !{!15294}
!15294 = !DILocalVariable(name: "node", arg: 1, scope: !15288, file: !367, line: 225, type: !15291)
!15295 = !DILocation(line: 0, scope: !15288)
!15296 = !DILocation(line: 227, column: 15, scope: !15288)
!15297 = !DILocation(line: 227, column: 20, scope: !15288)
!15298 = !DILocation(line: 227, column: 2, scope: !15288)
!15299 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !367, file: !367, line: 325, type: !15177, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !15300)
!15300 = !{!15301, !15302}
!15301 = !DILocalVariable(name: "list", arg: 1, scope: !15299, file: !367, line: 325, type: !15106)
!15302 = !DILocalVariable(name: "node", arg: 2, scope: !15299, file: !367, line: 326, type: !2795)
!15303 = !DILocation(line: 0, scope: !15299)
!15304 = !DILocation(line: 328, column: 24, scope: !15299)
!15305 = !DILocation(line: 328, column: 15, scope: !15299)
!15306 = !DILocation(line: 328, column: 9, scope: !15299)
!15307 = !DILocation(line: 328, column: 45, scope: !15299)
!15308 = !DILocation(line: 328, column: 2, scope: !15299)
!15309 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !367, file: !367, line: 266, type: !15310, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !15312)
!15310 = !DISubroutineType(types: !15311)
!15311 = !{!422, !15106}
!15312 = !{!15313}
!15313 = !DILocalVariable(name: "list", arg: 1, scope: !15309, file: !367, line: 266, type: !15106)
!15314 = !DILocation(line: 0, scope: !15309)
!15315 = !DILocation(line: 268, column: 15, scope: !15309)
!15316 = !DILocation(line: 268, column: 20, scope: !15309)
!15317 = !DILocation(line: 268, column: 2, scope: !15309)
!15318 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !367, file: !367, line: 496, type: !15319, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !15321)
!15319 = !DISubroutineType(types: !15320)
!15320 = !{null, !2795}
!15321 = !{!15322, !15323, !15324}
!15322 = !DILocalVariable(name: "node", arg: 1, scope: !15318, file: !367, line: 496, type: !2795)
!15323 = !DILocalVariable(name: "prev", scope: !15318, file: !367, line: 498, type: !15165)
!15324 = !DILocalVariable(name: "next", scope: !15318, file: !367, line: 499, type: !15165)
!15325 = !DILocation(line: 0, scope: !15318)
!15326 = !DILocation(line: 498, column: 34, scope: !15318)
!15327 = !DILocation(line: 499, column: 34, scope: !15318)
!15328 = !DILocation(line: 501, column: 8, scope: !15318)
!15329 = !DILocation(line: 501, column: 13, scope: !15318)
!15330 = !DILocation(line: 502, column: 8, scope: !15318)
!15331 = !DILocation(line: 502, column: 13, scope: !15318)
!15332 = !DILocation(line: 503, column: 2, scope: !15318)
!15333 = !DILocation(line: 504, column: 1, scope: !15318)
!15334 = distinct !DISubprogram(name: "sys_dnode_init", scope: !367, file: !367, line: 211, type: !15319, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !15335)
!15335 = !{!15336}
!15336 = !DILocalVariable(name: "node", arg: 1, scope: !15334, file: !367, line: 211, type: !2795)
!15337 = !DILocation(line: 0, scope: !15334)
!15338 = !DILocation(line: 213, column: 8, scope: !15334)
!15339 = !DILocation(line: 213, column: 13, scope: !15334)
!15340 = !DILocation(line: 214, column: 8, scope: !15334)
!15341 = !DILocation(line: 214, column: 13, scope: !15334)
!15342 = !DILocation(line: 215, column: 1, scope: !15334)
!15343 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !14180, file: !14180, line: 131, type: !15344, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !15346)
!15344 = !DISubroutineType(types: !15345)
!15345 = !{!422, !2694, !113}
!15346 = !{!15347, !15348}
!15347 = !DILocalVariable(name: "thread", arg: 1, scope: !15343, file: !14180, line: 131, type: !2694)
!15348 = !DILocalVariable(name: "state", arg: 2, scope: !15343, file: !14180, line: 131, type: !113)
!15349 = !DILocation(line: 0, scope: !15343)
!15350 = !DILocation(line: 133, column: 23, scope: !15343)
!15351 = !DILocation(line: 133, column: 45, scope: !15343)
!15352 = !DILocation(line: 133, column: 2, scope: !15343)
!15353 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !14180, file: !14180, line: 211, type: !15354, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !15356)
!15354 = !DISubroutineType(types: !15355)
!15355 = !{!422, !108, !108}
!15356 = !{!15357, !15358}
!15357 = !DILocalVariable(name: "prio", arg: 1, scope: !15353, file: !14180, line: 211, type: !108)
!15358 = !DILocalVariable(name: "test_prio", arg: 2, scope: !15353, file: !14180, line: 211, type: !108)
!15359 = !DILocation(line: 0, scope: !15353)
!15360 = !DILocation(line: 213, column: 9, scope: !15353)
!15361 = !DILocation(line: 213, column: 2, scope: !15353)
!15362 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !14180, file: !14180, line: 83, type: !15021, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !15363)
!15363 = !{!15364}
!15364 = !DILocalVariable(name: "thread", arg: 1, scope: !15362, file: !14180, line: 83, type: !2694)
!15365 = !DILocation(line: 0, scope: !15362)
!15366 = !DILocation(line: 89, column: 16, scope: !15362)
!15367 = !DILocation(line: 89, column: 2, scope: !15362)
!15368 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !14180, file: !14180, line: 206, type: !15354, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !15369)
!15369 = !{!15370, !15371}
!15370 = !DILocalVariable(name: "prio1", arg: 1, scope: !15368, file: !14180, line: 206, type: !108)
!15371 = !DILocalVariable(name: "prio2", arg: 2, scope: !15368, file: !14180, line: 206, type: !108)
!15372 = !DILocation(line: 0, scope: !15368)
!15373 = !DILocation(line: 208, column: 15, scope: !15368)
!15374 = !DILocation(line: 208, column: 2, scope: !15368)
!15375 = distinct !DISubprogram(name: "z_ready_thread", scope: !2799, file: !2799, line: 635, type: !14861, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !15376)
!15376 = !{!15377, !15378, !15380}
!15377 = !DILocalVariable(name: "thread", arg: 1, scope: !15375, file: !2799, line: 635, type: !2694)
!15378 = !DILocalVariable(name: "__i", scope: !15379, file: !2799, line: 637, type: !14895)
!15379 = distinct !DILexicalBlock(scope: !15375, file: !2799, line: 637, column: 2)
!15380 = !DILocalVariable(name: "__key", scope: !15379, file: !2799, line: 637, type: !14895)
!15381 = !DILocation(line: 0, scope: !15375)
!15382 = !DILocation(line: 0, scope: !15379)
!15383 = !DILocation(line: 0, scope: !14903, inlinedAt: !15384)
!15384 = distinct !DILocation(line: 637, column: 2, scope: !15379)
!15385 = !DILocation(line: 55, column: 2, scope: !14912, inlinedAt: !15386)
!15386 = distinct !DILocation(line: 145, column: 10, scope: !14903, inlinedAt: !15384)
!15387 = !DILocation(line: 0, scope: !14912, inlinedAt: !15386)
!15388 = !DILocation(line: 639, column: 4, scope: !15389)
!15389 = distinct !DILexicalBlock(scope: !15390, file: !2799, line: 638, column: 41)
!15390 = distinct !DILexicalBlock(scope: !15391, file: !2799, line: 638, column: 7)
!15391 = distinct !DILexicalBlock(scope: !15392, file: !2799, line: 637, column: 26)
!15392 = distinct !DILexicalBlock(scope: !15379, file: !2799, line: 637, column: 2)
!15393 = !DILocation(line: 0, scope: !14930, inlinedAt: !15394)
!15394 = distinct !DILocation(line: 637, column: 2, scope: !15392)
!15395 = !DILocation(line: 0, scope: !14938, inlinedAt: !15396)
!15396 = distinct !DILocation(line: 215, column: 2, scope: !14930, inlinedAt: !15394)
!15397 = !DILocation(line: 95, column: 2, scope: !14938, inlinedAt: !15396)
!15398 = !DILocation(line: 642, column: 1, scope: !15375)
!15399 = distinct !DISubprogram(name: "ready_thread", scope: !2799, file: !2799, line: 617, type: !14861, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !15400)
!15400 = !{!15401}
!15401 = !DILocalVariable(name: "thread", arg: 1, scope: !15399, file: !2799, line: 617, type: !2694)
!15402 = !DILocation(line: 0, scope: !15399)
!15403 = !DILocation(line: 626, column: 7, scope: !15404)
!15404 = distinct !DILexicalBlock(scope: !15399, file: !2799, line: 626, column: 6)
!15405 = !DILocation(line: 626, column: 34, scope: !15404)
!15406 = !DILocation(line: 626, column: 37, scope: !15404)
!15407 = !DILocation(line: 626, column: 6, scope: !15399)
!15408 = !DILocation(line: 0, scope: !15089, inlinedAt: !15409)
!15409 = distinct !DILocation(line: 629, column: 3, scope: !15410)
!15410 = distinct !DILexicalBlock(scope: !15404, file: !2799, line: 626, column: 64)
!15411 = !DILocation(line: 252, column: 15, scope: !15089, inlinedAt: !15409)
!15412 = !DILocation(line: 252, column: 28, scope: !15089, inlinedAt: !15409)
!15413 = !DILocation(line: 0, scope: !15096, inlinedAt: !15414)
!15414 = distinct !DILocation(line: 254, column: 3, scope: !15100, inlinedAt: !15409)
!15415 = !DILocation(line: 0, scope: !15103, inlinedAt: !15416)
!15416 = distinct !DILocation(line: 229, column: 2, scope: !15096, inlinedAt: !15414)
!15417 = !DILocation(line: 188, column: 2, scope: !15113, inlinedAt: !15416)
!15418 = !DILocation(line: 188, column: 2, scope: !15115, inlinedAt: !15416)
!15419 = !DILocation(line: 0, scope: !15113, inlinedAt: !15416)
!15420 = !DILocation(line: 189, column: 7, scope: !15118, inlinedAt: !15416)
!15421 = !DILocation(line: 189, column: 35, scope: !15118, inlinedAt: !15416)
!15422 = !DILocation(line: 189, column: 7, scope: !15119, inlinedAt: !15416)
!15423 = !DILocation(line: 191, column: 21, scope: !15123, inlinedAt: !15416)
!15424 = !DILocation(line: 190, column: 4, scope: !15123, inlinedAt: !15416)
!15425 = !DILocation(line: 192, column: 4, scope: !15123, inlinedAt: !15416)
!15426 = distinct !{!15426, !15417, !15427}
!15427 = !DILocation(line: 194, column: 2, scope: !15113, inlinedAt: !15416)
!15428 = !DILocation(line: 196, column: 37, scope: !15103, inlinedAt: !15416)
!15429 = !DILocation(line: 196, column: 2, scope: !15103, inlinedAt: !15416)
!15430 = !DILocation(line: 197, column: 1, scope: !15103, inlinedAt: !15416)
!15431 = !DILocation(line: 630, column: 3, scope: !15410)
!15432 = !DILocation(line: 632, column: 2, scope: !15410)
!15433 = !DILocation(line: 633, column: 1, scope: !15399)
!15434 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !14180, file: !14180, line: 120, type: !15021, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !15435)
!15435 = !{!15436}
!15436 = !DILocalVariable(name: "thread", arg: 1, scope: !15434, file: !14180, line: 120, type: !2694)
!15437 = !DILocation(line: 0, scope: !15434)
!15438 = !DILocation(line: 122, column: 12, scope: !15434)
!15439 = !DILocation(line: 122, column: 62, scope: !15434)
!15440 = !DILocation(line: 123, column: 4, scope: !15434)
!15441 = !DILocation(line: 122, column: 2, scope: !15434)
!15442 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !2799, file: !2799, line: 644, type: !14861, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !15443)
!15443 = !{!15444, !15445, !15447}
!15444 = !DILocalVariable(name: "thread", arg: 1, scope: !15442, file: !2799, line: 644, type: !2694)
!15445 = !DILocalVariable(name: "__i", scope: !15446, file: !2799, line: 646, type: !14895)
!15446 = distinct !DILexicalBlock(scope: !15442, file: !2799, line: 646, column: 2)
!15447 = !DILocalVariable(name: "__key", scope: !15446, file: !2799, line: 646, type: !14895)
!15448 = !DILocation(line: 0, scope: !15442)
!15449 = !DILocation(line: 0, scope: !15446)
!15450 = !DILocation(line: 0, scope: !14903, inlinedAt: !15451)
!15451 = distinct !DILocation(line: 646, column: 2, scope: !15446)
!15452 = !DILocation(line: 55, column: 2, scope: !14912, inlinedAt: !15453)
!15453 = distinct !DILocation(line: 145, column: 10, scope: !14903, inlinedAt: !15451)
!15454 = !DILocation(line: 0, scope: !14912, inlinedAt: !15453)
!15455 = !DILocation(line: 647, column: 3, scope: !15456)
!15456 = distinct !DILexicalBlock(scope: !15457, file: !2799, line: 646, column: 26)
!15457 = distinct !DILexicalBlock(scope: !15446, file: !2799, line: 646, column: 2)
!15458 = !DILocation(line: 0, scope: !14930, inlinedAt: !15459)
!15459 = distinct !DILocation(line: 646, column: 2, scope: !15457)
!15460 = !DILocation(line: 0, scope: !14938, inlinedAt: !15461)
!15461 = distinct !DILocation(line: 215, column: 2, scope: !14930, inlinedAt: !15459)
!15462 = !DILocation(line: 95, column: 2, scope: !14938, inlinedAt: !15461)
!15463 = !DILocation(line: 649, column: 1, scope: !15442)
!15464 = distinct !DISubprogram(name: "z_sched_start", scope: !2799, file: !2799, line: 651, type: !14861, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !15465)
!15465 = !{!15466, !15467}
!15466 = !DILocalVariable(name: "thread", arg: 1, scope: !15464, file: !2799, line: 651, type: !2694)
!15467 = !DILocalVariable(name: "key", scope: !15464, file: !2799, line: 653, type: !14895)
!15468 = !DILocation(line: 0, scope: !15464)
!15469 = !DILocation(line: 0, scope: !14903, inlinedAt: !15470)
!15470 = distinct !DILocation(line: 653, column: 25, scope: !15464)
!15471 = !DILocation(line: 55, column: 2, scope: !14912, inlinedAt: !15472)
!15472 = distinct !DILocation(line: 145, column: 10, scope: !14903, inlinedAt: !15470)
!15473 = !DILocation(line: 0, scope: !14912, inlinedAt: !15472)
!15474 = !DILocation(line: 655, column: 6, scope: !15475)
!15475 = distinct !DILexicalBlock(scope: !15464, file: !2799, line: 655, column: 6)
!15476 = !DILocation(line: 655, column: 6, scope: !15464)
!15477 = !DILocation(line: 0, scope: !14930, inlinedAt: !15478)
!15478 = distinct !DILocation(line: 656, column: 3, scope: !15479)
!15479 = distinct !DILexicalBlock(scope: !15475, file: !2799, line: 655, column: 36)
!15480 = !DILocation(line: 0, scope: !14938, inlinedAt: !15481)
!15481 = distinct !DILocation(line: 215, column: 2, scope: !14930, inlinedAt: !15478)
!15482 = !DILocation(line: 95, column: 2, scope: !14938, inlinedAt: !15481)
!15483 = !DILocation(line: 657, column: 3, scope: !15479)
!15484 = !DILocation(line: 660, column: 2, scope: !15464)
!15485 = !DILocation(line: 661, column: 2, scope: !15464)
!15486 = !DILocation(line: 662, column: 2, scope: !15464)
!15487 = !DILocation(line: 663, column: 1, scope: !15464)
!15488 = distinct !DISubprogram(name: "z_has_thread_started", scope: !14180, file: !14180, line: 126, type: !15021, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !15489)
!15489 = !{!15490}
!15490 = !DILocalVariable(name: "thread", arg: 1, scope: !15488, file: !14180, line: 126, type: !2694)
!15491 = !DILocation(line: 0, scope: !15488)
!15492 = !DILocation(line: 128, column: 23, scope: !15488)
!15493 = !DILocation(line: 128, column: 36, scope: !15488)
!15494 = !DILocation(line: 128, column: 56, scope: !15488)
!15495 = !DILocation(line: 128, column: 2, scope: !15488)
!15496 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !14180, file: !14180, line: 155, type: !14861, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !15497)
!15497 = !{!15498}
!15498 = !DILocalVariable(name: "thread", arg: 1, scope: !15496, file: !14180, line: 155, type: !2694)
!15499 = !DILocation(line: 0, scope: !15496)
!15500 = !DILocation(line: 157, column: 15, scope: !15496)
!15501 = !DILocation(line: 157, column: 28, scope: !15496)
!15502 = !DILocation(line: 158, column: 1, scope: !15496)
!15503 = distinct !DISubprogram(name: "z_reschedule", scope: !2799, file: !2799, line: 967, type: !14931, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !15504)
!15504 = !{!15505, !15506}
!15505 = !DILocalVariable(name: "lock", arg: 1, scope: !15503, file: !2799, line: 967, type: !14906)
!15506 = !DILocalVariable(name: "key", arg: 2, scope: !15503, file: !2799, line: 967, type: !14895)
!15507 = !DILocation(line: 0, scope: !15503)
!15508 = !DILocation(line: 969, column: 6, scope: !15509)
!15509 = distinct !DILexicalBlock(scope: !15503, file: !2799, line: 969, column: 6)
!15510 = !DILocation(line: 969, column: 23, scope: !15509)
!15511 = !DILocation(line: 969, column: 26, scope: !15509)
!15512 = !DILocation(line: 969, column: 6, scope: !15503)
!15513 = !DILocalVariable(name: "key", arg: 2, scope: !15514, file: !14284, line: 193, type: !14895)
!15514 = distinct !DISubprogram(name: "z_swap", scope: !14284, file: !14284, line: 193, type: !15515, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !15517)
!15515 = !DISubroutineType(types: !15516)
!15516 = !{!108, !14906, !14895}
!15517 = !{!15518, !15513}
!15518 = !DILocalVariable(name: "lock", arg: 1, scope: !15514, file: !14284, line: 193, type: !14906)
!15519 = !DILocation(line: 0, scope: !15514, inlinedAt: !15520)
!15520 = distinct !DILocation(line: 970, column: 3, scope: !15521)
!15521 = distinct !DILexicalBlock(scope: !15509, file: !2799, line: 969, column: 39)
!15522 = !DILocation(line: 196, column: 9, scope: !15514, inlinedAt: !15520)
!15523 = !DILocation(line: 971, column: 2, scope: !15521)
!15524 = !DILocation(line: 0, scope: !14930, inlinedAt: !15525)
!15525 = distinct !DILocation(line: 972, column: 3, scope: !15526)
!15526 = distinct !DILexicalBlock(scope: !15509, file: !2799, line: 971, column: 9)
!15527 = !DILocation(line: 0, scope: !14938, inlinedAt: !15528)
!15528 = distinct !DILocation(line: 215, column: 2, scope: !14930, inlinedAt: !15525)
!15529 = !DILocation(line: 95, column: 2, scope: !14938, inlinedAt: !15528)
!15530 = !DILocation(line: 975, column: 1, scope: !15503)
!15531 = distinct !DISubprogram(name: "resched", scope: !2799, file: !2799, line: 940, type: !15532, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !15534)
!15532 = !DISubroutineType(types: !15533)
!15533 = !{!422, !113}
!15534 = !{!15535}
!15535 = !DILocalVariable(name: "key", arg: 1, scope: !15531, file: !2799, line: 940, type: !113)
!15536 = !DILocation(line: 0, scope: !15531)
!15537 = !DILocalVariable(name: "key", arg: 1, scope: !15538, file: !4225, line: 112, type: !32)
!15538 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !4225, file: !4225, line: 112, type: !15539, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !15541)
!15539 = !DISubroutineType(types: !15540)
!15540 = !{!422, !32}
!15541 = !{!15537}
!15542 = !DILocation(line: 0, scope: !15538, inlinedAt: !15543)
!15543 = distinct !DILocation(line: 946, column: 9, scope: !15531)
!15544 = !DILocation(line: 115, column: 13, scope: !15538, inlinedAt: !15543)
!15545 = !DILocation(line: 946, column: 32, scope: !15531)
!15546 = !DILocation(line: 1031, column: 3, scope: !15547, inlinedAt: !15550)
!15547 = distinct !DISubprogram(name: "__get_IPSR", scope: !7201, file: !7201, line: 1027, type: !7282, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !15548)
!15548 = !{!15549}
!15549 = !DILocalVariable(name: "result", scope: !15547, file: !7201, line: 1029, type: !113)
!15550 = distinct !DILocation(line: 48, column: 10, scope: !15551, inlinedAt: !15552)
!15551 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8219, file: !8219, line: 46, type: !8220, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !437)
!15552 = distinct !DILocation(line: 946, column: 36, scope: !15531)
!15553 = !{i64 4170846}
!15554 = !DILocation(line: 0, scope: !15547, inlinedAt: !15550)
!15555 = !DILocation(line: 48, column: 9, scope: !15551, inlinedAt: !15552)
!15556 = !DILocation(line: 946, column: 2, scope: !15531)
!15557 = distinct !DISubprogram(name: "need_swap", scope: !2799, file: !2799, line: 953, type: !8220, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !15558)
!15558 = !{!15559}
!15559 = !DILocalVariable(name: "new_thread", scope: !15557, file: !2799, line: 959, type: !2694)
!15560 = !DILocation(line: 962, column: 31, scope: !15557)
!15561 = !DILocation(line: 0, scope: !15557)
!15562 = !DILocation(line: 963, column: 23, scope: !15557)
!15563 = !DILocation(line: 963, column: 20, scope: !15557)
!15564 = !DILocation(line: 963, column: 2, scope: !15557)
!15565 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !14284, file: !14284, line: 181, type: !7211, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !15566)
!15566 = !{!15567, !15568}
!15567 = !DILocalVariable(name: "key", arg: 1, scope: !15565, file: !14284, line: 181, type: !32)
!15568 = !DILocalVariable(name: "ret", scope: !15565, file: !14284, line: 183, type: !108)
!15569 = !DILocation(line: 0, scope: !15565)
!15570 = !DILocation(line: 185, column: 8, scope: !15565)
!15571 = !DILocation(line: 186, column: 2, scope: !15565)
!15572 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !2799, file: !2799, line: 665, type: !14861, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !15573)
!15573 = !{!15574, !15575, !15577}
!15574 = !DILocalVariable(name: "thread", arg: 1, scope: !15572, file: !2799, line: 665, type: !2694)
!15575 = !DILocalVariable(name: "__i", scope: !15576, file: !2799, line: 671, type: !14895)
!15576 = distinct !DILexicalBlock(scope: !15572, file: !2799, line: 671, column: 2)
!15577 = !DILocalVariable(name: "__key", scope: !15576, file: !2799, line: 671, type: !14895)
!15578 = !DILocation(line: 0, scope: !15572)
!15579 = !DILocation(line: 669, column: 8, scope: !15572)
!15580 = !DILocation(line: 0, scope: !15576)
!15581 = !DILocation(line: 0, scope: !14903, inlinedAt: !15582)
!15582 = distinct !DILocation(line: 671, column: 2, scope: !15576)
!15583 = !DILocation(line: 55, column: 2, scope: !14912, inlinedAt: !15584)
!15584 = distinct !DILocation(line: 145, column: 10, scope: !14903, inlinedAt: !15582)
!15585 = !DILocation(line: 0, scope: !14912, inlinedAt: !15584)
!15586 = !DILocation(line: 672, column: 7, scope: !15587)
!15587 = distinct !DILexicalBlock(scope: !15588, file: !2799, line: 672, column: 7)
!15588 = distinct !DILexicalBlock(scope: !15589, file: !2799, line: 671, column: 26)
!15589 = distinct !DILexicalBlock(scope: !15576, file: !2799, line: 671, column: 2)
!15590 = !DILocation(line: 672, column: 7, scope: !15588)
!15591 = !DILocation(line: 0, scope: !15072, inlinedAt: !15592)
!15592 = distinct !DILocation(line: 673, column: 4, scope: !15593)
!15593 = distinct !DILexicalBlock(scope: !15587, file: !2799, line: 672, column: 35)
!15594 = !DILocation(line: 266, column: 15, scope: !15072, inlinedAt: !15592)
!15595 = !DILocation(line: 266, column: 28, scope: !15072, inlinedAt: !15592)
!15596 = !DILocation(line: 0, scope: !15080, inlinedAt: !15597)
!15597 = distinct !DILocation(line: 268, column: 3, scope: !15084, inlinedAt: !15592)
!15598 = !DILocation(line: 234, column: 2, scope: !15080, inlinedAt: !15597)
!15599 = !DILocation(line: 674, column: 3, scope: !15593)
!15600 = !DILocation(line: 675, column: 3, scope: !15588)
!15601 = !DILocation(line: 676, column: 26, scope: !15588)
!15602 = !DILocation(line: 676, column: 23, scope: !15588)
!15603 = !DILocation(line: 676, column: 3, scope: !15588)
!15604 = !DILocation(line: 0, scope: !14930, inlinedAt: !15605)
!15605 = distinct !DILocation(line: 671, column: 2, scope: !15589)
!15606 = !DILocation(line: 0, scope: !14938, inlinedAt: !15607)
!15607 = distinct !DILocation(line: 215, column: 2, scope: !14930, inlinedAt: !15605)
!15608 = !DILocation(line: 95, column: 2, scope: !14938, inlinedAt: !15607)
!15609 = !DILocation(line: 679, column: 16, scope: !15610)
!15610 = distinct !DILexicalBlock(scope: !15572, file: !2799, line: 679, column: 6)
!15611 = !DILocation(line: 679, column: 13, scope: !15610)
!15612 = !DILocation(line: 679, column: 6, scope: !15572)
!15613 = !DILocation(line: 680, column: 3, scope: !15614)
!15614 = distinct !DILexicalBlock(scope: !15610, file: !2799, line: 679, column: 26)
!15615 = !DILocation(line: 681, column: 2, scope: !15614)
!15616 = !DILocation(line: 684, column: 1, scope: !15572)
!15617 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !14574, file: !14574, line: 52, type: !14879, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !15618)
!15618 = !{!15619}
!15619 = !DILocalVariable(name: "thread", arg: 1, scope: !15617, file: !14574, line: 52, type: !2694)
!15620 = !DILocation(line: 0, scope: !15617)
!15621 = !DILocation(line: 54, column: 39, scope: !15617)
!15622 = !DILocation(line: 54, column: 9, scope: !15617)
!15623 = !DILocation(line: 54, column: 2, scope: !15617)
!15624 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !14180, file: !14180, line: 141, type: !14861, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !15625)
!15625 = !{!15626}
!15626 = !DILocalVariable(name: "thread", arg: 1, scope: !15624, file: !14180, line: 141, type: !2694)
!15627 = !DILocation(line: 0, scope: !15624)
!15628 = !DILocation(line: 143, column: 15, scope: !15624)
!15629 = !DILocation(line: 143, column: 28, scope: !15624)
!15630 = !DILocation(line: 146, column: 1, scope: !15624)
!15631 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !14180, file: !14180, line: 73, type: !3551, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !437)
!15632 = !DILocation(line: 55, column: 2, scope: !14912, inlinedAt: !15633)
!15633 = distinct !DILocation(line: 75, column: 30, scope: !15631)
!15634 = !DILocation(line: 0, scope: !14912, inlinedAt: !15633)
!15635 = !DILocation(line: 75, column: 9, scope: !15631)
!15636 = !DILocation(line: 76, column: 1, scope: !15631)
!15637 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !2799, file: !2799, line: 977, type: !7292, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !15638)
!15638 = !{!15639}
!15639 = !DILocalVariable(name: "key", arg: 1, scope: !15637, file: !2799, line: 977, type: !113)
!15640 = !DILocation(line: 0, scope: !15637)
!15641 = !DILocation(line: 979, column: 6, scope: !15642)
!15642 = distinct !DILexicalBlock(scope: !15637, file: !2799, line: 979, column: 6)
!15643 = !DILocation(line: 979, column: 6, scope: !15637)
!15644 = !DILocation(line: 980, column: 3, scope: !15645)
!15645 = distinct !DILexicalBlock(scope: !15642, file: !2799, line: 979, column: 20)
!15646 = !DILocation(line: 981, column: 2, scope: !15645)
!15647 = !DILocation(line: 0, scope: !14938, inlinedAt: !15648)
!15648 = distinct !DILocation(line: 982, column: 3, scope: !15649)
!15649 = distinct !DILexicalBlock(scope: !15642, file: !2799, line: 981, column: 9)
!15650 = !DILocation(line: 95, column: 2, scope: !14938, inlinedAt: !15648)
!15651 = !DILocation(line: 985, column: 1, scope: !15637)
!15652 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !2799, file: !2799, line: 695, type: !14861, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !15653)
!15653 = !{!15654, !15655}
!15654 = !DILocalVariable(name: "thread", arg: 1, scope: !15652, file: !2799, line: 695, type: !2694)
!15655 = !DILocalVariable(name: "key", scope: !15652, file: !2799, line: 699, type: !14895)
!15656 = !DILocation(line: 0, scope: !15652)
!15657 = !DILocation(line: 0, scope: !14903, inlinedAt: !15658)
!15658 = distinct !DILocation(line: 699, column: 25, scope: !15652)
!15659 = !DILocation(line: 55, column: 2, scope: !14912, inlinedAt: !15660)
!15660 = distinct !DILocation(line: 145, column: 10, scope: !14903, inlinedAt: !15658)
!15661 = !DILocation(line: 0, scope: !14912, inlinedAt: !15660)
!15662 = !DILocation(line: 702, column: 7, scope: !15663)
!15663 = distinct !DILexicalBlock(scope: !15652, file: !2799, line: 702, column: 6)
!15664 = !DILocation(line: 702, column: 6, scope: !15652)
!15665 = !DILocation(line: 0, scope: !14930, inlinedAt: !15666)
!15666 = distinct !DILocation(line: 703, column: 3, scope: !15667)
!15667 = distinct !DILexicalBlock(scope: !15663, file: !2799, line: 702, column: 38)
!15668 = !DILocation(line: 0, scope: !14938, inlinedAt: !15669)
!15669 = distinct !DILocation(line: 215, column: 2, scope: !14930, inlinedAt: !15666)
!15670 = !DILocation(line: 95, column: 2, scope: !14938, inlinedAt: !15669)
!15671 = !DILocation(line: 704, column: 3, scope: !15667)
!15672 = !DILocation(line: 707, column: 2, scope: !15652)
!15673 = !DILocation(line: 708, column: 2, scope: !15652)
!15674 = !DILocation(line: 710, column: 2, scope: !15652)
!15675 = !DILocation(line: 713, column: 1, scope: !15652)
!15676 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !14180, file: !14180, line: 96, type: !15021, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !15677)
!15677 = !{!15678}
!15678 = !DILocalVariable(name: "thread", arg: 1, scope: !15676, file: !14180, line: 96, type: !2694)
!15679 = !DILocation(line: 0, scope: !15676)
!15680 = !DILocation(line: 98, column: 23, scope: !15676)
!15681 = !DILocation(line: 98, column: 36, scope: !15676)
!15682 = !DILocation(line: 98, column: 57, scope: !15676)
!15683 = !DILocation(line: 98, column: 2, scope: !15676)
!15684 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !14180, file: !14180, line: 148, type: !14861, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !15685)
!15685 = !{!15686}
!15686 = !DILocalVariable(name: "thread", arg: 1, scope: !15684, file: !14180, line: 148, type: !2694)
!15687 = !DILocation(line: 0, scope: !15684)
!15688 = !DILocation(line: 150, column: 15, scope: !15684)
!15689 = !DILocation(line: 150, column: 28, scope: !15684)
!15690 = !DILocation(line: 153, column: 1, scope: !15684)
!15691 = distinct !DISubprogram(name: "z_pend_thread", scope: !2799, file: !2799, line: 770, type: !15692, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !15698)
!15692 = !DISubroutineType(types: !15693)
!15693 = !{null, !2694, !2725, !15694}
!15694 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !110, line: 67, baseType: !15695)
!15695 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !110, line: 65, size: 64, elements: !15696)
!15696 = !{!15697}
!15697 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !15695, file: !110, line: 66, baseType: !109, size: 64)
!15698 = !{!15699, !15700, !15701, !15702, !15704}
!15699 = !DILocalVariable(name: "thread", arg: 1, scope: !15691, file: !2799, line: 770, type: !2694)
!15700 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15691, file: !2799, line: 770, type: !2725)
!15701 = !DILocalVariable(name: "timeout", arg: 3, scope: !15691, file: !2799, line: 771, type: !15694)
!15702 = !DILocalVariable(name: "__i", scope: !15703, file: !2799, line: 774, type: !14895)
!15703 = distinct !DILexicalBlock(scope: !15691, file: !2799, line: 774, column: 2)
!15704 = !DILocalVariable(name: "__key", scope: !15703, file: !2799, line: 774, type: !14895)
!15705 = !DILocation(line: 0, scope: !15691)
!15706 = !DILocation(line: 0, scope: !15703)
!15707 = !DILocation(line: 0, scope: !14903, inlinedAt: !15708)
!15708 = distinct !DILocation(line: 774, column: 2, scope: !15703)
!15709 = !DILocation(line: 55, column: 2, scope: !14912, inlinedAt: !15710)
!15710 = distinct !DILocation(line: 145, column: 10, scope: !14903, inlinedAt: !15708)
!15711 = !DILocation(line: 0, scope: !14912, inlinedAt: !15710)
!15712 = !DILocation(line: 775, column: 3, scope: !15713)
!15713 = distinct !DILexicalBlock(scope: !15714, file: !2799, line: 774, column: 26)
!15714 = distinct !DILexicalBlock(scope: !15703, file: !2799, line: 774, column: 2)
!15715 = !DILocation(line: 0, scope: !14930, inlinedAt: !15716)
!15716 = distinct !DILocation(line: 774, column: 2, scope: !15714)
!15717 = !DILocation(line: 0, scope: !14938, inlinedAt: !15718)
!15718 = distinct !DILocation(line: 215, column: 2, scope: !14930, inlinedAt: !15716)
!15719 = !DILocation(line: 95, column: 2, scope: !14938, inlinedAt: !15718)
!15720 = !DILocation(line: 777, column: 1, scope: !15691)
!15721 = distinct !DISubprogram(name: "pend_locked", scope: !2799, file: !2799, line: 760, type: !15692, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !15722)
!15722 = !{!15723, !15724, !15725}
!15723 = !DILocalVariable(name: "thread", arg: 1, scope: !15721, file: !2799, line: 760, type: !2694)
!15724 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15721, file: !2799, line: 760, type: !2725)
!15725 = !DILocalVariable(name: "timeout", arg: 3, scope: !15721, file: !2799, line: 761, type: !15694)
!15726 = !DILocation(line: 0, scope: !15721)
!15727 = !DILocation(line: 766, column: 2, scope: !15721)
!15728 = !DILocation(line: 767, column: 2, scope: !15721)
!15729 = !DILocation(line: 768, column: 1, scope: !15721)
!15730 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !2799, file: !2799, line: 740, type: !15731, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !15733)
!15731 = !DISubroutineType(types: !15732)
!15732 = !{null, !2694, !2725}
!15733 = !{!15734, !15735}
!15734 = !DILocalVariable(name: "thread", arg: 1, scope: !15730, file: !2799, line: 740, type: !2694)
!15735 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15730, file: !2799, line: 740, type: !2725)
!15736 = !DILocation(line: 0, scope: !15730)
!15737 = !DILocation(line: 742, column: 2, scope: !15730)
!15738 = !DILocation(line: 743, column: 2, scope: !15730)
!15739 = !DILocation(line: 747, column: 13, scope: !15740)
!15740 = distinct !DILexicalBlock(scope: !15730, file: !2799, line: 747, column: 6)
!15741 = !DILocation(line: 747, column: 6, scope: !15730)
!15742 = !DILocation(line: 748, column: 16, scope: !15743)
!15743 = distinct !DILexicalBlock(scope: !15740, file: !2799, line: 747, column: 22)
!15744 = !DILocation(line: 748, column: 26, scope: !15743)
!15745 = !DILocation(line: 749, column: 28, scope: !15743)
!15746 = !DILocation(line: 0, scope: !15103, inlinedAt: !15747)
!15747 = distinct !DILocation(line: 749, column: 3, scope: !15743)
!15748 = !DILocation(line: 188, column: 2, scope: !15113, inlinedAt: !15747)
!15749 = !DILocation(line: 188, column: 2, scope: !15115, inlinedAt: !15747)
!15750 = !DILocation(line: 0, scope: !15113, inlinedAt: !15747)
!15751 = !DILocation(line: 189, column: 7, scope: !15118, inlinedAt: !15747)
!15752 = !DILocation(line: 189, column: 35, scope: !15118, inlinedAt: !15747)
!15753 = !DILocation(line: 189, column: 7, scope: !15119, inlinedAt: !15747)
!15754 = !DILocation(line: 191, column: 21, scope: !15123, inlinedAt: !15747)
!15755 = !DILocation(line: 190, column: 4, scope: !15123, inlinedAt: !15747)
!15756 = !DILocation(line: 192, column: 4, scope: !15123, inlinedAt: !15747)
!15757 = distinct !{!15757, !15748, !15758}
!15758 = !DILocation(line: 194, column: 2, scope: !15113, inlinedAt: !15747)
!15759 = !DILocation(line: 196, column: 37, scope: !15103, inlinedAt: !15747)
!15760 = !DILocation(line: 196, column: 2, scope: !15103, inlinedAt: !15747)
!15761 = !DILocation(line: 197, column: 1, scope: !15103, inlinedAt: !15747)
!15762 = !DILocation(line: 751, column: 1, scope: !15730)
!15763 = distinct !DISubprogram(name: "add_thread_timeout", scope: !2799, file: !2799, line: 753, type: !15764, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !15766)
!15764 = !DISubroutineType(types: !15765)
!15765 = !{null, !2694, !15694}
!15766 = !{!15767, !15768}
!15767 = !DILocalVariable(name: "thread", arg: 1, scope: !15763, file: !2799, line: 753, type: !2694)
!15768 = !DILocalVariable(name: "timeout", arg: 2, scope: !15763, file: !2799, line: 753, type: !15694)
!15769 = !DILocation(line: 0, scope: !15763)
!15770 = !DILocation(line: 755, column: 7, scope: !15771)
!15771 = distinct !DILexicalBlock(scope: !15763, file: !2799, line: 755, column: 6)
!15772 = !DILocation(line: 755, column: 6, scope: !15763)
!15773 = !DILocation(line: 756, column: 3, scope: !15774)
!15774 = distinct !DILexicalBlock(scope: !15771, file: !2799, line: 755, column: 41)
!15775 = !DILocation(line: 757, column: 2, scope: !15774)
!15776 = !DILocation(line: 758, column: 1, scope: !15763)
!15777 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !14574, file: !14574, line: 47, type: !15764, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !15778)
!15778 = !{!15779, !15780}
!15779 = !DILocalVariable(name: "thread", arg: 1, scope: !15777, file: !14574, line: 47, type: !2694)
!15780 = !DILocalVariable(name: "ticks", arg: 2, scope: !15777, file: !14574, line: 47, type: !15694)
!15781 = !DILocation(line: 0, scope: !15777)
!15782 = !DILocation(line: 49, column: 30, scope: !15777)
!15783 = !DILocation(line: 49, column: 2, scope: !15777)
!15784 = !DILocation(line: 50, column: 1, scope: !15777)
!15785 = distinct !DISubprogram(name: "z_thread_timeout", scope: !2799, file: !2799, line: 795, type: !2751, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !15786)
!15786 = !{!15787, !15788, !15789, !15791, !15792}
!15787 = !DILocalVariable(name: "timeout", arg: 1, scope: !15785, file: !2799, line: 795, type: !2753)
!15788 = !DILocalVariable(name: "thread", scope: !15785, file: !2799, line: 797, type: !2694)
!15789 = !DILocalVariable(name: "__i", scope: !15790, file: !2799, line: 800, type: !14895)
!15790 = distinct !DILexicalBlock(scope: !15785, file: !2799, line: 800, column: 2)
!15791 = !DILocalVariable(name: "__key", scope: !15790, file: !2799, line: 800, type: !14895)
!15792 = !DILocalVariable(name: "killed", scope: !15793, file: !2799, line: 801, type: !422)
!15793 = distinct !DILexicalBlock(scope: !15794, file: !2799, line: 800, column: 26)
!15794 = distinct !DILexicalBlock(scope: !15790, file: !2799, line: 800, column: 2)
!15795 = !DILocation(line: 0, scope: !15785)
!15796 = !DILocation(line: 797, column: 28, scope: !15785)
!15797 = !DILocation(line: 0, scope: !15790)
!15798 = !DILocation(line: 0, scope: !14903, inlinedAt: !15799)
!15799 = distinct !DILocation(line: 800, column: 2, scope: !15790)
!15800 = !DILocation(line: 55, column: 2, scope: !14912, inlinedAt: !15801)
!15801 = distinct !DILocation(line: 145, column: 10, scope: !14903, inlinedAt: !15799)
!15802 = !DILocation(line: 0, scope: !14912, inlinedAt: !15801)
!15803 = !DILocation(line: 801, column: 27, scope: !15793)
!15804 = !DILocation(line: 801, column: 32, scope: !15793)
!15805 = !DILocation(line: 801, column: 61, scope: !15793)
!15806 = !DILocation(line: 0, scope: !15793)
!15807 = !DILocation(line: 804, column: 7, scope: !15793)
!15808 = !DILocation(line: 805, column: 21, scope: !15809)
!15809 = distinct !DILexicalBlock(scope: !15810, file: !2799, line: 805, column: 8)
!15810 = distinct !DILexicalBlock(scope: !15811, file: !2799, line: 804, column: 16)
!15811 = distinct !DILexicalBlock(scope: !15793, file: !2799, line: 804, column: 7)
!15812 = !DILocation(line: 805, column: 31, scope: !15809)
!15813 = !DILocation(line: 805, column: 8, scope: !15810)
!15814 = !DILocation(line: 806, column: 5, scope: !15815)
!15815 = distinct !DILexicalBlock(scope: !15809, file: !2799, line: 805, column: 40)
!15816 = !DILocation(line: 807, column: 4, scope: !15815)
!15817 = !DILocation(line: 808, column: 4, scope: !15810)
!15818 = !DILocation(line: 809, column: 4, scope: !15810)
!15819 = !DILocation(line: 810, column: 4, scope: !15810)
!15820 = !DILocation(line: 811, column: 3, scope: !15810)
!15821 = !DILocation(line: 0, scope: !14930, inlinedAt: !15822)
!15822 = distinct !DILocation(line: 800, column: 2, scope: !15794)
!15823 = !DILocation(line: 0, scope: !14938, inlinedAt: !15824)
!15824 = distinct !DILocation(line: 215, column: 2, scope: !14930, inlinedAt: !15822)
!15825 = !DILocation(line: 95, column: 2, scope: !14938, inlinedAt: !15824)
!15826 = !DILocation(line: 813, column: 1, scope: !15785)
!15827 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !2799, file: !2799, line: 779, type: !14861, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !15828)
!15828 = !{!15829}
!15829 = !DILocalVariable(name: "thread", arg: 1, scope: !15827, file: !2799, line: 779, type: !2694)
!15830 = !DILocation(line: 0, scope: !15827)
!15831 = !DILocation(line: 781, column: 2, scope: !15827)
!15832 = !DILocation(line: 782, column: 2, scope: !15827)
!15833 = !DILocation(line: 783, column: 15, scope: !15827)
!15834 = !DILocation(line: 783, column: 25, scope: !15827)
!15835 = !DILocation(line: 784, column: 1, scope: !15827)
!15836 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !14180, file: !14180, line: 165, type: !14861, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !15837)
!15837 = !{!15838}
!15838 = !DILocalVariable(name: "thread", arg: 1, scope: !15836, file: !14180, line: 165, type: !2694)
!15839 = !DILocation(line: 0, scope: !15836)
!15840 = !DILocation(line: 167, column: 15, scope: !15836)
!15841 = !DILocation(line: 167, column: 28, scope: !15836)
!15842 = !DILocation(line: 168, column: 1, scope: !15836)
!15843 = distinct !DISubprogram(name: "unready_thread", scope: !2799, file: !2799, line: 731, type: !14861, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !15844)
!15844 = !{!15845}
!15845 = !DILocalVariable(name: "thread", arg: 1, scope: !15843, file: !2799, line: 731, type: !2694)
!15846 = !DILocation(line: 0, scope: !15843)
!15847 = !DILocation(line: 733, column: 6, scope: !15848)
!15848 = distinct !DILexicalBlock(scope: !15843, file: !2799, line: 733, column: 6)
!15849 = !DILocation(line: 733, column: 6, scope: !15843)
!15850 = !DILocation(line: 0, scope: !15072, inlinedAt: !15851)
!15851 = distinct !DILocation(line: 734, column: 3, scope: !15852)
!15852 = distinct !DILexicalBlock(scope: !15848, file: !2799, line: 733, column: 34)
!15853 = !DILocation(line: 266, column: 15, scope: !15072, inlinedAt: !15851)
!15854 = !DILocation(line: 266, column: 28, scope: !15072, inlinedAt: !15851)
!15855 = !DILocation(line: 0, scope: !15080, inlinedAt: !15856)
!15856 = distinct !DILocation(line: 268, column: 3, scope: !15084, inlinedAt: !15851)
!15857 = !DILocation(line: 234, column: 2, scope: !15080, inlinedAt: !15856)
!15858 = !DILocation(line: 735, column: 2, scope: !15852)
!15859 = !DILocation(line: 736, column: 25, scope: !15843)
!15860 = !DILocation(line: 736, column: 22, scope: !15843)
!15861 = !DILocation(line: 736, column: 2, scope: !15843)
!15862 = !DILocation(line: 737, column: 1, scope: !15843)
!15863 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !14180, file: !14180, line: 160, type: !14861, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !15864)
!15864 = !{!15865}
!15865 = !DILocalVariable(name: "thread", arg: 1, scope: !15863, file: !14180, line: 160, type: !2694)
!15866 = !DILocation(line: 0, scope: !15863)
!15867 = !DILocation(line: 162, column: 15, scope: !15863)
!15868 = !DILocation(line: 162, column: 28, scope: !15863)
!15869 = !DILocation(line: 163, column: 1, scope: !15863)
!15870 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !2799, file: !2799, line: 786, type: !14861, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !15871)
!15871 = !{!15872, !15873, !15875}
!15872 = !DILocalVariable(name: "thread", arg: 1, scope: !15870, file: !2799, line: 786, type: !2694)
!15873 = !DILocalVariable(name: "__i", scope: !15874, file: !2799, line: 788, type: !14895)
!15874 = distinct !DILexicalBlock(scope: !15870, file: !2799, line: 788, column: 2)
!15875 = !DILocalVariable(name: "__key", scope: !15874, file: !2799, line: 788, type: !14895)
!15876 = !DILocation(line: 0, scope: !15870)
!15877 = !DILocation(line: 0, scope: !15874)
!15878 = !DILocation(line: 0, scope: !14903, inlinedAt: !15879)
!15879 = distinct !DILocation(line: 788, column: 2, scope: !15874)
!15880 = !DILocation(line: 55, column: 2, scope: !14912, inlinedAt: !15881)
!15881 = distinct !DILocation(line: 145, column: 10, scope: !14903, inlinedAt: !15879)
!15882 = !DILocation(line: 0, scope: !14912, inlinedAt: !15881)
!15883 = !DILocation(line: 789, column: 3, scope: !15884)
!15884 = distinct !DILexicalBlock(scope: !15885, file: !2799, line: 788, column: 26)
!15885 = distinct !DILexicalBlock(scope: !15874, file: !2799, line: 788, column: 2)
!15886 = !DILocation(line: 0, scope: !14930, inlinedAt: !15887)
!15887 = distinct !DILocation(line: 788, column: 2, scope: !15885)
!15888 = !DILocation(line: 0, scope: !14938, inlinedAt: !15889)
!15889 = distinct !DILocation(line: 215, column: 2, scope: !14930, inlinedAt: !15887)
!15890 = !DILocation(line: 95, column: 2, scope: !14938, inlinedAt: !15889)
!15891 = !DILocation(line: 791, column: 1, scope: !15870)
!15892 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !2799, file: !2799, line: 816, type: !15893, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !15895)
!15893 = !DISubroutineType(types: !15894)
!15894 = !{!108, !113, !2725, !15694}
!15895 = !{!15896, !15897, !15898, !15899, !15900, !15902}
!15896 = !DILocalVariable(name: "key", arg: 1, scope: !15892, file: !2799, line: 816, type: !113)
!15897 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15892, file: !2799, line: 816, type: !2725)
!15898 = !DILocalVariable(name: "timeout", arg: 3, scope: !15892, file: !2799, line: 816, type: !15694)
!15899 = !DILocalVariable(name: "ret", scope: !15892, file: !2799, line: 828, type: !108)
!15900 = !DILocalVariable(name: "__i", scope: !15901, file: !2799, line: 829, type: !14895)
!15901 = distinct !DILexicalBlock(scope: !15892, file: !2799, line: 829, column: 2)
!15902 = !DILocalVariable(name: "__key", scope: !15901, file: !2799, line: 829, type: !14895)
!15903 = !DILocation(line: 0, scope: !15892)
!15904 = !DILocation(line: 823, column: 14, scope: !15892)
!15905 = !DILocation(line: 823, column: 2, scope: !15892)
!15906 = !DILocation(line: 826, column: 20, scope: !15892)
!15907 = !DILocation(line: 826, column: 18, scope: !15892)
!15908 = !DILocation(line: 828, column: 12, scope: !15892)
!15909 = !DILocation(line: 0, scope: !15901)
!15910 = !DILocation(line: 0, scope: !14903, inlinedAt: !15911)
!15911 = distinct !DILocation(line: 829, column: 2, scope: !15901)
!15912 = !DILocation(line: 55, column: 2, scope: !14912, inlinedAt: !15913)
!15913 = distinct !DILocation(line: 145, column: 10, scope: !14903, inlinedAt: !15911)
!15914 = !DILocation(line: 0, scope: !14912, inlinedAt: !15913)
!15915 = !DILocation(line: 830, column: 7, scope: !15916)
!15916 = distinct !DILexicalBlock(scope: !15917, file: !2799, line: 830, column: 7)
!15917 = distinct !DILexicalBlock(scope: !15918, file: !2799, line: 829, column: 26)
!15918 = distinct !DILexicalBlock(scope: !15901, file: !2799, line: 829, column: 2)
!15919 = !DILocation(line: 830, column: 26, scope: !15916)
!15920 = !DILocation(line: 830, column: 23, scope: !15916)
!15921 = !DILocation(line: 830, column: 7, scope: !15917)
!15922 = !DILocation(line: 831, column: 20, scope: !15923)
!15923 = distinct !DILexicalBlock(scope: !15916, file: !2799, line: 830, column: 36)
!15924 = !DILocation(line: 832, column: 3, scope: !15923)
!15925 = !DILocation(line: 0, scope: !14930, inlinedAt: !15926)
!15926 = distinct !DILocation(line: 829, column: 2, scope: !15918)
!15927 = !DILocation(line: 0, scope: !14938, inlinedAt: !15928)
!15928 = distinct !DILocation(line: 215, column: 2, scope: !14930, inlinedAt: !15926)
!15929 = !DILocation(line: 95, column: 2, scope: !14938, inlinedAt: !15928)
!15930 = !DILocation(line: 834, column: 2, scope: !15892)
!15931 = distinct !DISubprogram(name: "z_pend_curr", scope: !2799, file: !2799, line: 840, type: !15932, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !15934)
!15932 = !DISubroutineType(types: !15933)
!15933 = !{!108, !14906, !14895, !2725, !15694}
!15934 = !{!15935, !15936, !15937, !15938}
!15935 = !DILocalVariable(name: "lock", arg: 1, scope: !15931, file: !2799, line: 840, type: !14906)
!15936 = !DILocalVariable(name: "key", arg: 2, scope: !15931, file: !2799, line: 840, type: !14895)
!15937 = !DILocalVariable(name: "wait_q", arg: 3, scope: !15931, file: !2799, line: 841, type: !2725)
!15938 = !DILocalVariable(name: "timeout", arg: 4, scope: !15931, file: !2799, line: 841, type: !15694)
!15939 = !DILocation(line: 0, scope: !15931)
!15940 = !DILocation(line: 844, column: 20, scope: !15931)
!15941 = !DILocation(line: 844, column: 18, scope: !15931)
!15942 = !DILocation(line: 0, scope: !14903, inlinedAt: !15943)
!15943 = distinct !DILocation(line: 856, column: 9, scope: !15931)
!15944 = !DILocation(line: 55, column: 2, scope: !14912, inlinedAt: !15945)
!15945 = distinct !DILocation(line: 145, column: 10, scope: !14903, inlinedAt: !15943)
!15946 = !DILocation(line: 0, scope: !14912, inlinedAt: !15945)
!15947 = !DILocation(line: 857, column: 14, scope: !15931)
!15948 = !DILocation(line: 857, column: 2, scope: !15931)
!15949 = !DILocation(line: 0, scope: !15514, inlinedAt: !15950)
!15950 = distinct !DILocation(line: 859, column: 9, scope: !15931)
!15951 = !DILocation(line: 196, column: 9, scope: !15514, inlinedAt: !15950)
!15952 = !DILocation(line: 859, column: 2, scope: !15931)
!15953 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !2799, file: !2799, line: 862, type: !15954, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !15956)
!15954 = !DISubroutineType(types: !15955)
!15955 = !{!2694, !2725}
!15956 = !{!15957, !15958, !15959, !15961}
!15957 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15953, file: !2799, line: 862, type: !2725)
!15958 = !DILocalVariable(name: "thread", scope: !15953, file: !2799, line: 864, type: !2694)
!15959 = !DILocalVariable(name: "__i", scope: !15960, file: !2799, line: 866, type: !14895)
!15960 = distinct !DILexicalBlock(scope: !15953, file: !2799, line: 866, column: 2)
!15961 = !DILocalVariable(name: "__key", scope: !15960, file: !2799, line: 866, type: !14895)
!15962 = !DILocation(line: 0, scope: !15953)
!15963 = !DILocation(line: 0, scope: !15960)
!15964 = !DILocation(line: 0, scope: !14903, inlinedAt: !15965)
!15965 = distinct !DILocation(line: 866, column: 2, scope: !15960)
!15966 = !DILocation(line: 55, column: 2, scope: !14912, inlinedAt: !15967)
!15967 = distinct !DILocation(line: 145, column: 10, scope: !14903, inlinedAt: !15965)
!15968 = !DILocation(line: 0, scope: !14912, inlinedAt: !15967)
!15969 = !DILocation(line: 867, column: 12, scope: !15970)
!15970 = distinct !DILexicalBlock(scope: !15971, file: !2799, line: 866, column: 26)
!15971 = distinct !DILexicalBlock(scope: !15960, file: !2799, line: 866, column: 2)
!15972 = !DILocation(line: 869, column: 14, scope: !15973)
!15973 = distinct !DILexicalBlock(scope: !15970, file: !2799, line: 869, column: 7)
!15974 = !DILocation(line: 869, column: 7, scope: !15970)
!15975 = !DILocation(line: 870, column: 4, scope: !15976)
!15976 = distinct !DILexicalBlock(scope: !15973, file: !2799, line: 869, column: 23)
!15977 = !DILocation(line: 871, column: 3, scope: !15976)
!15978 = !DILocation(line: 0, scope: !14930, inlinedAt: !15979)
!15979 = distinct !DILocation(line: 866, column: 2, scope: !15971)
!15980 = !DILocation(line: 0, scope: !14938, inlinedAt: !15981)
!15981 = distinct !DILocation(line: 215, column: 2, scope: !14930, inlinedAt: !15979)
!15982 = !DILocation(line: 95, column: 2, scope: !14938, inlinedAt: !15981)
!15983 = !DILocation(line: 874, column: 2, scope: !15953)
!15984 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !2799, file: !2799, line: 877, type: !15954, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !15985)
!15985 = !{!15986, !15987, !15988, !15990}
!15986 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15984, file: !2799, line: 877, type: !2725)
!15987 = !DILocalVariable(name: "thread", scope: !15984, file: !2799, line: 879, type: !2694)
!15988 = !DILocalVariable(name: "__i", scope: !15989, file: !2799, line: 881, type: !14895)
!15989 = distinct !DILexicalBlock(scope: !15984, file: !2799, line: 881, column: 2)
!15990 = !DILocalVariable(name: "__key", scope: !15989, file: !2799, line: 881, type: !14895)
!15991 = !DILocation(line: 0, scope: !15984)
!15992 = !DILocation(line: 0, scope: !15989)
!15993 = !DILocation(line: 0, scope: !14903, inlinedAt: !15994)
!15994 = distinct !DILocation(line: 881, column: 2, scope: !15989)
!15995 = !DILocation(line: 55, column: 2, scope: !14912, inlinedAt: !15996)
!15996 = distinct !DILocation(line: 145, column: 10, scope: !14903, inlinedAt: !15994)
!15997 = !DILocation(line: 0, scope: !14912, inlinedAt: !15996)
!15998 = !DILocation(line: 882, column: 12, scope: !15999)
!15999 = distinct !DILexicalBlock(scope: !16000, file: !2799, line: 881, column: 26)
!16000 = distinct !DILexicalBlock(scope: !15989, file: !2799, line: 881, column: 2)
!16001 = !DILocation(line: 884, column: 14, scope: !16002)
!16002 = distinct !DILexicalBlock(scope: !15999, file: !2799, line: 884, column: 7)
!16003 = !DILocation(line: 884, column: 7, scope: !15999)
!16004 = !DILocation(line: 885, column: 4, scope: !16005)
!16005 = distinct !DILexicalBlock(scope: !16002, file: !2799, line: 884, column: 23)
!16006 = !DILocation(line: 886, column: 10, scope: !16005)
!16007 = !DILocation(line: 887, column: 3, scope: !16005)
!16008 = !DILocation(line: 0, scope: !14930, inlinedAt: !16009)
!16009 = distinct !DILocation(line: 881, column: 2, scope: !16000)
!16010 = !DILocation(line: 0, scope: !14938, inlinedAt: !16011)
!16011 = distinct !DILocation(line: 215, column: 2, scope: !14930, inlinedAt: !16009)
!16012 = !DILocation(line: 95, column: 2, scope: !14938, inlinedAt: !16011)
!16013 = !DILocation(line: 890, column: 2, scope: !15984)
!16014 = distinct !DISubprogram(name: "z_unpend_thread", scope: !2799, file: !2799, line: 893, type: !14861, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !16015)
!16015 = !{!16016}
!16016 = !DILocalVariable(name: "thread", arg: 1, scope: !16014, file: !2799, line: 893, type: !2694)
!16017 = !DILocation(line: 0, scope: !16014)
!16018 = !DILocation(line: 0, scope: !15870, inlinedAt: !16019)
!16019 = distinct !DILocation(line: 895, column: 2, scope: !16014)
!16020 = !DILocation(line: 0, scope: !15874, inlinedAt: !16019)
!16021 = !DILocation(line: 0, scope: !14903, inlinedAt: !16022)
!16022 = distinct !DILocation(line: 788, column: 2, scope: !15874, inlinedAt: !16019)
!16023 = !DILocation(line: 55, column: 2, scope: !14912, inlinedAt: !16024)
!16024 = distinct !DILocation(line: 145, column: 10, scope: !14903, inlinedAt: !16022)
!16025 = !DILocation(line: 0, scope: !14912, inlinedAt: !16024)
!16026 = !DILocation(line: 789, column: 3, scope: !15884, inlinedAt: !16019)
!16027 = !DILocation(line: 0, scope: !14930, inlinedAt: !16028)
!16028 = distinct !DILocation(line: 788, column: 2, scope: !15885, inlinedAt: !16019)
!16029 = !DILocation(line: 0, scope: !14938, inlinedAt: !16030)
!16030 = distinct !DILocation(line: 215, column: 2, scope: !14930, inlinedAt: !16028)
!16031 = !DILocation(line: 95, column: 2, scope: !14938, inlinedAt: !16030)
!16032 = !DILocation(line: 896, column: 8, scope: !16014)
!16033 = !DILocation(line: 897, column: 1, scope: !16014)
!16034 = distinct !DISubprogram(name: "z_set_prio", scope: !2799, file: !2799, line: 902, type: !15223, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !16035)
!16035 = !{!16036, !16037, !16038, !16039, !16041}
!16036 = !DILocalVariable(name: "thread", arg: 1, scope: !16034, file: !2799, line: 902, type: !2694)
!16037 = !DILocalVariable(name: "prio", arg: 2, scope: !16034, file: !2799, line: 902, type: !108)
!16038 = !DILocalVariable(name: "need_sched", scope: !16034, file: !2799, line: 904, type: !422)
!16039 = !DILocalVariable(name: "__i", scope: !16040, file: !2799, line: 906, type: !14895)
!16040 = distinct !DILexicalBlock(scope: !16034, file: !2799, line: 906, column: 2)
!16041 = !DILocalVariable(name: "__key", scope: !16040, file: !2799, line: 906, type: !14895)
!16042 = !DILocation(line: 0, scope: !16034)
!16043 = !DILocation(line: 0, scope: !16040)
!16044 = !DILocation(line: 0, scope: !14903, inlinedAt: !16045)
!16045 = distinct !DILocation(line: 906, column: 2, scope: !16040)
!16046 = !DILocation(line: 55, column: 2, scope: !14912, inlinedAt: !16047)
!16047 = distinct !DILocation(line: 145, column: 10, scope: !14903, inlinedAt: !16045)
!16048 = !DILocation(line: 0, scope: !14912, inlinedAt: !16047)
!16049 = !DILocation(line: 907, column: 16, scope: !16050)
!16050 = distinct !DILexicalBlock(scope: !16051, file: !2799, line: 906, column: 26)
!16051 = distinct !DILexicalBlock(scope: !16040, file: !2799, line: 906, column: 2)
!16052 = !DILocation(line: 909, column: 7, scope: !16050)
!16053 = !DILocation(line: 0, scope: !15072, inlinedAt: !16054)
!16054 = distinct !DILocation(line: 912, column: 5, scope: !16055)
!16055 = distinct !DILexicalBlock(scope: !16056, file: !2799, line: 911, column: 63)
!16056 = distinct !DILexicalBlock(scope: !16057, file: !2799, line: 911, column: 8)
!16057 = distinct !DILexicalBlock(scope: !16058, file: !2799, line: 909, column: 19)
!16058 = distinct !DILexicalBlock(scope: !16050, file: !2799, line: 909, column: 7)
!16059 = !DILocation(line: 266, column: 28, scope: !15072, inlinedAt: !16054)
!16060 = !DILocation(line: 0, scope: !15080, inlinedAt: !16061)
!16061 = distinct !DILocation(line: 268, column: 3, scope: !15084, inlinedAt: !16054)
!16062 = !DILocation(line: 234, column: 2, scope: !15080, inlinedAt: !16061)
!16063 = !DILocation(line: 913, column: 23, scope: !16055)
!16064 = !DILocation(line: 0, scope: !15089, inlinedAt: !16065)
!16065 = distinct !DILocation(line: 914, column: 5, scope: !16055)
!16066 = !DILocation(line: 252, column: 28, scope: !15089, inlinedAt: !16065)
!16067 = !DILocation(line: 0, scope: !15096, inlinedAt: !16068)
!16068 = distinct !DILocation(line: 254, column: 3, scope: !15100, inlinedAt: !16065)
!16069 = !DILocation(line: 0, scope: !15103, inlinedAt: !16070)
!16070 = distinct !DILocation(line: 229, column: 2, scope: !15096, inlinedAt: !16068)
!16071 = !DILocation(line: 188, column: 2, scope: !15113, inlinedAt: !16070)
!16072 = !DILocation(line: 188, column: 2, scope: !15115, inlinedAt: !16070)
!16073 = !DILocation(line: 0, scope: !15113, inlinedAt: !16070)
!16074 = !DILocation(line: 189, column: 7, scope: !15118, inlinedAt: !16070)
!16075 = !DILocation(line: 189, column: 35, scope: !15118, inlinedAt: !16070)
!16076 = !DILocation(line: 189, column: 7, scope: !15119, inlinedAt: !16070)
!16077 = !DILocation(line: 190, column: 4, scope: !15123, inlinedAt: !16070)
!16078 = !DILocation(line: 192, column: 4, scope: !15123, inlinedAt: !16070)
!16079 = distinct !{!16079, !16071, !16080}
!16080 = !DILocation(line: 194, column: 2, scope: !15113, inlinedAt: !16070)
!16081 = !DILocation(line: 196, column: 2, scope: !15103, inlinedAt: !16070)
!16082 = !DILocation(line: 197, column: 1, scope: !15103, inlinedAt: !16070)
!16083 = !DILocation(line: 918, column: 4, scope: !16057)
!16084 = !DILocation(line: 919, column: 3, scope: !16057)
!16085 = !DILocation(line: 920, column: 22, scope: !16086)
!16086 = distinct !DILexicalBlock(scope: !16058, file: !2799, line: 919, column: 10)
!16087 = !DILocation(line: 0, scope: !14930, inlinedAt: !16088)
!16088 = distinct !DILocation(line: 906, column: 2, scope: !16051)
!16089 = !DILocation(line: 0, scope: !14938, inlinedAt: !16090)
!16090 = distinct !DILocation(line: 215, column: 2, scope: !14930, inlinedAt: !16088)
!16091 = !DILocation(line: 95, column: 2, scope: !14938, inlinedAt: !16090)
!16092 = !DILocation(line: 926, column: 2, scope: !16034)
!16093 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !2799, file: !2799, line: 929, type: !16094, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !16096)
!16094 = !DISubroutineType(types: !16095)
!16095 = !{null, !2694, !108}
!16096 = !{!16097, !16098, !16099}
!16097 = !DILocalVariable(name: "thread", arg: 1, scope: !16093, file: !2799, line: 929, type: !2694)
!16098 = !DILocalVariable(name: "prio", arg: 2, scope: !16093, file: !2799, line: 929, type: !108)
!16099 = !DILocalVariable(name: "need_sched", scope: !16093, file: !2799, line: 931, type: !422)
!16100 = !DILocation(line: 0, scope: !16093)
!16101 = !DILocation(line: 931, column: 20, scope: !16093)
!16102 = !DILocation(line: 935, column: 17, scope: !16103)
!16103 = distinct !DILexicalBlock(scope: !16093, file: !2799, line: 935, column: 6)
!16104 = !DILocation(line: 935, column: 20, scope: !16103)
!16105 = !DILocation(line: 935, column: 35, scope: !16103)
!16106 = !DILocation(line: 935, column: 48, scope: !16103)
!16107 = !DILocation(line: 935, column: 6, scope: !16093)
!16108 = !DILocation(line: 936, column: 3, scope: !16109)
!16109 = distinct !DILexicalBlock(scope: !16103, file: !2799, line: 935, column: 55)
!16110 = !DILocation(line: 937, column: 2, scope: !16109)
!16111 = !DILocation(line: 938, column: 1, scope: !16093)
!16112 = distinct !DISubprogram(name: "k_sched_lock", scope: !2799, file: !2799, line: 987, type: !3551, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !16113)
!16113 = !{!16114, !16116}
!16114 = !DILocalVariable(name: "__i", scope: !16115, file: !2799, line: 989, type: !14895)
!16115 = distinct !DILexicalBlock(scope: !16112, file: !2799, line: 989, column: 2)
!16116 = !DILocalVariable(name: "__key", scope: !16115, file: !2799, line: 989, type: !14895)
!16117 = !DILocation(line: 0, scope: !16115)
!16118 = !DILocation(line: 0, scope: !14903, inlinedAt: !16119)
!16119 = distinct !DILocation(line: 989, column: 2, scope: !16115)
!16120 = !DILocation(line: 55, column: 2, scope: !14912, inlinedAt: !16121)
!16121 = distinct !DILocation(line: 145, column: 10, scope: !14903, inlinedAt: !16119)
!16122 = !DILocation(line: 0, scope: !14912, inlinedAt: !16121)
!16123 = !DILocation(line: 992, column: 3, scope: !16124)
!16124 = distinct !DILexicalBlock(scope: !16125, file: !2799, line: 989, column: 26)
!16125 = distinct !DILexicalBlock(scope: !16115, file: !2799, line: 989, column: 2)
!16126 = !DILocation(line: 0, scope: !14930, inlinedAt: !16127)
!16127 = distinct !DILocation(line: 989, column: 2, scope: !16125)
!16128 = !DILocation(line: 0, scope: !14938, inlinedAt: !16129)
!16129 = distinct !DILocation(line: 215, column: 2, scope: !14930, inlinedAt: !16127)
!16130 = !DILocation(line: 95, column: 2, scope: !14938, inlinedAt: !16129)
!16131 = !DILocation(line: 994, column: 1, scope: !16112)
!16132 = distinct !DISubprogram(name: "z_sched_lock", scope: !14180, file: !14180, line: 251, type: !3551, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !437)
!16133 = !DILocation(line: 256, column: 4, scope: !16132)
!16134 = !DILocation(line: 256, column: 19, scope: !16132)
!16135 = !DILocation(line: 256, column: 2, scope: !16132)
!16136 = !DILocation(line: 258, column: 2, scope: !16137)
!16137 = distinct !DILexicalBlock(scope: !16132, file: !14180, line: 258, column: 2)
!16138 = !{i64 2155580486}
!16139 = !DILocation(line: 259, column: 1, scope: !16132)
!16140 = distinct !DISubprogram(name: "k_sched_unlock", scope: !2799, file: !2799, line: 996, type: !3551, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !16141)
!16141 = !{!16142, !16144}
!16142 = !DILocalVariable(name: "__i", scope: !16143, file: !2799, line: 998, type: !14895)
!16143 = distinct !DILexicalBlock(scope: !16140, file: !2799, line: 998, column: 2)
!16144 = !DILocalVariable(name: "__key", scope: !16143, file: !2799, line: 998, type: !14895)
!16145 = !DILocation(line: 0, scope: !16143)
!16146 = !DILocation(line: 0, scope: !14903, inlinedAt: !16147)
!16147 = distinct !DILocation(line: 998, column: 2, scope: !16143)
!16148 = !DILocation(line: 55, column: 2, scope: !14912, inlinedAt: !16149)
!16149 = distinct !DILocation(line: 145, column: 10, scope: !14903, inlinedAt: !16147)
!16150 = !DILocation(line: 0, scope: !14912, inlinedAt: !16149)
!16151 = !DILocation(line: 1002, column: 5, scope: !16152)
!16152 = distinct !DILexicalBlock(scope: !16153, file: !2799, line: 998, column: 26)
!16153 = distinct !DILexicalBlock(scope: !16143, file: !2799, line: 998, column: 2)
!16154 = !DILocation(line: 1002, column: 20, scope: !16152)
!16155 = !DILocation(line: 1002, column: 3, scope: !16152)
!16156 = !DILocation(line: 1003, column: 3, scope: !16152)
!16157 = !DILocation(line: 0, scope: !14930, inlinedAt: !16158)
!16158 = distinct !DILocation(line: 998, column: 2, scope: !16153)
!16159 = !DILocation(line: 0, scope: !14938, inlinedAt: !16160)
!16160 = distinct !DILocation(line: 215, column: 2, scope: !14930, inlinedAt: !16158)
!16161 = !DILocation(line: 95, column: 2, scope: !14938, inlinedAt: !16160)
!16162 = !DILocation(line: 1011, column: 2, scope: !16140)
!16163 = !DILocation(line: 1012, column: 1, scope: !16140)
!16164 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !2799, file: !2799, line: 1014, type: !15211, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !437)
!16165 = !DILocation(line: 1028, column: 25, scope: !16164)
!16166 = !DILocation(line: 1028, column: 2, scope: !16164)
!16167 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !2799, file: !2799, line: 1155, type: !16168, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !16170)
!16168 = !DISubroutineType(types: !16169)
!16169 = !{!422, !2723, !2723}
!16170 = !{!16171, !16172, !16173, !16174, !16175}
!16171 = !DILocalVariable(name: "a", arg: 1, scope: !16167, file: !2799, line: 1155, type: !2723)
!16172 = !DILocalVariable(name: "b", arg: 2, scope: !16167, file: !2799, line: 1155, type: !2723)
!16173 = !DILocalVariable(name: "thread_a", scope: !16167, file: !2799, line: 1157, type: !2694)
!16174 = !DILocalVariable(name: "thread_b", scope: !16167, file: !2799, line: 1157, type: !2694)
!16175 = !DILocalVariable(name: "cmp", scope: !16167, file: !2799, line: 1158, type: !220)
!16176 = !DILocation(line: 0, scope: !16167)
!16177 = !DILocation(line: 1160, column: 13, scope: !16167)
!16178 = !DILocation(line: 1161, column: 13, scope: !16167)
!16179 = !DILocation(line: 1163, column: 8, scope: !16167)
!16180 = !DILocation(line: 1165, column: 10, scope: !16181)
!16181 = distinct !DILexicalBlock(scope: !16167, file: !2799, line: 1165, column: 6)
!16182 = !DILocation(line: 1165, column: 6, scope: !16167)
!16183 = !DILocation(line: 1167, column: 17, scope: !16184)
!16184 = distinct !DILexicalBlock(scope: !16181, file: !2799, line: 1167, column: 13)
!16185 = !DILocation(line: 1167, column: 13, scope: !16181)
!16186 = !DILocation(line: 1170, column: 25, scope: !16187)
!16187 = distinct !DILexicalBlock(scope: !16184, file: !2799, line: 1169, column: 9)
!16188 = !DILocation(line: 1170, column: 52, scope: !16187)
!16189 = !DILocation(line: 1170, column: 35, scope: !16187)
!16190 = !DILocation(line: 1170, column: 3, scope: !16187)
!16191 = !DILocation(line: 0, scope: !16181)
!16192 = !DILocation(line: 1173, column: 1, scope: !16167)
!16193 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !2799, file: !2799, line: 1175, type: !16194, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !16209)
!16194 = !DISubroutineType(types: !16195)
!16195 = !{null, !16196, !2694}
!16196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16197, size: 32)
!16197 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !16198, line: 37, size: 128, elements: !16199)
!16198 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16199 = !{!16200, !16208}
!16200 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !16197, file: !16198, line: 38, baseType: !16201, size: 96)
!16201 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !684, line: 83, size: 96, elements: !16202)
!16202 = !{!16203, !16204, !16207}
!16203 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !16201, file: !684, line: 84, baseType: !2723, size: 32)
!16204 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !16201, file: !684, line: 85, baseType: !16205, size: 32, offset: 32)
!16205 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !684, line: 81, baseType: !16206)
!16206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16168, size: 32)
!16207 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !16201, file: !684, line: 86, baseType: !108, size: 32, offset: 64)
!16208 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !16197, file: !16198, line: 39, baseType: !108, size: 32, offset: 96)
!16209 = !{!16210, !16211, !16212, !16213, !16222}
!16210 = !DILocalVariable(name: "pq", arg: 1, scope: !16193, file: !2799, line: 1175, type: !16196)
!16211 = !DILocalVariable(name: "thread", arg: 2, scope: !16193, file: !2799, line: 1175, type: !2694)
!16212 = !DILocalVariable(name: "t", scope: !16193, file: !2799, line: 1177, type: !2694)
!16213 = !DILocalVariable(name: "__f", scope: !16214, file: !2799, line: 1190, type: !16217)
!16214 = distinct !DILexicalBlock(scope: !16215, file: !2799, line: 1190, column: 3)
!16215 = distinct !DILexicalBlock(scope: !16216, file: !2799, line: 1189, column: 27)
!16216 = distinct !DILexicalBlock(scope: !16193, file: !2799, line: 1189, column: 6)
!16217 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !684, line: 155, size: 96, elements: !16218)
!16218 = !{!16219, !16220, !16221}
!16219 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !16217, file: !684, line: 156, baseType: !2794, size: 32)
!16220 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !16217, file: !684, line: 157, baseType: !209, size: 32, offset: 32)
!16221 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !16217, file: !684, line: 158, baseType: !220, size: 32, offset: 64)
!16222 = !DILocalVariable(name: "n", scope: !16223, file: !2799, line: 1190, type: !2723)
!16223 = distinct !DILexicalBlock(scope: !16224, file: !2799, line: 1190, column: 3)
!16224 = distinct !DILexicalBlock(scope: !16214, file: !2799, line: 1190, column: 3)
!16225 = !DILocation(line: 0, scope: !16193)
!16226 = !DILocation(line: 1181, column: 31, scope: !16193)
!16227 = !DILocation(line: 1181, column: 45, scope: !16193)
!16228 = !DILocation(line: 1181, column: 15, scope: !16193)
!16229 = !DILocation(line: 1181, column: 25, scope: !16193)
!16230 = !DILocation(line: 1189, column: 11, scope: !16216)
!16231 = !DILocation(line: 1189, column: 7, scope: !16216)
!16232 = !DILocation(line: 1189, column: 6, scope: !16193)
!16233 = !DILocation(line: 1190, column: 3, scope: !16214)
!16234 = !DILocation(line: 1190, column: 3, scope: !16223)
!16235 = !DILocation(line: 0, scope: !16223)
!16236 = !DILocation(line: 1190, column: 3, scope: !16224)
!16237 = !DILocation(line: 1193, column: 2, scope: !16215)
!16238 = !DILocation(line: 1191, column: 42, scope: !16239)
!16239 = distinct !DILexicalBlock(scope: !16224, file: !2799, line: 1190, column: 54)
!16240 = !DILocation(line: 1191, column: 12, scope: !16239)
!16241 = !DILocation(line: 1191, column: 22, scope: !16239)
!16242 = distinct !{!16242, !16233, !16243}
!16243 = !DILocation(line: 1192, column: 3, scope: !16214)
!16244 = !DILocation(line: 1195, column: 17, scope: !16193)
!16245 = !DILocation(line: 1195, column: 37, scope: !16193)
!16246 = !DILocation(line: 1195, column: 2, scope: !16193)
!16247 = !DILocation(line: 1196, column: 1, scope: !16193)
!16248 = !DISubprogram(name: "z_rb_foreach_next", scope: !684, file: !684, line: 176, type: !16249, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !437)
!16249 = !DISubroutineType(types: !16250)
!16250 = !{!2723, !16251, !16252}
!16251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16201, size: 32)
!16252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16217, size: 32)
!16253 = !DISubprogram(name: "rb_insert", scope: !684, file: !684, line: 105, type: !16254, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !437)
!16254 = !DISubroutineType(types: !16255)
!16255 = !{null, !16251, !2723}
!16256 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !2799, file: !2799, line: 1198, type: !16194, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !16257)
!16257 = !{!16258, !16259}
!16258 = !DILocalVariable(name: "pq", arg: 1, scope: !16256, file: !2799, line: 1198, type: !16196)
!16259 = !DILocalVariable(name: "thread", arg: 2, scope: !16256, file: !2799, line: 1198, type: !2694)
!16260 = !DILocation(line: 0, scope: !16256)
!16261 = !DILocation(line: 1202, column: 17, scope: !16256)
!16262 = !DILocation(line: 1202, column: 37, scope: !16256)
!16263 = !DILocation(line: 1202, column: 2, scope: !16256)
!16264 = !DILocation(line: 1204, column: 16, scope: !16265)
!16265 = distinct !DILexicalBlock(scope: !16256, file: !2799, line: 1204, column: 6)
!16266 = !DILocation(line: 1204, column: 7, scope: !16265)
!16267 = !DILocation(line: 1204, column: 6, scope: !16256)
!16268 = !DILocation(line: 1205, column: 7, scope: !16269)
!16269 = distinct !DILexicalBlock(scope: !16265, file: !2799, line: 1204, column: 22)
!16270 = !DILocation(line: 1205, column: 22, scope: !16269)
!16271 = !DILocation(line: 1206, column: 2, scope: !16269)
!16272 = !DILocation(line: 1207, column: 1, scope: !16256)
!16273 = !DISubprogram(name: "rb_remove", scope: !684, file: !684, line: 110, type: !16254, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !437)
!16274 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !2799, file: !2799, line: 1209, type: !16275, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !16277)
!16275 = !DISubroutineType(types: !16276)
!16276 = !{!2694, !16196}
!16277 = !{!16278, !16279, !16280}
!16278 = !DILocalVariable(name: "pq", arg: 1, scope: !16274, file: !2799, line: 1209, type: !16196)
!16279 = !DILocalVariable(name: "thread", scope: !16274, file: !2799, line: 1211, type: !2694)
!16280 = !DILocalVariable(name: "n", scope: !16274, file: !2799, line: 1212, type: !2723)
!16281 = !DILocation(line: 0, scope: !16274)
!16282 = !DILocation(line: 1212, column: 37, scope: !16274)
!16283 = !DILocation(line: 1212, column: 21, scope: !16274)
!16284 = !DILocation(line: 1217, column: 2, scope: !16274)
!16285 = distinct !DISubprogram(name: "rb_get_min", scope: !684, file: !684, line: 115, type: !16286, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !16288)
!16286 = !DISubroutineType(types: !16287)
!16287 = !{!2723, !16251}
!16288 = !{!16289}
!16289 = !DILocalVariable(name: "tree", arg: 1, scope: !16285, file: !684, line: 115, type: !16251)
!16290 = !DILocation(line: 0, scope: !16285)
!16291 = !DILocation(line: 117, column: 9, scope: !16285)
!16292 = !DILocation(line: 117, column: 2, scope: !16285)
!16293 = !DISubprogram(name: "z_rb_get_minmax", scope: !684, file: !684, line: 100, type: !16294, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !437)
!16294 = !DISubroutineType(types: !16295)
!16295 = !{!2723, !16251, !164}
!16296 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !2799, file: !2799, line: 1246, type: !16297, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !16307)
!16297 = !DISubroutineType(types: !16298)
!16298 = !{!2694, !16299}
!16299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16300, size: 32)
!16300 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !16198, line: 53, size: 2080, elements: !16301)
!16301 = !{!16302, !16306}
!16302 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !16300, file: !16198, line: 54, baseType: !16303, size: 2048)
!16303 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2730, size: 2048, elements: !16304)
!16304 = !{!16305}
!16305 = !DISubrange(count: 32)
!16306 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !16300, file: !16198, line: 55, baseType: !32, size: 32, offset: 2048)
!16307 = !{!16308, !16309, !16310, !16311}
!16308 = !DILocalVariable(name: "pq", arg: 1, scope: !16296, file: !2799, line: 1246, type: !16299)
!16309 = !DILocalVariable(name: "thread", scope: !16296, file: !2799, line: 1252, type: !2694)
!16310 = !DILocalVariable(name: "l", scope: !16296, file: !2799, line: 1253, type: !15106)
!16311 = !DILocalVariable(name: "n", scope: !16296, file: !2799, line: 1254, type: !2795)
!16312 = !DILocation(line: 0, scope: !16296)
!16313 = !DILocation(line: 1248, column: 11, scope: !16314)
!16314 = distinct !DILexicalBlock(scope: !16296, file: !2799, line: 1248, column: 6)
!16315 = !DILocation(line: 1248, column: 7, scope: !16314)
!16316 = !DILocation(line: 1248, column: 6, scope: !16296)
!16317 = !DILocation(line: 1253, column: 31, scope: !16296)
!16318 = !DILocation(line: 1253, column: 20, scope: !16296)
!16319 = !DILocation(line: 1254, column: 19, scope: !16296)
!16320 = !DILocation(line: 1260, column: 1, scope: !16296)
!16321 = distinct !DISubprogram(name: "z_unpend_all", scope: !2799, file: !2799, line: 1262, type: !16322, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !16324)
!16322 = !DISubroutineType(types: !16323)
!16323 = !{!108, !2725}
!16324 = !{!16325, !16326, !16327}
!16325 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16321, file: !2799, line: 1262, type: !2725)
!16326 = !DILocalVariable(name: "need_sched", scope: !16321, file: !2799, line: 1264, type: !108)
!16327 = !DILocalVariable(name: "thread", scope: !16321, file: !2799, line: 1265, type: !2694)
!16328 = !DILocation(line: 0, scope: !16321)
!16329 = !DILocation(line: 1267, column: 19, scope: !16321)
!16330 = !DILocation(line: 1267, column: 41, scope: !16321)
!16331 = !DILocation(line: 1267, column: 2, scope: !16321)
!16332 = !DILocation(line: 1268, column: 3, scope: !16333)
!16333 = distinct !DILexicalBlock(scope: !16321, file: !2799, line: 1267, column: 50)
!16334 = !DILocation(line: 1269, column: 3, scope: !16333)
!16335 = distinct !{!16335, !16331, !16336}
!16336 = !DILocation(line: 1271, column: 2, scope: !16321)
!16337 = !DILocation(line: 1273, column: 2, scope: !16321)
!16338 = distinct !DISubprogram(name: "z_waitq_head", scope: !14506, file: !14506, line: 52, type: !15954, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !16339)
!16339 = !{!16340}
!16340 = !DILocalVariable(name: "w", arg: 1, scope: !16338, file: !14506, line: 52, type: !2725)
!16341 = !DILocation(line: 0, scope: !16338)
!16342 = !DILocation(line: 54, column: 52, scope: !16338)
!16343 = !DILocation(line: 54, column: 28, scope: !16338)
!16344 = !DILocation(line: 54, column: 9, scope: !16338)
!16345 = !DILocation(line: 54, column: 2, scope: !16338)
!16346 = distinct !DISubprogram(name: "init_ready_q", scope: !2799, file: !2799, line: 1276, type: !16347, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !16354)
!16347 = !DISubroutineType(types: !16348)
!16348 = !{null, !16349}
!16349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16350, size: 32)
!16350 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !363, line: 83, size: 96, elements: !16351)
!16351 = !{!16352, !16353}
!16352 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !16350, file: !363, line: 86, baseType: !2694, size: 32)
!16353 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !16350, file: !363, line: 90, baseType: !2730, size: 64, offset: 32)
!16354 = !{!16355}
!16355 = !DILocalVariable(name: "rq", arg: 1, scope: !16346, file: !2799, line: 1276, type: !16349)
!16356 = !DILocation(line: 0, scope: !16346)
!16357 = !DILocation(line: 1289, column: 22, scope: !16346)
!16358 = !DILocation(line: 1289, column: 2, scope: !16346)
!16359 = !DILocation(line: 1291, column: 1, scope: !16346)
!16360 = distinct !DISubprogram(name: "sys_dlist_init", scope: !367, file: !367, line: 197, type: !16361, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !16363)
!16361 = !DISubroutineType(types: !16362)
!16362 = !{null, !15106}
!16363 = !{!16364}
!16364 = !DILocalVariable(name: "list", arg: 1, scope: !16360, file: !367, line: 197, type: !15106)
!16365 = !DILocation(line: 0, scope: !16360)
!16366 = !DILocation(line: 199, column: 8, scope: !16360)
!16367 = !DILocation(line: 199, column: 13, scope: !16360)
!16368 = !DILocation(line: 200, column: 8, scope: !16360)
!16369 = !DILocation(line: 200, column: 13, scope: !16360)
!16370 = !DILocation(line: 201, column: 1, scope: !16360)
!16371 = distinct !DISubprogram(name: "z_sched_init", scope: !2799, file: !2799, line: 1293, type: !3551, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !437)
!16372 = !DILocation(line: 1302, column: 2, scope: !16371)
!16373 = !DILocation(line: 1306, column: 2, scope: !16371)
!16374 = !DILocation(line: 1309, column: 1, scope: !16371)
!16375 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !2799, file: !2799, line: 1311, type: !16376, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !16379)
!16376 = !DISubroutineType(types: !16377)
!16377 = !{!108, !16378}
!16378 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !659, line: 347, baseType: !2694)
!16379 = !{!16380}
!16380 = !DILocalVariable(name: "thread", arg: 1, scope: !16375, file: !2799, line: 1311, type: !16378)
!16381 = !DILocation(line: 0, scope: !16375)
!16382 = !DILocation(line: 1313, column: 22, scope: !16375)
!16383 = !DILocation(line: 1313, column: 9, scope: !16375)
!16384 = !DILocation(line: 1313, column: 2, scope: !16375)
!16385 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !2799, file: !2799, line: 1325, type: !16386, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !16388)
!16386 = !DISubroutineType(types: !16387)
!16387 = !{null, !16378, !108}
!16388 = !{!16389, !16390, !16391}
!16389 = !DILocalVariable(name: "thread", arg: 1, scope: !16385, file: !2799, line: 1325, type: !16378)
!16390 = !DILocalVariable(name: "prio", arg: 2, scope: !16385, file: !2799, line: 1325, type: !108)
!16391 = !DILocalVariable(name: "th", scope: !16385, file: !2799, line: 1334, type: !2694)
!16392 = !DILocation(line: 0, scope: !16385)
!16393 = !DILocation(line: 1336, column: 2, scope: !16385)
!16394 = !DILocation(line: 1337, column: 1, scope: !16385)
!16395 = distinct !DISubprogram(name: "k_can_yield", scope: !2799, file: !2799, line: 1384, type: !8220, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !437)
!16396 = !DILocation(line: 1386, column: 11, scope: !16395)
!16397 = !DILocation(line: 1386, column: 29, scope: !16395)
!16398 = !DILocation(line: 1386, column: 32, scope: !16395)
!16399 = !DILocation(line: 1386, column: 46, scope: !16395)
!16400 = !DILocation(line: 1387, column: 28, scope: !16395)
!16401 = !DILocation(line: 1387, column: 4, scope: !16395)
!16402 = !DILocation(line: 1386, column: 2, scope: !16395)
!16403 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !359, file: !359, line: 989, type: !8220, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !437)
!16404 = !DILocation(line: 993, column: 10, scope: !16403)
!16405 = !DILocation(line: 993, column: 2, scope: !16403)
!16406 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !2799, file: !2799, line: 1390, type: !3551, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !16407)
!16407 = !{!16408}
!16408 = !DILocalVariable(name: "key", scope: !16406, file: !2799, line: 1396, type: !14895)
!16409 = !DILocation(line: 0, scope: !14903, inlinedAt: !16410)
!16410 = distinct !DILocation(line: 1396, column: 25, scope: !16406)
!16411 = !DILocation(line: 55, column: 2, scope: !14912, inlinedAt: !16412)
!16412 = distinct !DILocation(line: 145, column: 10, scope: !14903, inlinedAt: !16410)
!16413 = !DILocation(line: 0, scope: !14912, inlinedAt: !16412)
!16414 = !DILocation(line: 0, scope: !16406)
!16415 = !DILocation(line: 1400, column: 18, scope: !16416)
!16416 = distinct !DILexicalBlock(scope: !16417, file: !2799, line: 1399, column: 36)
!16417 = distinct !DILexicalBlock(scope: !16406, file: !2799, line: 1398, column: 6)
!16418 = !DILocation(line: 0, scope: !15072, inlinedAt: !16419)
!16419 = distinct !DILocation(line: 1400, column: 3, scope: !16416)
!16420 = !DILocation(line: 266, column: 15, scope: !15072, inlinedAt: !16419)
!16421 = !DILocation(line: 266, column: 28, scope: !15072, inlinedAt: !16419)
!16422 = !DILocation(line: 0, scope: !15080, inlinedAt: !16423)
!16423 = distinct !DILocation(line: 268, column: 3, scope: !15084, inlinedAt: !16419)
!16424 = !DILocation(line: 234, column: 2, scope: !15080, inlinedAt: !16423)
!16425 = !DILocation(line: 1402, column: 15, scope: !16406)
!16426 = !DILocation(line: 0, scope: !15089, inlinedAt: !16427)
!16427 = distinct !DILocation(line: 1402, column: 2, scope: !16406)
!16428 = !DILocation(line: 252, column: 15, scope: !15089, inlinedAt: !16427)
!16429 = !DILocation(line: 252, column: 28, scope: !15089, inlinedAt: !16427)
!16430 = !DILocation(line: 0, scope: !15096, inlinedAt: !16431)
!16431 = distinct !DILocation(line: 254, column: 3, scope: !15100, inlinedAt: !16427)
!16432 = !DILocation(line: 0, scope: !15103, inlinedAt: !16433)
!16433 = distinct !DILocation(line: 229, column: 2, scope: !15096, inlinedAt: !16431)
!16434 = !DILocation(line: 188, column: 2, scope: !15113, inlinedAt: !16433)
!16435 = !DILocation(line: 188, column: 2, scope: !15115, inlinedAt: !16433)
!16436 = !DILocation(line: 0, scope: !15113, inlinedAt: !16433)
!16437 = !DILocation(line: 189, column: 7, scope: !15118, inlinedAt: !16433)
!16438 = !DILocation(line: 189, column: 35, scope: !15118, inlinedAt: !16433)
!16439 = !DILocation(line: 189, column: 7, scope: !15119, inlinedAt: !16433)
!16440 = !DILocation(line: 191, column: 21, scope: !15123, inlinedAt: !16433)
!16441 = !DILocation(line: 190, column: 4, scope: !15123, inlinedAt: !16433)
!16442 = !DILocation(line: 192, column: 4, scope: !15123, inlinedAt: !16433)
!16443 = distinct !{!16443, !16434, !16444}
!16444 = !DILocation(line: 194, column: 2, scope: !15113, inlinedAt: !16433)
!16445 = !DILocation(line: 196, column: 37, scope: !15103, inlinedAt: !16433)
!16446 = !DILocation(line: 196, column: 2, scope: !15103, inlinedAt: !16433)
!16447 = !DILocation(line: 197, column: 1, scope: !15103, inlinedAt: !16433)
!16448 = !DILocation(line: 1403, column: 2, scope: !16406)
!16449 = !DILocation(line: 0, scope: !15514, inlinedAt: !16450)
!16450 = distinct !DILocation(line: 1404, column: 2, scope: !16406)
!16451 = !DILocation(line: 196, column: 9, scope: !15514, inlinedAt: !16450)
!16452 = !DILocation(line: 1405, column: 1, scope: !16406)
!16453 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !2799, file: !2799, line: 1459, type: !16454, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !16456)
!16454 = !DISubroutineType(types: !16455)
!16455 = !{!220, !15694}
!16456 = !{!16457, !16458, !16459}
!16457 = !DILocalVariable(name: "timeout", arg: 1, scope: !16453, file: !2799, line: 1459, type: !15694)
!16458 = !DILocalVariable(name: "ticks", scope: !16453, file: !2799, line: 1461, type: !109)
!16459 = !DILocalVariable(name: "ret", scope: !16453, file: !2799, line: 1480, type: !220)
!16460 = !DILocation(line: 0, scope: !16453)
!16461 = !DILocation(line: 1468, column: 6, scope: !16462)
!16462 = distinct !DILexicalBlock(scope: !16453, file: !2799, line: 1468, column: 6)
!16463 = !DILocation(line: 1468, column: 6, scope: !16453)
!16464 = !DILocation(line: 1469, column: 20, scope: !16465)
!16465 = distinct !DILexicalBlock(scope: !16462, file: !2799, line: 1468, column: 40)
!16466 = !DILocation(line: 1469, column: 3, scope: !16465)
!16467 = !DILocation(line: 1473, column: 3, scope: !16465)
!16468 = !DILocation(line: 1478, column: 10, scope: !16453)
!16469 = !DILocation(line: 1480, column: 16, scope: !16453)
!16470 = !DILocation(line: 1485, column: 1, scope: !16453)
!16471 = distinct !DISubprogram(name: "k_thread_suspend", scope: !3947, file: !3947, line: 310, type: !16472, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !16474)
!16472 = !DISubroutineType(types: !16473)
!16473 = !{null, !16378}
!16474 = !{!16475}
!16475 = !DILocalVariable(name: "thread", arg: 1, scope: !16471, file: !3947, line: 310, type: !16378)
!16476 = !DILocation(line: 0, scope: !16471)
!16477 = !DILocation(line: 319, column: 2, scope: !16478)
!16478 = distinct !DILexicalBlock(scope: !16471, file: !3947, line: 319, column: 2)
!16479 = !{i64 2155498875}
!16480 = !DILocation(line: 320, column: 2, scope: !16471)
!16481 = !DILocation(line: 321, column: 1, scope: !16471)
!16482 = distinct !DISubprogram(name: "z_tick_sleep", scope: !2799, file: !2799, line: 1415, type: !16483, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !16485)
!16483 = !DISubroutineType(types: !16484)
!16484 = !{!220, !109}
!16485 = !{!16486, !16487, !16488, !16489}
!16486 = !DILocalVariable(name: "ticks", arg: 1, scope: !16482, file: !2799, line: 1415, type: !109)
!16487 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !16482, file: !2799, line: 1418, type: !113)
!16488 = !DILocalVariable(name: "timeout", scope: !16482, file: !2799, line: 1430, type: !15694)
!16489 = !DILocalVariable(name: "key", scope: !16482, file: !2799, line: 1437, type: !14895)
!16490 = !DILocation(line: 0, scope: !16482)
!16491 = !DILocation(line: 1425, column: 12, scope: !16492)
!16492 = distinct !DILexicalBlock(scope: !16482, file: !2799, line: 1425, column: 6)
!16493 = !DILocation(line: 1425, column: 6, scope: !16482)
!16494 = !DILocation(line: 1426, column: 3, scope: !16495)
!16495 = distinct !DILexicalBlock(scope: !16492, file: !2799, line: 1425, column: 18)
!16496 = !DILocation(line: 1427, column: 3, scope: !16495)
!16497 = !DILocation(line: 1431, column: 24, scope: !16498)
!16498 = distinct !DILexicalBlock(scope: !16482, file: !2799, line: 1431, column: 6)
!16499 = !DILocation(line: 1431, column: 6, scope: !16482)
!16500 = !DILocation(line: 1432, column: 35, scope: !16501)
!16501 = distinct !DILexicalBlock(scope: !16498, file: !2799, line: 1431, column: 30)
!16502 = !DILocation(line: 1432, column: 27, scope: !16501)
!16503 = !DILocation(line: 1433, column: 2, scope: !16501)
!16504 = !DILocation(line: 1434, column: 27, scope: !16505)
!16505 = distinct !DILexicalBlock(scope: !16498, file: !2799, line: 1433, column: 9)
!16506 = !DILocation(line: 0, scope: !16498)
!16507 = !DILocation(line: 0, scope: !14903, inlinedAt: !16508)
!16508 = distinct !DILocation(line: 1437, column: 25, scope: !16482)
!16509 = !DILocation(line: 55, column: 2, scope: !14912, inlinedAt: !16510)
!16510 = distinct !DILocation(line: 145, column: 10, scope: !14903, inlinedAt: !16508)
!16511 = !DILocation(line: 0, scope: !14912, inlinedAt: !16510)
!16512 = !DILocation(line: 1440, column: 20, scope: !16482)
!16513 = !DILocation(line: 1440, column: 18, scope: !16482)
!16514 = !DILocation(line: 1442, column: 2, scope: !16482)
!16515 = !DILocation(line: 1443, column: 23, scope: !16482)
!16516 = !DILocation(line: 1443, column: 2, scope: !16482)
!16517 = !DILocation(line: 1444, column: 29, scope: !16482)
!16518 = !DILocation(line: 1444, column: 2, scope: !16482)
!16519 = !DILocation(line: 0, scope: !15514, inlinedAt: !16520)
!16520 = distinct !DILocation(line: 1446, column: 8, scope: !16482)
!16521 = !DILocation(line: 196, column: 9, scope: !15514, inlinedAt: !16520)
!16522 = !DILocation(line: 1450, column: 10, scope: !16482)
!16523 = !DILocation(line: 1450, column: 45, scope: !16482)
!16524 = !DILocation(line: 1450, column: 43, scope: !16482)
!16525 = !DILocation(line: 1451, column: 6, scope: !16482)
!16526 = !DILocation(line: 1457, column: 1, scope: !16482)
!16527 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !3914, file: !3914, line: 1103, type: !3915, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !16528)
!16528 = !{!16529}
!16529 = !DILocalVariable(name: "t", arg: 1, scope: !16527, file: !3914, line: 1103, type: !114)
!16530 = !DILocation(line: 0, scope: !16527)
!16531 = !DILocation(line: 0, scope: !14950, inlinedAt: !16532)
!16532 = distinct !DILocation(line: 1106, column: 9, scope: !16527)
!16533 = !DILocation(line: 139, column: 13, scope: !16534, inlinedAt: !16532)
!16534 = distinct !DILexicalBlock(scope: !16535, file: !3914, line: 138, column: 10)
!16535 = distinct !DILexicalBlock(scope: !16536, file: !3914, line: 136, column: 7)
!16536 = distinct !DILexicalBlock(scope: !14971, file: !3914, line: 134, column: 17)
!16537 = !DILocation(line: 1106, column: 2, scope: !16527)
!16538 = distinct !DISubprogram(name: "k_yield", scope: !3947, file: !3947, line: 140, type: !3551, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !437)
!16539 = !DILocation(line: 148, column: 2, scope: !16540)
!16540 = distinct !DILexicalBlock(scope: !16538, file: !3947, line: 148, column: 2)
!16541 = !{i64 2155498195}
!16542 = !DILocation(line: 149, column: 2, scope: !16538)
!16543 = !DILocation(line: 150, column: 1, scope: !16538)
!16544 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !2799, file: !2799, line: 1495, type: !16545, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !16547)
!16545 = !DISubroutineType(types: !16546)
!16546 = !{!220, !108}
!16547 = !{!16548, !16549}
!16548 = !DILocalVariable(name: "us", arg: 1, scope: !16544, file: !2799, line: 1495, type: !108)
!16549 = !DILocalVariable(name: "ticks", scope: !16544, file: !2799, line: 1497, type: !220)
!16550 = !DILocation(line: 0, scope: !16544)
!16551 = !DILocation(line: 1501, column: 31, scope: !16544)
!16552 = !DILocation(line: 1501, column: 10, scope: !16544)
!16553 = !DILocation(line: 1502, column: 23, scope: !16544)
!16554 = !DILocation(line: 1502, column: 10, scope: !16544)
!16555 = !DILocation(line: 1506, column: 31, scope: !16544)
!16556 = !DILocation(line: 1506, column: 9, scope: !16544)
!16557 = !DILocation(line: 1506, column: 2, scope: !16544)
!16558 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !3914, file: !3914, line: 571, type: !3915, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !16559)
!16559 = !{!16560}
!16560 = !DILocalVariable(name: "t", arg: 1, scope: !16558, file: !3914, line: 571, type: !114)
!16561 = !DILocation(line: 0, scope: !16558)
!16562 = !DILocation(line: 0, scope: !14950, inlinedAt: !16563)
!16563 = distinct !DILocation(line: 574, column: 9, scope: !16558)
!16564 = !DILocation(line: 135, column: 5, scope: !16536, inlinedAt: !16563)
!16565 = !DILocation(line: 139, column: 13, scope: !16534, inlinedAt: !16563)
!16566 = !DILocation(line: 574, column: 2, scope: !16558)
!16567 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !3914, file: !3914, line: 1187, type: !3915, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !16568)
!16568 = !{!16569}
!16569 = !DILocalVariable(name: "t", arg: 1, scope: !16567, file: !3914, line: 1187, type: !114)
!16570 = !DILocation(line: 0, scope: !16567)
!16571 = !DILocation(line: 0, scope: !14950, inlinedAt: !16572)
!16572 = distinct !DILocation(line: 1190, column: 9, scope: !16567)
!16573 = !DILocation(line: 145, column: 13, scope: !16574, inlinedAt: !16572)
!16574 = distinct !DILexicalBlock(scope: !14968, file: !3914, line: 144, column: 10)
!16575 = !DILocation(line: 1190, column: 2, scope: !16567)
!16576 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !2799, file: !2799, line: 1517, type: !16472, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !16577)
!16577 = !{!16578}
!16578 = !DILocalVariable(name: "thread", arg: 1, scope: !16576, file: !2799, line: 1517, type: !16378)
!16579 = !DILocation(line: 0, scope: !16576)
!16580 = !DILocation(line: 1521, column: 6, scope: !16581)
!16581 = distinct !DILexicalBlock(scope: !16576, file: !2799, line: 1521, column: 6)
!16582 = !DILocation(line: 1521, column: 6, scope: !16576)
!16583 = !DILocation(line: 1525, column: 6, scope: !16584)
!16584 = distinct !DILexicalBlock(scope: !16576, file: !2799, line: 1525, column: 6)
!16585 = !DILocation(line: 1525, column: 37, scope: !16584)
!16586 = !DILocation(line: 1525, column: 6, scope: !16576)
!16587 = !DILocation(line: 1527, column: 20, scope: !16588)
!16588 = distinct !DILexicalBlock(scope: !16589, file: !2799, line: 1527, column: 7)
!16589 = distinct !DILexicalBlock(scope: !16584, file: !2799, line: 1525, column: 42)
!16590 = !DILocation(line: 1527, column: 33, scope: !16588)
!16591 = !DILocation(line: 1527, column: 7, scope: !16589)
!16592 = !DILocation(line: 1532, column: 2, scope: !16576)
!16593 = !DILocation(line: 1533, column: 2, scope: !16576)
!16594 = !DILocation(line: 1031, column: 3, scope: !15547, inlinedAt: !16595)
!16595 = distinct !DILocation(line: 48, column: 10, scope: !15551, inlinedAt: !16596)
!16596 = distinct !DILocation(line: 1537, column: 7, scope: !16597)
!16597 = distinct !DILexicalBlock(scope: !16576, file: !2799, line: 1537, column: 6)
!16598 = !DILocation(line: 0, scope: !15547, inlinedAt: !16595)
!16599 = !DILocation(line: 48, column: 9, scope: !15551, inlinedAt: !16596)
!16600 = !DILocation(line: 1537, column: 6, scope: !16576)
!16601 = !DILocation(line: 1538, column: 3, scope: !16602)
!16602 = distinct !DILexicalBlock(scope: !16597, file: !2799, line: 1537, column: 25)
!16603 = !DILocation(line: 1539, column: 2, scope: !16602)
!16604 = !DILocation(line: 1540, column: 1, scope: !16576)
!16605 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !14180, file: !14180, line: 101, type: !15021, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !16606)
!16606 = !{!16607}
!16607 = !DILocalVariable(name: "thread", arg: 1, scope: !16605, file: !14180, line: 101, type: !2694)
!16608 = !DILocation(line: 0, scope: !16605)
!16609 = !DILocation(line: 103, column: 23, scope: !16605)
!16610 = !DILocation(line: 103, column: 36, scope: !16605)
!16611 = !DILocation(line: 103, column: 55, scope: !16605)
!16612 = !DILocation(line: 103, column: 2, scope: !16605)
!16613 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !2799, file: !2799, line: 1567, type: !16614, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !16616)
!16614 = !DISubroutineType(types: !16615)
!16615 = !{!16378}
!16616 = !{!16617}
!16617 = !DILocalVariable(name: "ret", scope: !16613, file: !2799, line: 1577, type: !16378)
!16618 = !DILocation(line: 1577, column: 30, scope: !16613)
!16619 = !DILocation(line: 0, scope: !16613)
!16620 = !DILocation(line: 1582, column: 2, scope: !16613)
!16621 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !2799, file: !2799, line: 1593, type: !8509, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !437)
!16622 = !DILocation(line: 1031, column: 3, scope: !15547, inlinedAt: !16623)
!16623 = distinct !DILocation(line: 48, column: 10, scope: !15551, inlinedAt: !16624)
!16624 = distinct !DILocation(line: 1595, column: 10, scope: !16621)
!16625 = !DILocation(line: 0, scope: !15547, inlinedAt: !16623)
!16626 = !DILocation(line: 48, column: 9, scope: !15551, inlinedAt: !16624)
!16627 = !DILocation(line: 1595, column: 27, scope: !16621)
!16628 = !DILocation(line: 1595, column: 41, scope: !16621)
!16629 = !DILocation(line: 1595, column: 30, scope: !16621)
!16630 = !DILocation(line: 1595, column: 2, scope: !16621)
!16631 = distinct !DISubprogram(name: "z_thread_abort", scope: !2799, file: !2799, line: 1725, type: !14861, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !16632)
!16632 = !{!16633, !16634}
!16633 = !DILocalVariable(name: "thread", arg: 1, scope: !16631, file: !2799, line: 1725, type: !2694)
!16634 = !DILocalVariable(name: "key", scope: !16631, file: !2799, line: 1727, type: !14895)
!16635 = !DILocation(line: 0, scope: !16631)
!16636 = !DILocation(line: 0, scope: !14903, inlinedAt: !16637)
!16637 = distinct !DILocation(line: 1727, column: 25, scope: !16631)
!16638 = !DILocation(line: 55, column: 2, scope: !14912, inlinedAt: !16639)
!16639 = distinct !DILocation(line: 145, column: 10, scope: !14903, inlinedAt: !16637)
!16640 = !DILocation(line: 0, scope: !14912, inlinedAt: !16639)
!16641 = !DILocation(line: 1729, column: 20, scope: !16642)
!16642 = distinct !DILexicalBlock(scope: !16631, file: !2799, line: 1729, column: 6)
!16643 = !DILocation(line: 1729, column: 33, scope: !16642)
!16644 = !DILocation(line: 1729, column: 48, scope: !16642)
!16645 = !DILocation(line: 1729, column: 6, scope: !16631)
!16646 = !DILocation(line: 0, scope: !14930, inlinedAt: !16647)
!16647 = distinct !DILocation(line: 1730, column: 3, scope: !16648)
!16648 = distinct !DILexicalBlock(scope: !16642, file: !2799, line: 1729, column: 54)
!16649 = !DILocation(line: 0, scope: !14938, inlinedAt: !16650)
!16650 = distinct !DILocation(line: 215, column: 2, scope: !14930, inlinedAt: !16647)
!16651 = !DILocation(line: 95, column: 2, scope: !14938, inlinedAt: !16650)
!16652 = !DILocation(line: 1732, column: 3, scope: !16653)
!16653 = distinct !DILexicalBlock(scope: !16648, file: !2799, line: 1732, column: 3)
!16654 = !{i64 2156234200, i64 2156234216, i64 2156234242, i64 2156234270, i64 2156234290}
!16655 = !DILocation(line: 1733, column: 3, scope: !16648)
!16656 = !DILocation(line: 1736, column: 20, scope: !16657)
!16657 = distinct !DILexicalBlock(scope: !16631, file: !2799, line: 1736, column: 6)
!16658 = !DILocation(line: 1736, column: 33, scope: !16657)
!16659 = !DILocation(line: 1736, column: 49, scope: !16657)
!16660 = !DILocation(line: 1736, column: 6, scope: !16631)
!16661 = !DILocation(line: 0, scope: !14930, inlinedAt: !16662)
!16662 = distinct !DILocation(line: 1737, column: 3, scope: !16663)
!16663 = distinct !DILexicalBlock(scope: !16657, file: !2799, line: 1736, column: 56)
!16664 = !DILocation(line: 0, scope: !14938, inlinedAt: !16665)
!16665 = distinct !DILocation(line: 215, column: 2, scope: !14930, inlinedAt: !16662)
!16666 = !DILocation(line: 95, column: 2, scope: !14938, inlinedAt: !16665)
!16667 = !DILocation(line: 1738, column: 3, scope: !16663)
!16668 = !DILocation(line: 1775, column: 2, scope: !16631)
!16669 = !DILocation(line: 1776, column: 16, scope: !16670)
!16670 = distinct !DILexicalBlock(scope: !16631, file: !2799, line: 1776, column: 6)
!16671 = !DILocation(line: 1776, column: 13, scope: !16670)
!16672 = !DILocation(line: 1776, column: 25, scope: !16670)
!16673 = !DILocation(line: 1031, column: 3, scope: !15547, inlinedAt: !16674)
!16674 = distinct !DILocation(line: 48, column: 10, scope: !15551, inlinedAt: !16675)
!16675 = distinct !DILocation(line: 1776, column: 29, scope: !16670)
!16676 = !DILocation(line: 0, scope: !15547, inlinedAt: !16674)
!16677 = !DILocation(line: 48, column: 9, scope: !15551, inlinedAt: !16675)
!16678 = !DILocation(line: 1776, column: 6, scope: !16631)
!16679 = !DILocation(line: 0, scope: !15514, inlinedAt: !16680)
!16680 = distinct !DILocation(line: 1777, column: 3, scope: !16681)
!16681 = distinct !DILexicalBlock(scope: !16670, file: !2799, line: 1776, column: 47)
!16682 = !DILocation(line: 196, column: 9, scope: !15514, inlinedAt: !16680)
!16683 = !DILocation(line: 1779, column: 2, scope: !16681)
!16684 = !DILocation(line: 0, scope: !14930, inlinedAt: !16685)
!16685 = distinct !DILocation(line: 1780, column: 2, scope: !16631)
!16686 = !DILocation(line: 0, scope: !14938, inlinedAt: !16687)
!16687 = distinct !DILocation(line: 215, column: 2, scope: !14930, inlinedAt: !16685)
!16688 = !DILocation(line: 95, column: 2, scope: !14938, inlinedAt: !16687)
!16689 = !DILocation(line: 1781, column: 1, scope: !16631)
!16690 = distinct !DISubprogram(name: "end_thread", scope: !2799, file: !2799, line: 1690, type: !14861, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !16691)
!16691 = !{!16692}
!16692 = !DILocalVariable(name: "thread", arg: 1, scope: !16690, file: !2799, line: 1690, type: !2694)
!16693 = !DILocation(line: 0, scope: !16690)
!16694 = !DILocation(line: 1695, column: 20, scope: !16695)
!16695 = distinct !DILexicalBlock(scope: !16690, file: !2799, line: 1695, column: 6)
!16696 = !DILocation(line: 1695, column: 33, scope: !16695)
!16697 = !DILocation(line: 1695, column: 49, scope: !16695)
!16698 = !DILocation(line: 1695, column: 6, scope: !16690)
!16699 = !DILocation(line: 1697, column: 29, scope: !16700)
!16700 = distinct !DILexicalBlock(scope: !16695, file: !2799, line: 1695, column: 56)
!16701 = !DILocation(line: 1698, column: 7, scope: !16702)
!16702 = distinct !DILexicalBlock(scope: !16700, file: !2799, line: 1698, column: 7)
!16703 = !DILocation(line: 1698, column: 7, scope: !16700)
!16704 = !DILocation(line: 0, scope: !15072, inlinedAt: !16705)
!16705 = distinct !DILocation(line: 1699, column: 4, scope: !16706)
!16706 = distinct !DILexicalBlock(scope: !16702, file: !2799, line: 1698, column: 35)
!16707 = !DILocation(line: 266, column: 28, scope: !15072, inlinedAt: !16705)
!16708 = !DILocation(line: 0, scope: !15080, inlinedAt: !16709)
!16709 = distinct !DILocation(line: 268, column: 3, scope: !15084, inlinedAt: !16705)
!16710 = !DILocation(line: 234, column: 2, scope: !15080, inlinedAt: !16709)
!16711 = !DILocation(line: 1700, column: 3, scope: !16706)
!16712 = !DILocation(line: 1701, column: 20, scope: !16713)
!16713 = distinct !DILexicalBlock(scope: !16700, file: !2799, line: 1701, column: 7)
!16714 = !DILocation(line: 1701, column: 30, scope: !16713)
!16715 = !DILocation(line: 1701, column: 7, scope: !16700)
!16716 = !DILocation(line: 1702, column: 4, scope: !16717)
!16717 = distinct !DILexicalBlock(scope: !16713, file: !2799, line: 1701, column: 39)
!16718 = !DILocation(line: 1703, column: 3, scope: !16717)
!16719 = !DILocation(line: 1704, column: 9, scope: !16700)
!16720 = !DILocation(line: 1705, column: 23, scope: !16700)
!16721 = !DILocation(line: 1705, column: 3, scope: !16700)
!16722 = !DILocation(line: 1706, column: 3, scope: !16700)
!16723 = !DILocation(line: 1722, column: 2, scope: !16700)
!16724 = !DILocation(line: 1723, column: 1, scope: !16690)
!16725 = distinct !DISubprogram(name: "unpend_all", scope: !2799, file: !2799, line: 1674, type: !16726, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !16728)
!16726 = !DISubroutineType(types: !16727)
!16727 = !{null, !2725}
!16728 = !{!16729, !16730}
!16729 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16725, file: !2799, line: 1674, type: !2725)
!16730 = !DILocalVariable(name: "thread", scope: !16725, file: !2799, line: 1676, type: !2694)
!16731 = !DILocation(line: 0, scope: !16725)
!16732 = !DILocation(line: 1678, column: 19, scope: !16725)
!16733 = !DILocation(line: 1678, column: 41, scope: !16725)
!16734 = !DILocation(line: 1678, column: 2, scope: !16725)
!16735 = !DILocation(line: 1679, column: 3, scope: !16736)
!16736 = distinct !DILexicalBlock(scope: !16725, file: !2799, line: 1678, column: 50)
!16737 = !DILocation(line: 1680, column: 9, scope: !16736)
!16738 = !DILocalVariable(name: "thread", arg: 1, scope: !16739, file: !14200, line: 65, type: !2694)
!16739 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !14200, file: !14200, line: 65, type: !16740, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !16742)
!16740 = !DISubroutineType(types: !16741)
!16741 = !{null, !2694, !32}
!16742 = !{!16738, !16743}
!16743 = !DILocalVariable(name: "value", arg: 2, scope: !16739, file: !14200, line: 65, type: !32)
!16744 = !DILocation(line: 0, scope: !16739, inlinedAt: !16745)
!16745 = distinct !DILocation(line: 1681, column: 3, scope: !16736)
!16746 = !DILocation(line: 67, column: 15, scope: !16739, inlinedAt: !16745)
!16747 = !DILocation(line: 67, column: 33, scope: !16739, inlinedAt: !16745)
!16748 = !DILocation(line: 1682, column: 3, scope: !16736)
!16749 = distinct !{!16749, !16734, !16750}
!16750 = !DILocation(line: 1683, column: 2, scope: !16725)
!16751 = !DILocation(line: 1684, column: 1, scope: !16725)
!16752 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !2799, file: !2799, line: 1794, type: !16753, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !16755)
!16753 = !DISubroutineType(types: !16754)
!16754 = !{!108, !2694, !15694}
!16755 = !{!16756, !16757, !16758, !16759}
!16756 = !DILocalVariable(name: "thread", arg: 1, scope: !16752, file: !2799, line: 1794, type: !2694)
!16757 = !DILocalVariable(name: "timeout", arg: 2, scope: !16752, file: !2799, line: 1794, type: !15694)
!16758 = !DILocalVariable(name: "key", scope: !16752, file: !2799, line: 1796, type: !14895)
!16759 = !DILocalVariable(name: "ret", scope: !16752, file: !2799, line: 1797, type: !108)
!16760 = !DILocation(line: 0, scope: !16752)
!16761 = !DILocation(line: 0, scope: !14903, inlinedAt: !16762)
!16762 = distinct !DILocation(line: 1796, column: 25, scope: !16752)
!16763 = !DILocation(line: 55, column: 2, scope: !14912, inlinedAt: !16764)
!16764 = distinct !DILocation(line: 145, column: 10, scope: !14903, inlinedAt: !16762)
!16765 = !DILocation(line: 0, scope: !14912, inlinedAt: !16764)
!16766 = !DILocation(line: 1801, column: 20, scope: !16767)
!16767 = distinct !DILexicalBlock(scope: !16752, file: !2799, line: 1801, column: 6)
!16768 = !DILocation(line: 1801, column: 33, scope: !16767)
!16769 = !DILocation(line: 1801, column: 49, scope: !16767)
!16770 = !DILocation(line: 1801, column: 6, scope: !16752)
!16771 = !DILocation(line: 1803, column: 13, scope: !16772)
!16772 = distinct !DILexicalBlock(scope: !16767, file: !2799, line: 1803, column: 13)
!16773 = !DILocation(line: 1803, column: 13, scope: !16767)
!16774 = !DILocation(line: 1805, column: 24, scope: !16775)
!16775 = distinct !DILexicalBlock(scope: !16772, file: !2799, line: 1805, column: 13)
!16776 = !DILocation(line: 1805, column: 21, scope: !16775)
!16777 = !DILocation(line: 1805, column: 34, scope: !16775)
!16778 = !DILocation(line: 1806, column: 20, scope: !16775)
!16779 = !DILocation(line: 1806, column: 44, scope: !16775)
!16780 = !DILocation(line: 1806, column: 30, scope: !16775)
!16781 = !DILocation(line: 1805, column: 13, scope: !16772)
!16782 = !DILocation(line: 1810, column: 42, scope: !16783)
!16783 = distinct !DILexicalBlock(scope: !16775, file: !2799, line: 1808, column: 9)
!16784 = !DILocation(line: 1810, column: 3, scope: !16783)
!16785 = !DILocation(line: 1811, column: 22, scope: !16783)
!16786 = !DILocation(line: 1811, column: 3, scope: !16783)
!16787 = !DILocation(line: 0, scope: !15514, inlinedAt: !16788)
!16788 = distinct !DILocation(line: 1814, column: 9, scope: !16783)
!16789 = !DILocation(line: 196, column: 9, scope: !15514, inlinedAt: !16788)
!16790 = !DILocation(line: 1817, column: 3, scope: !16783)
!16791 = !DILocation(line: 0, scope: !16767)
!16792 = !DILocation(line: 0, scope: !14930, inlinedAt: !16793)
!16793 = distinct !DILocation(line: 1822, column: 2, scope: !16752)
!16794 = !DILocation(line: 0, scope: !14938, inlinedAt: !16795)
!16795 = distinct !DILocation(line: 215, column: 2, scope: !14930, inlinedAt: !16793)
!16796 = !DILocation(line: 95, column: 2, scope: !14938, inlinedAt: !16795)
!16797 = !DILocation(line: 1823, column: 2, scope: !16752)
!16798 = !DILocation(line: 1824, column: 1, scope: !16752)
!16799 = distinct !DISubprogram(name: "z_sched_wake", scope: !2799, file: !2799, line: 1882, type: !16800, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !16802)
!16800 = !DISubroutineType(types: !16801)
!16801 = !{!422, !2725, !108, !104}
!16802 = !{!16803, !16804, !16805, !16806, !16807, !16808, !16810}
!16803 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16799, file: !2799, line: 1882, type: !2725)
!16804 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !16799, file: !2799, line: 1882, type: !108)
!16805 = !DILocalVariable(name: "swap_data", arg: 3, scope: !16799, file: !2799, line: 1882, type: !104)
!16806 = !DILocalVariable(name: "thread", scope: !16799, file: !2799, line: 1884, type: !2694)
!16807 = !DILocalVariable(name: "ret", scope: !16799, file: !2799, line: 1885, type: !422)
!16808 = !DILocalVariable(name: "__i", scope: !16809, file: !2799, line: 1887, type: !14895)
!16809 = distinct !DILexicalBlock(scope: !16799, file: !2799, line: 1887, column: 2)
!16810 = !DILocalVariable(name: "__key", scope: !16809, file: !2799, line: 1887, type: !14895)
!16811 = !DILocation(line: 0, scope: !16799)
!16812 = !DILocation(line: 0, scope: !16809)
!16813 = !DILocation(line: 0, scope: !14903, inlinedAt: !16814)
!16814 = distinct !DILocation(line: 1887, column: 2, scope: !16809)
!16815 = !DILocation(line: 55, column: 2, scope: !14912, inlinedAt: !16816)
!16816 = distinct !DILocation(line: 145, column: 10, scope: !14903, inlinedAt: !16814)
!16817 = !DILocation(line: 0, scope: !14912, inlinedAt: !16816)
!16818 = !DILocation(line: 1888, column: 12, scope: !16819)
!16819 = distinct !DILexicalBlock(scope: !16820, file: !2799, line: 1887, column: 26)
!16820 = distinct !DILexicalBlock(scope: !16809, file: !2799, line: 1887, column: 2)
!16821 = !DILocation(line: 1890, column: 14, scope: !16822)
!16822 = distinct !DILexicalBlock(scope: !16819, file: !2799, line: 1890, column: 7)
!16823 = !DILocation(line: 1890, column: 7, scope: !16819)
!16824 = !DILocalVariable(name: "thread", arg: 1, scope: !16825, file: !16826, line: 134, type: !2694)
!16825 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !16826, file: !16826, line: 134, type: !16827, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !16829)
!16826 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16827 = !DISubroutineType(types: !16828)
!16828 = !{null, !2694, !32, !104}
!16829 = !{!16824, !16830, !16831}
!16830 = !DILocalVariable(name: "value", arg: 2, scope: !16825, file: !16826, line: 135, type: !32)
!16831 = !DILocalVariable(name: "data", arg: 3, scope: !16825, file: !16826, line: 136, type: !104)
!16832 = !DILocation(line: 0, scope: !16825, inlinedAt: !16833)
!16833 = distinct !DILocation(line: 1891, column: 4, scope: !16834)
!16834 = distinct !DILexicalBlock(scope: !16822, file: !2799, line: 1890, column: 23)
!16835 = !DILocation(line: 0, scope: !16739, inlinedAt: !16836)
!16836 = distinct !DILocation(line: 138, column: 2, scope: !16825, inlinedAt: !16833)
!16837 = !DILocation(line: 67, column: 15, scope: !16739, inlinedAt: !16836)
!16838 = !DILocation(line: 67, column: 33, scope: !16739, inlinedAt: !16836)
!16839 = !DILocation(line: 139, column: 15, scope: !16825, inlinedAt: !16833)
!16840 = !DILocation(line: 139, column: 25, scope: !16825, inlinedAt: !16833)
!16841 = !DILocation(line: 1894, column: 4, scope: !16834)
!16842 = !DILocation(line: 1895, column: 10, scope: !16834)
!16843 = !DILocation(line: 1896, column: 4, scope: !16834)
!16844 = !DILocation(line: 1898, column: 3, scope: !16834)
!16845 = !DILocation(line: 0, scope: !14930, inlinedAt: !16846)
!16846 = distinct !DILocation(line: 1887, column: 2, scope: !16820)
!16847 = !DILocation(line: 0, scope: !14938, inlinedAt: !16848)
!16848 = distinct !DILocation(line: 215, column: 2, scope: !14930, inlinedAt: !16846)
!16849 = !DILocation(line: 95, column: 2, scope: !14938, inlinedAt: !16848)
!16850 = !DILocation(line: 1901, column: 2, scope: !16799)
!16851 = distinct !DISubprogram(name: "z_sched_wait", scope: !2799, file: !2799, line: 1904, type: !16852, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !16855)
!16852 = !DISubroutineType(types: !16853)
!16853 = !{!108, !14906, !14895, !2725, !15694, !16854}
!16854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !104, size: 32)
!16855 = !{!16856, !16857, !16858, !16859, !16860, !16861}
!16856 = !DILocalVariable(name: "lock", arg: 1, scope: !16851, file: !2799, line: 1904, type: !14906)
!16857 = !DILocalVariable(name: "key", arg: 2, scope: !16851, file: !2799, line: 1904, type: !14895)
!16858 = !DILocalVariable(name: "wait_q", arg: 3, scope: !16851, file: !2799, line: 1905, type: !2725)
!16859 = !DILocalVariable(name: "timeout", arg: 4, scope: !16851, file: !2799, line: 1905, type: !15694)
!16860 = !DILocalVariable(name: "data", arg: 5, scope: !16851, file: !2799, line: 1905, type: !16854)
!16861 = !DILocalVariable(name: "ret", scope: !16851, file: !2799, line: 1907, type: !108)
!16862 = !DILocation(line: 0, scope: !16851)
!16863 = !DILocation(line: 1907, column: 12, scope: !16851)
!16864 = !DILocation(line: 1909, column: 11, scope: !16865)
!16865 = distinct !DILexicalBlock(scope: !16851, file: !2799, line: 1909, column: 6)
!16866 = !DILocation(line: 1909, column: 6, scope: !16851)
!16867 = !DILocation(line: 1910, column: 11, scope: !16868)
!16868 = distinct !DILexicalBlock(scope: !16865, file: !2799, line: 1909, column: 20)
!16869 = !DILocation(line: 1910, column: 26, scope: !16868)
!16870 = !DILocation(line: 1910, column: 9, scope: !16868)
!16871 = !DILocation(line: 1911, column: 2, scope: !16868)
!16872 = !DILocation(line: 1912, column: 2, scope: !16851)
!16873 = distinct !DISubprogram(name: "z_data_copy", scope: !16874, file: !16874, line: 22, type: !3551, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3534, retainedNodes: !437)
!16874 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16875 = !DILocation(line: 24, column: 2, scope: !16873)
!16876 = !DILocation(line: 27, column: 2, scope: !16873)
!16877 = !DILocation(line: 31, column: 2, scope: !16873)
!16878 = !DILocation(line: 71, column: 1, scope: !16873)
!16879 = distinct !DISubprogram(name: "z_add_timeout", scope: !2836, file: !2836, line: 88, type: !16880, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2806, retainedNodes: !16886)
!16880 = !DISubroutineType(types: !16881)
!16881 = !{null, !2809, !2828, !16882}
!16882 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !110, line: 67, baseType: !16883)
!16883 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !110, line: 65, size: 64, elements: !16884)
!16884 = !{!16885}
!16885 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !16883, file: !110, line: 66, baseType: !109, size: 64)
!16886 = !{!16887, !16888, !16889, !16890, !16896, !16897, !16900, !16903}
!16887 = !DILocalVariable(name: "to", arg: 1, scope: !16879, file: !2836, line: 88, type: !2809)
!16888 = !DILocalVariable(name: "fn", arg: 2, scope: !16879, file: !2836, line: 88, type: !2828)
!16889 = !DILocalVariable(name: "timeout", arg: 3, scope: !16879, file: !2836, line: 89, type: !16882)
!16890 = !DILocalVariable(name: "__i", scope: !16891, file: !2836, line: 102, type: !16892)
!16891 = distinct !DILexicalBlock(scope: !16879, file: !2836, line: 102, column: 2)
!16892 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !436, line: 106, baseType: !16893)
!16893 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !436, line: 32, size: 32, elements: !16894)
!16894 = !{!16895}
!16895 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !16893, file: !436, line: 33, baseType: !108, size: 32)
!16896 = !DILocalVariable(name: "__key", scope: !16891, file: !2836, line: 102, type: !16892)
!16897 = !DILocalVariable(name: "t", scope: !16898, file: !2836, line: 103, type: !2809)
!16898 = distinct !DILexicalBlock(scope: !16899, file: !2836, line: 102, column: 24)
!16899 = distinct !DILexicalBlock(scope: !16891, file: !2836, line: 102, column: 2)
!16900 = !DILocalVariable(name: "ticks", scope: !16901, file: !2836, line: 107, type: !109)
!16901 = distinct !DILexicalBlock(scope: !16902, file: !2836, line: 106, column: 39)
!16902 = distinct !DILexicalBlock(scope: !16898, file: !2836, line: 105, column: 7)
!16903 = !DILocalVariable(name: "next_time", scope: !16904, file: !2836, line: 137, type: !220)
!16904 = distinct !DILexicalBlock(scope: !16905, file: !2836, line: 127, column: 22)
!16905 = distinct !DILexicalBlock(scope: !16898, file: !2836, line: 127, column: 7)
!16906 = !DILocation(line: 0, scope: !16879)
!16907 = !DILocation(line: 91, column: 6, scope: !16908)
!16908 = distinct !DILexicalBlock(scope: !16879, file: !2836, line: 91, column: 6)
!16909 = !DILocation(line: 91, column: 6, scope: !16879)
!16910 = !DILocation(line: 100, column: 6, scope: !16879)
!16911 = !DILocation(line: 100, column: 9, scope: !16879)
!16912 = !DILocation(line: 0, scope: !16891)
!16913 = !DILocalVariable(name: "l", arg: 1, scope: !16914, file: !436, line: 136, type: !16917)
!16914 = distinct !DISubprogram(name: "k_spin_lock", scope: !436, file: !436, line: 136, type: !16915, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2806, retainedNodes: !16918)
!16915 = !DISubroutineType(types: !16916)
!16916 = !{!16892, !16917}
!16917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2837, size: 32)
!16918 = !{!16913, !16919}
!16919 = !DILocalVariable(name: "k", scope: !16914, file: !436, line: 139, type: !16892)
!16920 = !DILocation(line: 0, scope: !16914, inlinedAt: !16921)
!16921 = distinct !DILocation(line: 102, column: 2, scope: !16891)
!16922 = !DILocation(line: 55, column: 2, scope: !16923, inlinedAt: !16927)
!16923 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4225, file: !4225, line: 42, type: !4226, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2806, retainedNodes: !16924)
!16924 = !{!16925, !16926}
!16925 = !DILocalVariable(name: "key", scope: !16923, file: !4225, line: 44, type: !32)
!16926 = !DILocalVariable(name: "tmp", scope: !16923, file: !4225, line: 53, type: !32)
!16927 = distinct !DILocation(line: 145, column: 10, scope: !16914, inlinedAt: !16921)
!16928 = !{i64 2616297}
!16929 = !DILocation(line: 0, scope: !16923, inlinedAt: !16927)
!16930 = !DILocation(line: 106, column: 33, scope: !16902)
!16931 = !DILocation(line: 105, column: 7, scope: !16898)
!16932 = !DILocation(line: 107, column: 50, scope: !16901)
!16933 = !DILocation(line: 107, column: 48, scope: !16901)
!16934 = !DILocation(line: 0, scope: !16901)
!16935 = !DILocation(line: 109, column: 17, scope: !16901)
!16936 = !DILocation(line: 110, column: 3, scope: !16901)
!16937 = !DILocation(line: 111, column: 31, scope: !16938)
!16938 = distinct !DILexicalBlock(scope: !16902, file: !2836, line: 110, column: 10)
!16939 = !DILocation(line: 111, column: 37, scope: !16938)
!16940 = !DILocation(line: 111, column: 35, scope: !16938)
!16941 = !DILocation(line: 0, scope: !16902)
!16942 = !DILocation(line: 109, column: 8, scope: !16901)
!16943 = !DILocation(line: 109, column: 15, scope: !16901)
!16944 = !DILocation(line: 114, column: 12, scope: !16945)
!16945 = distinct !DILexicalBlock(scope: !16898, file: !2836, line: 114, column: 3)
!16946 = !DILocation(line: 0, scope: !16898)
!16947 = !DILocation(line: 114, column: 3, scope: !16945)
!16948 = !DILocation(line: 115, column: 24, scope: !16949)
!16949 = distinct !DILexicalBlock(scope: !16950, file: !2836, line: 115, column: 8)
!16950 = distinct !DILexicalBlock(scope: !16951, file: !2836, line: 114, column: 45)
!16951 = distinct !DILexicalBlock(scope: !16945, file: !2836, line: 114, column: 3)
!16952 = !DILocation(line: 115, column: 11, scope: !16949)
!16953 = !DILocation(line: 115, column: 18, scope: !16949)
!16954 = !DILocation(line: 115, column: 8, scope: !16950)
!16955 = !DILocation(line: 116, column: 15, scope: !16956)
!16956 = distinct !DILexicalBlock(scope: !16949, file: !2836, line: 115, column: 32)
!16957 = !DILocation(line: 117, column: 26, scope: !16956)
!16958 = !DILocation(line: 117, column: 37, scope: !16956)
!16959 = !DILocation(line: 117, column: 5, scope: !16956)
!16960 = !DILocation(line: 123, column: 7, scope: !16898)
!16961 = !DILocation(line: 120, column: 15, scope: !16950)
!16962 = !DILocation(line: 114, column: 36, scope: !16951)
!16963 = distinct !{!16963, !16947, !16964}
!16964 = !DILocation(line: 121, column: 3, scope: !16945)
!16965 = !DILocation(line: 124, column: 41, scope: !16966)
!16966 = distinct !DILexicalBlock(scope: !16967, file: !2836, line: 123, column: 18)
!16967 = distinct !DILexicalBlock(scope: !16898, file: !2836, line: 123, column: 7)
!16968 = !DILocation(line: 124, column: 4, scope: !16966)
!16969 = !DILocation(line: 125, column: 3, scope: !16966)
!16970 = !DILocation(line: 127, column: 13, scope: !16905)
!16971 = !DILocation(line: 127, column: 10, scope: !16905)
!16972 = !DILocation(line: 127, column: 7, scope: !16898)
!16973 = !DILocation(line: 137, column: 24, scope: !16904)
!16974 = !DILocation(line: 0, scope: !16904)
!16975 = !DILocation(line: 139, column: 18, scope: !16976)
!16976 = distinct !DILexicalBlock(scope: !16904, file: !2836, line: 139, column: 8)
!16977 = !DILocation(line: 139, column: 23, scope: !16976)
!16978 = !DILocation(line: 141, column: 5, scope: !16979)
!16979 = distinct !DILexicalBlock(scope: !16976, file: !2836, line: 140, column: 48)
!16980 = !DILocation(line: 142, column: 4, scope: !16979)
!16981 = !DILocalVariable(name: "key", arg: 2, scope: !16982, file: !436, line: 190, type: !16892)
!16982 = distinct !DISubprogram(name: "k_spin_unlock", scope: !436, file: !436, line: 189, type: !16983, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2806, retainedNodes: !16985)
!16983 = !DISubroutineType(types: !16984)
!16984 = !{null, !16917, !16892}
!16985 = !{!16986, !16981}
!16986 = !DILocalVariable(name: "l", arg: 1, scope: !16982, file: !436, line: 189, type: !16917)
!16987 = !DILocation(line: 0, scope: !16982, inlinedAt: !16988)
!16988 = distinct !DILocation(line: 102, column: 2, scope: !16899)
!16989 = !DILocalVariable(name: "key", arg: 1, scope: !16990, file: !4225, line: 84, type: !32)
!16990 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4225, file: !4225, line: 84, type: !4238, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2806, retainedNodes: !16991)
!16991 = !{!16989}
!16992 = !DILocation(line: 0, scope: !16990, inlinedAt: !16993)
!16993 = distinct !DILocation(line: 215, column: 2, scope: !16982, inlinedAt: !16988)
!16994 = !DILocation(line: 95, column: 2, scope: !16990, inlinedAt: !16993)
!16995 = !{i64 2617114}
!16996 = !DILocation(line: 148, column: 1, scope: !16879)
!16997 = distinct !DISubprogram(name: "elapsed", scope: !2836, file: !2836, line: 62, type: !16998, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2806, retainedNodes: !437)
!16998 = !DISubroutineType(types: !16999)
!16999 = !{!220}
!17000 = !DILocation(line: 64, column: 9, scope: !16997)
!17001 = !DILocation(line: 64, column: 28, scope: !16997)
!17002 = !DILocation(line: 64, column: 35, scope: !16997)
!17003 = !DILocation(line: 64, column: 2, scope: !16997)
!17004 = distinct !DISubprogram(name: "first", scope: !2836, file: !2836, line: 39, type: !17005, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2806, retainedNodes: !17007)
!17005 = !DISubroutineType(types: !17006)
!17006 = !{!2809}
!17007 = !{!17008}
!17008 = !DILocalVariable(name: "t", scope: !17004, file: !2836, line: 41, type: !17009)
!17009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2813, size: 32)
!17010 = !DILocation(line: 41, column: 19, scope: !17004)
!17011 = !DILocation(line: 0, scope: !17004)
!17012 = !DILocation(line: 43, column: 9, scope: !17004)
!17013 = !DILocation(line: 43, column: 2, scope: !17004)
!17014 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !367, file: !367, line: 443, type: !17015, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2806, retainedNodes: !17017)
!17015 = !DISubroutineType(types: !17016)
!17016 = !{null, !17009, !17009}
!17017 = !{!17018, !17019, !17020}
!17018 = !DILocalVariable(name: "successor", arg: 1, scope: !17014, file: !367, line: 443, type: !17009)
!17019 = !DILocalVariable(name: "node", arg: 2, scope: !17014, file: !367, line: 443, type: !17009)
!17020 = !DILocalVariable(name: "prev", scope: !17014, file: !367, line: 445, type: !17021)
!17021 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !17009)
!17022 = !DILocation(line: 0, scope: !17014)
!17023 = !DILocation(line: 445, column: 39, scope: !17014)
!17024 = !DILocation(line: 447, column: 8, scope: !17014)
!17025 = !DILocation(line: 447, column: 13, scope: !17014)
!17026 = !DILocation(line: 448, column: 8, scope: !17014)
!17027 = !DILocation(line: 448, column: 13, scope: !17014)
!17028 = !DILocation(line: 449, column: 8, scope: !17014)
!17029 = !DILocation(line: 449, column: 13, scope: !17014)
!17030 = !DILocation(line: 450, column: 18, scope: !17014)
!17031 = !DILocation(line: 451, column: 1, scope: !17014)
!17032 = distinct !DISubprogram(name: "next", scope: !2836, file: !2836, line: 46, type: !17033, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2806, retainedNodes: !17035)
!17033 = !DISubroutineType(types: !17034)
!17034 = !{!2809, !2809}
!17035 = !{!17036, !17037}
!17036 = !DILocalVariable(name: "t", arg: 1, scope: !17032, file: !2836, line: 46, type: !2809)
!17037 = !DILocalVariable(name: "n", scope: !17032, file: !2836, line: 48, type: !17009)
!17038 = !DILocation(line: 0, scope: !17032)
!17039 = !DILocation(line: 48, column: 58, scope: !17032)
!17040 = !DILocation(line: 48, column: 19, scope: !17032)
!17041 = !DILocation(line: 50, column: 9, scope: !17032)
!17042 = !DILocation(line: 50, column: 2, scope: !17032)
!17043 = distinct !DISubprogram(name: "sys_dlist_append", scope: !367, file: !367, line: 404, type: !17044, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2806, retainedNodes: !17047)
!17044 = !DISubroutineType(types: !17045)
!17045 = !{null, !17046, !17009}
!17046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2842, size: 32)
!17047 = !{!17048, !17049, !17050}
!17048 = !DILocalVariable(name: "list", arg: 1, scope: !17043, file: !367, line: 404, type: !17046)
!17049 = !DILocalVariable(name: "node", arg: 2, scope: !17043, file: !367, line: 404, type: !17009)
!17050 = !DILocalVariable(name: "tail", scope: !17043, file: !367, line: 406, type: !17021)
!17051 = !DILocation(line: 0, scope: !17043)
!17052 = !DILocation(line: 406, column: 34, scope: !17043)
!17053 = !DILocation(line: 408, column: 8, scope: !17043)
!17054 = !DILocation(line: 408, column: 13, scope: !17043)
!17055 = !DILocation(line: 409, column: 8, scope: !17043)
!17056 = !DILocation(line: 409, column: 13, scope: !17043)
!17057 = !DILocation(line: 411, column: 8, scope: !17043)
!17058 = !DILocation(line: 411, column: 13, scope: !17043)
!17059 = !DILocation(line: 412, column: 13, scope: !17043)
!17060 = !DILocation(line: 413, column: 1, scope: !17043)
!17061 = distinct !DISubprogram(name: "next_timeout", scope: !2836, file: !2836, line: 67, type: !16998, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2806, retainedNodes: !17062)
!17062 = !{!17063, !17064, !17065}
!17063 = !DILocalVariable(name: "to", scope: !17061, file: !2836, line: 69, type: !2809)
!17064 = !DILocalVariable(name: "ticks_elapsed", scope: !17061, file: !2836, line: 70, type: !220)
!17065 = !DILocalVariable(name: "ret", scope: !17061, file: !2836, line: 71, type: !220)
!17066 = !DILocation(line: 69, column: 24, scope: !17061)
!17067 = !DILocation(line: 0, scope: !17061)
!17068 = !DILocation(line: 70, column: 26, scope: !17061)
!17069 = !DILocation(line: 73, column: 10, scope: !17070)
!17070 = distinct !DILexicalBlock(scope: !17061, file: !2836, line: 73, column: 6)
!17071 = !DILocation(line: 73, column: 19, scope: !17070)
!17072 = !DILocation(line: 74, column: 21, scope: !17070)
!17073 = !DILocation(line: 74, column: 30, scope: !17070)
!17074 = !DILocation(line: 74, column: 28, scope: !17070)
!17075 = !DILocation(line: 74, column: 45, scope: !17070)
!17076 = !DILocation(line: 73, column: 6, scope: !17061)
!17077 = !DILocation(line: 77, column: 9, scope: !17078)
!17078 = distinct !DILexicalBlock(scope: !17070, file: !2836, line: 76, column: 9)
!17079 = !DILocation(line: 0, scope: !17070)
!17080 = !DILocation(line: 81, column: 20, scope: !17081)
!17081 = distinct !DILexicalBlock(scope: !17061, file: !2836, line: 81, column: 6)
!17082 = !DILocation(line: 81, column: 6, scope: !17081)
!17083 = !DILocation(line: 81, column: 32, scope: !17081)
!17084 = !DILocation(line: 85, column: 2, scope: !17061)
!17085 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !367, file: !367, line: 341, type: !17086, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2806, retainedNodes: !17088)
!17086 = !DISubroutineType(types: !17087)
!17087 = !{!17009, !17046, !17009}
!17088 = !{!17089, !17090}
!17089 = !DILocalVariable(name: "list", arg: 1, scope: !17085, file: !367, line: 341, type: !17046)
!17090 = !DILocalVariable(name: "node", arg: 2, scope: !17085, file: !367, line: 342, type: !17009)
!17091 = !DILocation(line: 0, scope: !17085)
!17092 = !DILocation(line: 344, column: 15, scope: !17085)
!17093 = !DILocation(line: 344, column: 9, scope: !17085)
!17094 = !DILocation(line: 344, column: 26, scope: !17085)
!17095 = !DILocation(line: 344, column: 2, scope: !17085)
!17096 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !367, file: !367, line: 325, type: !17086, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2806, retainedNodes: !17097)
!17097 = !{!17098, !17099}
!17098 = !DILocalVariable(name: "list", arg: 1, scope: !17096, file: !367, line: 325, type: !17046)
!17099 = !DILocalVariable(name: "node", arg: 2, scope: !17096, file: !367, line: 326, type: !17009)
!17100 = !DILocation(line: 0, scope: !17096)
!17101 = !DILocation(line: 328, column: 24, scope: !17096)
!17102 = !DILocation(line: 328, column: 15, scope: !17096)
!17103 = !DILocation(line: 328, column: 9, scope: !17096)
!17104 = !DILocation(line: 328, column: 45, scope: !17096)
!17105 = !DILocation(line: 328, column: 2, scope: !17096)
!17106 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !367, file: !367, line: 294, type: !17107, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2806, retainedNodes: !17109)
!17107 = !DISubroutineType(types: !17108)
!17108 = !{!17009, !17046}
!17109 = !{!17110}
!17110 = !DILocalVariable(name: "list", arg: 1, scope: !17106, file: !367, line: 294, type: !17046)
!17111 = !DILocation(line: 0, scope: !17106)
!17112 = !DILocation(line: 296, column: 9, scope: !17106)
!17113 = !DILocation(line: 296, column: 2, scope: !17106)
!17114 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !367, file: !367, line: 266, type: !17115, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2806, retainedNodes: !17117)
!17115 = !DISubroutineType(types: !17116)
!17116 = !{!422, !17046}
!17117 = !{!17118}
!17118 = !DILocalVariable(name: "list", arg: 1, scope: !17114, file: !367, line: 266, type: !17046)
!17119 = !DILocation(line: 0, scope: !17114)
!17120 = !DILocation(line: 268, column: 15, scope: !17114)
!17121 = !DILocation(line: 268, column: 20, scope: !17114)
!17122 = !DILocation(line: 268, column: 2, scope: !17114)
!17123 = distinct !DISubprogram(name: "z_abort_timeout", scope: !2836, file: !2836, line: 150, type: !17124, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2806, retainedNodes: !17126)
!17124 = !DISubroutineType(types: !17125)
!17125 = !{!108, !2809}
!17126 = !{!17127, !17128, !17129, !17131}
!17127 = !DILocalVariable(name: "to", arg: 1, scope: !17123, file: !2836, line: 150, type: !2809)
!17128 = !DILocalVariable(name: "ret", scope: !17123, file: !2836, line: 152, type: !108)
!17129 = !DILocalVariable(name: "__i", scope: !17130, file: !2836, line: 154, type: !16892)
!17130 = distinct !DILexicalBlock(scope: !17123, file: !2836, line: 154, column: 2)
!17131 = !DILocalVariable(name: "__key", scope: !17130, file: !2836, line: 154, type: !16892)
!17132 = !DILocation(line: 0, scope: !17123)
!17133 = !DILocation(line: 0, scope: !17130)
!17134 = !DILocation(line: 0, scope: !16914, inlinedAt: !17135)
!17135 = distinct !DILocation(line: 154, column: 2, scope: !17130)
!17136 = !DILocation(line: 55, column: 2, scope: !16923, inlinedAt: !17137)
!17137 = distinct !DILocation(line: 145, column: 10, scope: !16914, inlinedAt: !17135)
!17138 = !DILocation(line: 0, scope: !16923, inlinedAt: !17137)
!17139 = !DILocation(line: 155, column: 7, scope: !17140)
!17140 = distinct !DILexicalBlock(scope: !17141, file: !2836, line: 155, column: 7)
!17141 = distinct !DILexicalBlock(scope: !17142, file: !2836, line: 154, column: 24)
!17142 = distinct !DILexicalBlock(scope: !17130, file: !2836, line: 154, column: 2)
!17143 = !DILocation(line: 155, column: 7, scope: !17141)
!17144 = !DILocation(line: 156, column: 4, scope: !17145)
!17145 = distinct !DILexicalBlock(scope: !17140, file: !2836, line: 155, column: 39)
!17146 = !DILocation(line: 158, column: 3, scope: !17145)
!17147 = !DILocation(line: 0, scope: !16982, inlinedAt: !17148)
!17148 = distinct !DILocation(line: 154, column: 2, scope: !17142)
!17149 = !DILocation(line: 0, scope: !16990, inlinedAt: !17150)
!17150 = distinct !DILocation(line: 215, column: 2, scope: !16982, inlinedAt: !17148)
!17151 = !DILocation(line: 95, column: 2, scope: !16990, inlinedAt: !17150)
!17152 = !DILocation(line: 161, column: 2, scope: !17123)
!17153 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !367, file: !367, line: 225, type: !17154, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2806, retainedNodes: !17158)
!17154 = !DISubroutineType(types: !17155)
!17155 = !{!422, !17156}
!17156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17157, size: 32)
!17157 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2813)
!17158 = !{!17159}
!17159 = !DILocalVariable(name: "node", arg: 1, scope: !17153, file: !367, line: 225, type: !17156)
!17160 = !DILocation(line: 0, scope: !17153)
!17161 = !DILocation(line: 227, column: 15, scope: !17153)
!17162 = !DILocation(line: 227, column: 20, scope: !17153)
!17163 = !DILocation(line: 227, column: 2, scope: !17153)
!17164 = distinct !DISubprogram(name: "remove_timeout", scope: !2836, file: !2836, line: 53, type: !2830, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2806, retainedNodes: !17165)
!17165 = !{!17166}
!17166 = !DILocalVariable(name: "t", arg: 1, scope: !17164, file: !2836, line: 53, type: !2809)
!17167 = !DILocation(line: 0, scope: !17164)
!17168 = !DILocation(line: 55, column: 6, scope: !17169)
!17169 = distinct !DILexicalBlock(scope: !17164, file: !2836, line: 55, column: 6)
!17170 = !DILocation(line: 55, column: 14, scope: !17169)
!17171 = !DILocation(line: 55, column: 6, scope: !17164)
!17172 = !DILocation(line: 56, column: 25, scope: !17173)
!17173 = distinct !DILexicalBlock(scope: !17169, file: !2836, line: 55, column: 23)
!17174 = !DILocation(line: 56, column: 12, scope: !17173)
!17175 = !DILocation(line: 56, column: 19, scope: !17173)
!17176 = !DILocation(line: 57, column: 2, scope: !17173)
!17177 = !DILocation(line: 59, column: 23, scope: !17164)
!17178 = !DILocation(line: 59, column: 2, scope: !17164)
!17179 = !DILocation(line: 60, column: 1, scope: !17164)
!17180 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !367, file: !367, line: 496, type: !17181, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2806, retainedNodes: !17183)
!17181 = !DISubroutineType(types: !17182)
!17182 = !{null, !17009}
!17183 = !{!17184, !17185, !17186}
!17184 = !DILocalVariable(name: "node", arg: 1, scope: !17180, file: !367, line: 496, type: !17009)
!17185 = !DILocalVariable(name: "prev", scope: !17180, file: !367, line: 498, type: !17021)
!17186 = !DILocalVariable(name: "next", scope: !17180, file: !367, line: 499, type: !17021)
!17187 = !DILocation(line: 0, scope: !17180)
!17188 = !DILocation(line: 498, column: 34, scope: !17180)
!17189 = !DILocation(line: 499, column: 34, scope: !17180)
!17190 = !DILocation(line: 501, column: 8, scope: !17180)
!17191 = !DILocation(line: 501, column: 13, scope: !17180)
!17192 = !DILocation(line: 502, column: 8, scope: !17180)
!17193 = !DILocation(line: 502, column: 13, scope: !17180)
!17194 = !DILocation(line: 503, column: 2, scope: !17180)
!17195 = !DILocation(line: 504, column: 1, scope: !17180)
!17196 = distinct !DISubprogram(name: "sys_dnode_init", scope: !367, file: !367, line: 211, type: !17181, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2806, retainedNodes: !17197)
!17197 = !{!17198}
!17198 = !DILocalVariable(name: "node", arg: 1, scope: !17196, file: !367, line: 211, type: !17009)
!17199 = !DILocation(line: 0, scope: !17196)
!17200 = !DILocation(line: 213, column: 8, scope: !17196)
!17201 = !DILocation(line: 213, column: 13, scope: !17196)
!17202 = !DILocation(line: 214, column: 8, scope: !17196)
!17203 = !DILocation(line: 214, column: 13, scope: !17196)
!17204 = !DILocation(line: 215, column: 1, scope: !17196)
!17205 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !2836, file: !2836, line: 183, type: !17206, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2806, retainedNodes: !17210)
!17206 = !DISubroutineType(types: !17207)
!17207 = !{!109, !17208}
!17208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17209, size: 32)
!17209 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2810)
!17210 = !{!17211, !17212, !17213, !17215}
!17211 = !DILocalVariable(name: "timeout", arg: 1, scope: !17205, file: !2836, line: 183, type: !17208)
!17212 = !DILocalVariable(name: "ticks", scope: !17205, file: !2836, line: 185, type: !109)
!17213 = !DILocalVariable(name: "__i", scope: !17214, file: !2836, line: 187, type: !16892)
!17214 = distinct !DILexicalBlock(scope: !17205, file: !2836, line: 187, column: 2)
!17215 = !DILocalVariable(name: "__key", scope: !17214, file: !2836, line: 187, type: !16892)
!17216 = !DILocation(line: 0, scope: !17205)
!17217 = !DILocation(line: 0, scope: !17214)
!17218 = !DILocation(line: 0, scope: !16914, inlinedAt: !17219)
!17219 = distinct !DILocation(line: 187, column: 2, scope: !17214)
!17220 = !DILocation(line: 55, column: 2, scope: !16923, inlinedAt: !17221)
!17221 = distinct !DILocation(line: 145, column: 10, scope: !16914, inlinedAt: !17219)
!17222 = !DILocation(line: 0, scope: !16923, inlinedAt: !17221)
!17223 = !DILocation(line: 188, column: 11, scope: !17224)
!17224 = distinct !DILexicalBlock(scope: !17225, file: !2836, line: 187, column: 24)
!17225 = distinct !DILexicalBlock(scope: !17214, file: !2836, line: 187, column: 2)
!17226 = !DILocation(line: 0, scope: !16982, inlinedAt: !17227)
!17227 = distinct !DILocation(line: 187, column: 2, scope: !17225)
!17228 = !DILocation(line: 0, scope: !16990, inlinedAt: !17229)
!17229 = distinct !DILocation(line: 215, column: 2, scope: !16982, inlinedAt: !17227)
!17230 = !DILocation(line: 95, column: 2, scope: !16990, inlinedAt: !17229)
!17231 = !DILocation(line: 191, column: 2, scope: !17205)
!17232 = distinct !DISubprogram(name: "timeout_rem", scope: !2836, file: !2836, line: 165, type: !17206, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2806, retainedNodes: !17233)
!17233 = !{!17234, !17235, !17236}
!17234 = !DILocalVariable(name: "timeout", arg: 1, scope: !17232, file: !2836, line: 165, type: !17208)
!17235 = !DILocalVariable(name: "ticks", scope: !17232, file: !2836, line: 167, type: !109)
!17236 = !DILocalVariable(name: "t", scope: !17237, file: !2836, line: 173, type: !2809)
!17237 = distinct !DILexicalBlock(scope: !17232, file: !2836, line: 173, column: 2)
!17238 = !DILocation(line: 0, scope: !17232)
!17239 = !DILocation(line: 169, column: 6, scope: !17240)
!17240 = distinct !DILexicalBlock(scope: !17232, file: !2836, line: 169, column: 6)
!17241 = !DILocation(line: 169, column: 6, scope: !17232)
!17242 = !DILocation(line: 173, column: 28, scope: !17237)
!17243 = !DILocation(line: 0, scope: !17237)
!17244 = !DILocation(line: 173, column: 39, scope: !17245)
!17245 = distinct !DILexicalBlock(scope: !17237, file: !2836, line: 173, column: 2)
!17246 = !DILocation(line: 173, column: 2, scope: !17237)
!17247 = !DILocation(line: 174, column: 15, scope: !17248)
!17248 = distinct !DILexicalBlock(scope: !17245, file: !2836, line: 173, column: 61)
!17249 = !DILocation(line: 174, column: 9, scope: !17248)
!17250 = !DILocation(line: 175, column: 15, scope: !17251)
!17251 = distinct !DILexicalBlock(scope: !17248, file: !2836, line: 175, column: 7)
!17252 = !DILocation(line: 175, column: 7, scope: !17248)
!17253 = !DILocation(line: 173, column: 52, scope: !17245)
!17254 = distinct !{!17254, !17246, !17255}
!17255 = !DILocation(line: 178, column: 2, scope: !17237)
!17256 = !DILocation(line: 180, column: 17, scope: !17232)
!17257 = !DILocation(line: 180, column: 15, scope: !17232)
!17258 = !DILocation(line: 180, column: 2, scope: !17232)
!17259 = !DILocation(line: 181, column: 1, scope: !17232)
!17260 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !14574, file: !14574, line: 35, type: !17261, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2806, retainedNodes: !17263)
!17261 = !DISubroutineType(types: !17262)
!17262 = !{!422, !17208}
!17263 = !{!17264}
!17264 = !DILocalVariable(name: "to", arg: 1, scope: !17260, file: !14574, line: 35, type: !17208)
!17265 = !DILocation(line: 0, scope: !17260)
!17266 = !DILocation(line: 37, column: 35, scope: !17260)
!17267 = !DILocation(line: 37, column: 10, scope: !17260)
!17268 = !DILocation(line: 37, column: 9, scope: !17260)
!17269 = !DILocation(line: 37, column: 2, scope: !17260)
!17270 = distinct !DISubprogram(name: "z_timeout_expires", scope: !2836, file: !2836, line: 194, type: !17206, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2806, retainedNodes: !17271)
!17271 = !{!17272, !17273, !17274, !17276}
!17272 = !DILocalVariable(name: "timeout", arg: 1, scope: !17270, file: !2836, line: 194, type: !17208)
!17273 = !DILocalVariable(name: "ticks", scope: !17270, file: !2836, line: 196, type: !109)
!17274 = !DILocalVariable(name: "__i", scope: !17275, file: !2836, line: 198, type: !16892)
!17275 = distinct !DILexicalBlock(scope: !17270, file: !2836, line: 198, column: 2)
!17276 = !DILocalVariable(name: "__key", scope: !17275, file: !2836, line: 198, type: !16892)
!17277 = !DILocation(line: 0, scope: !17270)
!17278 = !DILocation(line: 0, scope: !17275)
!17279 = !DILocation(line: 0, scope: !16914, inlinedAt: !17280)
!17280 = distinct !DILocation(line: 198, column: 2, scope: !17275)
!17281 = !DILocation(line: 55, column: 2, scope: !16923, inlinedAt: !17282)
!17282 = distinct !DILocation(line: 145, column: 10, scope: !16914, inlinedAt: !17280)
!17283 = !DILocation(line: 0, scope: !16923, inlinedAt: !17282)
!17284 = !DILocation(line: 199, column: 11, scope: !17285)
!17285 = distinct !DILexicalBlock(scope: !17286, file: !2836, line: 198, column: 24)
!17286 = distinct !DILexicalBlock(scope: !17275, file: !2836, line: 198, column: 2)
!17287 = !DILocation(line: 199, column: 23, scope: !17285)
!17288 = !DILocation(line: 0, scope: !16982, inlinedAt: !17289)
!17289 = distinct !DILocation(line: 198, column: 2, scope: !17286)
!17290 = !DILocation(line: 0, scope: !16990, inlinedAt: !17291)
!17291 = distinct !DILocation(line: 215, column: 2, scope: !16982, inlinedAt: !17289)
!17292 = !DILocation(line: 95, column: 2, scope: !16990, inlinedAt: !17291)
!17293 = !DILocation(line: 199, column: 21, scope: !17285)
!17294 = !DILocation(line: 202, column: 2, scope: !17270)
!17295 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !2836, file: !2836, line: 205, type: !16998, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2806, retainedNodes: !17296)
!17296 = !{!17297, !17298, !17300}
!17297 = !DILocalVariable(name: "ret", scope: !17295, file: !2836, line: 207, type: !220)
!17298 = !DILocalVariable(name: "__i", scope: !17299, file: !2836, line: 209, type: !16892)
!17299 = distinct !DILexicalBlock(scope: !17295, file: !2836, line: 209, column: 2)
!17300 = !DILocalVariable(name: "__key", scope: !17299, file: !2836, line: 209, type: !16892)
!17301 = !DILocation(line: 0, scope: !17295)
!17302 = !DILocation(line: 0, scope: !17299)
!17303 = !DILocation(line: 0, scope: !16914, inlinedAt: !17304)
!17304 = distinct !DILocation(line: 209, column: 2, scope: !17299)
!17305 = !DILocation(line: 55, column: 2, scope: !16923, inlinedAt: !17306)
!17306 = distinct !DILocation(line: 145, column: 10, scope: !16914, inlinedAt: !17304)
!17307 = !DILocation(line: 0, scope: !16923, inlinedAt: !17306)
!17308 = !DILocation(line: 210, column: 9, scope: !17309)
!17309 = distinct !DILexicalBlock(scope: !17310, file: !2836, line: 209, column: 24)
!17310 = distinct !DILexicalBlock(scope: !17299, file: !2836, line: 209, column: 2)
!17311 = !DILocation(line: 0, scope: !16982, inlinedAt: !17312)
!17312 = distinct !DILocation(line: 209, column: 2, scope: !17310)
!17313 = !DILocation(line: 0, scope: !16990, inlinedAt: !17314)
!17314 = distinct !DILocation(line: 215, column: 2, scope: !16982, inlinedAt: !17312)
!17315 = !DILocation(line: 95, column: 2, scope: !16990, inlinedAt: !17314)
!17316 = !DILocation(line: 212, column: 2, scope: !17295)
!17317 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !2836, file: !2836, line: 215, type: !12107, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2806, retainedNodes: !17318)
!17318 = !{!17319, !17320, !17321, !17323, !17324, !17327, !17328}
!17319 = !DILocalVariable(name: "ticks", arg: 1, scope: !17317, file: !2836, line: 215, type: !220)
!17320 = !DILocalVariable(name: "is_idle", arg: 2, scope: !17317, file: !2836, line: 215, type: !422)
!17321 = !DILocalVariable(name: "__i", scope: !17322, file: !2836, line: 217, type: !16892)
!17322 = distinct !DILexicalBlock(scope: !17317, file: !2836, line: 217, column: 2)
!17323 = !DILocalVariable(name: "__key", scope: !17322, file: !2836, line: 217, type: !16892)
!17324 = !DILocalVariable(name: "next_to", scope: !17325, file: !2836, line: 218, type: !108)
!17325 = distinct !DILexicalBlock(scope: !17326, file: !2836, line: 217, column: 24)
!17326 = distinct !DILexicalBlock(scope: !17322, file: !2836, line: 217, column: 2)
!17327 = !DILocalVariable(name: "sooner", scope: !17325, file: !2836, line: 219, type: !422)
!17328 = !DILocalVariable(name: "imminent", scope: !17325, file: !2836, line: 221, type: !422)
!17329 = !DILocation(line: 0, scope: !17317)
!17330 = !DILocation(line: 0, scope: !17322)
!17331 = !DILocation(line: 0, scope: !16914, inlinedAt: !17332)
!17332 = distinct !DILocation(line: 217, column: 2, scope: !17322)
!17333 = !DILocation(line: 55, column: 2, scope: !16923, inlinedAt: !17334)
!17334 = distinct !DILocation(line: 145, column: 10, scope: !16914, inlinedAt: !17332)
!17335 = !DILocation(line: 0, scope: !16923, inlinedAt: !17334)
!17336 = !DILocation(line: 218, column: 17, scope: !17325)
!17337 = !DILocation(line: 0, scope: !17325)
!17338 = !DILocation(line: 221, column: 27, scope: !17325)
!17339 = !DILocation(line: 233, column: 17, scope: !17340)
!17340 = distinct !DILexicalBlock(scope: !17325, file: !2836, line: 233, column: 7)
!17341 = !DILocation(line: 234, column: 26, scope: !17342)
!17342 = distinct !DILexicalBlock(scope: !17340, file: !2836, line: 233, column: 56)
!17343 = !DILocation(line: 234, column: 4, scope: !17342)
!17344 = !DILocation(line: 235, column: 3, scope: !17342)
!17345 = !DILocation(line: 0, scope: !16982, inlinedAt: !17346)
!17346 = distinct !DILocation(line: 217, column: 2, scope: !17326)
!17347 = !DILocation(line: 0, scope: !16990, inlinedAt: !17348)
!17348 = distinct !DILocation(line: 215, column: 2, scope: !16982, inlinedAt: !17346)
!17349 = !DILocation(line: 95, column: 2, scope: !16990, inlinedAt: !17348)
!17350 = !DILocation(line: 237, column: 1, scope: !17317)
!17351 = distinct !DISubprogram(name: "sys_clock_announce", scope: !2836, file: !2836, line: 239, type: !17352, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2806, retainedNodes: !17354)
!17352 = !DISubroutineType(types: !17353)
!17353 = !{null, !220}
!17354 = !{!17355, !17356, !17357, !17359}
!17355 = !DILocalVariable(name: "ticks", arg: 1, scope: !17351, file: !2836, line: 239, type: !220)
!17356 = !DILocalVariable(name: "key", scope: !17351, file: !2836, line: 245, type: !16892)
!17357 = !DILocalVariable(name: "t", scope: !17358, file: !2836, line: 262, type: !2809)
!17358 = distinct !DILexicalBlock(scope: !17351, file: !2836, line: 261, column: 67)
!17359 = !DILocalVariable(name: "dt", scope: !17358, file: !2836, line: 263, type: !108)
!17360 = !DILocation(line: 0, scope: !17351)
!17361 = !DILocation(line: 242, column: 2, scope: !17351)
!17362 = !DILocation(line: 0, scope: !16914, inlinedAt: !17363)
!17363 = distinct !DILocation(line: 245, column: 25, scope: !17351)
!17364 = !DILocation(line: 55, column: 2, scope: !16923, inlinedAt: !17365)
!17365 = distinct !DILocation(line: 145, column: 10, scope: !16914, inlinedAt: !17363)
!17366 = !DILocation(line: 0, scope: !16923, inlinedAt: !17365)
!17367 = !DILocation(line: 261, column: 9, scope: !17351)
!17368 = !DILocation(line: 261, column: 17, scope: !17351)
!17369 = !DILocation(line: 261, column: 25, scope: !17351)
!17370 = !DILocation(line: 261, column: 37, scope: !17351)
!17371 = !DILocation(line: 261, column: 47, scope: !17351)
!17372 = !DILocation(line: 261, column: 44, scope: !17351)
!17373 = !DILocation(line: 261, column: 2, scope: !17351)
!17374 = !DILocation(line: 0, scope: !17358)
!17375 = !DILocation(line: 263, column: 12, scope: !17358)
!17376 = !DILocation(line: 265, column: 16, scope: !17358)
!17377 = !DILocation(line: 265, column: 13, scope: !17358)
!17378 = !DILocation(line: 266, column: 13, scope: !17358)
!17379 = !DILocation(line: 267, column: 3, scope: !17358)
!17380 = !DILocation(line: 0, scope: !16982, inlinedAt: !17381)
!17381 = distinct !DILocation(line: 269, column: 3, scope: !17358)
!17382 = !DILocation(line: 0, scope: !16990, inlinedAt: !17383)
!17383 = distinct !DILocation(line: 215, column: 2, scope: !16982, inlinedAt: !17381)
!17384 = !DILocation(line: 95, column: 2, scope: !16990, inlinedAt: !17383)
!17385 = !DILocation(line: 270, column: 6, scope: !17358)
!17386 = !DILocation(line: 270, column: 3, scope: !17358)
!17387 = !DILocation(line: 0, scope: !16914, inlinedAt: !17388)
!17388 = distinct !DILocation(line: 271, column: 9, scope: !17358)
!17389 = !DILocation(line: 55, column: 2, scope: !16923, inlinedAt: !17390)
!17390 = distinct !DILocation(line: 145, column: 10, scope: !16914, inlinedAt: !17388)
!17391 = !DILocation(line: 0, scope: !16923, inlinedAt: !17390)
!17392 = !DILocation(line: 272, column: 22, scope: !17358)
!17393 = distinct !{!17393, !17373, !17394}
!17394 = !DILocation(line: 273, column: 2, scope: !17351)
!17395 = !DILocation(line: 276, column: 19, scope: !17396)
!17396 = distinct !DILexicalBlock(scope: !17397, file: !2836, line: 275, column: 23)
!17397 = distinct !DILexicalBlock(scope: !17351, file: !2836, line: 275, column: 6)
!17398 = !DILocation(line: 277, column: 2, scope: !17396)
!17399 = !DILocation(line: 279, column: 15, scope: !17351)
!17400 = !DILocation(line: 279, column: 12, scope: !17351)
!17401 = !DILocation(line: 280, column: 21, scope: !17351)
!17402 = !DILocation(line: 282, column: 24, scope: !17351)
!17403 = !DILocation(line: 282, column: 2, scope: !17351)
!17404 = !DILocation(line: 0, scope: !16982, inlinedAt: !17405)
!17405 = distinct !DILocation(line: 284, column: 2, scope: !17351)
!17406 = !DILocation(line: 0, scope: !16990, inlinedAt: !17407)
!17407 = distinct !DILocation(line: 215, column: 2, scope: !16982, inlinedAt: !17405)
!17408 = !DILocation(line: 95, column: 2, scope: !16990, inlinedAt: !17407)
!17409 = !DILocation(line: 285, column: 1, scope: !17351)
!17410 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !2836, file: !2836, line: 287, type: !17411, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2806, retainedNodes: !17413)
!17411 = !DISubroutineType(types: !17412)
!17412 = !{!111}
!17413 = !{!17414, !17415, !17417}
!17414 = !DILocalVariable(name: "t", scope: !17410, file: !2836, line: 289, type: !114)
!17415 = !DILocalVariable(name: "__i", scope: !17416, file: !2836, line: 291, type: !16892)
!17416 = distinct !DILexicalBlock(scope: !17410, file: !2836, line: 291, column: 2)
!17417 = !DILocalVariable(name: "__key", scope: !17416, file: !2836, line: 291, type: !16892)
!17418 = !DILocation(line: 0, scope: !17410)
!17419 = !DILocation(line: 0, scope: !17416)
!17420 = !DILocation(line: 0, scope: !16914, inlinedAt: !17421)
!17421 = distinct !DILocation(line: 291, column: 2, scope: !17416)
!17422 = !DILocation(line: 55, column: 2, scope: !16923, inlinedAt: !17423)
!17423 = distinct !DILocation(line: 145, column: 10, scope: !16914, inlinedAt: !17421)
!17424 = !DILocation(line: 0, scope: !16923, inlinedAt: !17423)
!17425 = !DILocation(line: 292, column: 7, scope: !17426)
!17426 = distinct !DILexicalBlock(scope: !17427, file: !2836, line: 291, column: 24)
!17427 = distinct !DILexicalBlock(scope: !17416, file: !2836, line: 291, column: 2)
!17428 = !DILocation(line: 292, column: 19, scope: !17426)
!17429 = !DILocation(line: 0, scope: !16982, inlinedAt: !17430)
!17430 = distinct !DILocation(line: 291, column: 2, scope: !17427)
!17431 = !DILocation(line: 0, scope: !16990, inlinedAt: !17432)
!17432 = distinct !DILocation(line: 215, column: 2, scope: !16982, inlinedAt: !17430)
!17433 = !DILocation(line: 95, column: 2, scope: !16990, inlinedAt: !17432)
!17434 = !DILocation(line: 292, column: 17, scope: !17426)
!17435 = !DILocation(line: 294, column: 2, scope: !17410)
!17436 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !2836, file: !2836, line: 297, type: !7282, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2806, retainedNodes: !437)
!17437 = !DILocation(line: 300, column: 19, scope: !17436)
!17438 = !DILocation(line: 300, column: 9, scope: !17436)
!17439 = !DILocation(line: 300, column: 2, scope: !17436)
!17440 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !2836, file: !2836, line: 306, type: !17411, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2806, retainedNodes: !437)
!17441 = !DILocation(line: 308, column: 9, scope: !17440)
!17442 = !DILocation(line: 308, column: 2, scope: !17440)
!17443 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !2836, file: !2836, line: 319, type: !7292, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2806, retainedNodes: !17444)
!17444 = !{!17445, !17446, !17447, !17448}
!17445 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !17443, file: !2836, line: 319, type: !113)
!17446 = !DILocalVariable(name: "start_cycles", scope: !17443, file: !2836, line: 328, type: !113)
!17447 = !DILocalVariable(name: "cycles_to_wait", scope: !17443, file: !2836, line: 331, type: !113)
!17448 = !DILocalVariable(name: "current_cycles", scope: !17449, file: !2836, line: 338, type: !113)
!17449 = distinct !DILexicalBlock(scope: !17450, file: !2836, line: 337, column: 11)
!17450 = distinct !DILexicalBlock(scope: !17451, file: !2836, line: 337, column: 2)
!17451 = distinct !DILexicalBlock(scope: !17443, file: !2836, line: 337, column: 2)
!17452 = !DILocation(line: 0, scope: !17443)
!17453 = !DILocation(line: 322, column: 19, scope: !17454)
!17454 = distinct !DILexicalBlock(scope: !17443, file: !2836, line: 322, column: 6)
!17455 = !DILocation(line: 322, column: 6, scope: !17443)
!17456 = !DILocation(line: 328, column: 26, scope: !17443)
!17457 = !DILocation(line: 333, column: 43, scope: !17443)
!17458 = !DILocation(line: 337, column: 2, scope: !17443)
!17459 = !DILocation(line: 338, column: 29, scope: !17449)
!17460 = !DILocation(line: 0, scope: !17449)
!17461 = !DILocation(line: 341, column: 23, scope: !17462)
!17462 = distinct !DILexicalBlock(scope: !17449, file: !2836, line: 341, column: 7)
!17463 = !DILocation(line: 341, column: 39, scope: !17462)
!17464 = !DILocation(line: 349, column: 1, scope: !17443)
!17465 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !359, file: !359, line: 1675, type: !7282, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2806, retainedNodes: !437)
!17466 = !DILocation(line: 1677, column: 9, scope: !17465)
!17467 = !DILocation(line: 1677, column: 2, scope: !17465)
!17468 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !17469, file: !17469, line: 24, type: !7282, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2806, retainedNodes: !437)
!17469 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17470 = !DILocation(line: 26, column: 9, scope: !17468)
!17471 = !DILocation(line: 26, column: 2, scope: !17468)
!17472 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !2836, file: !2836, line: 364, type: !17473, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2806, retainedNodes: !17475)
!17473 = !DISubroutineType(types: !17474)
!17474 = !{!114, !16882}
!17475 = !{!17476, !17477}
!17476 = !DILocalVariable(name: "timeout", arg: 1, scope: !17472, file: !2836, line: 364, type: !16882)
!17477 = !DILocalVariable(name: "dt", scope: !17472, file: !2836, line: 366, type: !109)
!17478 = !DILocation(line: 0, scope: !17472)
!17479 = !DILocation(line: 368, column: 6, scope: !17472)
!17480 = !DILocation(line: 371, column: 10, scope: !17481)
!17481 = distinct !DILexicalBlock(scope: !17482, file: !2836, line: 370, column: 47)
!17482 = distinct !DILexicalBlock(scope: !17483, file: !2836, line: 370, column: 13)
!17483 = distinct !DILexicalBlock(scope: !17472, file: !2836, line: 368, column: 6)
!17484 = !DILocation(line: 371, column: 3, scope: !17481)
!17485 = !DILocation(line: 376, column: 58, scope: !17486)
!17486 = distinct !DILexicalBlock(scope: !17487, file: !2836, line: 376, column: 7)
!17487 = distinct !DILexicalBlock(scope: !17482, file: !2836, line: 372, column: 9)
!17488 = !DILocation(line: 376, column: 7, scope: !17487)
!17489 = !DILocation(line: 376, column: 43, scope: !17486)
!17490 = !DILocation(line: 377, column: 4, scope: !17491)
!17491 = distinct !DILexicalBlock(scope: !17486, file: !2836, line: 376, column: 64)
!17492 = !DILocation(line: 379, column: 10, scope: !17487)
!17493 = !DILocation(line: 379, column: 33, scope: !17487)
!17494 = !DILocation(line: 379, column: 31, scope: !17487)
!17495 = !DILocation(line: 379, column: 3, scope: !17487)
!17496 = !DILocation(line: 0, scope: !17483)
!17497 = !DILocation(line: 381, column: 1, scope: !17472)
!17498 = distinct !DISubprogram(name: "z_timer_expiration_handler", scope: !2967, file: !2967, line: 23, type: !2872, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2845, retainedNodes: !17499)
!17499 = !{!17500, !17501, !17502, !17503, !17508}
!17500 = !DILocalVariable(name: "t", arg: 1, scope: !17498, file: !2967, line: 23, type: !2874)
!17501 = !DILocalVariable(name: "timer", scope: !17498, file: !2967, line: 25, type: !2848)
!17502 = !DILocalVariable(name: "thread", scope: !17498, file: !2967, line: 26, type: !2894)
!17503 = !DILocalVariable(name: "key", scope: !17498, file: !2967, line: 27, type: !17504)
!17504 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !436, line: 106, baseType: !17505)
!17505 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !436, line: 32, size: 32, elements: !17506)
!17506 = !{!17507}
!17507 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !17505, file: !436, line: 33, baseType: !108, size: 32)
!17508 = !DILocalVariable(name: "next", scope: !17509, file: !2967, line: 35, type: !2888)
!17509 = distinct !DILexicalBlock(scope: !17510, file: !2967, line: 34, column: 47)
!17510 = distinct !DILexicalBlock(scope: !17498, file: !2967, line: 33, column: 6)
!17511 = !DILocation(line: 0, scope: !17498)
!17512 = !DILocation(line: 25, column: 26, scope: !17498)
!17513 = !DILocalVariable(name: "l", arg: 1, scope: !17514, file: !436, line: 136, type: !17517)
!17514 = distinct !DISubprogram(name: "k_spin_lock", scope: !436, file: !436, line: 136, type: !17515, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2845, retainedNodes: !17518)
!17515 = !DISubroutineType(types: !17516)
!17516 = !{!17504, !17517}
!17517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2959, size: 32)
!17518 = !{!17513, !17519}
!17519 = !DILocalVariable(name: "k", scope: !17514, file: !436, line: 139, type: !17504)
!17520 = !DILocation(line: 0, scope: !17514, inlinedAt: !17521)
!17521 = distinct !DILocation(line: 27, column: 25, scope: !17498)
!17522 = !DILocation(line: 55, column: 2, scope: !17523, inlinedAt: !17527)
!17523 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4225, file: !4225, line: 42, type: !4226, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2845, retainedNodes: !17524)
!17524 = !{!17525, !17526}
!17525 = !DILocalVariable(name: "key", scope: !17523, file: !4225, line: 44, type: !32)
!17526 = !DILocalVariable(name: "tmp", scope: !17523, file: !4225, line: 53, type: !32)
!17527 = distinct !DILocation(line: 145, column: 10, scope: !17514, inlinedAt: !17521)
!17528 = !{i64 2615348}
!17529 = !DILocation(line: 0, scope: !17523, inlinedAt: !17527)
!17530 = !DILocation(line: 33, column: 7, scope: !17510)
!17531 = !DILocation(line: 33, column: 46, scope: !17510)
!17532 = !DILocation(line: 0, scope: !17509)
!17533 = !DILocation(line: 49, column: 10, scope: !17509)
!17534 = !DILocation(line: 52, column: 3, scope: !17509)
!17535 = !DILocation(line: 54, column: 2, scope: !17509)
!17536 = !DILocation(line: 57, column: 9, scope: !17498)
!17537 = !DILocation(line: 57, column: 16, scope: !17498)
!17538 = !DILocation(line: 60, column: 13, scope: !17539)
!17539 = distinct !DILexicalBlock(scope: !17498, file: !2967, line: 60, column: 6)
!17540 = !DILocation(line: 60, column: 23, scope: !17539)
!17541 = !DILocation(line: 60, column: 6, scope: !17498)
!17542 = !DILocalVariable(name: "key", arg: 2, scope: !17543, file: !436, line: 190, type: !17504)
!17543 = distinct !DISubprogram(name: "k_spin_unlock", scope: !436, file: !436, line: 189, type: !17544, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2845, retainedNodes: !17546)
!17544 = !DISubroutineType(types: !17545)
!17545 = !{null, !17517, !17504}
!17546 = !{!17547, !17542}
!17547 = !DILocalVariable(name: "l", arg: 1, scope: !17543, file: !436, line: 189, type: !17517)
!17548 = !DILocation(line: 0, scope: !17543, inlinedAt: !17549)
!17549 = distinct !DILocation(line: 62, column: 3, scope: !17550)
!17550 = distinct !DILexicalBlock(scope: !17539, file: !2967, line: 60, column: 32)
!17551 = !DILocalVariable(name: "key", arg: 1, scope: !17552, file: !4225, line: 84, type: !32)
!17552 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4225, file: !4225, line: 84, type: !4238, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2845, retainedNodes: !17553)
!17553 = !{!17551}
!17554 = !DILocation(line: 0, scope: !17552, inlinedAt: !17555)
!17555 = distinct !DILocation(line: 215, column: 2, scope: !17543, inlinedAt: !17549)
!17556 = !DILocation(line: 95, column: 2, scope: !17552, inlinedAt: !17555)
!17557 = !{i64 2616165}
!17558 = !DILocation(line: 63, column: 10, scope: !17550)
!17559 = !DILocation(line: 63, column: 3, scope: !17550)
!17560 = !DILocation(line: 0, scope: !17514, inlinedAt: !17561)
!17561 = distinct !DILocation(line: 64, column: 9, scope: !17550)
!17562 = !DILocation(line: 55, column: 2, scope: !17523, inlinedAt: !17563)
!17563 = distinct !DILocation(line: 145, column: 10, scope: !17514, inlinedAt: !17561)
!17564 = !DILocation(line: 0, scope: !17523, inlinedAt: !17563)
!17565 = !DILocation(line: 65, column: 2, scope: !17550)
!17566 = !DILocation(line: 72, column: 32, scope: !17498)
!17567 = !DILocation(line: 72, column: 11, scope: !17498)
!17568 = !DILocation(line: 74, column: 13, scope: !17569)
!17569 = distinct !DILexicalBlock(scope: !17498, file: !2967, line: 74, column: 6)
!17570 = !DILocation(line: 74, column: 6, scope: !17498)
!17571 = !DILocation(line: 0, scope: !17543, inlinedAt: !17572)
!17572 = distinct !DILocation(line: 75, column: 3, scope: !17573)
!17573 = distinct !DILexicalBlock(scope: !17569, file: !2967, line: 74, column: 22)
!17574 = !DILocation(line: 0, scope: !17552, inlinedAt: !17575)
!17575 = distinct !DILocation(line: 215, column: 2, scope: !17543, inlinedAt: !17572)
!17576 = !DILocation(line: 95, column: 2, scope: !17552, inlinedAt: !17575)
!17577 = !DILocation(line: 76, column: 3, scope: !17573)
!17578 = !DILocation(line: 79, column: 2, scope: !17498)
!17579 = !DILocalVariable(name: "thread", arg: 1, scope: !17580, file: !14200, line: 65, type: !2894)
!17580 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !14200, file: !14200, line: 65, type: !17581, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2845, retainedNodes: !17583)
!17581 = !DISubroutineType(types: !17582)
!17582 = !{null, !2894, !32}
!17583 = !{!17579, !17584}
!17584 = !DILocalVariable(name: "value", arg: 2, scope: !17580, file: !14200, line: 65, type: !32)
!17585 = !DILocation(line: 0, scope: !17580, inlinedAt: !17586)
!17586 = distinct !DILocation(line: 81, column: 2, scope: !17498)
!17587 = !DILocation(line: 67, column: 15, scope: !17580, inlinedAt: !17586)
!17588 = !DILocation(line: 67, column: 33, scope: !17580, inlinedAt: !17586)
!17589 = !DILocation(line: 0, scope: !17543, inlinedAt: !17590)
!17590 = distinct !DILocation(line: 83, column: 2, scope: !17498)
!17591 = !DILocation(line: 0, scope: !17552, inlinedAt: !17592)
!17592 = distinct !DILocation(line: 215, column: 2, scope: !17543, inlinedAt: !17590)
!17593 = !DILocation(line: 95, column: 2, scope: !17552, inlinedAt: !17592)
!17594 = !DILocation(line: 85, column: 2, scope: !17498)
!17595 = !DILocation(line: 86, column: 1, scope: !17498)
!17596 = distinct !DISubprogram(name: "k_uptime_ticks", scope: !3947, file: !3947, line: 564, type: !17411, scopeLine: 565, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2845, retainedNodes: !437)
!17597 = !DILocation(line: 573, column: 2, scope: !17598)
!17598 = distinct !DILexicalBlock(scope: !17596, file: !3947, line: 573, column: 2)
!17599 = !{i64 2155460488}
!17600 = !DILocation(line: 574, column: 9, scope: !17596)
!17601 = !DILocation(line: 574, column: 2, scope: !17596)
!17602 = distinct !DISubprogram(name: "z_waitq_head", scope: !14506, file: !14506, line: 52, type: !17603, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2845, retainedNodes: !17605)
!17603 = !DISubroutineType(types: !17604)
!17604 = !{!2894, !2911}
!17605 = !{!17606}
!17606 = !DILocalVariable(name: "w", arg: 1, scope: !17602, file: !14506, line: 52, type: !2911)
!17607 = !DILocation(line: 0, scope: !17602)
!17608 = !DILocation(line: 54, column: 52, scope: !17602)
!17609 = !DILocation(line: 54, column: 28, scope: !17602)
!17610 = !DILocation(line: 54, column: 9, scope: !17602)
!17611 = !DILocation(line: 54, column: 2, scope: !17602)
!17612 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !367, file: !367, line: 294, type: !17613, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2845, retainedNodes: !17616)
!17613 = !DISubroutineType(types: !17614)
!17614 = !{!2965, !17615}
!17615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2881, size: 32)
!17616 = !{!17617}
!17617 = !DILocalVariable(name: "list", arg: 1, scope: !17612, file: !367, line: 294, type: !17615)
!17618 = !DILocation(line: 0, scope: !17612)
!17619 = !DILocation(line: 296, column: 9, scope: !17612)
!17620 = !DILocation(line: 296, column: 49, scope: !17612)
!17621 = !DILocation(line: 296, column: 2, scope: !17612)
!17622 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !367, file: !367, line: 266, type: !17623, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2845, retainedNodes: !17625)
!17623 = !DISubroutineType(types: !17624)
!17624 = !{!422, !17615}
!17625 = !{!17626}
!17626 = !DILocalVariable(name: "list", arg: 1, scope: !17622, file: !367, line: 266, type: !17615)
!17627 = !DILocation(line: 0, scope: !17622)
!17628 = !DILocation(line: 268, column: 15, scope: !17622)
!17629 = !DILocation(line: 268, column: 20, scope: !17622)
!17630 = !DILocation(line: 268, column: 2, scope: !17622)
!17631 = distinct !DISubprogram(name: "k_timer_init", scope: !2967, file: !2967, line: 89, type: !17632, scopeLine: 92, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2845, retainedNodes: !17636)
!17632 = !DISubroutineType(types: !17633)
!17633 = !{null, !2848, !17634, !17635}
!17634 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timer_expiry_t", file: !359, line: 1381, baseType: !2883)
!17635 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timer_stop_t", file: !359, line: 1397, baseType: !2883)
!17636 = !{!17637, !17638, !17639}
!17637 = !DILocalVariable(name: "timer", arg: 1, scope: !17631, file: !2967, line: 89, type: !2848)
!17638 = !DILocalVariable(name: "expiry_fn", arg: 2, scope: !17631, file: !2967, line: 90, type: !17634)
!17639 = !DILocalVariable(name: "stop_fn", arg: 3, scope: !17631, file: !2967, line: 91, type: !17635)
!17640 = !DILocation(line: 0, scope: !17631)
!17641 = !DILocation(line: 93, column: 9, scope: !17631)
!17642 = !DILocation(line: 93, column: 19, scope: !17631)
!17643 = !DILocation(line: 94, column: 9, scope: !17631)
!17644 = !DILocation(line: 94, column: 17, scope: !17631)
!17645 = !DILocation(line: 95, column: 9, scope: !17631)
!17646 = !DILocation(line: 95, column: 16, scope: !17631)
!17647 = !DILocation(line: 98, column: 24, scope: !17648)
!17648 = distinct !DILexicalBlock(scope: !17649, file: !2967, line: 97, column: 41)
!17649 = distinct !DILexicalBlock(scope: !17631, file: !2967, line: 97, column: 6)
!17650 = !DILocation(line: 98, column: 3, scope: !17648)
!17651 = !DILocation(line: 101, column: 25, scope: !17631)
!17652 = !DILocation(line: 101, column: 2, scope: !17631)
!17653 = !DILocation(line: 105, column: 9, scope: !17631)
!17654 = !DILocation(line: 105, column: 19, scope: !17631)
!17655 = !DILocation(line: 108, column: 1, scope: !17631)
!17656 = distinct !DISubprogram(name: "z_waitq_init", scope: !14506, file: !14506, line: 47, type: !17657, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2845, retainedNodes: !17659)
!17657 = !DISubroutineType(types: !17658)
!17658 = !{null, !2911}
!17659 = !{!17660}
!17660 = !DILocalVariable(name: "w", arg: 1, scope: !17656, file: !14506, line: 47, type: !2911)
!17661 = !DILocation(line: 0, scope: !17656)
!17662 = !DILocation(line: 49, column: 21, scope: !17656)
!17663 = !DILocation(line: 49, column: 2, scope: !17656)
!17664 = !DILocation(line: 50, column: 1, scope: !17656)
!17665 = distinct !DISubprogram(name: "z_init_timeout", scope: !14574, file: !14574, line: 25, type: !2872, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2845, retainedNodes: !17666)
!17666 = !{!17667}
!17667 = !DILocalVariable(name: "to", arg: 1, scope: !17665, file: !14574, line: 25, type: !2874)
!17668 = !DILocation(line: 0, scope: !17665)
!17669 = !DILocation(line: 27, column: 22, scope: !17665)
!17670 = !DILocation(line: 27, column: 2, scope: !17665)
!17671 = !DILocation(line: 28, column: 1, scope: !17665)
!17672 = distinct !DISubprogram(name: "sys_dnode_init", scope: !367, file: !367, line: 211, type: !17673, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2845, retainedNodes: !17675)
!17673 = !DISubroutineType(types: !17674)
!17674 = !{null, !2965}
!17675 = !{!17676}
!17676 = !DILocalVariable(name: "node", arg: 1, scope: !17672, file: !367, line: 211, type: !2965)
!17677 = !DILocation(line: 0, scope: !17672)
!17678 = !DILocation(line: 213, column: 8, scope: !17672)
!17679 = !DILocation(line: 213, column: 13, scope: !17672)
!17680 = !DILocation(line: 214, column: 8, scope: !17672)
!17681 = !DILocation(line: 214, column: 13, scope: !17672)
!17682 = !DILocation(line: 215, column: 1, scope: !17672)
!17683 = distinct !DISubprogram(name: "sys_dlist_init", scope: !367, file: !367, line: 197, type: !17684, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2845, retainedNodes: !17686)
!17684 = !DISubroutineType(types: !17685)
!17685 = !{null, !17615}
!17686 = !{!17687}
!17687 = !DILocalVariable(name: "list", arg: 1, scope: !17683, file: !367, line: 197, type: !17615)
!17688 = !DILocation(line: 0, scope: !17683)
!17689 = !DILocation(line: 199, column: 8, scope: !17683)
!17690 = !DILocation(line: 199, column: 13, scope: !17683)
!17691 = !DILocation(line: 200, column: 8, scope: !17683)
!17692 = !DILocation(line: 200, column: 13, scope: !17683)
!17693 = !DILocation(line: 201, column: 1, scope: !17683)
!17694 = distinct !DISubprogram(name: "z_impl_k_timer_start", scope: !2967, file: !2967, line: 111, type: !17695, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2845, retainedNodes: !17697)
!17695 = !DISubroutineType(types: !17696)
!17696 = !{null, !2848, !2888, !2888}
!17697 = !{!17698, !17699, !17700}
!17698 = !DILocalVariable(name: "timer", arg: 1, scope: !17694, file: !2967, line: 111, type: !2848)
!17699 = !DILocalVariable(name: "duration", arg: 2, scope: !17694, file: !2967, line: 111, type: !2888)
!17700 = !DILocalVariable(name: "period", arg: 3, scope: !17694, file: !2967, line: 112, type: !2888)
!17701 = !DILocation(line: 0, scope: !17694)
!17702 = !DILocation(line: 116, column: 6, scope: !17703)
!17703 = distinct !DILexicalBlock(scope: !17694, file: !2967, line: 116, column: 6)
!17704 = !DILocation(line: 116, column: 6, scope: !17694)
!17705 = !DILocation(line: 133, column: 39, scope: !17706)
!17706 = distinct !DILexicalBlock(scope: !17694, file: !2967, line: 133, column: 6)
!17707 = !DILocation(line: 137, column: 33, scope: !17708)
!17708 = distinct !DILexicalBlock(scope: !17694, file: !2967, line: 137, column: 6)
!17709 = !DILocation(line: 137, column: 6, scope: !17694)
!17710 = !DILocation(line: 141, column: 32, scope: !17694)
!17711 = !DILocation(line: 141, column: 8, scope: !17694)
!17712 = !DILocation(line: 142, column: 18, scope: !17694)
!17713 = !DILocation(line: 143, column: 9, scope: !17694)
!17714 = !DILocation(line: 143, column: 16, scope: !17694)
!17715 = !DILocation(line: 145, column: 2, scope: !17694)
!17716 = !DILocation(line: 147, column: 1, scope: !17694)
!17717 = distinct !DISubprogram(name: "z_impl_k_timer_stop", scope: !2967, file: !2967, line: 160, type: !2884, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2845, retainedNodes: !17718)
!17718 = !{!17719, !17720, !17721}
!17719 = !DILocalVariable(name: "timer", arg: 1, scope: !17717, file: !2967, line: 160, type: !2848)
!17720 = !DILocalVariable(name: "inactive", scope: !17717, file: !2967, line: 164, type: !422)
!17721 = !DILocalVariable(name: "pending_thread", scope: !17722, file: !2967, line: 175, type: !2894)
!17722 = distinct !DILexicalBlock(scope: !17723, file: !2967, line: 174, column: 41)
!17723 = distinct !DILexicalBlock(scope: !17717, file: !2967, line: 174, column: 6)
!17724 = !DILocation(line: 0, scope: !17717)
!17725 = !DILocation(line: 164, column: 43, scope: !17717)
!17726 = !DILocation(line: 164, column: 19, scope: !17717)
!17727 = !DILocation(line: 164, column: 52, scope: !17717)
!17728 = !DILocation(line: 166, column: 6, scope: !17717)
!17729 = !DILocation(line: 170, column: 13, scope: !17730)
!17730 = distinct !DILexicalBlock(scope: !17717, file: !2967, line: 170, column: 6)
!17731 = !DILocation(line: 170, column: 21, scope: !17730)
!17732 = !DILocation(line: 170, column: 6, scope: !17717)
!17733 = !DILocation(line: 171, column: 3, scope: !17734)
!17734 = distinct !DILexicalBlock(scope: !17730, file: !2967, line: 170, column: 30)
!17735 = !DILocation(line: 172, column: 2, scope: !17734)
!17736 = !DILocation(line: 175, column: 66, scope: !17722)
!17737 = !DILocation(line: 175, column: 37, scope: !17722)
!17738 = !DILocation(line: 0, scope: !17722)
!17739 = !DILocation(line: 177, column: 22, scope: !17740)
!17740 = distinct !DILexicalBlock(scope: !17722, file: !2967, line: 177, column: 7)
!17741 = !DILocation(line: 177, column: 7, scope: !17722)
!17742 = !DILocation(line: 178, column: 4, scope: !17743)
!17743 = distinct !DILexicalBlock(scope: !17740, file: !2967, line: 177, column: 31)
!17744 = !DILocation(line: 179, column: 4, scope: !17743)
!17745 = !DILocation(line: 180, column: 3, scope: !17743)
!17746 = !DILocation(line: 182, column: 1, scope: !17717)
!17747 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !14180, file: !14180, line: 73, type: !3551, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2845, retainedNodes: !437)
!17748 = !DILocation(line: 55, column: 2, scope: !17523, inlinedAt: !17749)
!17749 = distinct !DILocation(line: 75, column: 30, scope: !17747)
!17750 = !DILocation(line: 0, scope: !17523, inlinedAt: !17749)
!17751 = !DILocation(line: 75, column: 9, scope: !17747)
!17752 = !DILocation(line: 76, column: 1, scope: !17747)
!17753 = distinct !DISubprogram(name: "z_impl_k_timer_status_get", scope: !2967, file: !2967, line: 193, type: !17754, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2845, retainedNodes: !17756)
!17754 = !DISubroutineType(types: !17755)
!17755 = !{!113, !2848}
!17756 = !{!17757, !17758, !17759}
!17757 = !DILocalVariable(name: "timer", arg: 1, scope: !17753, file: !2967, line: 193, type: !2848)
!17758 = !DILocalVariable(name: "key", scope: !17753, file: !2967, line: 195, type: !17504)
!17759 = !DILocalVariable(name: "result", scope: !17753, file: !2967, line: 196, type: !113)
!17760 = !DILocation(line: 0, scope: !17753)
!17761 = !DILocation(line: 0, scope: !17514, inlinedAt: !17762)
!17762 = distinct !DILocation(line: 195, column: 25, scope: !17753)
!17763 = !DILocation(line: 55, column: 2, scope: !17523, inlinedAt: !17764)
!17764 = distinct !DILocation(line: 145, column: 10, scope: !17514, inlinedAt: !17762)
!17765 = !DILocation(line: 0, scope: !17523, inlinedAt: !17764)
!17766 = !DILocation(line: 196, column: 27, scope: !17753)
!17767 = !DILocation(line: 198, column: 16, scope: !17753)
!17768 = !DILocation(line: 0, scope: !17543, inlinedAt: !17769)
!17769 = distinct !DILocation(line: 199, column: 2, scope: !17753)
!17770 = !DILocation(line: 0, scope: !17552, inlinedAt: !17771)
!17771 = distinct !DILocation(line: 215, column: 2, scope: !17543, inlinedAt: !17769)
!17772 = !DILocation(line: 95, column: 2, scope: !17552, inlinedAt: !17771)
!17773 = !DILocation(line: 201, column: 2, scope: !17753)
!17774 = distinct !DISubprogram(name: "z_impl_k_timer_status_sync", scope: !2967, file: !2967, line: 213, type: !17754, scopeLine: 214, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2845, retainedNodes: !17775)
!17775 = !{!17776, !17777, !17778}
!17776 = !DILocalVariable(name: "timer", arg: 1, scope: !17774, file: !2967, line: 213, type: !2848)
!17777 = !DILocalVariable(name: "key", scope: !17774, file: !2967, line: 241, type: !17504)
!17778 = !DILocalVariable(name: "result", scope: !17774, file: !2967, line: 242, type: !113)
!17779 = !DILocation(line: 0, scope: !17774)
!17780 = !DILocation(line: 0, scope: !17514, inlinedAt: !17781)
!17781 = distinct !DILocation(line: 241, column: 25, scope: !17774)
!17782 = !DILocation(line: 55, column: 2, scope: !17523, inlinedAt: !17783)
!17783 = distinct !DILocation(line: 145, column: 10, scope: !17514, inlinedAt: !17781)
!17784 = !DILocation(line: 0, scope: !17523, inlinedAt: !17783)
!17785 = !DILocation(line: 242, column: 27, scope: !17774)
!17786 = !DILocation(line: 244, column: 13, scope: !17787)
!17787 = distinct !DILexicalBlock(scope: !17774, file: !2967, line: 244, column: 6)
!17788 = !DILocation(line: 244, column: 6, scope: !17774)
!17789 = !DILocation(line: 245, column: 38, scope: !17790)
!17790 = distinct !DILexicalBlock(scope: !17791, file: !2967, line: 245, column: 7)
!17791 = distinct !DILexicalBlock(scope: !17787, file: !2967, line: 244, column: 20)
!17792 = !DILocation(line: 245, column: 8, scope: !17790)
!17793 = !DILocation(line: 245, column: 7, scope: !17791)
!17794 = !DILocation(line: 249, column: 42, scope: !17795)
!17795 = distinct !DILexicalBlock(scope: !17790, file: !2967, line: 245, column: 48)
!17796 = !DILocation(line: 249, column: 10, scope: !17795)
!17797 = !DILocation(line: 0, scope: !17514, inlinedAt: !17798)
!17798 = distinct !DILocation(line: 252, column: 10, scope: !17795)
!17799 = !DILocation(line: 55, column: 2, scope: !17523, inlinedAt: !17800)
!17800 = distinct !DILocation(line: 145, column: 10, scope: !17514, inlinedAt: !17798)
!17801 = !DILocation(line: 0, scope: !17523, inlinedAt: !17800)
!17802 = !DILocation(line: 253, column: 20, scope: !17795)
!17803 = !DILocation(line: 254, column: 3, scope: !17795)
!17804 = !DILocation(line: 261, column: 16, scope: !17774)
!17805 = !DILocation(line: 0, scope: !17543, inlinedAt: !17806)
!17806 = distinct !DILocation(line: 262, column: 2, scope: !17774)
!17807 = !DILocation(line: 0, scope: !17552, inlinedAt: !17808)
!17808 = distinct !DILocation(line: 215, column: 2, scope: !17543, inlinedAt: !17806)
!17809 = !DILocation(line: 95, column: 2, scope: !17552, inlinedAt: !17808)
!17810 = !DILocation(line: 269, column: 2, scope: !17774)
!17811 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !14574, file: !14574, line: 35, type: !17812, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2845, retainedNodes: !17816)
!17812 = !DISubroutineType(types: !17813)
!17813 = !{!422, !17814}
!17814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17815, size: 32)
!17815 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2852)
!17816 = !{!17817}
!17817 = !DILocalVariable(name: "to", arg: 1, scope: !17811, file: !14574, line: 35, type: !17814)
!17818 = !DILocation(line: 0, scope: !17811)
!17819 = !DILocation(line: 37, column: 35, scope: !17811)
!17820 = !DILocation(line: 37, column: 10, scope: !17811)
!17821 = !DILocation(line: 37, column: 9, scope: !17811)
!17822 = !DILocation(line: 37, column: 2, scope: !17811)
!17823 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !367, file: !367, line: 225, type: !17824, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2845, retainedNodes: !17828)
!17824 = !DISubroutineType(types: !17825)
!17825 = !{!422, !17826}
!17826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17827, size: 32)
!17827 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2855)
!17828 = !{!17829}
!17829 = !DILocalVariable(name: "node", arg: 1, scope: !17823, file: !367, line: 225, type: !17826)
!17830 = !DILocation(line: 0, scope: !17823)
!17831 = !DILocation(line: 227, column: 15, scope: !17823)
!17832 = !DILocation(line: 227, column: 20, scope: !17823)
!17833 = !DILocation(line: 227, column: 2, scope: !17823)
!17834 = distinct !DISubprogram(name: "boot_banner", scope: !17835, file: !17835, line: 26, type: !3551, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3537, retainedNodes: !437)
!17835 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17836 = !DILocation(line: 34, column: 2, scope: !17834)
!17837 = !DILocation(line: 36, column: 1, scope: !17834)
